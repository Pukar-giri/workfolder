;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2019 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2019-03-19 19:28:53
;; Architecture: x86-64
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x3758 -- 0x376f
0x3758:     48 83 ec 08                           	sub rsp, 8
0x375c:     48 8b 05 7d c8 21 00                  	mov rax, qword ptr [rip + 0x21c87d]
0x3763:     48 85 c0                              	test rax, rax
0x3766:     74 02                                 	je 0x376a <_init+0x12>
0x3768:     ff d0                                 	call rax <__gmon_start__>
0x376a:     48 83 c4 08                           	add rsp, 8
0x376e:     c3                                    	ret 
; section: .plt
; data inside code section at 0x3770 -- 0x3780
0x3770:     ff 35 ca c4 21 00 ff 25  cc c4 21 00 0f 1f 40 00   |.5..!..%..!...@.|
; function: function_3780 at 0x3780 -- 0x3786
0x3780:     ff 25 ca c4 21 00                     	jmp qword ptr [rip + 0x21c4ca] <__ctype_toupper_loc>
; data inside code section at 0x3786 -- 0x3790
0x3786:     68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_3790 at 0x3790 -- 0x3796
0x3790:     ff 25 c2 c4 21 00                     	jmp qword ptr [rip + 0x21c4c2] <__uflow>
; data inside code section at 0x3796 -- 0x37a0
0x3796:     68 01 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_37a0 at 0x37a0 -- 0x37a6
0x37a0:     ff 25 ba c4 21 00                     	jmp qword ptr [rip + 0x21c4ba] <getenv>
; data inside code section at 0x37a6 -- 0x37b0
0x37a6:     68 02 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; function: function_37b0 at 0x37b0 -- 0x37b6
0x37b0:     ff 25 b2 c4 21 00                     	jmp qword ptr [rip + 0x21c4b2] <sigprocmask>
; data inside code section at 0x37b6 -- 0x37c0
0x37b6:     68 03 00 00 00 e9 b0 ff  ff ff                     |h.........      |
; function: function_37c0 at 0x37c0 -- 0x37c6
0x37c0:     ff 25 aa c4 21 00                     	jmp qword ptr [rip + 0x21c4aa] <__snprintf_chk>
; data inside code section at 0x37c6 -- 0x37d0
0x37c6:     68 04 00 00 00 e9 a0 ff  ff ff                     |h.........      |
; function: function_37d0 at 0x37d0 -- 0x37d6
0x37d0:     ff 25 a2 c4 21 00                     	jmp qword ptr [rip + 0x21c4a2] <raise>
; data inside code section at 0x37d6 -- 0x37e0
0x37d6:     68 05 00 00 00 e9 90 ff  ff ff                     |h.........      |
; function: function_37e0 at 0x37e0 -- 0x37e6
0x37e0:     ff 25 9a c4 21 00                     	jmp qword ptr [rip + 0x21c49a] <abort>
; data inside code section at 0x37e6 -- 0x37f0
0x37e6:     68 06 00 00 00 e9 80 ff  ff ff                     |h.........      |
; function: function_37f0 at 0x37f0 -- 0x37f6
0x37f0:     ff 25 92 c4 21 00                     	jmp qword ptr [rip + 0x21c492] <__errno_location>
; data inside code section at 0x37f6 -- 0x3800
0x37f6:     68 07 00 00 00 e9 70 ff  ff ff                     |h.....p...      |
; function: function_3800 at 0x3800 -- 0x3806
0x3800:     ff 25 8a c4 21 00                     	jmp qword ptr [rip + 0x21c48a] <strncmp>
; data inside code section at 0x3806 -- 0x3810
0x3806:     68 08 00 00 00 e9 60 ff  ff ff                     |h.....`...      |
; function: function_3810 at 0x3810 -- 0x3816
0x3810:     ff 25 82 c4 21 00                     	jmp qword ptr [rip + 0x21c482] <localtime_r>
; data inside code section at 0x3816 -- 0x3820
0x3816:     68 09 00 00 00 e9 50 ff  ff ff                     |h.....P...      |
; function: function_3820 at 0x3820 -- 0x3826
0x3820:     ff 25 7a c4 21 00                     	jmp qword ptr [rip + 0x21c47a] <_exit>
; data inside code section at 0x3826 -- 0x3830
0x3826:     68 0a 00 00 00 e9 40 ff  ff ff                     |h.....@...      |
; function: function_3830 at 0x3830 -- 0x3836
0x3830:     ff 25 72 c4 21 00                     	jmp qword ptr [rip + 0x21c472] <strcpy>
; data inside code section at 0x3836 -- 0x3840
0x3836:     68 0b 00 00 00 e9 30 ff  ff ff                     |h.....0...      |
; function: function_3840 at 0x3840 -- 0x3846
0x3840:     ff 25 6a c4 21 00                     	jmp qword ptr [rip + 0x21c46a] <__fpending>
; data inside code section at 0x3846 -- 0x3850
0x3846:     68 0c 00 00 00 e9 20 ff  ff ff                     |h..... ...      |
; function: function_3850 at 0x3850 -- 0x3856
0x3850:     ff 25 62 c4 21 00                     	jmp qword ptr [rip + 0x21c462] <isatty>
; data inside code section at 0x3856 -- 0x3860
0x3856:     68 0d 00 00 00 e9 10 ff  ff ff                     |h.........      |
; function: function_3860 at 0x3860 -- 0x3866
0x3860:     ff 25 5a c4 21 00                     	jmp qword ptr [rip + 0x21c45a] <sigaction>
; data inside code section at 0x3866 -- 0x3870
0x3866:     68 0e 00 00 00 e9 00 ff  ff ff                     |h.........      |
; function: function_3870 at 0x3870 -- 0x3876
0x3870:     ff 25 52 c4 21 00                     	jmp qword ptr [rip + 0x21c452] <iswcntrl>
; data inside code section at 0x3876 -- 0x3880
0x3876:     68 0f 00 00 00 e9 f0 fe  ff ff                     |h.........      |
; function: function_3880 at 0x3880 -- 0x3886
0x3880:     ff 25 4a c4 21 00                     	jmp qword ptr [rip + 0x21c44a] <wcswidth>
; data inside code section at 0x3886 -- 0x3890
0x3886:     68 10 00 00 00 e9 e0 fe  ff ff                     |h.........      |
; function: function_3890 at 0x3890 -- 0x3896
0x3890:     ff 25 42 c4 21 00                     	jmp qword ptr [rip + 0x21c442] <localeconv>
; data inside code section at 0x3896 -- 0x38a0
0x3896:     68 11 00 00 00 e9 d0 fe  ff ff                     |h.........      |
; function: function_38a0 at 0x38a0 -- 0x38a6
0x38a0:     ff 25 3a c4 21 00                     	jmp qword ptr [rip + 0x21c43a] <mbstowcs>
; data inside code section at 0x38a6 -- 0x38b0
0x38a6:     68 12 00 00 00 e9 c0 fe  ff ff                     |h.........      |
; function: function_38b0 at 0x38b0 -- 0x38b6
0x38b0:     ff 25 32 c4 21 00                     	jmp qword ptr [rip + 0x21c432] <readlink>
; data inside code section at 0x38b6 -- 0x38c0
0x38b6:     68 13 00 00 00 e9 b0 fe  ff ff                     |h.........      |
; function: function_38c0 at 0x38c0 -- 0x38c6
0x38c0:     ff 25 2a c4 21 00                     	jmp qword ptr [rip + 0x21c42a] <clock_gettime>
; data inside code section at 0x38c6 -- 0x38d0
0x38c6:     68 14 00 00 00 e9 a0 fe  ff ff                     |h.........      |
; function: function_38d0 at 0x38d0 -- 0x38d6
0x38d0:     ff 25 22 c4 21 00                     	jmp qword ptr [rip + 0x21c422] <setenv>
; data inside code section at 0x38d6 -- 0x38e0
0x38d6:     68 15 00 00 00 e9 90 fe  ff ff                     |h.........      |
; function: function_38e0 at 0x38e0 -- 0x38e6
0x38e0:     ff 25 1a c4 21 00                     	jmp qword ptr [rip + 0x21c41a] <textdomain>
; data inside code section at 0x38e6 -- 0x38f0
0x38e6:     68 16 00 00 00 e9 80 fe  ff ff                     |h.........      |
; function: function_38f0 at 0x38f0 -- 0x38f6
0x38f0:     ff 25 12 c4 21 00                     	jmp qword ptr [rip + 0x21c412] <fclose>
; data inside code section at 0x38f6 -- 0x3900
0x38f6:     68 17 00 00 00 e9 70 fe  ff ff                     |h.....p...      |
; function: function_3900 at 0x3900 -- 0x3906
0x3900:     ff 25 0a c4 21 00                     	jmp qword ptr [rip + 0x21c40a] <opendir>
; data inside code section at 0x3906 -- 0x3910
0x3906:     68 18 00 00 00 e9 60 fe  ff ff                     |h.....`...      |
; function: function_3910 at 0x3910 -- 0x3916
0x3910:     ff 25 02 c4 21 00                     	jmp qword ptr [rip + 0x21c402] <getpwuid>
; data inside code section at 0x3916 -- 0x3920
0x3916:     68 19 00 00 00 e9 50 fe  ff ff                     |h.....P...      |
; function: function_3920 at 0x3920 -- 0x3926
0x3920:     ff 25 fa c3 21 00                     	jmp qword ptr [rip + 0x21c3fa] <bindtextdomain>
; data inside code section at 0x3926 -- 0x3930
0x3926:     68 1a 00 00 00 e9 40 fe  ff ff                     |h.....@...      |
; function: function_3930 at 0x3930 -- 0x3936
0x3930:     ff 25 f2 c3 21 00                     	jmp qword ptr [rip + 0x21c3f2] <dcgettext>
; data inside code section at 0x3936 -- 0x3940
0x3936:     68 1b 00 00 00 e9 30 fe  ff ff                     |h.....0...      |
; function: function_3940 at 0x3940 -- 0x3946
0x3940:     ff 25 ea c3 21 00                     	jmp qword ptr [rip + 0x21c3ea] <__ctype_get_mb_cur_max>
; data inside code section at 0x3946 -- 0x3950
0x3946:     68 1c 00 00 00 e9 20 fe  ff ff                     |h..... ...      |
; function: function_3950 at 0x3950 -- 0x3956
0x3950:     ff 25 e2 c3 21 00                     	jmp qword ptr [rip + 0x21c3e2] <strlen>
; data inside code section at 0x3956 -- 0x3960
0x3956:     68 1d 00 00 00 e9 10 fe  ff ff                     |h.........      |
; function: function_3960 at 0x3960 -- 0x3966
0x3960:     ff 25 da c3 21 00                     	jmp qword ptr [rip + 0x21c3da] <__lxstat>
; data inside code section at 0x3966 -- 0x3970
0x3966:     68 1e 00 00 00 e9 00 fe  ff ff                     |h.........      |
; function: function_3970 at 0x3970 -- 0x3976
0x3970:     ff 25 d2 c3 21 00                     	jmp qword ptr [rip + 0x21c3d2] <__stack_chk_fail>
; data inside code section at 0x3976 -- 0x3980
0x3976:     68 1f 00 00 00 e9 f0 fd  ff ff                     |h.........      |
; function: function_3980 at 0x3980 -- 0x3986
0x3980:     ff 25 ca c3 21 00                     	jmp qword ptr [rip + 0x21c3ca] <getopt_long>
; data inside code section at 0x3986 -- 0x3990
0x3986:     68 20 00 00 00 e9 e0 fd  ff ff                     |h ........      |
; function: function_3990 at 0x3990 -- 0x3996
0x3990:     ff 25 c2 c3 21 00                     	jmp qword ptr [rip + 0x21c3c2] <mbrtowc>
; data inside code section at 0x3996 -- 0x39a0
0x3996:     68 21 00 00 00 e9 d0 fd  ff ff                     |h!........      |
; function: function_39a0 at 0x39a0 -- 0x39a6
0x39a0:     ff 25 ba c3 21 00                     	jmp qword ptr [rip + 0x21c3ba] <strchr>
; data inside code section at 0x39a6 -- 0x39b0
0x39a6:     68 22 00 00 00 e9 c0 fd  ff ff                     |h"........      |
; function: function_39b0 at 0x39b0 -- 0x39b6
0x39b0:     ff 25 b2 c3 21 00                     	jmp qword ptr [rip + 0x21c3b2] <getgrgid>
; data inside code section at 0x39b6 -- 0x39c0
0x39b6:     68 23 00 00 00 e9 b0 fd  ff ff                     |h#........      |
; function: function_39c0 at 0x39c0 -- 0x39c6
0x39c0:     ff 25 aa c3 21 00                     	jmp qword ptr [rip + 0x21c3aa] <snprintf>
; data inside code section at 0x39c6 -- 0x39d0
0x39c6:     68 24 00 00 00 e9 a0 fd  ff ff                     |h$........      |
; function: function_39d0 at 0x39d0 -- 0x39d6
0x39d0:     ff 25 a2 c3 21 00                     	jmp qword ptr [rip + 0x21c3a2] <__overflow>
; data inside code section at 0x39d6 -- 0x39e0
0x39d6:     68 25 00 00 00 e9 90 fd  ff ff                     |h%........      |
; function: function_39e0 at 0x39e0 -- 0x39e6
0x39e0:     ff 25 9a c3 21 00                     	jmp qword ptr [rip + 0x21c39a] <strrchr>
; data inside code section at 0x39e6 -- 0x39f0
0x39e6:     68 26 00 00 00 e9 80 fd  ff ff                     |h&........      |
; function: function_39f0 at 0x39f0 -- 0x39f6
0x39f0:     ff 25 92 c3 21 00                     	jmp qword ptr [rip + 0x21c392] <fgetfilecon>
; data inside code section at 0x39f6 -- 0x3a00
0x39f6:     68 27 00 00 00 e9 70 fd  ff ff                     |h'....p...      |
; function: function_3a00 at 0x3a00 -- 0x3a06
0x3a00:     ff 25 8a c3 21 00                     	jmp qword ptr [rip + 0x21c38a] <gmtime_r>
; data inside code section at 0x3a06 -- 0x3a10
0x3a06:     68 28 00 00 00 e9 60 fd  ff ff                     |h(....`...      |
; function: function_3a10 at 0x3a10 -- 0x3a16
0x3a10:     ff 25 82 c3 21 00                     	jmp qword ptr [rip + 0x21c382] <lseek>
; data inside code section at 0x3a16 -- 0x3a20
0x3a16:     68 29 00 00 00 e9 50 fd  ff ff                     |h)....P...      |
; function: function_3a20 at 0x3a20 -- 0x3a26
0x3a20:     ff 25 7a c3 21 00                     	jmp qword ptr [rip + 0x21c37a] <gettimeofday>
; data inside code section at 0x3a26 -- 0x3a30
0x3a26:     68 2a 00 00 00 e9 40 fd  ff ff                     |h*....@...      |
; function: function_3a30 at 0x3a30 -- 0x3a36
0x3a30:     ff 25 72 c3 21 00                     	jmp qword ptr [rip + 0x21c372] <__assert_fail>
; data inside code section at 0x3a36 -- 0x3a40
0x3a36:     68 2b 00 00 00 e9 30 fd  ff ff                     |h+....0...      |
; function: function_3a40 at 0x3a40 -- 0x3a46
0x3a40:     ff 25 6a c3 21 00                     	jmp qword ptr [rip + 0x21c36a] <__strtoul_internal>
; data inside code section at 0x3a46 -- 0x3a50
0x3a46:     68 2c 00 00 00 e9 20 fd  ff ff                     |h,.... ...      |
; function: function_3a50 at 0x3a50 -- 0x3a56
0x3a50:     ff 25 62 c3 21 00                     	jmp qword ptr [rip + 0x21c362] <fnmatch>
; data inside code section at 0x3a56 -- 0x3a60
0x3a56:     68 2d 00 00 00 e9 10 fd  ff ff                     |h-........      |
; function: function_3a60 at 0x3a60 -- 0x3a66
0x3a60:     ff 25 5a c3 21 00                     	jmp qword ptr [rip + 0x21c35a] <memset>
; data inside code section at 0x3a66 -- 0x3a70
0x3a66:     68 2e 00 00 00 e9 00 fd  ff ff                     |h.........      |
; function: function_3a70 at 0x3a70 -- 0x3a76
0x3a70:     ff 25 52 c3 21 00                     	jmp qword ptr [rip + 0x21c352] <fscanf>
; data inside code section at 0x3a76 -- 0x3a80
0x3a76:     68 2f 00 00 00 e9 f0 fc  ff ff                     |h/........      |
; function: function_3a80 at 0x3a80 -- 0x3a86
0x3a80:     ff 25 4a c3 21 00                     	jmp qword ptr [rip + 0x21c34a] <ioctl>
; data inside code section at 0x3a86 -- 0x3a90
0x3a86:     68 30 00 00 00 e9 e0 fc  ff ff                     |h0........      |
; function: function_3a90 at 0x3a90 -- 0x3a96
0x3a90:     ff 25 42 c3 21 00                     	jmp qword ptr [rip + 0x21c342] <getcwd>
; data inside code section at 0x3a96 -- 0x3aa0
0x3a96:     68 31 00 00 00 e9 d0 fc  ff ff                     |h1........      |
; function: function_3aa0 at 0x3aa0 -- 0x3aa6
0x3aa0:     ff 25 3a c3 21 00                     	jmp qword ptr [rip + 0x21c33a] <close>
; data inside code section at 0x3aa6 -- 0x3ab0
0x3aa6:     68 32 00 00 00 e9 c0 fc  ff ff                     |h2........      |
; function: function_3ab0 at 0x3ab0 -- 0x3ab6
0x3ab0:     ff 25 32 c3 21 00                     	jmp qword ptr [rip + 0x21c332] <strspn>
; data inside code section at 0x3ab6 -- 0x3ac0
0x3ab6:     68 33 00 00 00 e9 b0 fc  ff ff                     |h3........      |
; function: function_3ac0 at 0x3ac0 -- 0x3ac6
0x3ac0:     ff 25 2a c3 21 00                     	jmp qword ptr [rip + 0x21c32a] <closedir>
; data inside code section at 0x3ac6 -- 0x3ad0
0x3ac6:     68 34 00 00 00 e9 a0 fc  ff ff                     |h4........      |
; function: function_3ad0 at 0x3ad0 -- 0x3ad6
0x3ad0:     ff 25 22 c3 21 00                     	jmp qword ptr [rip + 0x21c322] <memcmp>
; data inside code section at 0x3ad6 -- 0x3ae0
0x3ad6:     68 35 00 00 00 e9 90 fc  ff ff                     |h5........      |
; function: function_3ae0 at 0x3ae0 -- 0x3ae6
0x3ae0:     ff 25 1a c3 21 00                     	jmp qword ptr [rip + 0x21c31a] <_setjmp>
; data inside code section at 0x3ae6 -- 0x3af0
0x3ae6:     68 36 00 00 00 e9 80 fc  ff ff                     |h6........      |
; function: function_3af0 at 0x3af0 -- 0x3af6
0x3af0:     ff 25 12 c3 21 00                     	jmp qword ptr [rip + 0x21c312] <fputs_unlocked>
; data inside code section at 0x3af6 -- 0x3b00
0x3af6:     68 37 00 00 00 e9 70 fc  ff ff                     |h7....p...      |
; function: function_3b00 at 0x3b00 -- 0x3b06
0x3b00:     ff 25 0a c3 21 00                     	jmp qword ptr [rip + 0x21c30a] <calloc>
; data inside code section at 0x3b06 -- 0x3b10
0x3b06:     68 38 00 00 00 e9 60 fc  ff ff                     |h8....`...      |
; function: function_3b10 at 0x3b10 -- 0x3b16
0x3b10:     ff 25 02 c3 21 00                     	jmp qword ptr [rip + 0x21c302] <lgetfilecon>
; data inside code section at 0x3b16 -- 0x3b20
0x3b16:     68 39 00 00 00 e9 50 fc  ff ff                     |h9....P...      |
; function: function_3b20 at 0x3b20 -- 0x3b26
0x3b20:     ff 25 fa c2 21 00                     	jmp qword ptr [rip + 0x21c2fa] <strcmp>
; data inside code section at 0x3b26 -- 0x3b30
0x3b26:     68 3a 00 00 00 e9 40 fc  ff ff                     |h:....@...      |
; function: function_3b30 at 0x3b30 -- 0x3b36
0x3b30:     ff 25 f2 c2 21 00                     	jmp qword ptr [rip + 0x21c2f2] <signal>
; data inside code section at 0x3b36 -- 0x3b40
0x3b36:     68 3b 00 00 00 e9 30 fc  ff ff                     |h;....0...      |
; function: function_3b40 at 0x3b40 -- 0x3b46
0x3b40:     ff 25 ea c2 21 00                     	jmp qword ptr [rip + 0x21c2ea] <dirfd>
; data inside code section at 0x3b46 -- 0x3b50
0x3b46:     68 3c 00 00 00 e9 20 fc  ff ff                     |h<.... ...      |
; function: function_3b50 at 0x3b50 -- 0x3b56
0x3b50:     ff 25 e2 c2 21 00                     	jmp qword ptr [rip + 0x21c2e2] <getpwnam>
; data inside code section at 0x3b56 -- 0x3b60
0x3b56:     68 3d 00 00 00 e9 10 fc  ff ff                     |h=........      |
; function: function_3b60 at 0x3b60 -- 0x3b66
0x3b60:     ff 25 da c2 21 00                     	jmp qword ptr [rip + 0x21c2da] <__memcpy_chk>
; data inside code section at 0x3b66 -- 0x3b70
0x3b66:     68 3e 00 00 00 e9 00 fc  ff ff                     |h>........      |
; function: function_3b70 at 0x3b70 -- 0x3b76
0x3b70:     ff 25 d2 c2 21 00                     	jmp qword ptr [rip + 0x21c2d2] <sigemptyset>
; data inside code section at 0x3b76 -- 0x3b80
0x3b76:     68 3f 00 00 00 e9 f0 fb  ff ff                     |h?........      |
; function: function_3b80 at 0x3b80 -- 0x3b86
0x3b80:     ff 25 ca c2 21 00                     	jmp qword ptr [rip + 0x21c2ca] <memcpy>
; data inside code section at 0x3b86 -- 0x3b90
0x3b86:     68 40 00 00 00 e9 e0 fb  ff ff                     |h@........      |
; function: function_3b90 at 0x3b90 -- 0x3b96
0x3b90:     ff 25 c2 c2 21 00                     	jmp qword ptr [rip + 0x21c2c2] <getgrnam>
; data inside code section at 0x3b96 -- 0x3ba0
0x3b96:     68 41 00 00 00 e9 d0 fb  ff ff                     |hA........      |
; function: function_3ba0 at 0x3ba0 -- 0x3ba6
0x3ba0:     ff 25 ba c2 21 00                     	jmp qword ptr [rip + 0x21c2ba] <getfilecon>
; data inside code section at 0x3ba6 -- 0x3bb0
0x3ba6:     68 42 00 00 00 e9 c0 fb  ff ff                     |hB........      |
; function: function_3bb0 at 0x3bb0 -- 0x3bb6
0x3bb0:     ff 25 b2 c2 21 00                     	jmp qword ptr [rip + 0x21c2b2] <tzset>
; data inside code section at 0x3bb6 -- 0x3bc0
0x3bb6:     68 43 00 00 00 e9 b0 fb  ff ff                     |hC........      |
; function: function_3bc0 at 0x3bc0 -- 0x3bc6
0x3bc0:     ff 25 aa c2 21 00                     	jmp qword ptr [rip + 0x21c2aa] <fileno>
; data inside code section at 0x3bc6 -- 0x3bd0
0x3bc6:     68 44 00 00 00 e9 a0 fb  ff ff                     |hD........      |
; function: function_3bd0 at 0x3bd0 -- 0x3bd6
0x3bd0:     ff 25 a2 c2 21 00                     	jmp qword ptr [rip + 0x21c2a2] <tcgetpgrp>
; data inside code section at 0x3bd6 -- 0x3be0
0x3bd6:     68 45 00 00 00 e9 90 fb  ff ff                     |hE........      |
; function: function_3be0 at 0x3be0 -- 0x3be6
0x3be0:     ff 25 9a c2 21 00                     	jmp qword ptr [rip + 0x21c29a] <__xstat>
; data inside code section at 0x3be6 -- 0x3bf0
0x3be6:     68 46 00 00 00 e9 80 fb  ff ff                     |hF........      |
; function: function_3bf0 at 0x3bf0 -- 0x3bf6
0x3bf0:     ff 25 92 c2 21 00                     	jmp qword ptr [rip + 0x21c292] <readdir>
; data inside code section at 0x3bf6 -- 0x3c00
0x3bf6:     68 47 00 00 00 e9 70 fb  ff ff                     |hG....p...      |
; function: function_3c00 at 0x3c00 -- 0x3c06
0x3c00:     ff 25 8a c2 21 00                     	jmp qword ptr [rip + 0x21c28a] <wcwidth>
; data inside code section at 0x3c06 -- 0x3c10
0x3c06:     68 48 00 00 00 e9 60 fb  ff ff                     |hH....`...      |
; function: function_3c10 at 0x3c10 -- 0x3c16
0x3c10:     ff 25 82 c2 21 00                     	jmp qword ptr [rip + 0x21c282] <fflush>
; data inside code section at 0x3c16 -- 0x3c20
0x3c16:     68 49 00 00 00 e9 50 fb  ff ff                     |hI....P...      |
; function: function_3c20 at 0x3c20 -- 0x3c26
0x3c20:     ff 25 7a c2 21 00                     	jmp qword ptr [rip + 0x21c27a] <nl_langinfo>
; data inside code section at 0x3c26 -- 0x3c30
0x3c26:     68 4a 00 00 00 e9 40 fb  ff ff                     |hJ....@...      |
; function: function_3c30 at 0x3c30 -- 0x3c36
0x3c30:     ff 25 72 c2 21 00                     	jmp qword ptr [rip + 0x21c272] <ungetc>
; data inside code section at 0x3c36 -- 0x3c40
0x3c36:     68 4b 00 00 00 e9 30 fb  ff ff                     |hK....0...      |
; function: function_3c40 at 0x3c40 -- 0x3c46
0x3c40:     ff 25 6a c2 21 00                     	jmp qword ptr [rip + 0x21c26a] <__fxstat>
; data inside code section at 0x3c46 -- 0x3c50
0x3c46:     68 4c 00 00 00 e9 20 fb  ff ff                     |hL.... ...      |
; function: function_3c50 at 0x3c50 -- 0x3c56
0x3c50:     ff 25 62 c2 21 00                     	jmp qword ptr [rip + 0x21c262] <strcoll>
; data inside code section at 0x3c56 -- 0x3c60
0x3c56:     68 4d 00 00 00 e9 10 fb  ff ff                     |hM........      |
; function: function_3c60 at 0x3c60 -- 0x3c66
0x3c60:     ff 25 5a c2 21 00                     	jmp qword ptr [rip + 0x21c25a] <mktime>
; data inside code section at 0x3c66 -- 0x3c70
0x3c66:     68 4e 00 00 00 e9 00 fb  ff ff                     |hN........      |
; function: function_3c70 at 0x3c70 -- 0x3c76
0x3c70:     ff 25 52 c2 21 00                     	jmp qword ptr [rip + 0x21c252] <__freading>
; data inside code section at 0x3c76 -- 0x3c80
0x3c76:     68 4f 00 00 00 e9 f0 fa  ff ff                     |hO........      |
; function: function_3c80 at 0x3c80 -- 0x3c86
0x3c80:     ff 25 4a c2 21 00                     	jmp qword ptr [rip + 0x21c24a] <fwrite_unlocked>
; data inside code section at 0x3c86 -- 0x3c90
0x3c86:     68 50 00 00 00 e9 e0 fa  ff ff                     |hP........      |
; function: function_3c90 at 0x3c90 -- 0x3c96
0x3c90:     ff 25 42 c2 21 00                     	jmp qword ptr [rip + 0x21c242] <realloc>
; data inside code section at 0x3c96 -- 0x3ca0
0x3c96:     68 51 00 00 00 e9 d0 fa  ff ff                     |hQ........      |
; function: function_3ca0 at 0x3ca0 -- 0x3ca6
0x3ca0:     ff 25 3a c2 21 00                     	jmp qword ptr [rip + 0x21c23a] <stpncpy>
; data inside code section at 0x3ca6 -- 0x3cb0
0x3ca6:     68 52 00 00 00 e9 c0 fa  ff ff                     |hR........      |
; function: function_3cb0 at 0x3cb0 -- 0x3cb6
0x3cb0:     ff 25 32 c2 21 00                     	jmp qword ptr [rip + 0x21c232] <fdopen>
; data inside code section at 0x3cb6 -- 0x3cc0
0x3cb6:     68 53 00 00 00 e9 b0 fa  ff ff                     |hS........      |
; function: function_3cc0 at 0x3cc0 -- 0x3cc6
0x3cc0:     ff 25 2a c2 21 00                     	jmp qword ptr [rip + 0x21c22a] <setlocale>
; data inside code section at 0x3cc6 -- 0x3cd0
0x3cc6:     68 54 00 00 00 e9 a0 fa  ff ff                     |hT........      |
; function: function_3cd0 at 0x3cd0 -- 0x3cd6
0x3cd0:     ff 25 22 c2 21 00                     	jmp qword ptr [rip + 0x21c222] <__printf_chk>
; data inside code section at 0x3cd6 -- 0x3ce0
0x3cd6:     68 55 00 00 00 e9 90 fa  ff ff                     |hU........      |
; function: function_3ce0 at 0x3ce0 -- 0x3ce6
0x3ce0:     ff 25 1a c2 21 00                     	jmp qword ptr [rip + 0x21c21a] <timegm>
; data inside code section at 0x3ce6 -- 0x3cf0
0x3ce6:     68 56 00 00 00 e9 80 fa  ff ff                     |hV........      |
; function: function_3cf0 at 0x3cf0 -- 0x3cf6
0x3cf0:     ff 25 12 c2 21 00                     	jmp qword ptr [rip + 0x21c212] <strftime>
; data inside code section at 0x3cf6 -- 0x3d00
0x3cf6:     68 57 00 00 00 e9 70 fa  ff ff                     |hW....p...      |
; function: function_3d00 at 0x3d00 -- 0x3d06
0x3d00:     ff 25 0a c2 21 00                     	jmp qword ptr [rip + 0x21c20a] <mempcpy>
; data inside code section at 0x3d06 -- 0x3d10
0x3d06:     68 58 00 00 00 e9 60 fa  ff ff                     |hX....`...      |
; function: function_3d10 at 0x3d10 -- 0x3d16
0x3d10:     ff 25 02 c2 21 00                     	jmp qword ptr [rip + 0x21c202] <memmove>
; data inside code section at 0x3d16 -- 0x3d20
0x3d16:     68 59 00 00 00 e9 50 fa  ff ff                     |hY....P...      |
; function: function_3d20 at 0x3d20 -- 0x3d26
0x3d20:     ff 25 fa c1 21 00                     	jmp qword ptr [rip + 0x21c1fa] <error>
; data inside code section at 0x3d26 -- 0x3d30
0x3d26:     68 5a 00 00 00 e9 40 fa  ff ff                     |hZ....@...      |
; function: function_3d30 at 0x3d30 -- 0x3d36
0x3d30:     ff 25 f2 c1 21 00                     	jmp qword ptr [rip + 0x21c1f2] <open>
; data inside code section at 0x3d36 -- 0x3d40
0x3d36:     68 5b 00 00 00 e9 30 fa  ff ff                     |h[....0...      |
; function: function_3d40 at 0x3d40 -- 0x3d46
0x3d40:     ff 25 ea c1 21 00                     	jmp qword ptr [rip + 0x21c1ea] <fseeko>
; data inside code section at 0x3d46 -- 0x3d50
0x3d46:     68 5c 00 00 00 e9 20 fa  ff ff                     |h\.... ...      |
; function: function_3d50 at 0x3d50 -- 0x3d56
0x3d50:     ff 25 e2 c1 21 00                     	jmp qword ptr [rip + 0x21c1e2] <unsetenv>
; data inside code section at 0x3d56 -- 0x3d60
0x3d56:     68 5d 00 00 00 e9 10 fa  ff ff                     |h]........      |
; function: function_3d60 at 0x3d60 -- 0x3d66
0x3d60:     ff 25 da c1 21 00                     	jmp qword ptr [rip + 0x21c1da] <strtoul>
; data inside code section at 0x3d66 -- 0x3d70
0x3d66:     68 5e 00 00 00 e9 00 fa  ff ff                     |h^........      |
; function: function_3d70 at 0x3d70 -- 0x3d76
0x3d70:     ff 25 d2 c1 21 00                     	jmp qword ptr [rip + 0x21c1d2] <__cxa_atexit>
; data inside code section at 0x3d76 -- 0x3d80
0x3d76:     68 5f 00 00 00 e9 f0 f9  ff ff                     |h_........      |
; function: function_3d80 at 0x3d80 -- 0x3d86
0x3d80:     ff 25 ca c1 21 00                     	jmp qword ptr [rip + 0x21c1ca] <wcstombs>
; data inside code section at 0x3d86 -- 0x3d90
0x3d86:     68 60 00 00 00 e9 e0 f9  ff ff                     |h`........      |
; function: function_3d90 at 0x3d90 -- 0x3d96
0x3d90:     ff 25 c2 c1 21 00                     	jmp qword ptr [rip + 0x21c1c2] <getxattr>
; data inside code section at 0x3d96 -- 0x3da0
0x3d96:     68 61 00 00 00 e9 d0 f9  ff ff                     |ha........      |
; function: function_3da0 at 0x3da0 -- 0x3da6
0x3da0:     ff 25 ba c1 21 00                     	jmp qword ptr [rip + 0x21c1ba] <freecon>
; data inside code section at 0x3da6 -- 0x3db0
0x3da6:     68 62 00 00 00 e9 c0 f9  ff ff                     |hb........      |
; function: function_3db0 at 0x3db0 -- 0x3db6
0x3db0:     ff 25 b2 c1 21 00                     	jmp qword ptr [rip + 0x21c1b2] <gethostname>
; data inside code section at 0x3db6 -- 0x3dc0
0x3db6:     68 63 00 00 00 e9 b0 f9  ff ff                     |hc........      |
; function: function_3dc0 at 0x3dc0 -- 0x3dc6
0x3dc0:     ff 25 aa c1 21 00                     	jmp qword ptr [rip + 0x21c1aa] <sigismember>
; data inside code section at 0x3dc6 -- 0x3dd0
0x3dc6:     68 64 00 00 00 e9 a0 f9  ff ff                     |hd........      |
; function: function_3dd0 at 0x3dd0 -- 0x3dd6
0x3dd0:     ff 25 a2 c1 21 00                     	jmp qword ptr [rip + 0x21c1a2] <exit>
; data inside code section at 0x3dd6 -- 0x3de0
0x3dd6:     68 65 00 00 00 e9 90 f9  ff ff                     |he........      |
; function: function_3de0 at 0x3de0 -- 0x3de6
0x3de0:     ff 25 9a c1 21 00                     	jmp qword ptr [rip + 0x21c19a] <fwrite>
; data inside code section at 0x3de6 -- 0x3df0
0x3de6:     68 66 00 00 00 e9 80 f9  ff ff                     |hf........      |
; function: function_3df0 at 0x3df0 -- 0x3df6
0x3df0:     ff 25 92 c1 21 00                     	jmp qword ptr [rip + 0x21c192] <__fprintf_chk>
; data inside code section at 0x3df6 -- 0x3e00
0x3df6:     68 67 00 00 00 e9 70 f9  ff ff                     |hg....p...      |
; function: function_3e00 at 0x3e00 -- 0x3e06
0x3e00:     ff 25 8a c1 21 00                     	jmp qword ptr [rip + 0x21c18a] <fflush_unlocked>
; data inside code section at 0x3e06 -- 0x3e10
0x3e06:     68 68 00 00 00 e9 60 f9  ff ff                     |hh....`...      |
; function: function_3e10 at 0x3e10 -- 0x3e16
0x3e10:     ff 25 82 c1 21 00                     	jmp qword ptr [rip + 0x21c182] <mbsinit>
; data inside code section at 0x3e16 -- 0x3e20
0x3e16:     68 69 00 00 00 e9 50 f9  ff ff                     |hi....P...      |
; function: function_3e20 at 0x3e20 -- 0x3e26
0x3e20:     ff 25 7a c1 21 00                     	jmp qword ptr [rip + 0x21c17a] <iswprint>
; data inside code section at 0x3e26 -- 0x3e30
0x3e26:     68 6a 00 00 00 e9 40 f9  ff ff                     |hj....@...      |
; function: function_3e30 at 0x3e30 -- 0x3e36
0x3e30:     ff 25 72 c1 21 00                     	jmp qword ptr [rip + 0x21c172] <sigaddset>
; data inside code section at 0x3e36 -- 0x3e40
0x3e36:     68 6b 00 00 00 e9 30 f9  ff ff                     |hk....0...      |
; function: function_3e40 at 0x3e40 -- 0x3e46
0x3e40:     ff 25 6a c1 21 00                     	jmp qword ptr [rip + 0x21c16a] <__ctype_tolower_loc>
; data inside code section at 0x3e46 -- 0x3e50
0x3e46:     68 6c 00 00 00 e9 20 f9  ff ff                     |hl.... ...      |
; function: function_3e50 at 0x3e50 -- 0x3e56
0x3e50:     ff 25 62 c1 21 00                     	jmp qword ptr [rip + 0x21c162] <__ctype_b_loc>
; data inside code section at 0x3e56 -- 0x3e60
0x3e56:     68 6d 00 00 00 e9 10 f9  ff ff                     |hm........      |
; function: function_3e60 at 0x3e60 -- 0x3e66
0x3e60:     ff 25 5a c1 21 00                     	jmp qword ptr [rip + 0x21c15a] <__sprintf_chk>
; data inside code section at 0x3e66 -- 0x3e70
0x3e66:     68 6e 00 00 00 e9 00 f9  ff ff                     |hn........      |
; section: .plt.got
; function: function_3e70 at 0x3e70 -- 0x3e76
0x3e70:     ff 25 52 c1 21 00                     	jmp qword ptr [rip + 0x21c152] <free>
; data inside code section at 0x3e76 -- 0x3e78
0x3e76:     66 90                                              |f.              |
; function: function_3e78 at 0x3e78 -- 0x3e7e
0x3e78:     ff 25 6a c1 21 00                     	jmp qword ptr [rip + 0x21c16a] <malloc>
; data inside code section at 0x3e7e -- 0x3e80
0x3e7e:     66 90                                              |f.              |
; function: function_3e80 at 0x3e80 -- 0x3e86
0x3e80:     ff 25 72 c1 21 00                     	jmp qword ptr [rip + 0x21c172] <__cxa_finalize>
; data inside code section at 0x3e86 -- 0x3e88
0x3e86:     66 90                                              |f.              |
; section: .text
; function: function_3e90 at 0x3e90 -- 0x584b
0x3e90:     41 57                                 	push r15
0x3e92:     41 56                                 	push r14
0x3e94:     41 55                                 	push r13
0x3e96:     41 54                                 	push r12
0x3e98:     55                                    	push rbp
0x3e99:     53                                    	push rbx
0x3e9a:     89 fd                                 	mov ebp, edi
0x3e9c:     48 89 f3                              	mov rbx, rsi
0x3e9f:     48 83 ec 58                           	sub rsp, 0x58
0x3ea3:     48 8b 3e                              	mov rdi, qword ptr [rsi]
0x3ea6:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x3eaf:     48 89 44 24 48                        	mov qword ptr [rsp + 0x48], rax
0x3eb4:     31 c0                                 	xor eax, eax
0x3eb6:     e8 15 e1 00 00                        	call 0x11fd0 <function_11fd0>
0x3ebb:     48 8d 35 88 3d 01 00                  	lea rsi, [rip + 0x13d88]
0x3ec2:     bf 06 00 00 00                        	mov edi, 6
0x3ec7:     e8 f4 fd ff ff                        	call 0x3cc0 <setlocale>
0x3ecc:     48 8d 35 c2 3e 01 00                  	lea rsi, [rip + 0x13ec2]
0x3ed3:     48 8d 3d a1 3e 01 00                  	lea rdi, [rip + 0x13ea1]
0x3eda:     e8 41 fa ff ff                        	call 0x3920 <bindtextdomain>
0x3edf:     48 8d 3d 95 3e 01 00                  	lea rdi, [rip + 0x13e95]
0x3ee6:     e8 f5 f9 ff ff                        	call 0x38e0 <textdomain>
0x3eeb:     48 8d 3d ae 8d 00 00                  	lea rdi, [rip + 0x8dae]
0x3ef2:     c7 05 fc c2 21 00 02 00 00 00         	mov dword ptr [rip + 0x21c2fc], 2
0x3efc:     e8 3f 24 01 00                        	call 0x16340 <function_16340>
0x3f01:     48 b8 00 00 00 00 00 00 00 80         	movabs rax, 0x8000000000000000
0x3f0b:     c7 05 fb d2 21 00 00 00 00 00         	mov dword ptr [rip + 0x21d2fb], 0
0x3f15:     c6 05 9c d3 21 00 01                  	mov byte ptr [rip + 0x21d39c], 1
0x3f1c:     48 89 05 4d d4 21 00                  	mov qword ptr [rip + 0x21d44d], rax
0x3f23:     8b 05 b7 c2 21 00                     	mov eax, dword ptr [rip + 0x21c2b7]
0x3f29:     48 c7 05 4c d4 21 00 00 00 00 00      	mov qword ptr [rip + 0x21d44c], 0
0x3f34:     48 c7 05 39 d4 21 00 ff ff ff ff      	mov qword ptr [rip + 0x21d439], -1
0x3f3f:     c6 05 92 d3 21 00 00                  	mov byte ptr [rip + 0x21d392], 0
0x3f46:     83 f8 02                              	cmp eax, 2
0x3f49:     0f 84 98 0d 00 00                     	je 0x4ce7 <function_3e90+0xe57>
0x3f4f:     83 f8 03                              	cmp eax, 3
0x3f52:     74 0e                                 	je 0x3f62 <function_3e90+0xd2>
0x3f54:     83 e8 01                              	sub eax, 1
0x3f57:     0f 84 fa 08 00 00                     	je 0x4857 <function_3e90+0x9c7>
0x3f5d:     e8 7e f8 ff ff                        	call 0x37e0 <abort>
0x3f62:     be 07 00 00 00                        	mov esi, 7
0x3f67:     31 ff                                 	xor edi, edi
0x3f69:     c7 05 c5 d3 21 00 00 00 00 00         	mov dword ptr [rip + 0x21d3c5], 0
0x3f73:     e8 38 f6 00 00                        	call 0x135b0 <function_135b0>
0x3f78:     48 8d 3d 28 3e 01 00                  	lea rdi, [rip + 0x13e28]
0x3f7f:     c7 05 ab d3 21 00 00 00 00 00         	mov dword ptr [rip + 0x21d3ab], 0
0x3f89:     c7 05 9d d3 21 00 00 00 00 00         	mov dword ptr [rip + 0x21d39d], 0
0x3f93:     c6 05 95 d3 21 00 00                  	mov byte ptr [rip + 0x21d395], 0
0x3f9a:     c6 05 8c d3 21 00 00                  	mov byte ptr [rip + 0x21d38c], 0
0x3fa1:     c6 05 84 d3 21 00 00                  	mov byte ptr [rip + 0x21d384], 0
0x3fa8:     c7 05 62 d3 21 00 00 00 00 00         	mov dword ptr [rip + 0x21d362], 0
0x3fb2:     c6 05 43 d3 21 00 00                  	mov byte ptr [rip + 0x21d343], 0
0x3fb9:     c7 05 35 d3 21 00 01 00 00 00         	mov dword ptr [rip + 0x21d335], 1
0x3fc3:     c6 05 2c d3 21 00 00                  	mov byte ptr [rip + 0x21d32c], 0
0x3fca:     c6 05 24 d3 21 00 00                  	mov byte ptr [rip + 0x21d324], 0
0x3fd1:     c7 05 15 d3 21 00 00 00 00 00         	mov dword ptr [rip + 0x21d315], 0
0x3fdb:     48 c7 05 02 d3 21 00 00 00 00 00      	mov qword ptr [rip + 0x21d302], 0
0x3fe6:     48 c7 05 ef d2 21 00 00 00 00 00      	mov qword ptr [rip + 0x21d2ef], 0
0x3ff1:     c6 05 6d d3 21 00 00                  	mov byte ptr [rip + 0x21d36d], 0
0x3ff8:     e8 a3 f7 ff ff                        	call 0x37a0 <getenv>
0x3ffd:     48 85 c0                              	test rax, rax
0x4000:     49 89 c4                              	mov r12, rax
0x4003:     74 36                                 	je 0x403b <function_3e90+0x1ab>
0x4005:     48 8d 15 54 6b 01 00                  	lea rdx, [rip + 0x16b54]
0x400c:     48 8d 35 cd b9 21 00                  	lea rsi, [rip + 0x21b9cd]
0x4013:     b9 04 00 00 00                        	mov ecx, 4
0x4018:     48 89 c7                              	mov rdi, rax
0x401b:     e8 a0 82 00 00                        	call 0xc2c0 <function_c2c0>
0x4020:     85 c0                                 	test eax, eax
0x4022:     0f 88 da 0c 00 00                     	js 0x4d02 <function_3e90+0xe72>
0x4028:     48 8d 15 31 6b 01 00                  	lea rdx, [rip + 0x16b31]
0x402f:     48 98                                 	cdqe 
0x4031:     31 ff                                 	xor edi, edi
0x4033:     8b 34 82                              	mov esi, dword ptr [rdx + rax*4]
0x4036:     e8 75 f5 00 00                        	call 0x135b0 <function_135b0>
0x403b:     48 8d 3d 73 3d 01 00                  	lea rdi, [rip + 0x13d73]
0x4042:     48 c7 05 63 d2 21 00 50 00 00 00      	mov qword ptr [rip + 0x21d263], 0x50
0x404d:     e8 4e f7 ff ff                        	call 0x37a0 <getenv>
0x4052:     48 85 c0                              	test rax, rax
0x4055:     49 89 c4                              	mov r12, rax
0x4058:     74 09                                 	je 0x4063 <function_3e90+0x1d3>
0x405a:     80 38 00                              	cmp byte ptr [rax], 0
0x405d:     0f 85 da 0c 00 00                     	jne 0x4d3d <function_3e90+0xead>
0x4063:     4c 8d 64 24 30                        	lea r12, [rsp + 0x30]
0x4068:     31 c0                                 	xor eax, eax
0x406a:     be 13 54 00 00                        	mov esi, 0x5413
0x406f:     bf 01 00 00 00                        	mov edi, 1
0x4074:     4c 89 e2                              	mov rdx, r12
0x4077:     e8 04 fa ff ff                        	call 0x3a80 <ioctl>
0x407c:     83 f8 ff                              	cmp eax, -1
0x407f:     74 11                                 	je 0x4092 <function_3e90+0x202>
0x4081:     0f b7 44 24 32                        	movzx eax, word ptr [rsp + 0x32]
0x4086:     66 85 c0                              	test ax, ax
0x4089:     74 07                                 	je 0x4092 <function_3e90+0x202>
0x408b:     48 89 05 1e d2 21 00                  	mov qword ptr [rip + 0x21d21e], rax
0x4092:     48 8d 3d 24 3d 01 00                  	lea rdi, [rip + 0x13d24]
0x4099:     e8 02 f7 ff ff                        	call 0x37a0 <getenv>
0x409e:     48 85 c0                              	test rax, rax
0x40a1:     49 89 c5                              	mov r13, rax
0x40a4:     48 c7 05 11 d2 21 00 08 00 00 00      	mov qword ptr [rip + 0x21d211], 8
0x40af:     74 26                                 	je 0x40d7 <function_3e90+0x247>
0x40b1:     45 31 c0                              	xor r8d, r8d
0x40b4:     31 d2                                 	xor edx, edx
0x40b6:     31 f6                                 	xor esi, esi
0x40b8:     4c 89 e1                              	mov rcx, r12
0x40bb:     48 89 c7                              	mov rdi, rax
0x40be:     e8 8d 08 01 00                        	call 0x14950 <function_14950>
0x40c3:     85 c0                                 	test eax, eax
0x40c5:     0f 85 24 11 00 00                     	jne 0x51ef <function_3e90+0x135f>
0x40cb:     48 8b 44 24 30                        	mov rax, qword ptr [rsp + 0x30]
0x40d0:     48 89 05 e9 d1 21 00                  	mov qword ptr [rip + 0x21d1e9], rax
0x40d7:     4c 8d 2d ba 24 01 00                  	lea r13, [rip + 0x124ba]
0x40de:     c6 44 24 10 00                        	mov byte ptr [rsp + 0x10], 0
0x40e3:     c6 44 24 08 00                        	mov byte ptr [rsp + 8], 0
0x40e8:     45 31 f6                              	xor r14d, r14d
0x40eb:     41 bf 01 00 00 00                     	mov r15d, 1
0x40f1:     0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0x40f8:     48 8d 0d e1 b1 21 00                  	lea rcx, [rip + 0x21b1e1]
0x40ff:     48 8d 15 42 60 01 00                  	lea rdx, [rip + 0x16042]
0x4106:     4d 89 e0                              	mov r8, r12
0x4109:     48 89 de                              	mov rsi, rbx
0x410c:     89 ef                                 	mov edi, ebp
0x410e:     c7 44 24 30 ff ff ff ff               	mov dword ptr [rsp + 0x30], 0xffffffff
0x4116:     e8 65 f8 ff ff                        	call 0x3980 <getopt_long>
0x411b:     83 f8 ff                              	cmp eax, -1
0x411e:     0f 84 94 07 00 00                     	je 0x48b8 <function_3e90+0xa28>
0x4124:     05 83 00 00 00                        	add eax, 0x83
0x4129:     3d 13 01 00 00                        	cmp eax, 0x113
0x412e:     0f 87 65 15 00 00                     	ja 0x5699 <function_3e90+0x1809>
0x4134:     49 63 44 85 00                        	movsxd rax, dword ptr [r13 + rax*4]
0x4139:     4c 01 e8                              	add rax, r13
0x413c:     ff e0                                 	jmp rax
0x413e:     44 88 3d e8 d1 21 00                  	mov byte ptr [rip + 0x21d1e8], r15b
0x4145:     c7 05 e9 d1 21 00 00 00 00 00         	mov dword ptr [rip + 0x21d1e9], 0
0x414f:     eb a7                                 	jmp 0x40f8 <function_3e90+0x268>
0x4151:     c6 44 24 10 01                        	mov byte ptr [rsp + 0x10], 1
0x4156:     eb a0                                 	jmp 0x40f8 <function_3e90+0x268>
0x4158:     44 88 3d 9d d1 21 00                  	mov byte ptr [rip + 0x21d19d], r15b
0x415f:     eb 97                                 	jmp 0x40f8 <function_3e90+0x268>
0x4161:     c7 05 bd d1 21 00 b0 00 00 00         	mov dword ptr [rip + 0x21d1bd], 0xb0
0x416b:     c7 05 a7 d1 21 00 b0 00 00 00         	mov dword ptr [rip + 0x21d1a7], 0xb0
0x4175:     48 c7 05 a0 d1 21 00 01 00 00 00      	mov qword ptr [rip + 0x21d1a0], 1
0x4180:     48 c7 05 8d be 21 00 01 00 00 00      	mov qword ptr [rip + 0x21be8d], 1
0x418b:     e9 68 ff ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x4190:     c7 05 9e d1 21 00 00 00 00 00         	mov dword ptr [rip + 0x21d19e], 0
0x419a:     c6 05 80 be 21 00 00                  	mov byte ptr [rip + 0x21be80], 0
0x41a1:     e9 52 ff ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x41a6:     83 3d 8b d1 21 00 00                  	cmp dword ptr [rip + 0x21d18b], 0
0x41ad:     c7 05 39 d1 21 00 02 00 00 00         	mov dword ptr [rip + 0x21d139], 2
0x41b7:     c7 05 6f d1 21 00 ff ff ff ff         	mov dword ptr [rip + 0x21d16f], 0xffffffff
0x41c1:     0f 84 16 11 00 00                     	je 0x52dd <function_3e90+0x144d>
0x41c7:     c6 05 5e d1 21 00 00                  	mov byte ptr [rip + 0x21d15e], 0
0x41ce:     c6 05 3d d1 21 00 00                  	mov byte ptr [rip + 0x21d13d], 0
0x41d5:     c6 05 35 d1 21 00 00                  	mov byte ptr [rip + 0x21d135], 0
0x41dc:     c6 44 24 08 01                        	mov byte ptr [rsp + 8], 1
0x41e1:     e9 12 ff ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x41e6:     44 88 3d 08 d1 21 00                  	mov byte ptr [rip + 0x21d108], r15b
0x41ed:     e9 06 ff ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x41f2:     c7 05 38 d1 21 00 01 00 00 00         	mov dword ptr [rip + 0x21d138], 1
0x41fc:     e9 f7 fe ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x4201:     be 07 00 00 00                        	mov esi, 7
0x4206:     31 ff                                 	xor edi, edi
0x4208:     e8 a3 f3 00 00                        	call 0x135b0 <function_135b0>
0x420d:     e9 e6 fe ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x4212:     c7 05 d4 d0 21 00 02 00 00 00         	mov dword ptr [rip + 0x21d0d4], 2
0x421c:     e9 d7 fe ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x4221:     44 88 3d 3d d1 21 00                  	mov byte ptr [rip + 0x21d13d], r15b
0x4228:     e9 cb fe ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x422d:     c7 05 f9 d0 21 00 01 00 00 00         	mov dword ptr [rip + 0x21d0f9], 1
0x4237:     c6 44 24 08 01                        	mov byte ptr [rsp + 8], 1
0x423c:     e9 b7 fe ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x4241:     c7 05 e5 d0 21 00 ff ff ff ff         	mov dword ptr [rip + 0x21d0e5], 0xffffffff
0x424b:     c6 44 24 08 01                        	mov byte ptr [rsp + 8], 1
0x4250:     e9 a3 fe ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x4255:     48 8d 35 87 3b 01 00                  	lea rsi, [rip + 0x13b87]
0x425c:     ba 05 00 00 00                        	mov edx, 5
0x4261:     31 ff                                 	xor edi, edi
0x4263:     e8 c8 f6 ff ff                        	call 0x3930 <dcgettext>
0x4268:     48 83 ec 08                           	sub rsp, 8
0x426c:     48 8b 3d 2d c0 21 00                  	mov rdi, qword ptr [rip + 0x21c02d]
0x4273:     4c 8d 05 d0 39 01 00                  	lea r8, [rip + 0x139d0]
0x427a:     6a 02                                 	push 2
0x427c:     31 d2                                 	xor edx, edx
0x427e:     49 89 c1                              	mov r9, rax
0x4281:     48 83 c9 ff                           	or rcx, 0xffffffffffffffff
0x4285:     31 f6                                 	xor esi, esi
0x4287:     e8 84 04 01 00                        	call 0x14710
0x428c:     48 89 05 2d d0 21 00                  	mov qword ptr [rip + 0x21d02d], rax
0x4293:     58                                    	pop rax
0x4294:     5a                                    	pop rdx
0x4295:     e9 5e fe ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x429a:     c7 05 8c d0 21 00 02 00 00 00         	mov dword ptr [rip + 0x21d08c], 2
0x42a4:     c6 44 24 08 01                        	mov byte ptr [rsp + 8], 1
0x42a9:     e9 4a fe ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x42ae:     44 88 3d 41 d0 21 00                  	mov byte ptr [rip + 0x21d041], r15b
0x42b5:     e9 3e fe ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x42ba:     be 05 00 00 00                        	mov esi, 5
0x42bf:     31 ff                                 	xor edi, edi
0x42c1:     e8 ea f2 00 00                        	call 0x135b0 <function_135b0>
0x42c6:     e9 2d fe ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x42cb:     31 f6                                 	xor esi, esi
0x42cd:     31 ff                                 	xor edi, edi
0x42cf:     e8 dc f2 00 00                        	call 0x135b0 <function_135b0>
0x42d4:     e9 1f fe ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x42d9:     c7 05 15 d0 21 00 05 00 00 00         	mov dword ptr [rip + 0x21d015], 5
0x42e3:     e9 10 fe ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x42e8:     48 8b 15 b1 bf 21 00                  	mov rdx, qword ptr [rip + 0x21bfb1]
0x42ef:     bf 10 00 00 00                        	mov edi, 0x10
0x42f4:     48 89 54 24 18                        	mov qword ptr [rsp + 0x18], rdx
0x42f9:     e8 82 01 01 00                        	call 0x14480 <function_14480>
0x42fe:     48 8b 54 24 18                        	mov rdx, qword ptr [rsp + 0x18]
0x4303:     48 89 10                              	mov qword ptr [rax], rdx
0x4306:     48 8b 15 db cf 21 00                  	mov rdx, qword ptr [rip + 0x21cfdb]
0x430d:     48 89 50 08                           	mov qword ptr [rax + 8], rdx
0x4311:     48 89 05 d0 cf 21 00                  	mov qword ptr [rip + 0x21cfd0], rax
0x4318:     e9 db fd ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x431d:     c7 05 d1 cf 21 00 03 00 00 00         	mov dword ptr [rip + 0x21cfd1], 3
0x4327:     e9 cc fd ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x432c:     c6 05 ed bc 21 00 00                  	mov byte ptr [rip + 0x21bced], 0
0x4333:     e9 c0 fd ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x4338:     c7 05 d2 cf 21 00 03 00 00 00         	mov dword ptr [rip + 0x21cfd2], 3
0x4342:     e9 b1 fd ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x4347:     44 88 3d ca cf 21 00                  	mov byte ptr [rip + 0x21cfca], r15b
0x434e:     e9 a5 fd ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x4353:     c7 05 db cf 21 00 02 00 00 00         	mov dword ptr [rip + 0x21cfdb], 2
0x435d:     e9 96 fd ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x4362:     bf 10 00 00 00                        	mov edi, 0x10
0x4367:     e8 14 01 01 00                        	call 0x14480 <function_14480>
0x436c:     48 8b 15 75 cf 21 00                  	mov rdx, qword ptr [rip + 0x21cf75]
0x4373:     48 8d 35 66 3a 01 00                  	lea rsi, [rip + 0x13a66]
0x437a:     bf 10 00 00 00                        	mov edi, 0x10
0x437f:     48 89 05 62 cf 21 00                  	mov qword ptr [rip + 0x21cf62], rax
0x4386:     48 89 30                              	mov qword ptr [rax], rsi
0x4389:     48 89 50 08                           	mov qword ptr [rax + 8], rdx
0x438d:     e8 ee 00 01 00                        	call 0x14480 <function_14480>
0x4392:     48 8b 15 4f cf 21 00                  	mov rdx, qword ptr [rip + 0x21cf4f]
0x4399:     48 8d 35 3f 3a 01 00                  	lea rsi, [rip + 0x13a3f]
0x43a0:     48 89 30                              	mov qword ptr [rax], rsi
0x43a3:     48 89 50 08                           	mov qword ptr [rax + 8], rdx
0x43a7:     48 89 05 3a cf 21 00                  	mov qword ptr [rip + 0x21cf3a], rax
0x43ae:     e9 45 fd ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x43b3:     83 3d 36 cf 21 00 00                  	cmp dword ptr [rip + 0x21cf36], 0
0x43ba:     0f 85 38 fd ff ff                     	jne 0x40f8 <function_3e90+0x268>
0x43c0:     c7 05 26 cf 21 00 01 00 00 00         	mov dword ptr [rip + 0x21cf26], 1
0x43ca:     e9 29 fd ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x43cf:     83 3d 62 cf 21 00 00                  	cmp dword ptr [rip + 0x21cf62], 0
0x43d6:     0f 84 1c fd ff ff                     	je 0x40f8 <function_3e90+0x268>
0x43dc:     c7 05 52 cf 21 00 01 00 00 00         	mov dword ptr [rip + 0x21cf52], 1
0x43e6:     e9 0d fd ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x43eb:     8b 05 ef bd 21 00                     	mov eax, dword ptr [rip + 0x21bdef]
0x43f1:     48 8b 0d f0 bd 21 00                  	mov rcx, qword ptr [rip + 0x21bdf0]
0x43f8:     48 8d 35 83 39 01 00                  	lea rsi, [rip + 0x13983]
0x43ff:     83 f8 01                              	cmp eax, 1
0x4402:     74 15                                 	je 0x4419 <function_3e90+0x589>
0x4404:     83 f8 02                              	cmp eax, 2
0x4407:     48 8d 35 f0 38 01 00                  	lea rsi, [rip + 0x138f0]
0x440e:     48 8d 05 ea 38 01 00                  	lea rax, [rip + 0x138ea]
0x4415:     48 0f 44 f0                           	cmove rsi, rax
0x4419:     48 83 ec 08                           	sub rsp, 8
0x441d:     48 8b 3d 64 be 21 00                  	mov rdi, qword ptr [rip + 0x21be64]
0x4424:     4c 8d 0d 16 3a 01 00                  	lea r9, [rip + 0x13a16]
0x442b:     6a 00                                 	push 0
0x442d:     4c 8d 05 1d 3a 01 00                  	lea r8, [rip + 0x13a1d]
0x4434:     48 8d 15 3c 39 01 00                  	lea rdx, [rip + 0x1393c]
0x443b:     31 c0                                 	xor eax, eax
0x443d:     e8 de fe 00 00                        	call 0x14320 <function_14320>
0x4442:     31 ff                                 	xor edi, edi
0x4444:     e8 87 f9 ff ff                        	call 0x3dd0 <exit>
0x4449:     4c 8b 35 50 be 21 00                  	mov r14, qword ptr [rip + 0x21be50]
0x4450:     e9 a3 fc ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x4455:     4c 8b 0d 94 bd 21 00                  	mov r9, qword ptr [rip + 0x21bd94]
0x445c:     48 8b 35 3d be 21 00                  	mov rsi, qword ptr [rip + 0x21be3d]
0x4463:     48 8d 15 b6 ad 21 00                  	lea rdx, [rip + 0x21adb6]
0x446a:     48 8d 0d 9f 26 01 00                  	lea rcx, [rip + 0x1269f]
0x4471:     48 8d 3d 83 39 01 00                  	lea rdi, [rip + 0x13983]
0x4478:     41 b8 04 00 00 00                     	mov r8d, 4
0x447e:     e8 fd 80 00 00                        	call 0xc580 <function_c580>
0x4483:     48 8d 15 86 26 01 00                  	lea rdx, [rip + 0x12686]
0x448a:     8b 04 82                              	mov eax, dword ptr [rdx + rax*4]
0x448d:     89 05 a1 ce 21 00                     	mov dword ptr [rip + 0x21cea1], eax
0x4493:     e9 60 fc ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x4498:     4c 8b 0d 51 bd 21 00                  	mov r9, qword ptr [rip + 0x21bd51]
0x449f:     48 8b 35 fa bd 21 00                  	mov rsi, qword ptr [rip + 0x21bdfa]
0x44a6:     48 8d 15 b3 ad 21 00                  	lea rdx, [rip + 0x21adb3]
0x44ad:     48 8d 0d 7c 26 01 00                  	lea rcx, [rip + 0x1267c]
0x44b4:     48 8d 3d 39 39 01 00                  	lea rdi, [rip + 0x13939]
0x44bb:     41 b8 04 00 00 00                     	mov r8d, 4
0x44c1:     e8 ba 80 00 00                        	call 0xc580 <function_c580>
0x44c6:     48 8d 15 63 26 01 00                  	lea rdx, [rip + 0x12663]
0x44cd:     c6 44 24 08 01                        	mov byte ptr [rsp + 8], 1
0x44d2:     8b 04 82                              	mov eax, dword ptr [rdx + rax*4]
0x44d5:     89 05 55 ce 21 00                     	mov dword ptr [rip + 0x21ce55], eax
0x44db:     e9 18 fc ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x44e0:     c7 05 3e ce 21 00 90 00 00 00         	mov dword ptr [rip + 0x21ce3e], 0x90
0x44ea:     c7 05 28 ce 21 00 90 00 00 00         	mov dword ptr [rip + 0x21ce28], 0x90
0x44f4:     48 c7 05 21 ce 21 00 01 00 00 00      	mov qword ptr [rip + 0x21ce21], 1
0x44ff:     48 c7 05 0e bb 21 00 01 00 00 00      	mov qword ptr [rip + 0x21bb0e], 1
0x450a:     e9 e9 fb ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x450f:     c6 05 c2 cd 21 00 00                  	mov byte ptr [rip + 0x21cdc2], 0
0x4516:     e9 dd fb ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x451b:     4c 8b 0d ce bc 21 00                  	mov r9, qword ptr [rip + 0x21bcce]
0x4522:     48 8b 35 77 bd 21 00                  	mov rsi, qword ptr [rip + 0x21bd77]
0x4529:     48 8d 0d 30 66 01 00                  	lea rcx, [rip + 0x16630]
0x4530:     48 8d 15 a9 b4 21 00                  	lea rdx, [rip + 0x21b4a9]
0x4537:     48 8d 3d f3 38 01 00                  	lea rdi, [rip + 0x138f3]
0x453e:     41 b8 04 00 00 00                     	mov r8d, 4
0x4544:     e8 37 80 00 00                        	call 0xc580 <function_c580>
0x4549:     48 8d 15 10 66 01 00                  	lea rdx, [rip + 0x16610]
0x4550:     31 ff                                 	xor edi, edi
0x4552:     8b 34 82                              	mov esi, dword ptr [rdx + rax*4]
0x4555:     e8 56 f0 00 00                        	call 0x135b0 <function_135b0>
0x455a:     e9 99 fb ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x455f:     4c 8b 0d 8a bc 21 00                  	mov r9, qword ptr [rip + 0x21bc8a]
0x4566:     48 8b 35 33 bd 21 00                  	mov rsi, qword ptr [rip + 0x21bd33]
0x456d:     48 8d 15 cc b3 21 00                  	lea rdx, [rip + 0x21b3cc]
0x4574:     48 8d 0d f5 25 01 00                  	lea rcx, [rip + 0x125f5]
0x457b:     48 8d 3d 9d 38 01 00                  	lea rdi, [rip + 0x1389d]
0x4582:     41 b8 04 00 00 00                     	mov r8d, 4
0x4588:     e8 f3 7f 00 00                        	call 0xc580 <function_c580>
0x458d:     48 8d 15 dc 25 01 00                  	lea rdx, [rip + 0x125dc]
0x4594:     8b 04 82                              	mov eax, dword ptr [rdx + rax*4]
0x4597:     89 05 77 cd 21 00                     	mov dword ptr [rip + 0x21cd77], eax
0x459d:     e9 56 fb ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x45a2:     48 8b 35 f7 bc 21 00                  	mov rsi, qword ptr [rip + 0x21bcf7]
0x45a9:     48 85 f6                              	test rsi, rsi
0x45ac:     0f 84 ef 02 00 00                     	je 0x48a1 <function_3e90+0xa11>
0x45b2:     4c 8b 0d 37 bc 21 00                  	mov r9, qword ptr [rip + 0x21bc37]
0x45b9:     48 8d 15 00 ac 21 00                  	lea rdx, [rip + 0x21ac00]
0x45c0:     48 8d 0d 19 25 01 00                  	lea rcx, [rip + 0x12519]
0x45c7:     48 8d 3d 45 38 01 00                  	lea rdi, [rip + 0x13845]
0x45ce:     41 b8 04 00 00 00                     	mov r8d, 4
0x45d4:     e8 a7 7f 00 00                        	call 0xc580 <function_c580>
0x45d9:     48 8d 15 00 25 01 00                  	lea rdx, [rip + 0x12500]
0x45e0:     8b 14 82                              	mov edx, dword ptr [rdx + rax*4]
0x45e3:     83 fa 01                              	cmp edx, 1
0x45e6:     0f 84 b5 02 00 00                     	je 0x48a1 <function_3e90+0xa11>
0x45ec:     31 c0                                 	xor eax, eax
0x45ee:     83 fa 02                              	cmp edx, 2
0x45f1:     0f 85 af 02 00 00                     	jne 0x48a6 <function_3e90+0xa16>
0x45f7:     bf 01 00 00 00                        	mov edi, 1
0x45fc:     e8 4f f2 ff ff                        	call 0x3850 <isatty>
0x4601:     85 c0                                 	test eax, eax
0x4603:     0f 95 c0                              	setne al
0x4606:     0f b6 c0                              	movzx eax, al
0x4609:     e9 98 02 00 00                        	jmp 0x48a6 <function_3e90+0xa16>
0x460e:     bf 10 00 00 00                        	mov edi, 0x10
0x4613:     e8 68 fe 00 00                        	call 0x14480 <function_14480>
0x4618:     48 8b 15 81 bc 21 00                  	mov rdx, qword ptr [rip + 0x21bc81]
0x461f:     48 89 10                              	mov qword ptr [rax], rdx
0x4622:     48 8b 15 b7 cc 21 00                  	mov rdx, qword ptr [rip + 0x21ccb7]
0x4629:     48 89 05 b0 cc 21 00                  	mov qword ptr [rip + 0x21ccb0], rax
0x4630:     48 89 50 08                           	mov qword ptr [rax + 8], rdx
0x4634:     e9 bf fa ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x4639:     44 88 3d b4 cc 21 00                  	mov byte ptr [rip + 0x21ccb4], r15b
0x4640:     e9 b3 fa ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x4645:     c7 05 e9 cc 21 00 00 00 00 00         	mov dword ptr [rip + 0x21cce9], 0
0x464f:     4c 8d 35 33 37 01 00                  	lea r14, [rip + 0x13733]
0x4656:     e9 9d fa ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x465b:     4c 8b 0d 8e bb 21 00                  	mov r9, qword ptr [rip + 0x21bb8e]
0x4662:     48 8b 35 37 bc 21 00                  	mov rsi, qword ptr [rip + 0x21bc37]
0x4669:     48 8d 15 30 ac 21 00                  	lea rdx, [rip + 0x21ac30]
0x4670:     48 8d 0d d9 24 01 00                  	lea rcx, [rip + 0x124d9]
0x4677:     48 8d 3d 84 37 01 00                  	lea rdi, [rip + 0x13784]
0x467e:     41 b8 04 00 00 00                     	mov r8d, 4
0x4684:     e8 f7 7e 00 00                        	call 0xc580 <function_c580>
0x4689:     48 8d 15 c0 24 01 00                  	lea rdx, [rip + 0x124c0]
0x4690:     8b 04 82                              	mov eax, dword ptr [rdx + rax*4]
0x4693:     89 05 9f cc 21 00                     	mov dword ptr [rip + 0x21cc9f], eax
0x4699:     e9 5a fa ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x469e:     c7 05 6c cc 21 00 02 00 00 00         	mov dword ptr [rip + 0x21cc6c], 2
0x46a8:     e9 4b fa ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x46ad:     c7 05 41 cc 21 00 04 00 00 00         	mov dword ptr [rip + 0x21cc41], 4
0x46b7:     e9 3c fa ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x46bc:     48 8b 35 dd bb 21 00                  	mov rsi, qword ptr [rip + 0x21bbdd]
0x46c3:     48 85 f6                              	test rsi, rsi
0x46c6:     0f 84 be 01 00 00                     	je 0x488a <function_3e90+0x9fa>
0x46cc:     4c 8b 0d 1d bb 21 00                  	mov r9, qword ptr [rip + 0x21bb1d]
0x46d3:     48 8d 15 e6 aa 21 00                  	lea rdx, [rip + 0x21aae6]
0x46da:     48 8d 0d ff 23 01 00                  	lea rcx, [rip + 0x123ff]
0x46e1:     48 8d 3d 23 37 01 00                  	lea rdi, [rip + 0x13723]
0x46e8:     41 b8 04 00 00 00                     	mov r8d, 4
0x46ee:     e8 8d 7e 00 00                        	call 0xc580 <function_c580>
0x46f3:     48 8d 15 e6 23 01 00                  	lea rdx, [rip + 0x123e6]
0x46fa:     8b 04 82                              	mov eax, dword ptr [rdx + rax*4]
0x46fd:     83 f8 01                              	cmp eax, 1
0x4700:     0f 84 84 01 00 00                     	je 0x488a <function_3e90+0x9fa>
0x4706:     83 f8 02                              	cmp eax, 2
0x4709:     0f 84 69 01 00 00                     	je 0x4878 <function_3e90+0x9e8>
0x470f:     c6 05 fc cb 21 00 00                  	mov byte ptr [rip + 0x21cbfc], 0
0x4716:     e9 dd f9 ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x471b:     48 8b 3d 7e bb 21 00                  	mov rdi, qword ptr [rip + 0x21bb7e]
0x4722:     48 8d 15 f7 cb 21 00                  	lea rdx, [rip + 0x21cbf7]
0x4729:     48 8d 35 f8 cb 21 00                  	lea rsi, [rip + 0x21cbf8]
0x4730:     e8 eb af 00 00                        	call 0xf720 <function_f720>
0x4735:     85 c0                                 	test eax, eax
0x4737:     0f 85 8c 10 00 00                     	jne 0x57c9 <function_3e90+0x1939>
0x473d:     8b 05 e5 cb 21 00                     	mov eax, dword ptr [rip + 0x21cbe5]
0x4743:     89 05 d3 cb 21 00                     	mov dword ptr [rip + 0x21cbd3], eax
0x4749:     48 8b 05 d0 cb 21 00                  	mov rax, qword ptr [rip + 0x21cbd0]
0x4750:     48 89 05 c1 b8 21 00                  	mov qword ptr [rip + 0x21b8c1], rax
0x4757:     e9 9c f9 ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x475c:     c7 05 ca cb 21 00 04 00 00 00         	mov dword ptr [rip + 0x21cbca], 4
0x4766:     c6 44 24 08 01                        	mov byte ptr [rsp + 8], 1
0x476b:     e9 88 f9 ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x4770:     44 88 3d b5 cb 21 00                  	mov byte ptr [rip + 0x21cbb5], r15b
0x4777:     e9 7c f9 ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x477c:     44 88 3d ac cb 21 00                  	mov byte ptr [rip + 0x21cbac], r15b
0x4783:     e9 70 f9 ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x4788:     44 88 3d 49 cb 21 00                  	mov byte ptr [rip + 0x21cb49], r15b
0x478f:     e9 64 f9 ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x4794:     c7 05 76 cb 21 00 01 00 00 00         	mov dword ptr [rip + 0x21cb76], 1
0x479e:     e9 55 f9 ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x47a3:     c7 05 8b cb 21 00 00 00 00 00         	mov dword ptr [rip + 0x21cb8b], 0
0x47ad:     c6 05 6c b8 21 00 00                  	mov byte ptr [rip + 0x21b86c], 0
0x47b4:     e9 3f f9 ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x47b9:     c7 05 75 cb 21 00 04 00 00 00         	mov dword ptr [rip + 0x21cb75], 4
0x47c3:     e9 30 f9 ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x47c8:     c7 05 66 cb 21 00 03 00 00 00         	mov dword ptr [rip + 0x21cb66], 3
0x47d2:     e9 21 f9 ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x47d7:     48 8b 3d c2 ba 21 00                  	mov rdi, qword ptr [rip + 0x21bac2]
0x47de:     e8 bd 14 00 00                        	call 0x5ca0 <function_5ca0>
0x47e3:     84 c0                                 	test al, al
0x47e5:     0f 85 0d f9 ff ff                     	jne 0x40f8 <function_3e90+0x268>
0x47eb:     48 8b 3d ae ba 21 00                  	mov rdi, qword ptr [rip + 0x21baae]
0x47f2:     e8 e9 f4 00 00                        	call 0x13ce0 <function_13ce0>
0x47f7:     48 8d 35 c7 35 01 00                  	lea rsi, [rip + 0x135c7]
0x47fe:     ba 05 00 00 00                        	mov edx, 5
0x4803:     31 ff                                 	xor edi, edi
0x4805:     48 89 c3                              	mov rbx, rax
0x4808:     e8 23 f1 ff ff                        	call 0x3930 <dcgettext>
0x480d:     48 8d 15 c4 35 01 00                  	lea rdx, [rip + 0x135c4]
0x4814:     48 89 c1                              	mov rcx, rax
0x4817:     49 89 d8                              	mov r8, rbx
0x481a:     31 f6                                 	xor esi, esi
0x481c:     bf 02 00 00 00                        	mov edi, 2
0x4821:     31 c0                                 	xor eax, eax
0x4823:     e8 f8 f4 ff ff                        	call 0x3d20 <error>
0x4828:     c7 05 fe ca 21 00 03 00 00 00         	mov dword ptr [rip + 0x21cafe], 3
0x4832:     c6 44 24 08 01                        	mov byte ptr [rsp + 8], 1
0x4837:     e9 bc f8 ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x483c:     c7 05 ee ca 21 00 02 00 00 00         	mov dword ptr [rip + 0x21caee], 2
0x4846:     e9 ad f8 ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x484b:     44 88 3d dc ca 21 00                  	mov byte ptr [rip + 0x21cadc], r15b
0x4852:     e9 a1 f8 ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x4857:     bf 01 00 00 00                        	mov edi, 1
0x485c:     e8 ef ef ff ff                        	call 0x3850 <isatty>
0x4861:     85 c0                                 	test eax, eax
0x4863:     0f 85 a8 0a 00 00                     	jne 0x5311 <function_3e90+0x1481>
0x4869:     c7 05 c5 ca 21 00 01 00 00 00         	mov dword ptr [rip + 0x21cac5], 1
0x4873:     e9 00 f7 ff ff                        	jmp 0x3f78 <function_3e90+0xe8>
0x4878:     bf 01 00 00 00                        	mov edi, 1
0x487d:     e8 ce ef ff ff                        	call 0x3850 <isatty>
0x4882:     85 c0                                 	test eax, eax
0x4884:     0f 84 85 fe ff ff                     	je 0x470f <function_3e90+0x87f>
0x488a:     44 88 3d 81 ca 21 00                  	mov byte ptr [rip + 0x21ca81], r15b
0x4891:     48 c7 05 24 ca 21 00 00 00 00 00      	mov qword ptr [rip + 0x21ca24], 0
0x489c:     e9 57 f8 ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x48a1:     b8 01 00 00 00                        	mov eax, 1
0x48a6:     88 05 65 ca 21 00                     	mov byte ptr [rip + 0x21ca65], al
0x48ac:     80 25 5e ca 21 00 01                  	and byte ptr [rip + 0x21ca5e], 1
0x48b3:     e9 40 f8 ff ff                        	jmp 0x40f8 <function_3e90+0x268>
0x48b8:     48 83 3d 60 ca 21 00 00               	cmp qword ptr [rip + 0x21ca60], 0
0x48c0:     0f 84 15 06 00 00                     	je 0x4edb <function_3e90+0x104b>
0x48c6:     48 8b 05 e3 c9 21 00                  	mov rax, qword ptr [rip + 0x21c9e3]
0x48cd:     b9 03 00 00 00                        	mov ecx, 3
0x48d2:     31 d2                                 	xor edx, edx
0x48d4:     48 f7 f1                              	div rcx
0x48d7:     48 85 d2                              	test rdx, rdx
0x48da:     0f 95 c2                              	setne dl
0x48dd:     31 ff                                 	xor edi, edi
0x48df:     0f b6 d2                              	movzx edx, dl
0x48e2:     48 01 d0                              	add rax, rdx
0x48e5:     48 89 05 14 c9 21 00                  	mov qword ptr [rip + 0x21c914], rax
0x48ec:     e8 9f ec 00 00                        	call 0x13590 <function_13590>
0x48f1:     8b 15 41 ca 21 00                     	mov edx, dword ptr [rip + 0x21ca41]
0x48f7:     41 89 c5                              	mov r13d, eax
0x48fa:     83 fa 04                              	cmp edx, 4
0x48fd:     0f 84 33 04 00 00                     	je 0x4d36 <function_3e90+0xea6>
0x4903:     83 fa 01                              	cmp edx, 1
0x4906:     0f 84 2a 04 00 00                     	je 0x4d36 <function_3e90+0xea6>
0x490c:     48 83 3d 9c c9 21 00 00               	cmp qword ptr [rip + 0x21c99c], 0
0x4914:     75 06                                 	jne 0x491c <function_3e90+0xa8c>
0x4916:     31 c0                                 	xor eax, eax
0x4918:     85 d2                                 	test edx, edx
0x491a:     75 18                                 	jne 0x4934 <function_3e90+0xaa4>
0x491c:     44 89 e8                              	mov eax, r13d
0x491f:     83 e0 fd                              	and eax, 0xfffffffd
0x4922:     83 e8 01                              	sub eax, 1
0x4925:     0f 94 c0                              	sete al
0x4928:     41 83 fd 06                           	cmp r13d, 6
0x492c:     0f 94 c2                              	sete dl
0x492f:     09 d0                                 	or eax, edx
0x4931:     0f b6 c0                              	movzx eax, al
0x4934:     31 ff                                 	xor edi, edi
0x4936:     88 05 6c ca 21 00                     	mov byte ptr [rip + 0x21ca6c], al
0x493c:     80 25 65 ca 21 00 01                  	and byte ptr [rip + 0x21ca65], 1
0x4943:     e8 08 ec 00 00                        	call 0x13550 <function_13550>
0x4948:     41 83 fd 07                           	cmp r13d, 7
0x494c:     48 89 05 7d c9 21 00                  	mov qword ptr [rip + 0x21c97d], rax
0x4953:     0f 84 a1 09 00 00                     	je 0x52fa <function_3e90+0x146a>
0x4959:     8b 05 b5 c9 21 00                     	mov eax, dword ptr [rip + 0x21c9b5]
0x495f:     83 f8 01                              	cmp eax, 1
0x4962:     76 3b                                 	jbe 0x499f <function_3e90+0xb0f>
0x4964:     48 8d 15 08 35 01 00                  	lea rdx, [rip + 0x13508]
0x496b:     83 e8 02                              	sub eax, 2
0x496e:     0f be 34 02                           	movsx esi, byte ptr [rdx + rax]
0x4972:     4c 8d 2c 10                           	lea r13, [rax + rdx]
0x4976:     40 84 f6                              	test sil, sil
0x4979:     74 24                                 	je 0x499f <function_3e90+0xb0f>
0x497b:     0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0x4980:     48 8b 3d 49 c9 21 00                  	mov rdi, qword ptr [rip + 0x21c949]
0x4987:     49 83 c5 01                           	add r13, 1
0x498b:     ba 01 00 00 00                        	mov edx, 1
0x4990:     e8 3b ec 00 00                        	call 0x135d0 <function_135d0>
0x4995:     41 0f be 75 00                        	movsx esi, byte ptr [r13]
0x499a:     40 84 f6                              	test sil, sil
0x499d:     75 e1                                 	jne 0x4980 <function_3e90+0xaf0>
0x499f:     31 ff                                 	xor edi, edi
0x49a1:     e8 aa eb 00 00                        	call 0x13550 <function_13550>
0x49a6:     ba 01 00 00 00                        	mov edx, 1
0x49ab:     be 3a 00 00 00                        	mov esi, 0x3a
0x49b0:     48 89 c7                              	mov rdi, rax
0x49b3:     48 89 05 0e c9 21 00                  	mov qword ptr [rip + 0x21c90e], rax
0x49ba:     e8 11 ec 00 00                        	call 0x135d0 <function_135d0>
0x49bf:     80 3d 52 c9 21 00 00                  	cmp byte ptr [rip + 0x21c952], 0
0x49c6:     74 14                                 	je 0x49dc <function_3e90+0xb4c>
0x49c8:     83 3d 69 c9 21 00 00                  	cmp dword ptr [rip + 0x21c969], 0
0x49cf:     0f 84 ab 04 00 00                     	je 0x4e80 <function_3e90+0xff0>
0x49d5:     c6 05 3c c9 21 00 00                  	mov byte ptr [rip + 0x21c93c], 0
0x49dc:     8b 05 52 c9 21 00                     	mov eax, dword ptr [rip + 0x21c952]
0x49e2:     8b 15 50 c9 21 00                     	mov edx, dword ptr [rip + 0x21c950]
0x49e8:     83 e8 01                              	sub eax, 1
0x49eb:     83 f8 01                              	cmp eax, 1
0x49ee:     77 0b                                 	ja 0x49fb <function_3e90+0xb6b>
0x49f0:     80 7c 24 08 00                        	cmp byte ptr [rsp + 8], 0
0x49f5:     0f 84 38 09 00 00                     	je 0x5333 <function_3e90+0x14a3>
0x49fb:     85 d2                                 	test edx, edx
0x49fd:     75 43                                 	jne 0x4a42 <function_3e90+0xbb2>
0x49ff:     4d 85 f6                              	test r14, r14
0x4a02:     0f 84 5f 09 00 00                     	je 0x5367 <function_3e90+0x14d7>
0x4a08:     4c 8d 2d c4 20 01 00                  	lea r13, [rip + 0x120c4]
0x4a0f:     eb 0b                                 	jmp 0x4a1c <function_3e90+0xb8c>
; data inside code section at 0x4a11 -- 0x4a18
0x4a11:     0f 1f 80 00 00 00 00                               |.......         |
0x4a18:     49 83 c6 06                           	add r14, 6
0x4a1c:     ba 06 00 00 00                        	mov edx, 6
0x4a21:     4c 89 ee                              	mov rsi, r13
0x4a24:     4c 89 f7                              	mov rdi, r14
0x4a27:     e8 d4 ed ff ff                        	call 0x3800 <strncmp>
0x4a2c:     85 c0                                 	test eax, eax
0x4a2e:     0f 85 0f 08 00 00                     	jne 0x5243 <function_3e90+0x13b3>
0x4a34:     bf 02 00 00 00                        	mov edi, 2
0x4a39:     e8 f2 8d 00 00                        	call 0xd830 <function_d830>
0x4a3e:     84 c0                                 	test al, al
0x4a40:     75 d6                                 	jne 0x4a18 <function_3e90+0xb88>
0x4a42:     80 3d c9 c8 21 00 00                  	cmp byte ptr [rip + 0x21c8c9], 0
0x4a49:     4c 63 2d 40 b8 21 00                  	movsxd r13, dword ptr [rip + 0x21b840]
0x4a50:     0f 85 6b 06 00 00                     	jne 0x50c1 <function_3e90+0x1231>
0x4a56:     83 3d 9b c8 21 00 01                  	cmp dword ptr [rip + 0x21c89b], 1
0x4a5d:     0f 84 47 04 00 00                     	je 0x4eaa <function_3e90+0x101a>
0x4a63:     80 3d 8c c8 21 00 00                  	cmp byte ptr [rip + 0x21c88c], 0
0x4a6a:     74 4f                                 	je 0x4abb <function_3e90+0xc2b>
0x4a6c:     4c 8d 05 3d 0f 00 00                  	lea r8, [rip + 0xf3d]
0x4a73:     48 8d 0d f6 0e 00 00                  	lea rcx, [rip + 0xef6]
0x4a7a:     48 8d 15 df 0e 00 00                  	lea rdx, [rip + 0xedf]
0x4a81:     31 f6                                 	xor esi, esi
0x4a83:     bf 1e 00 00 00                        	mov edi, 0x1e
0x4a88:     e8 73 96 00 00                        	call 0xe100 <function_e100>
0x4a8d:     48 85 c0                              	test rax, rax
0x4a90:     48 89 05 31 c9 21 00                  	mov qword ptr [rip + 0x21c931], rax
0x4a97:     0f 84 a9 0d 00 00                     	je 0x5846 <function_3e90+0x19b6>
0x4a9d:     4c 8b 05 24 b5 21 00                  	mov r8, qword ptr [rip + 0x21b524]
0x4aa4:     48 8b 0d 3d b5 21 00                  	mov rcx, qword ptr [rip + 0x21b53d]
0x4aab:     48 8d 3d 2e c6 21 00                  	lea rdi, [rip + 0x21c62e]
0x4ab2:     31 d2                                 	xor edx, edx
0x4ab4:     31 f6                                 	xor esi, esi
0x4ab6:     e8 f5 09 01 00                        	call 0x154b0 <_obstack_begin>
0x4abb:     48 8d 3d 7a 34 01 00                  	lea rdi, [rip + 0x1347a]
0x4ac2:     e8 d9 ec ff ff                        	call 0x37a0 <getenv>
0x4ac7:     48 89 c7                              	mov rdi, rax
0x4aca:     e8 b1 0c 01 00                        	call 0x15780 <function_15780>
0x4acf:     48 89 05 d2 c7 21 00                  	mov qword ptr [rip + 0x21c7d2], rax
0x4ad6:     8b 05 54 c8 21 00                     	mov eax, dword ptr [rip + 0x21c854]
0x4adc:     83 e8 02                              	sub eax, 2
0x4adf:     83 e0 fd                              	and eax, 0xfffffffd
0x4ae2:     74 0d                                 	je 0x4af1 <function_3e90+0xc61>
0x4ae4:     83 3d 4d c8 21 00 00                  	cmp dword ptr [rip + 0x21c84d], 0
0x4aeb:     0f 85 36 03 00 00                     	jne 0x4e27 <function_3e90+0xf97>
0x4af1:     c6 05 a9 c7 21 00 01                  	mov byte ptr [rip + 0x21c7a9], 1
0x4af8:     31 c0                                 	xor eax, eax
0x4afa:     88 05 a0 c7 21 00                     	mov byte ptr [rip + 0x21c7a0], al
0x4b00:     80 25 99 c7 21 00 01                  	and byte ptr [rip + 0x21c799], 1
0x4b07:     80 3d 0a c8 21 00 00                  	cmp byte ptr [rip + 0x21c80a], 0
0x4b0e:     0f 85 b0 04 00 00                     	jne 0x4fc4 <function_3e90+0x1134>
0x4b14:     80 3d f6 c7 21 00 00                  	cmp byte ptr [rip + 0x21c7f6], 0
0x4b1b:     0f 85 27 04 00 00                     	jne 0x4f48 <function_3e90+0x10b8>
0x4b21:     41 89 ee                              	mov r14d, ebp
0x4b24:     bf 20 4e 00 00                        	mov edi, 0x4e20
0x4b29:     48 c7 05 84 c8 21 00 64 00 00 00      	mov qword ptr [rip + 0x21c884], 0x64
0x4b34:     45 29 ee                              	sub r14d, r13d
0x4b37:     4c 8d 3d 0c 31 01 00                  	lea r15, [rip + 0x1310c]
0x4b3e:     e8 3d f9 00 00                        	call 0x14480 <function_14480>
0x4b43:     48 c7 05 62 c8 21 00 00 00 00 00      	mov qword ptr [rip + 0x21c862], 0
0x4b4e:     48 89 05 6b c8 21 00                  	mov qword ptr [rip + 0x21c86b], rax
0x4b55:     e8 86 15 00 00                        	call 0x60e0 <function_60e0>
0x4b5a:     45 85 f6                              	test r14d, r14d
0x4b5d:     0f 8e 1e 02 00 00                     	jle 0x4d81 <function_3e90+0xef1>
0x4b63:     0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0x4b68:     4a 8b 3c eb                           	mov rdi, qword ptr [rbx + r13*8]
0x4b6c:     31 f6                                 	xor esi, esi
0x4b6e:     4c 89 f9                              	mov rcx, r15
0x4b71:     ba 01 00 00 00                        	mov edx, 1
0x4b76:     49 83 c5 01                           	add r13, 1
0x4b7a:     e8 61 4e 00 00                        	call 0x99e0 <function_99e0>
0x4b7f:     44 39 ed                              	cmp ebp, r13d
0x4b82:     7f e4                                 	jg 0x4b68 <function_3e90+0xcd8>
0x4b84:     48 83 3d 24 c8 21 00 00               	cmp qword ptr [rip + 0x21c824], 0
0x4b8c:     0f 85 71 04 00 00                     	jne 0x5003 <function_3e90+0x1173>
0x4b92:     41 83 ee 01                           	sub r14d, 1
0x4b96:     48 8b 1d e3 c7 21 00                  	mov rbx, qword ptr [rip + 0x21c7e3]
0x4b9d:     7f 3d                                 	jg 0x4bdc <function_3e90+0xd4c>
0x4b9f:     e9 7f 06 00 00                        	jmp 0x5223 <function_3e90+0x1393>
; data inside code section at 0x4ba4 -- 0x4ba8
0x4ba4:     0f 1f 40 00                                        |..@.            |
0x4ba8:     0f b6 53 10                           	movzx edx, byte ptr [rbx + 0x10]
0x4bac:     48 8b 73 08                           	mov rsi, qword ptr [rbx + 8]
0x4bb0:     e8 ab 5c 00 00                        	call 0xa860 <function_a860>
0x4bb5:     48 8b 3b                              	mov rdi, qword ptr [rbx]
0x4bb8:     e8 b3 f2 ff ff                        	call 0x3e70 <free>
0x4bbd:     48 8b 7b 08                           	mov rdi, qword ptr [rbx + 8]
0x4bc1:     e8 aa f2 ff ff                        	call 0x3e70 <free>
0x4bc6:     48 89 df                              	mov rdi, rbx
0x4bc9:     e8 a2 f2 ff ff                        	call 0x3e70 <free>
0x4bce:     c6 05 e3 c6 21 00 01                  	mov byte ptr [rip + 0x21c6e3], 1
0x4bd5:     48 8b 1d a4 c7 21 00                  	mov rbx, qword ptr [rip + 0x21c7a4]
0x4bdc:     48 85 db                              	test rbx, rbx
0x4bdf:     0f 84 91 00 00 00                     	je 0x4c76 <function_3e90+0xde6>
0x4be5:     48 8b 43 18                           	mov rax, qword ptr [rbx + 0x18]
0x4be9:     48 8b 3b                              	mov rdi, qword ptr [rbx]
0x4bec:     48 89 05 8d c7 21 00                  	mov qword ptr [rip + 0x21c78d], rax
0x4bf3:     48 8b 05 ce c7 21 00                  	mov rax, qword ptr [rip + 0x21c7ce]
0x4bfa:     48 85 c0                              	test rax, rax
0x4bfd:     74 a9                                 	je 0x4ba8 <function_3e90+0xd18>
0x4bff:     48 85 ff                              	test rdi, rdi
0x4c02:     75 a4                                 	jne 0x4ba8 <function_3e90+0xd18>
0x4c04:     48 8b 15 ed c4 21 00                  	mov rdx, qword ptr [rip + 0x21c4ed]
0x4c0b:     48 89 d1                              	mov rcx, rdx
0x4c0e:     48 2b 0d db c4 21 00                  	sub rcx, qword ptr [rip + 0x21c4db]
0x4c15:     48 83 f9 0f                           	cmp rcx, 0xf
0x4c19:     0f 86 c5 0b 00 00                     	jbe 0x57e4 <function_3e90+0x1954>
0x4c1f:     48 8d 4a f0                           	lea rcx, [rdx - 0x10]
0x4c23:     4c 89 e6                              	mov rsi, r12
0x4c26:     48 89 c7                              	mov rdi, rax
0x4c29:     48 89 0d c8 c4 21 00                  	mov qword ptr [rip + 0x21c4c8], rcx
0x4c30:     48 8b 4a f0                           	mov rcx, qword ptr [rdx - 0x10]
0x4c34:     48 8b 52 f8                           	mov rdx, qword ptr [rdx - 8]
0x4c38:     48 89 4c 24 30                        	mov qword ptr [rsp + 0x30], rcx
0x4c3d:     48 89 54 24 38                        	mov qword ptr [rsp + 0x38], rdx
0x4c42:     e8 19 9d 00 00                        	call 0xe960 <function_e960>
0x4c47:     48 85 c0                              	test rax, rax
0x4c4a:     0f 84 b3 0b 00 00                     	je 0x5803 <function_3e90+0x1973>
0x4c50:     48 89 c7                              	mov rdi, rax
0x4c53:     e8 18 f2 ff ff                        	call 0x3e70 <free>
0x4c58:     48 8b 3b                              	mov rdi, qword ptr [rbx]
0x4c5b:     e8 10 f2 ff ff                        	call 0x3e70 <free>
0x4c60:     48 8b 7b 08                           	mov rdi, qword ptr [rbx + 8]
0x4c64:     e8 07 f2 ff ff                        	call 0x3e70 <free>
0x4c69:     48 89 df                              	mov rdi, rbx
0x4c6c:     e8 ff f1 ff ff                        	call 0x3e70 <free>
0x4c71:     e9 5f ff ff ff                        	jmp 0x4bd5 <function_3e90+0xd45>
0x4c76:     80 3d 95 c6 21 00 00                  	cmp byte ptr [rip + 0x21c695], 0
0x4c7d:     74 0d                                 	je 0x4c8c <function_3e90+0xdfc>
0x4c7f:     80 3d 8a c6 21 00 00                  	cmp byte ptr [rip + 0x21c68a], 0
0x4c86:     0f 85 20 01 00 00                     	jne 0x4dac <function_3e90+0xf1c>
0x4c8c:     80 3d 85 c6 21 00 00                  	cmp byte ptr [rip + 0x21c685], 0
0x4c93:     0f 85 d1 03 00 00                     	jne 0x506a <function_3e90+0x11da>
0x4c99:     48 8b 1d 28 c7 21 00                  	mov rbx, qword ptr [rip + 0x21c728]
0x4ca0:     48 85 db                              	test rbx, rbx
0x4ca3:     74 19                                 	je 0x4cbe <function_3e90+0xe2e>
0x4ca5:     48 89 df                              	mov rdi, rbx
0x4ca8:     e8 d3 8f 00 00                        	call 0xdc80 <function_dc80>
0x4cad:     48 85 c0                              	test rax, rax
0x4cb0:     0f 85 6c 0b 00 00                     	jne 0x5822 <function_3e90+0x1992>
0x4cb6:     48 89 df                              	mov rdi, rbx
0x4cb9:     e8 92 96 00 00                        	call 0xe350 <function_e350>
0x4cbe:     48 8b 74 24 48                        	mov rsi, qword ptr [rsp + 0x48]
0x4cc3:     64 48 33 34 25 28 00 00 00            	xor rsi, qword ptr fs:[0x28]
0x4ccc:     8b 05 3e c5 21 00                     	mov eax, dword ptr [rip + 0x21c53e]
0x4cd2:     0f 85 69 0b 00 00                     	jne 0x5841 <function_3e90+0x19b1>
0x4cd8:     48 83 c4 58                           	add rsp, 0x58
0x4cdc:     5b                                    	pop rbx
0x4cdd:     5d                                    	pop rbp
0x4cde:     41 5c                                 	pop r12
0x4ce0:     41 5d                                 	pop r13
0x4ce2:     41 5e                                 	pop r14
0x4ce4:     41 5f                                 	pop r15
0x4ce6:     c3                                    	ret 
0x4ce7:     be 07 00 00 00                        	mov esi, 7
0x4cec:     31 ff                                 	xor edi, edi
0x4cee:     c7 05 40 c6 21 00 02 00 00 00         	mov dword ptr [rip + 0x21c640], 2
0x4cf8:     e8 b3 e8 00 00                        	call 0x135b0 <function_135b0>
0x4cfd:     e9 76 f2 ff ff                        	jmp 0x3f78 <function_3e90+0xe8>
0x4d02:     4c 89 e7                              	mov rdi, r12
0x4d05:     e8 d6 ef 00 00                        	call 0x13ce0 <function_13ce0>
0x4d0a:     48 8d 35 6f 53 01 00                  	lea rsi, [rip + 0x1536f]
0x4d11:     49 89 c4                              	mov r12, rax
0x4d14:     31 ff                                 	xor edi, edi
0x4d16:     ba 05 00 00 00                        	mov edx, 5
0x4d1b:     e8 10 ec ff ff                        	call 0x3930 <dcgettext>
0x4d20:     4c 89 e1                              	mov rcx, r12
0x4d23:     48 89 c2                              	mov rdx, rax
0x4d26:     31 f6                                 	xor esi, esi
0x4d28:     31 ff                                 	xor edi, edi
0x4d2a:     31 c0                                 	xor eax, eax
0x4d2c:     e8 ef ef ff ff                        	call 0x3d20 <error>
0x4d31:     e9 05 f3 ff ff                        	jmp 0x403b <function_3e90+0x1ab>
0x4d36:     31 c0                                 	xor eax, eax
0x4d38:     e9 f7 fb ff ff                        	jmp 0x4934 <function_3e90+0xaa4>
0x4d3d:     48 89 c7                              	mov rdi, rax
0x4d40:     e8 5b 0f 00 00                        	call 0x5ca0 <function_5ca0>
0x4d45:     84 c0                                 	test al, al
0x4d47:     0f 85 16 f3 ff ff                     	jne 0x4063 <function_3e90+0x1d3>
0x4d4d:     4c 89 e7                              	mov rdi, r12
0x4d50:     e8 8b ef 00 00                        	call 0x13ce0 <function_13ce0>
0x4d55:     48 8d 35 6c 53 01 00                  	lea rsi, [rip + 0x1536c]
0x4d5c:     49 89 c4                              	mov r12, rax
0x4d5f:     31 ff                                 	xor edi, edi
0x4d61:     ba 05 00 00 00                        	mov edx, 5
0x4d66:     e8 c5 eb ff ff                        	call 0x3930 <dcgettext>
0x4d6b:     4c 89 e1                              	mov rcx, r12
0x4d6e:     48 89 c2                              	mov rdx, rax
0x4d71:     31 f6                                 	xor esi, esi
0x4d73:     31 ff                                 	xor edi, edi
0x4d75:     31 c0                                 	xor eax, eax
0x4d77:     e8 a4 ef ff ff                        	call 0x3d20 <error>
0x4d7c:     e9 e2 f2 ff ff                        	jmp 0x4063 <function_3e90+0x1d3>
0x4d81:     80 3d 6d c5 21 00 00                  	cmp byte ptr [rip + 0x21c56d], 0
0x4d88:     0f 84 04 01 00 00                     	je 0x4e92 <function_3e90+0x1002>
0x4d8e:     48 8d 3d a8 55 01 00                  	lea rdi, [rip + 0x155a8]
0x4d95:     4c 89 f9                              	mov rcx, r15
0x4d98:     ba 01 00 00 00                        	mov edx, 1
0x4d9d:     be 03 00 00 00                        	mov esi, 3
0x4da2:     e8 39 4c 00 00                        	call 0x99e0 <function_99e0>
0x4da7:     e9 d8 fd ff ff                        	jmp 0x4b84 <function_3e90+0xcf4>
0x4dac:     48 83 3d ac b2 21 00 02               	cmp qword ptr [rip + 0x21b2ac], 2
0x4db4:     75 12                                 	jne 0x4dc8 <function_3e90+0xf38>
0x4db6:     48 8b 05 ab b2 21 00                  	mov rax, qword ptr [rip + 0x21b2ab]
0x4dbd:     66 81 38 1b 5b                        	cmp word ptr [rax], 0x5b1b
0x4dc2:     0f 84 8d 07 00 00                     	je 0x5555 <function_3e90+0x16c5>
0x4dc8:     48 8d 3d 91 b2 21 00                  	lea rdi, [rip + 0x21b291]
0x4dcf:     e8 1c 25 00 00                        	call 0x72f0 <function_72f0>
0x4dd4:     48 8d 3d 95 b2 21 00                  	lea rdi, [rip + 0x21b295]
0x4ddb:     e8 10 25 00 00                        	call 0x72f0 <function_72f0>
0x4de0:     48 8b 3d a1 b4 21 00                  	mov rdi, qword ptr [rip + 0x21b4a1]
0x4de7:     e8 14 f0 ff ff                        	call 0x3e00 <fflush_unlocked>
0x4dec:     31 ff                                 	xor edi, edi
0x4dee:     e8 dd 22 00 00                        	call 0x70d0 <function_70d0>
0x4df3:     8b 1d 1b c4 21 00                     	mov ebx, dword ptr [rip + 0x21c41b]
0x4df9:     85 db                                 	test ebx, ebx
0x4dfb:     74 12                                 	je 0x4e0f <function_3e90+0xf7f>
0x4dfd:     0f 1f 00                              	nop dword ptr [rax]
0x4e00:     bf 13 00 00 00                        	mov edi, 0x13
0x4e05:     e8 c6 e9 ff ff                        	call 0x37d0 <raise>
0x4e0a:     83 eb 01                              	sub ebx, 1
0x4e0d:     75 f1                                 	jne 0x4e00 <function_3e90+0xf70>
0x4e0f:     8b 3d 03 c4 21 00                     	mov edi, dword ptr [rip + 0x21c403]
0x4e15:     85 ff                                 	test edi, edi
0x4e17:     0f 84 6f fe ff ff                     	je 0x4c8c <function_3e90+0xdfc>
0x4e1d:     e8 ae e9 ff ff                        	call 0x37d0 <raise>
0x4e22:     e9 65 fe ff ff                        	jmp 0x4c8c <function_3e90+0xdfc>
0x4e27:     80 3d 37 c5 21 00 00                  	cmp byte ptr [rip + 0x21c537], 0
0x4e2e:     0f 85 bd fc ff ff                     	jne 0x4af1 <function_3e90+0xc61>
0x4e34:     80 3d f1 c4 21 00 00                  	cmp byte ptr [rip + 0x21c4f1], 0
0x4e3b:     0f 85 b0 fc ff ff                     	jne 0x4af1 <function_3e90+0xc61>
0x4e41:     80 3d ae c4 21 00 00                  	cmp byte ptr [rip + 0x21c4ae], 0
0x4e48:     c6 05 52 c4 21 00 00                  	mov byte ptr [rip + 0x21c452], 0
0x4e4f:     b8 01 00 00 00                        	mov eax, 1
0x4e54:     0f 85 a0 fc ff ff                     	jne 0x4afa <function_3e90+0xc6a>
0x4e5a:     80 3d b1 c4 21 00 00                  	cmp byte ptr [rip + 0x21c4b1], 0
0x4e61:     0f 85 93 fc ff ff                     	jne 0x4afa <function_3e90+0xc6a>
0x4e67:     83 3d a6 c4 21 00 00                  	cmp dword ptr [rip + 0x21c4a6], 0
0x4e6e:     0f 85 86 fc ff ff                     	jne 0x4afa <function_3e90+0xc6a>
0x4e74:     0f b6 05 79 c4 21 00                  	movzx eax, byte ptr [rip + 0x21c479]
0x4e7b:     e9 7a fc ff ff                        	jmp 0x4afa <function_3e90+0xc6a>
0x4e80:     80 3d 8a c4 21 00 00                  	cmp byte ptr [rip + 0x21c48a], 0
0x4e87:     0f 84 72 fb ff ff                     	je 0x49ff <function_3e90+0xb6f>
0x4e8d:     e9 43 fb ff ff                        	jmp 0x49d5 <function_3e90+0xb45>
0x4e92:     48 8d 3d a4 54 01 00                  	lea rdi, [rip + 0x154a4]
0x4e99:     ba 01 00 00 00                        	mov edx, 1
0x4e9e:     31 f6                                 	xor esi, esi
0x4ea0:     e8 db 10 00 00                        	call 0x5f80 <function_5f80>
0x4ea5:     e9 da fc ff ff                        	jmp 0x4b84 <function_3e90+0xcf4>
0x4eaa:     80 3d 44 c4 21 00 00                  	cmp byte ptr [rip + 0x21c444], 0
0x4eb1:     b8 02 00 00 00                        	mov eax, 2
0x4eb6:     75 18                                 	jne 0x4ed0 <function_3e90+0x1040>
0x4eb8:     83 3d 55 c4 21 00 03                  	cmp dword ptr [rip + 0x21c455], 3
0x4ebf:     74 0f                                 	je 0x4ed0 <function_3e90+0x1040>
0x4ec1:     83 3d 70 c4 21 00 01                  	cmp dword ptr [rip + 0x21c470], 1
0x4ec8:     19 c0                                 	sbb eax, eax
0x4eca:     83 e0 fe                              	and eax, 0xfffffffe
0x4ecd:     83 c0 04                              	add eax, 4
0x4ed0:     89 05 22 c4 21 00                     	mov dword ptr [rip + 0x21c422], eax
0x4ed6:     e9 88 fb ff ff                        	jmp 0x4a63 <function_3e90+0xbd3>
0x4edb:     48 8d 3d 83 2f 01 00                  	lea rdi, [rip + 0x12f83]
0x4ee2:     e8 b9 e8 ff ff                        	call 0x37a0 <getenv>
0x4ee7:     48 8d 15 32 c4 21 00                  	lea rdx, [rip + 0x21c432]
0x4eee:     48 8d 35 33 c4 21 00                  	lea rsi, [rip + 0x21c433]
0x4ef5:     49 89 c5                              	mov r13, rax
0x4ef8:     48 89 c7                              	mov rdi, rax
0x4efb:     e8 20 a8 00 00                        	call 0xf720 <function_f720>
0x4f00:     4d 85 ed                              	test r13, r13
0x4f03:     0f 84 0e 08 00 00                     	je 0x5717 <function_3e90+0x1887>
0x4f09:     8b 05 19 c4 21 00                     	mov eax, dword ptr [rip + 0x21c419]
0x4f0f:     89 05 07 c4 21 00                     	mov dword ptr [rip + 0x21c407], eax
0x4f15:     48 8b 05 04 c4 21 00                  	mov rax, qword ptr [rip + 0x21c404]
0x4f1c:     48 89 05 f5 b0 21 00                  	mov qword ptr [rip + 0x21b0f5], rax
0x4f23:     80 7c 24 10 00                        	cmp byte ptr [rsp + 0x10], 0
0x4f28:     0f 84 98 f9 ff ff                     	je 0x48c6 <function_3e90+0xa36>
0x4f2e:     c7 05 f0 c3 21 00 00 00 00 00         	mov dword ptr [rip + 0x21c3f0], 0
0x4f38:     48 c7 05 dd c3 21 00 00 04 00 00      	mov qword ptr [rip + 0x21c3dd], 0x400
0x4f43:     e9 7e f9 ff ff                        	jmp 0x48c6 <function_3e90+0xa36>
0x4f48:     48 8d 15 91 c0 21 00                  	lea rdx, [rip + 0x21c091]
0x4f4f:     31 c0                                 	xor eax, eax
0x4f51:     eb 35                                 	jmp 0x4f88 <function_3e90+0x10f8>
; data inside code section at 0x4f53 -- 0x4f58
0x4f53:     0f 1f 44 00 00                                     |..D..           |
0x4f58:     83 f8 41                              	cmp eax, 0x41
0x4f5b:     7d 38                                 	jge 0x4f95 <function_3e90+0x1105>
0x4f5d:     8d 48 d0                              	lea ecx, [rax - 0x30]
0x4f60:     83 f9 09                              	cmp ecx, 9
0x4f63:     76 30                                 	jbe 0x4f95 <function_3e90+0x1105>
0x4f65:     8d 48 d3                              	lea ecx, [rax - 0x2d]
0x4f68:     83 f9 01                              	cmp ecx, 1
0x4f6b:     76 28                                 	jbe 0x4f95 <function_3e90+0x1105>
0x4f6d:     83 f8 7e                              	cmp eax, 0x7e
0x4f70:     74 23                                 	je 0x4f95 <function_3e90+0x1105>
0x4f72:     83 f8 5f                              	cmp eax, 0x5f
0x4f75:     0f 94 c1                              	sete cl
0x4f78:     83 c0 01                              	add eax, 1
0x4f7b:     08 0a                                 	or byte ptr [rdx], cl
0x4f7d:     48 83 c2 01                           	add rdx, 1
0x4f81:     3d 00 01 00 00                        	cmp eax, 0x100
0x4f86:     74 22                                 	je 0x4faa <function_3e90+0x111a>
0x4f88:     83 f8 5a                              	cmp eax, 0x5a
0x4f8b:     7e cb                                 	jle 0x4f58 <function_3e90+0x10c8>
0x4f8d:     8d 48 9f                              	lea ecx, [rax - 0x61]
0x4f90:     83 f9 19                              	cmp ecx, 0x19
0x4f93:     77 d0                                 	ja 0x4f65 <function_3e90+0x10d5>
0x4f95:     83 c0 01                              	add eax, 1
0x4f98:     b9 01 00 00 00                        	mov ecx, 1
0x4f9d:     08 0a                                 	or byte ptr [rdx], cl
0x4f9f:     48 83 c2 01                           	add rdx, 1
0x4fa3:     3d 00 01 00 00                        	cmp eax, 0x100
0x4fa8:     75 de                                 	jne 0x4f88 <function_3e90+0x10f8>
0x4faa:     e8 c1 f8 00 00                        	call 0x14870 <function_14870>
0x4faf:     48 85 c0                              	test rax, rax
0x4fb2:     0f 84 a3 03 00 00                     	je 0x535b <function_3e90+0x14cb>
0x4fb8:     48 89 05 c9 c3 21 00                  	mov qword ptr [rip + 0x21c3c9], rax
0x4fbf:     e9 5d fb ff ff                        	jmp 0x4b21 <function_3e90+0xc91>
0x4fc4:     4c 8b 3d fd af 21 00                  	mov r15, qword ptr [rip + 0x21affd]
0x4fcb:     4c 8b 35 16 b0 21 00                  	mov r14, qword ptr [rip + 0x21b016]
0x4fd2:     48 8d 3d c7 c1 21 00                  	lea rdi, [rip + 0x21c1c7]
0x4fd9:     31 d2                                 	xor edx, edx
0x4fdb:     31 f6                                 	xor esi, esi
0x4fdd:     4d 89 f8                              	mov r8, r15
0x4fe0:     4c 89 f1                              	mov rcx, r14
0x4fe3:     e8 c8 04 01 00                        	call 0x154b0 <_obstack_begin>
0x4fe8:     48 8d 3d 51 c1 21 00                  	lea rdi, [rip + 0x21c151]
0x4fef:     4d 89 f8                              	mov r8, r15
0x4ff2:     4c 89 f1                              	mov rcx, r14
0x4ff5:     31 d2                                 	xor edx, edx
0x4ff7:     31 f6                                 	xor esi, esi
0x4ff9:     e8 b2 04 01 00                        	call 0x154b0 <_obstack_begin>
0x4ffe:     e9 11 fb ff ff                        	jmp 0x4b14 <function_3e90+0xc84>
0x5003:     e8 e8 12 00 00                        	call 0x62f0 <function_62f0>
0x5008:     80 3d e6 c2 21 00 00                  	cmp byte ptr [rip + 0x21c2e6], 0
0x500f:     0f 84 35 03 00 00                     	je 0x534a <function_3e90+0x14ba>
0x5015:     48 83 3d 93 c3 21 00 00               	cmp qword ptr [rip + 0x21c393], 0
0x501d:     0f 84 6f fb ff ff                     	je 0x4b92 <function_3e90+0xd02>
0x5023:     e8 f8 43 00 00                        	call 0x9420 <function_9420>
0x5028:     48 83 3d 50 c3 21 00 00               	cmp qword ptr [rip + 0x21c350], 0
0x5030:     0f 84 40 fc ff ff                     	je 0x4c76 <function_3e90+0xde6>
0x5036:     48 8b 3d 4b b2 21 00                  	mov rdi, qword ptr [rip + 0x21b24b]
0x503d:     48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0x5041:     48 39 47 30                           	cmp qword ptr [rdi + 0x30], rax
0x5045:     0f 86 21 07 00 00                     	jbe 0x576c <function_3e90+0x18dc>
0x504b:     48 8d 50 01                           	lea rdx, [rax + 1]
0x504f:     48 89 57 28                           	mov qword ptr [rdi + 0x28], rdx
0x5053:     c6 00 0a                              	mov byte ptr [rax], 0xa
0x5056:     48 83 05 9a c1 21 00 01               	add qword ptr [rip + 0x21c19a], 1
0x505e:     48 8b 1d 1b c3 21 00                  	mov rbx, qword ptr [rip + 0x21c31b]
0x5065:     e9 72 fb ff ff                        	jmp 0x4bdc <function_3e90+0xd4c>
0x506a:     48 8d 35 2f c1 21 00                  	lea rsi, [rip + 0x21c12f]
0x5071:     48 8d 3d cd 2e 01 00                  	lea rdi, [rip + 0x12ecd]
0x5078:     e8 33 17 00 00                        	call 0x67b0 <function_67b0>
0x507d:     48 8d 35 bc c0 21 00                  	lea rsi, [rip + 0x21c0bc]
0x5084:     48 8d 3d c4 2e 01 00                  	lea rdi, [rip + 0x12ec4]
0x508b:     e8 20 17 00 00                        	call 0x67b0 <function_67b0>
0x5090:     48 8b 3d 39 c2 21 00                  	mov rdi, qword ptr [rip + 0x21c239]
0x5097:     e8 f4 e4 00 00                        	call 0x13590 <function_13590>
0x509c:     48 8d 15 3d a9 21 00                  	lea rdx, [rip + 0x21a93d]
0x50a3:     89 c0                                 	mov eax, eax
0x50a5:     48 8d 35 3c 51 01 00                  	lea rsi, [rip + 0x1513c]
0x50ac:     bf 01 00 00 00                        	mov edi, 1
0x50b1:     48 8b 14 c2                           	mov rdx, qword ptr [rdx + rax*8]
0x50b5:     31 c0                                 	xor eax, eax
0x50b7:     e8 14 ec ff ff                        	call 0x3cd0 <__printf_chk>
0x50bc:     e9 d8 fb ff ff                        	jmp 0x4c99 <function_3e90+0xe09>
0x50c1:     48 8d 3d 3b 2e 01 00                  	lea rdi, [rip + 0x12e3b]
0x50c8:     e8 d3 e6 ff ff                        	call 0x37a0 <getenv>
0x50cd:     48 85 c0                              	test rax, rax
0x50d0:     48 89 44 24 28                        	mov qword ptr [rsp + 0x28], rax
0x50d5:     74 09                                 	je 0x50e0 <function_3e90+0x1250>
0x50d7:     80 38 00                              	cmp byte ptr [rax], 0
0x50da:     0f 85 fa 02 00 00                     	jne 0x53da <function_3e90+0x154a>
0x50e0:     48 8d 3d 26 2e 01 00                  	lea rdi, [rip + 0x12e26]
0x50e7:     e8 b4 e6 ff ff                        	call 0x37a0 <getenv>
0x50ec:     48 85 c0                              	test rax, rax
0x50ef:     74 09                                 	je 0x50fa <function_3e90+0x126a>
0x50f1:     80 38 00                              	cmp byte ptr [rax], 0
0x50f4:     0f 85 98 00 00 00                     	jne 0x5192 <function_3e90+0x1302>
0x50fa:     48 8d 3d 11 2e 01 00                  	lea rdi, [rip + 0x12e11]
0x5101:     e8 9a e6 ff ff                        	call 0x37a0 <getenv>
0x5106:     48 85 c0                              	test rax, rax
0x5109:     48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x510e:     74 7b                                 	je 0x518b <function_3e90+0x12fb>
0x5110:     48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x5115:     80 38 00                              	cmp byte ptr [rax], 0
0x5118:     74 71                                 	je 0x518b <function_3e90+0x12fb>
0x511a:     4c 8d 35 7f 1a 01 00                  	lea r14, [rip + 0x11a7f]
0x5121:     4c 89 e0                              	mov rax, r12
0x5124:     49 89 dc                              	mov r12, rbx
0x5127:     49 89 c7                              	mov r15, rax
0x512a:     4c 89 f3                              	mov rbx, r14
0x512d:     eb 14                                 	jmp 0x5143 <function_3e90+0x12b3>
0x512f:     31 c0                                 	xor eax, eax
0x5131:     48 89 df                              	mov rdi, rbx
0x5134:     48 83 c9 ff                           	or rcx, 0xffffffffffffffff
0x5138:     f2 ae                                 	repne scasb al, byte ptr [rdi]
0x513a:     48 89 c8                              	mov rax, rcx
0x513d:     48 f7 d0                              	not rax
0x5140:     48 01 c3                              	add rbx, rax
0x5143:     48 89 d8                              	mov rax, rbx
0x5146:     4c 29 f0                              	sub rax, r14
0x5149:     48 3d 4c 10 00 00                     	cmp rax, 0x104c
0x514f:     77 34                                 	ja 0x5185 <function_3e90+0x12f5>
0x5151:     48 8d 35 bf 2d 01 00                  	lea rsi, [rip + 0x12dbf]
0x5158:     ba 05 00 00 00                        	mov edx, 5
0x515d:     48 89 df                              	mov rdi, rbx
0x5160:     e8 9b e6 ff ff                        	call 0x3800 <strncmp>
0x5165:     85 c0                                 	test eax, eax
0x5167:     75 c6                                 	jne 0x512f <function_3e90+0x129f>
0x5169:     48 8b 74 24 08                        	mov rsi, qword ptr [rsp + 8]
0x516e:     48 8d 7b 05                           	lea rdi, [rbx + 5]
0x5172:     31 d2                                 	xor edx, edx
0x5174:     e8 d7 e8 ff ff                        	call 0x3a50 <fnmatch>
0x5179:     85 c0                                 	test eax, eax
0x517b:     75 b2                                 	jne 0x512f <function_3e90+0x129f>
0x517d:     4c 89 e3                              	mov rbx, r12
0x5180:     4d 89 fc                              	mov r12, r15
0x5183:     eb 0d                                 	jmp 0x5192 <function_3e90+0x1302>
0x5185:     4c 89 e3                              	mov rbx, r12
0x5188:     4d 89 fc                              	mov r12, r15
0x518b:     c6 05 80 c1 21 00 00                  	mov byte ptr [rip + 0x21c180], 0
0x5192:     80 3d 79 c1 21 00 00                  	cmp byte ptr [rip + 0x21c179], 0
0x5199:     0f 84 b7 f8 ff ff                     	je 0x4a56 <function_3e90+0xbc6>
0x519f:     bf 0d 00 00 00                        	mov edi, 0xd
0x51a4:     e8 a7 0a 00 00                        	call 0x5c50 <function_5c50>
0x51a9:     84 c0                                 	test al, al
0x51ab:     75 36                                 	jne 0x51e3 <function_3e90+0x1353>
0x51ad:     bf 0e 00 00 00                        	mov edi, 0xe
0x51b2:     e8 99 0a 00 00                        	call 0x5c50 <function_5c50>
0x51b7:     84 c0                                 	test al, al
0x51b9:     74 09                                 	je 0x51c4 <function_3e90+0x1334>
0x51bb:     80 3d ce c1 21 00 00                  	cmp byte ptr [rip + 0x21c1ce], 0
0x51c2:     75 1f                                 	jne 0x51e3 <function_3e90+0x1353>
0x51c4:     bf 0c 00 00 00                        	mov edi, 0xc
0x51c9:     e8 82 0a 00 00                        	call 0x5c50 <function_5c50>
0x51ce:     84 c0                                 	test al, al
0x51d0:     0f 84 80 f8 ff ff                     	je 0x4a56 <function_3e90+0xbc6>
0x51d6:     83 3d 5b c1 21 00 00                  	cmp dword ptr [rip + 0x21c15b], 0
0x51dd:     0f 85 73 f8 ff ff                     	jne 0x4a56 <function_3e90+0xbc6>
0x51e3:     c6 05 13 c1 21 00 01                  	mov byte ptr [rip + 0x21c113], 1
0x51ea:     e9 67 f8 ff ff                        	jmp 0x4a56 <function_3e90+0xbc6>
0x51ef:     4c 89 ef                              	mov rdi, r13
0x51f2:     e8 e9 ea 00 00                        	call 0x13ce0 <function_13ce0>
0x51f7:     48 8d 35 0a 4f 01 00                  	lea rsi, [rip + 0x14f0a]
0x51fe:     49 89 c5                              	mov r13, rax
0x5201:     31 ff                                 	xor edi, edi
0x5203:     ba 05 00 00 00                        	mov edx, 5
0x5208:     e8 23 e7 ff ff                        	call 0x3930 <dcgettext>
0x520d:     4c 89 e9                              	mov rcx, r13
0x5210:     48 89 c2                              	mov rdx, rax
0x5213:     31 f6                                 	xor esi, esi
0x5215:     31 ff                                 	xor edi, edi
0x5217:     31 c0                                 	xor eax, eax
0x5219:     e8 02 eb ff ff                        	call 0x3d20 <error>
0x521e:     e9 b4 ee ff ff                        	jmp 0x40d7 <function_3e90+0x247>
0x5223:     48 85 db                              	test rbx, rbx
0x5226:     0f 84 4a fa ff ff                     	je 0x4c76 <function_3e90+0xde6>
0x522c:     48 83 7b 18 00                        	cmp qword ptr [rbx + 0x18], 0
0x5231:     0f 85 a5 f9 ff ff                     	jne 0x4bdc <function_3e90+0xd4c>
0x5237:     c6 05 7a c0 21 00 00                  	mov byte ptr [rip + 0x21c07a], 0
0x523e:     e9 99 f9 ff ff                        	jmp 0x4bdc <function_3e90+0xd4c>
0x5243:     41 80 3e 2b                           	cmp byte ptr [r14], 0x2b
0x5247:     0f 84 3e 01 00 00                     	je 0x538b <function_3e90+0x14fb>
0x524d:     48 8d 15 2c 19 01 00                  	lea rdx, [rip + 0x1192c]
0x5254:     48 8d 35 25 a7 21 00                  	lea rsi, [rip + 0x21a725]
0x525b:     b9 04 00 00 00                        	mov ecx, 4
0x5260:     4c 89 f7                              	mov rdi, r14
0x5263:     e8 58 70 00 00                        	call 0xc2c0 <function_c2c0>
0x5268:     48 85 c0                              	test rax, rax
0x526b:     0f 88 95 03 00 00                     	js 0x5606 <function_3e90+0x1776>
0x5271:     48 83 f8 01                           	cmp rax, 1
0x5275:     0f 84 b6 04 00 00                     	je 0x5731 <function_3e90+0x18a1>
0x527b:     0f 8e f7 02 00 00                     	jle 0x5578 <function_3e90+0x16e8>
0x5281:     48 83 f8 02                           	cmp rax, 2
0x5285:     0f 84 c0 04 00 00                     	je 0x574b <function_3e90+0x18bb>
0x528b:     48 83 f8 03                           	cmp rax, 3
0x528f:     75 42                                 	jne 0x52d3 <function_3e90+0x1443>
0x5291:     bf 02 00 00 00                        	mov edi, 2
0x5296:     e8 95 85 00 00                        	call 0xd830 <function_d830>
0x529b:     84 c0                                 	test al, al
0x529d:     74 34                                 	je 0x52d3 <function_3e90+0x1443>
0x529f:     48 8b 35 9a ad 21 00                  	mov rsi, qword ptr [rip + 0x21ad9a]
0x52a6:     ba 02 00 00 00                        	mov edx, 2
0x52ab:     31 ff                                 	xor edi, edi
0x52ad:     e8 7e e6 ff ff                        	call 0x3930 <dcgettext>
0x52b2:     48 8b 35 8f ad 21 00                  	mov rsi, qword ptr [rip + 0x21ad8f]
0x52b9:     ba 02 00 00 00                        	mov edx, 2
0x52be:     31 ff                                 	xor edi, edi
0x52c0:     48 89 05 79 ad 21 00                  	mov qword ptr [rip + 0x21ad79], rax
0x52c7:     e8 64 e6 ff ff                        	call 0x3930 <dcgettext>
0x52cc:     48 89 05 75 ad 21 00                  	mov qword ptr [rip + 0x21ad75], rax
0x52d3:     e8 48 0a 00 00                        	call 0x5d20 <function_5d20>
0x52d8:     e9 65 f7 ff ff                        	jmp 0x4a42 <function_3e90+0xbb2>
0x52dd:     bf 01 00 00 00                        	mov edi, 1
0x52e2:     e8 69 e5 ff ff                        	call 0x3850 <isatty>
0x52e7:     83 f8 01                              	cmp eax, 1
0x52ea:     19 c0                                 	sbb eax, eax
0x52ec:     83 c0 02                              	add eax, 2
0x52ef:     89 05 43 c0 21 00                     	mov dword ptr [rip + 0x21c043], eax
0x52f5:     e9 cd ee ff ff                        	jmp 0x41c7 <function_3e90+0x337>
0x52fa:     ba 01 00 00 00                        	mov edx, 1
0x52ff:     be 20 00 00 00                        	mov esi, 0x20
0x5304:     48 89 c7                              	mov rdi, rax
0x5307:     e8 c4 e2 00 00                        	call 0x135d0 <function_135d0>
0x530c:     e9 48 f6 ff ff                        	jmp 0x4959 <function_3e90+0xac9>
0x5311:     be 03 00 00 00                        	mov esi, 3
0x5316:     31 ff                                 	xor edi, edi
0x5318:     c7 05 16 c0 21 00 02 00 00 00         	mov dword ptr [rip + 0x21c016], 2
0x5322:     e8 89 e2 00 00                        	call 0x135b0 <function_135b0>
0x5327:     c6 05 aa bf 21 00 01                  	mov byte ptr [rip + 0x21bfaa], 1
0x532e:     e9 45 ec ff ff                        	jmp 0x3f78 <function_3e90+0xe8>
0x5333:     85 d2                                 	test edx, edx
0x5335:     0f 84 c4 f6 ff ff                     	je 0x49ff <function_3e90+0xb6f>
0x533b:     c7 05 eb bf 21 00 04 00 00 00         	mov dword ptr [rip + 0x21bfeb], 4
0x5345:     e9 f8 f6 ff ff                        	jmp 0x4a42 <function_3e90+0xbb2>
0x534a:     be 01 00 00 00                        	mov esi, 1
0x534f:     31 ff                                 	xor edi, edi
0x5351:     e8 1a 12 00 00                        	call 0x6570 <function_6570>
0x5356:     e9 ba fc ff ff                        	jmp 0x5015 <function_3e90+0x1185>
0x535b:     48 8d 05 e8 28 01 00                  	lea rax, [rip + 0x128e8]
0x5362:     e9 51 fc ff ff                        	jmp 0x4fb8 <function_3e90+0x1128>
0x5367:     48 8d 3d 0b 2b 01 00                  	lea rdi, [rip + 0x12b0b]
0x536e:     e8 2d e4 ff ff                        	call 0x37a0 <getenv>
0x5373:     48 85 c0                              	test rax, rax
0x5376:     49 89 c6                              	mov r14, rax
0x5379:     0f 85 89 f6 ff ff                     	jne 0x4a08 <function_3e90+0xb78>
0x537f:     4c 8d 35 1a 2a 01 00                  	lea r14, [rip + 0x12a1a]
0x5386:     e9 c2 fe ff ff                        	jmp 0x524d <function_3e90+0x13bd>
0x538b:     49 83 c6 01                           	add r14, 1
0x538f:     be 0a 00 00 00                        	mov esi, 0xa
0x5394:     4c 89 f7                              	mov rdi, r14
0x5397:     e8 04 e6 ff ff                        	call 0x39a0 <strchr>
0x539c:     48 85 c0                              	test rax, rax
0x539f:     49 89 c5                              	mov r13, rax
0x53a2:     0f 84 f3 01 00 00                     	je 0x559b <function_3e90+0x170b>
0x53a8:     4c 8d 78 01                           	lea r15, [rax + 1]
0x53ac:     be 0a 00 00 00                        	mov esi, 0xa
0x53b1:     4c 89 ff                              	mov rdi, r15
0x53b4:     e8 e7 e5 ff ff                        	call 0x39a0 <strchr>
0x53b9:     48 85 c0                              	test rax, rax
0x53bc:     0f 85 d5 03 00 00                     	jne 0x5797 <function_3e90+0x1907>
0x53c2:     41 c6 45 00 00                        	mov byte ptr [r13], 0
0x53c7:     4c 89 35 72 ac 21 00                  	mov qword ptr [rip + 0x21ac72], r14
0x53ce:     4c 89 3d 73 ac 21 00                  	mov qword ptr [rip + 0x21ac73], r15
0x53d5:     e9 f9 fe ff ff                        	jmp 0x52d3 <function_3e90+0x1443>
0x53da:     48 89 c7                              	mov rdi, rax
0x53dd:     4c 8d 3d 7c a4 21 00                  	lea r15, [rip + 0x21a47c]
0x53e4:     66 c7 44 24 45 3f 3f                  	mov word ptr [rsp + 0x45], 0x3f3f
0x53eb:     c6 44 24 47 00                        	mov byte ptr [rsp + 0x47], 0
0x53f0:     e8 bb f2 00 00                        	call 0x146b0 <function_146b0>
0x53f5:     89 6c 24 08                           	mov dword ptr [rsp + 8], ebp
0x53f9:     48 89 05 00 bf 21 00                  	mov qword ptr [rip + 0x21bf00], rax
0x5400:     48 89 44 24 30                        	mov qword ptr [rsp + 0x30], rax
0x5405:     48 89 5c 24 10                        	mov qword ptr [rsp + 0x10], rbx
0x540a:     48 8b 44 24 28                        	mov rax, qword ptr [rsp + 0x28]
0x540f:     0f b6 10                              	movzx edx, byte ptr [rax]
0x5412:     80 fa 2a                              	cmp dl, 0x2a
0x5415:     0f 84 88 01 00 00                     	je 0x55a3 <function_3e90+0x1713>
0x541b:     80 fa 3a                              	cmp dl, 0x3a
0x541e:     0f 84 57 03 00 00                     	je 0x577b <function_3e90+0x18eb>
0x5424:     84 d2                                 	test dl, dl
0x5426:     0f 84 5d 03 00 00                     	je 0x5789 <function_3e90+0x18f9>
0x542c:     48 8d 50 01                           	lea rdx, [rax + 1]
0x5430:     48 89 54 24 28                        	mov qword ptr [rsp + 0x28], rdx
0x5435:     0f b6 10                              	movzx edx, byte ptr [rax]
0x5438:     88 54 24 45                           	mov byte ptr [rsp + 0x45], dl
0x543c:     80 78 01 00                           	cmp byte ptr [rax + 1], 0
0x5440:     0f 84 ab 01 00 00                     	je 0x55f1 <function_3e90+0x1761>
0x5446:     48 8d 50 02                           	lea rdx, [rax + 2]
0x544a:     48 89 54 24 28                        	mov qword ptr [rsp + 0x28], rdx
0x544f:     0f b6 50 01                           	movzx edx, byte ptr [rax + 1]
0x5453:     88 54 24 46                           	mov byte ptr [rsp + 0x46], dl
0x5457:     48 8d 50 03                           	lea rdx, [rax + 3]
0x545b:     48 89 54 24 28                        	mov qword ptr [rsp + 0x28], rdx
0x5460:     80 78 02 3d                           	cmp byte ptr [rax + 2], 0x3d
0x5464:     0f 85 87 01 00 00                     	jne 0x55f1 <function_3e90+0x1761>
0x546a:     48 8d 35 21 29 01 00                  	lea rsi, [rip + 0x12921]
0x5471:     48 8d 5c 24 45                        	lea rbx, [rsp + 0x45]
0x5476:     31 ed                                 	xor ebp, ebp
0x5478:     48 89 df                              	mov rdi, rbx
0x547b:     e8 a0 e6 ff ff                        	call 0x3b20 <strcmp>
0x5480:     85 c0                                 	test eax, eax
0x5482:     0f 84 59 02 00 00                     	je 0x56e1 <function_3e90+0x1851>
0x5488:     48 83 c5 01                           	add rbp, 1
0x548c:     49 8b 34 ef                           	mov rsi, qword ptr [r15 + rbp*8]
0x5490:     48 85 f6                              	test rsi, rsi
0x5493:     75 e3                                 	jne 0x5478 <function_3e90+0x15e8>
0x5495:     48 89 df                              	mov rdi, rbx
0x5498:     8b 6c 24 08                           	mov ebp, dword ptr [rsp + 8]
0x549c:     48 8b 5c 24 10                        	mov rbx, qword ptr [rsp + 0x10]
0x54a1:     e8 3a e8 00 00                        	call 0x13ce0 <function_13ce0>
0x54a6:     48 8d 35 70 2a 01 00                  	lea rsi, [rip + 0x12a70]
0x54ad:     49 89 c6                              	mov r14, rax
0x54b0:     ba 05 00 00 00                        	mov edx, 5
0x54b5:     31 ff                                 	xor edi, edi
0x54b7:     e8 74 e4 ff ff                        	call 0x3930 <dcgettext>
0x54bc:     4c 89 f1                              	mov rcx, r14
0x54bf:     48 89 c2                              	mov rdx, rax
0x54c2:     31 f6                                 	xor esi, esi
0x54c4:     31 ff                                 	xor edi, edi
0x54c6:     31 c0                                 	xor eax, eax
0x54c8:     e8 53 e8 ff ff                        	call 0x3d20 <error>
0x54cd:     48 8d 35 6c 4d 01 00                  	lea rsi, [rip + 0x14d6c]
0x54d4:     ba 05 00 00 00                        	mov edx, 5
0x54d9:     31 ff                                 	xor edi, edi
0x54db:     e8 50 e4 ff ff                        	call 0x3930 <dcgettext>
0x54e0:     31 f6                                 	xor esi, esi
0x54e2:     48 89 c2                              	mov rdx, rax
0x54e5:     31 ff                                 	xor edi, edi
0x54e7:     31 c0                                 	xor eax, eax
0x54e9:     e8 32 e8 ff ff                        	call 0x3d20 <error>
0x54ee:     48 8b 3d 0b be 21 00                  	mov rdi, qword ptr [rip + 0x21be0b]
0x54f5:     e8 76 e9 ff ff                        	call 0x3e70 <free>
0x54fa:     48 8b 3d 07 be 21 00                  	mov rdi, qword ptr [rip + 0x21be07]
0x5501:     eb 0c                                 	jmp 0x550f <function_3e90+0x167f>
0x5503:     4c 8b 77 20                           	mov r14, qword ptr [rdi + 0x20]
0x5507:     e8 64 e9 ff ff                        	call 0x3e70 <free>
0x550c:     4c 89 f7                              	mov rdi, r14
0x550f:     48 85 ff                              	test rdi, rdi
0x5512:     75 ef                                 	jne 0x5503 <function_3e90+0x1673>
0x5514:     c6 05 f7 bd 21 00 00                  	mov byte ptr [rip + 0x21bdf7], 0
0x551b:     48 83 3d ad ab 21 00 06               	cmp qword ptr [rip + 0x21abad], 6
0x5523:     0f 85 69 fc ff ff                     	jne 0x5192 <function_3e90+0x1302>
0x5529:     48 8b 3d a8 ab 21 00                  	mov rdi, qword ptr [rip + 0x21aba8]
0x5530:     48 8d 35 fe 29 01 00                  	lea rsi, [rip + 0x129fe]
0x5537:     ba 06 00 00 00                        	mov edx, 6
0x553c:     e8 bf e2 ff ff                        	call 0x3800 <strncmp>
0x5541:     85 c0                                 	test eax, eax
0x5543:     0f 85 49 fc ff ff                     	jne 0x5192 <function_3e90+0x1302>
0x5549:     c6 05 40 be 21 00 01                  	mov byte ptr [rip + 0x21be40], 1
0x5550:     e9 3d fc ff ff                        	jmp 0x5192 <function_3e90+0x1302>
0x5555:     48 83 3d 13 ab 21 00 01               	cmp qword ptr [rip + 0x21ab13], 1
0x555d:     0f 85 65 f8 ff ff                     	jne 0x4dc8 <function_3e90+0xf38>
0x5563:     48 8b 05 0e ab 21 00                  	mov rax, qword ptr [rip + 0x21ab0e]
0x556a:     80 38 6d                              	cmp byte ptr [rax], 0x6d
0x556d:     0f 85 55 f8 ff ff                     	jne 0x4dc8 <function_3e90+0xf38>
0x5573:     e9 68 f8 ff ff                        	jmp 0x4de0 <function_3e90+0xf50>
0x5578:     48 85 c0                              	test rax, rax
0x557b:     0f 85 52 fd ff ff                     	jne 0x52d3 <function_3e90+0x1443>
0x5581:     48 8d 05 4a 29 01 00                  	lea rax, [rip + 0x1294a]
0x5588:     48 89 05 b9 aa 21 00                  	mov qword ptr [rip + 0x21aab9], rax
0x558f:     48 89 05 aa aa 21 00                  	mov qword ptr [rip + 0x21aaaa], rax
0x5596:     e9 38 fd ff ff                        	jmp 0x52d3 <function_3e90+0x1443>
0x559b:     4d 89 f7                              	mov r15, r14
0x559e:     e9 24 fe ff ff                        	jmp 0x53c7 <function_3e90+0x1537>
0x55a3:     bf 28 00 00 00                        	mov edi, 0x28
0x55a8:     48 8d 5c 24 28                        	lea rbx, [rsp + 0x28]
0x55ad:     e8 ce ee 00 00                        	call 0x14480 <function_14480>
0x55b2:     49 89 c6                              	mov r14, rax
0x55b5:     48 8b 05 4c bd 21 00                  	mov rax, qword ptr [rip + 0x21bd4c]
0x55bc:     ba 01 00 00 00                        	mov edx, 1
0x55c1:     4c 89 f1                              	mov rcx, r14
0x55c4:     48 89 de                              	mov rsi, rbx
0x55c7:     4c 89 e7                              	mov rdi, r12
0x55ca:     48 83 44 24 28 01                     	add qword ptr [rsp + 0x28], 1
0x55d0:     4c 89 35 31 bd 21 00                  	mov qword ptr [rip + 0x21bd31], r14
0x55d7:     49 89 46 20                           	mov qword ptr [r14 + 0x20], rax
0x55db:     48 8b 44 24 30                        	mov rax, qword ptr [rsp + 0x30]
0x55e0:     49 89 46 08                           	mov qword ptr [r14 + 8], rax
0x55e4:     e8 d7 03 00 00                        	call 0x59c0 <function_59c0>
0x55e9:     84 c0                                 	test al, al
0x55eb:     0f 85 b2 00 00 00                     	jne 0x56a3 <function_3e90+0x1813>
0x55f1:     8b 6c 24 08                           	mov ebp, dword ptr [rsp + 8]
0x55f5:     48 8b 5c 24 10                        	mov rbx, qword ptr [rsp + 0x10]
0x55fa:     e9 ce fe ff ff                        	jmp 0x54cd <function_3e90+0x163d>
0x55ff:     31 ff                                 	xor edi, edi
0x5601:     e8 1a 65 00 00                        	call 0xbb20 <function_bb20>
0x5606:     48 8d 3d 94 28 01 00                  	lea rdi, [rip + 0x12894]
0x560d:     48 89 c2                              	mov rdx, rax
0x5610:     4c 89 f6                              	mov rsi, r14
0x5613:     48 8d 2d a8 28 01 00                  	lea rbp, [rip + 0x128a8]
0x561a:     e8 c1 6d 00 00                        	call 0xc3e0 <function_c3e0>
0x561f:     48 8b 1d 9a ac 21 00                  	mov rbx, qword ptr [rip + 0x21ac9a]
0x5626:     48 8d 35 7f 28 01 00                  	lea rsi, [rip + 0x1287f]
0x562d:     ba 05 00 00 00                        	mov edx, 5
0x5632:     31 ff                                 	xor edi, edi
0x5634:     e8 f7 e2 ff ff                        	call 0x3930 <dcgettext>
0x5639:     48 89 de                              	mov rsi, rbx
0x563c:     48 89 c7                              	mov rdi, rax
0x563f:     48 8d 1d 3a a3 21 00                  	lea rbx, [rip + 0x21a33a]
0x5646:     e8 a5 e4 ff ff                        	call 0x3af0 <fputs_unlocked>
0x564b:     48 8d 0d 37 27 01 00                  	lea rcx, [rip + 0x12737]
0x5652:     48 8b 3d 67 ac 21 00                  	mov rdi, qword ptr [rip + 0x21ac67]
0x5659:     48 83 c3 08                           	add rbx, 8
0x565d:     31 c0                                 	xor eax, eax
0x565f:     48 89 ea                              	mov rdx, rbp
0x5662:     be 01 00 00 00                        	mov esi, 1
0x5667:     e8 84 e7 ff ff                        	call 0x3df0 <__fprintf_chk>
0x566c:     48 8b 0b                              	mov rcx, qword ptr [rbx]
0x566f:     48 85 c9                              	test rcx, rcx
0x5672:     75 de                                 	jne 0x5652 <function_3e90+0x17c2>
0x5674:     48 8b 1d 45 ac 21 00                  	mov rbx, qword ptr [rip + 0x21ac45]
0x567b:     48 8d 35 f6 4a 01 00                  	lea rsi, [rip + 0x14af6]
0x5682:     31 ff                                 	xor edi, edi
0x5684:     ba 05 00 00 00                        	mov edx, 5
0x5689:     e8 a2 e2 ff ff                        	call 0x3930 <dcgettext>
0x568e:     48 89 de                              	mov rsi, rbx
0x5691:     48 89 c7                              	mov rdi, rax
0x5694:     e8 57 e4 ff ff                        	call 0x3af0 <fputs_unlocked>
0x5699:     bf 02 00 00 00                        	mov edi, 2
0x569e:     e8 7d 64 00 00                        	call 0xbb20 <function_bb20>
0x56a3:     48 8b 44 24 28                        	mov rax, qword ptr [rsp + 0x28]
0x56a8:     48 8d 50 01                           	lea rdx, [rax + 1]
0x56ac:     48 89 54 24 28                        	mov qword ptr [rsp + 0x28], rdx
0x56b1:     80 38 3d                              	cmp byte ptr [rax], 0x3d
0x56b4:     0f 85 37 ff ff ff                     	jne 0x55f1 <function_3e90+0x1761>
0x56ba:     48 8b 44 24 30                        	mov rax, qword ptr [rsp + 0x30]
0x56bf:     49 8d 4e 10                           	lea rcx, [r14 + 0x10]
0x56c3:     31 d2                                 	xor edx, edx
0x56c5:     48 89 de                              	mov rsi, rbx
0x56c8:     4c 89 e7                              	mov rdi, r12
0x56cb:     49 89 46 18                           	mov qword ptr [r14 + 0x18], rax
0x56cf:     e8 ec 02 00 00                        	call 0x59c0 <function_59c0>
0x56d4:     84 c0                                 	test al, al
0x56d6:     0f 85 2e fd ff ff                     	jne 0x540a <function_3e90+0x157a>
0x56dc:     e9 10 ff ff ff                        	jmp 0x55f1 <function_3e90+0x1761>
0x56e1:     48 8d 05 78 a9 21 00                  	lea rax, [rip + 0x21a978]
0x56e8:     48 63 cd                              	movsxd rcx, ebp
0x56eb:     48 8d 74 24 28                        	lea rsi, [rsp + 0x28]
0x56f0:     48 c1 e1 04                           	shl rcx, 4
0x56f4:     31 d2                                 	xor edx, edx
0x56f6:     4c 89 e7                              	mov rdi, r12
0x56f9:     48 01 c1                              	add rcx, rax
0x56fc:     48 8b 44 24 30                        	mov rax, qword ptr [rsp + 0x30]
0x5701:     48 89 41 08                           	mov qword ptr [rcx + 8], rax
0x5705:     e8 b6 02 00 00                        	call 0x59c0 <function_59c0>
0x570a:     84 c0                                 	test al, al
0x570c:     0f 85 f8 fc ff ff                     	jne 0x540a <function_3e90+0x157a>
0x5712:     e9 7e fd ff ff                        	jmp 0x5495 <function_3e90+0x1605>
0x5717:     48 8d 3d 4a 27 01 00                  	lea rdi, [rip + 0x1274a]
0x571e:     e8 7d e0 ff ff                        	call 0x37a0 <getenv>
0x5723:     48 85 c0                              	test rax, rax
0x5726:     0f 85 dd f7 ff ff                     	jne 0x4f09 <function_3e90+0x1079>
0x572c:     e9 f2 f7 ff ff                        	jmp 0x4f23 <function_3e90+0x1093>
0x5731:     48 8d 05 b2 27 01 00                  	lea rax, [rip + 0x127b2]
0x5738:     48 89 05 09 a9 21 00                  	mov qword ptr [rip + 0x21a909], rax
0x573f:     48 89 05 fa a8 21 00                  	mov qword ptr [rip + 0x21a8fa], rax
0x5746:     e9 88 fb ff ff                        	jmp 0x52d3 <function_3e90+0x1443>
0x574b:     48 8d 05 a7 27 01 00                  	lea rax, [rip + 0x127a7]
0x5752:     48 89 05 e7 a8 21 00                  	mov qword ptr [rip + 0x21a8e7], rax
0x5759:     48 8d 05 8d 27 01 00                  	lea rax, [rip + 0x1278d]
0x5760:     48 89 05 e1 a8 21 00                  	mov qword ptr [rip + 0x21a8e1], rax
0x5767:     e9 67 fb ff ff                        	jmp 0x52d3 <function_3e90+0x1443>
0x576c:     be 0a 00 00 00                        	mov esi, 0xa
0x5771:     e8 5a e2 ff ff                        	call 0x39d0 <__overflow>
0x5776:     e9 db f8 ff ff                        	jmp 0x5056 <function_3e90+0x11c6>
0x577b:     48 83 c0 01                           	add rax, 1
0x577f:     48 89 44 24 28                        	mov qword ptr [rsp + 0x28], rax
0x5784:     e9 81 fc ff ff                        	jmp 0x540a <function_3e90+0x157a>
0x5789:     8b 6c 24 08                           	mov ebp, dword ptr [rsp + 8]
0x578d:     48 8b 5c 24 10                        	mov rbx, qword ptr [rsp + 0x10]
0x5792:     e9 84 fd ff ff                        	jmp 0x551b <function_3e90+0x168b>
0x5797:     4c 89 f7                              	mov rdi, r14
0x579a:     e8 41 e5 00 00                        	call 0x13ce0 <function_13ce0>
0x579f:     48 8d 35 de 26 01 00                  	lea rsi, [rip + 0x126de]
0x57a6:     48 89 c3                              	mov rbx, rax
0x57a9:     ba 05 00 00 00                        	mov edx, 5
0x57ae:     31 ff                                 	xor edi, edi
0x57b0:     e8 7b e1 ff ff                        	call 0x3930 <dcgettext>
0x57b5:     48 89 d9                              	mov rcx, rbx
0x57b8:     48 89 c2                              	mov rdx, rax
0x57bb:     31 f6                                 	xor esi, esi
0x57bd:     bf 02 00 00 00                        	mov edi, 2
0x57c2:     31 c0                                 	xor eax, eax
0x57c4:     e8 57 e5 ff ff                        	call 0x3d20 <error>
0x57c9:     4c 8b 05 d0 aa 21 00                  	mov r8, qword ptr [rip + 0x21aad0]
0x57d0:     8b 74 24 30                           	mov esi, dword ptr [rsp + 0x30]
0x57d4:     48 8d 0d 05 9b 21 00                  	lea rcx, [rip + 0x219b05]
0x57db:     31 d2                                 	xor edx, edx
0x57dd:     89 c7                                 	mov edi, eax
0x57df:     e8 8c f5 00 00                        	call 0x14d70 <function_14d70>
0x57e4:     48 8d 0d 4d 12 01 00                  	lea rcx, [rip + 0x1124d]
0x57eb:     48 8d 35 0e 24 01 00                  	lea rsi, [rip + 0x1240e]
0x57f2:     48 8d 3d b7 49 01 00                  	lea rdi, [rip + 0x149b7]
0x57f9:     ba 02 04 00 00                        	mov edx, 0x402
0x57fe:     e8 2d e2 ff ff                        	call 0x3a30 <__assert_fail>
0x5803:     48 8d 0d d0 12 01 00                  	lea rcx, [rip + 0x112d0]
0x580a:     48 8d 35 ef 23 01 00                  	lea rsi, [rip + 0x123ef]
0x5811:     48 8d 3d 27 27 01 00                  	lea rdi, [rip + 0x12727]
0x5818:     ba 38 06 00 00                        	mov edx, 0x638
0x581d:     e8 0e e2 ff ff                        	call 0x3a30 <__assert_fail>
0x5822:     48 8d 0d b1 12 01 00                  	lea rcx, [rip + 0x112b1]
0x5829:     48 8d 35 d0 23 01 00                  	lea rsi, [rip + 0x123d0]
0x5830:     48 8d 3d d9 49 01 00                  	lea rdi, [rip + 0x149d9]
0x5837:     ba 6c 06 00 00                        	mov edx, 0x66c
0x583c:     e8 ef e1 ff ff                        	call 0x3a30 <__assert_fail>
0x5841:     e8 2a e1 ff ff                        	call 0x3970 <__stack_chk_fail>
0x5846:     e8 85 ee 00 00                        	call 0x146d0 <function_146d0>
; data inside code section at 0x584b -- 0x5850
0x584b:     0f 1f 44 00 00                                     |..D..           |
; function: entry_point at 0x5850 -- 0x587b
0x5850:     31 ed                                 	xor ebp, ebp
0x5852:     49 89 d1                              	mov r9, rdx
0x5855:     5e                                    	pop rsi
0x5856:     48 89 e2                              	mov rdx, rsp
0x5859:     48 83 e4 f0                           	and rsp, 0xfffffffffffffff0
0x585d:     50                                    	push rax
0x585e:     54                                    	push rsp
0x585f:     4c 8d 05 ca 0a 01 00                  	lea r8, [rip + 0x10aca]
0x5866:     48 8d 0d 53 0a 01 00                  	lea rcx, [rip + 0x10a53]
0x586d:     48 8d 3d 1c e6 ff ff                  	lea rdi, [rip - 0x19e4]
0x5874:     ff 15 5e a7 21 00                     	call qword ptr [rip + 0x21a75e] <__libc_start_main>
0x587a:     f4                                    	hlt 
; data inside code section at 0x587b -- 0x5880
0x587b:     0f 1f 44 00 00                                     |..D..           |
; function: function_5880 at 0x5880 -- 0x58b2
0x5880:     48 8d 3d e1 a9 21 00                  	lea rdi, [rip + 0x21a9e1]
0x5887:     55                                    	push rbp
0x5888:     48 8d 05 d9 a9 21 00                  	lea rax, [rip + 0x21a9d9]
0x588f:     48 39 f8                              	cmp rax, rdi
0x5892:     48 89 e5                              	mov rbp, rsp
0x5895:     74 19                                 	je 0x58b0 <function_5880+0x30>
0x5897:     48 8b 05 32 a7 21 00                  	mov rax, qword ptr [rip + 0x21a732]
0x589e:     48 85 c0                              	test rax, rax
0x58a1:     74 0d                                 	je 0x58b0 <function_5880+0x30>
0x58a3:     5d                                    	pop rbp
0x58a4:     ff e0                                 	jmp rax <_ITM_deregisterTMCloneTable>
; data inside code section at 0x58a6 -- 0x58b0
0x58a6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x58b0:     5d                                    	pop rbp
0x58b1:     c3                                    	ret 
; data inside code section at 0x58b2 -- 0x58c0
0x58b2:     0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: function_58c0 at 0x58c0 -- 0x5902
0x58c0:     48 8d 3d a1 a9 21 00                  	lea rdi, [rip + 0x21a9a1]
0x58c7:     48 8d 35 9a a9 21 00                  	lea rsi, [rip + 0x21a99a]
0x58ce:     55                                    	push rbp
0x58cf:     48 29 fe                              	sub rsi, rdi
0x58d2:     48 89 e5                              	mov rbp, rsp
0x58d5:     48 c1 fe 03                           	sar rsi, 3
0x58d9:     48 89 f0                              	mov rax, rsi
0x58dc:     48 c1 e8 3f                           	shr rax, 0x3f
0x58e0:     48 01 c6                              	add rsi, rax
0x58e3:     48 d1 fe                              	sar rsi, 1
0x58e6:     74 18                                 	je 0x5900 <function_58c0+0x40>
0x58e8:     48 8b 05 01 a7 21 00                  	mov rax, qword ptr [rip + 0x21a701]
0x58ef:     48 85 c0                              	test rax, rax
0x58f2:     74 0c                                 	je 0x5900 <function_58c0+0x40>
0x58f4:     5d                                    	pop rbp
0x58f5:     ff e0                                 	jmp rax <_ITM_registerTMCloneTable>
; data inside code section at 0x58f7 -- 0x5900
0x58f7:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0x5900:     5d                                    	pop rbp
0x5901:     c3                                    	ret 
; data inside code section at 0x5902 -- 0x5910
0x5902:     0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: function_5910 at 0x5910 -- 0x594a
0x5910:     80 3d b1 a9 21 00 00                  	cmp byte ptr [rip + 0x21a9b1], 0
0x5917:     75 2f                                 	jne 0x5948 <function_5910+0x38>
0x5919:     48 83 3d d7 a6 21 00 00               	cmp qword ptr [rip + 0x21a6d7], 0
0x5921:     55                                    	push rbp
0x5922:     48 89 e5                              	mov rbp, rsp
0x5925:     74 0c                                 	je 0x5933 <function_5910+0x23>
0x5927:     48 8b 3d da a6 21 00                  	mov rdi, qword ptr [rip + 0x21a6da]
0x592e:     e8 4d e5 ff ff                        	call 0x3e80 <__cxa_finalize>
0x5933:     e8 48 ff ff ff                        	call 0x5880 <function_5880>
0x5938:     c6 05 89 a9 21 00 01                  	mov byte ptr [rip + 0x21a989], 1
0x593f:     5d                                    	pop rbp
0x5940:     c3                                    	ret 
; data inside code section at 0x5941 -- 0x5948
0x5941:     0f 1f 80 00 00 00 00                               |.......         |
0x5948:     f3 c3                                 	ret 
; data inside code section at 0x594a -- 0x5950
0x594a:     66 0f 1f 44 00 00                                  |f..D..          |
; function: function_5950 at 0x5950 -- 0x595a
0x5950:     55                                    	push rbp
0x5951:     48 89 e5                              	mov rbp, rsp
0x5954:     5d                                    	pop rbp
0x5955:     e9 66 ff ff ff                        	jmp 0x58c0 <function_58c0>
; data inside code section at 0x595a -- 0x5960
0x595a:     66 0f 1f 44 00 00                                  |f..D..          |
; function: function_5960 at 0x5960 -- 0x596c
0x5960:     48 8b 07                              	mov rax, qword ptr [rdi]
0x5963:     31 d2                                 	xor edx, edx
0x5965:     48 f7 f6                              	div rsi
0x5968:     48 89 d0                              	mov rax, rdx
0x596b:     c3                                    	ret 
; data inside code section at 0x596c -- 0x5970
0x596c:     0f 1f 40 00                                        |..@.            |
; function: function_5970 at 0x5970 -- 0x598c
0x5970:     31 c0                                 	xor eax, eax
0x5972:     48 8b 16                              	mov rdx, qword ptr [rsi]
0x5975:     48 39 17                              	cmp qword ptr [rdi], rdx
0x5978:     74 06                                 	je 0x5980 <function_5970+0x10>
0x597a:     f3 c3                                 	ret 
; data inside code section at 0x597c -- 0x5980
0x597c:     0f 1f 40 00                                        |..@.            |
0x5980:     48 8b 46 08                           	mov rax, qword ptr [rsi + 8]
0x5984:     48 39 47 08                           	cmp qword ptr [rdi + 8], rax
0x5988:     0f 94 c0                              	sete al
0x598b:     c3                                    	ret 
; data inside code section at 0x598c -- 0x5990
0x598c:     0f 1f 40 00                                        |..@.            |
; function: function_5990 at 0x5990 -- 0x59a2
0x5990:     8b 05 82 b8 21 00                     	mov eax, dword ptr [rip + 0x21b882]
0x5996:     85 c0                                 	test eax, eax
0x5998:     75 06                                 	jne 0x59a0 <function_5990+0x10>
0x599a:     89 3d 78 b8 21 00                     	mov dword ptr [rip + 0x21b878], edi
0x59a0:     f3 c3                                 	ret 
; data inside code section at 0x59a2 -- 0x59b0
0x59a2:     0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: function_59b0 at 0x59b0 -- 0x59b5
0x59b0:     e9 bb e4 ff ff                        	jmp 0x3e70 <free>
; data inside code section at 0x59b5 -- 0x59c0
0x59b5:     90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: function_59c0 at 0x59c0 -- 0x5b04
0x59c0:     4c 8b 06                              	mov r8, qword ptr [rsi]
0x59c3:     4c 8b 0f                              	mov r9, qword ptr [rdi]
0x59c6:     4c 8d 1d d3 09 01 00                  	lea r11, [rip + 0x109d3]
0x59cd:     41 57                                 	push r15
0x59cf:     45 31 d2                              	xor r10d, r10d
0x59d2:     41 56                                 	push r14
0x59d4:     b8 01 00 00 00                        	mov eax, 1
0x59d9:     41 55                                 	push r13
0x59db:     41 54                                 	push r12
0x59dd:     41 89 d4                              	mov r12d, edx
0x59e0:     55                                    	push rbp
0x59e1:     48 bd 00 00 00 00 00 00 7e 00         	movabs rbp, 0x7e000000000000
0x59eb:     53                                    	push rbx
0x59ec:     48 89 cb                              	mov rbx, rcx
0x59ef:     41 0f b6 08                           	movzx ecx, byte ptr [r8]
0x59f3:     80 f9 3d                              	cmp cl, 0x3d
0x59f6:     74 4a                                 	je 0x5a42 <function_59c0+0x82>
0x59f8:     0f 1f 84 00 00 00 00 00               	nop dword ptr [rax + rax]
0x5a00:     0f 8e d2 00 00 00                     	jle 0x5ad8 <function_59c0+0x118>
0x5a06:     80 f9 5c                              	cmp cl, 0x5c
0x5a09:     74 5d                                 	je 0x5a68 <function_59c0+0xa8>
0x5a0b:     80 f9 5e                              	cmp cl, 0x5e
0x5a0e:     75 40                                 	jne 0x5a50 <function_59c0+0x90>
0x5a10:     41 0f b6 48 01                        	movzx ecx, byte ptr [r8 + 1]
0x5a15:     4d 8d 70 01                           	lea r14, [r8 + 1]
0x5a19:     44 8d 69 c0                           	lea r13d, [rcx - 0x40]
0x5a1d:     41 80 fd 3e                           	cmp r13b, 0x3e
0x5a21:     0f 87 91 00 00 00                     	ja 0x5ab8 <function_59c0+0xf8>
0x5a27:     49 83 c0 02                           	add r8, 2
0x5a2b:     83 e1 1f                              	and ecx, 0x1f
0x5a2e:     41 88 09                              	mov byte ptr [r9], cl
0x5a31:     41 0f b6 08                           	movzx ecx, byte ptr [r8]
0x5a35:     49 83 c2 01                           	add r10, 1
0x5a39:     49 83 c1 01                           	add r9, 1
0x5a3d:     80 f9 3d                              	cmp cl, 0x3d
0x5a40:     75 be                                 	jne 0x5a00 <function_59c0+0x40>
0x5a42:     45 84 e4                              	test r12b, r12b
0x5a45:     74 09                                 	je 0x5a50 <function_59c0+0x90>
0x5a47:     89 d0                                 	mov eax, edx
0x5a49:     4d 89 c6                              	mov r14, r8
0x5a4c:     eb 71                                 	jmp 0x5abf <function_59c0+0xff>
; data inside code section at 0x5a4e -- 0x5a50
0x5a4e:     66 90                                              |f.              |
0x5a50:     41 88 09                              	mov byte ptr [r9], cl
0x5a53:     49 83 c0 01                           	add r8, 1
0x5a57:     49 83 c2 01                           	add r10, 1
0x5a5b:     49 83 c1 01                           	add r9, 1
0x5a5f:     eb 8e                                 	jmp 0x59ef <function_59c0+0x2f>
; data inside code section at 0x5a61 -- 0x5a68
0x5a61:     0f 1f 80 00 00 00 00                               |.......         |
0x5a68:     41 0f b6 48 01                        	movzx ecx, byte ptr [r8 + 1]
0x5a6d:     49 83 c0 02                           	add r8, 2
0x5a71:     80 f9 78                              	cmp cl, 0x78
0x5a74:     77 b8                                 	ja 0x5a2e <function_59c0+0x6e>
0x5a76:     44 0f b6 e9                           	movzx r13d, cl
0x5a7a:     4f 63 2c ab                           	movsxd r13, dword ptr [r11 + r13*4]
0x5a7e:     4d 01 dd                              	add r13, r11
0x5a81:     41 ff e5                              	jmp r13
; data inside code section at 0x5a84 -- 0x5a88
0x5a84:     0f 1f 40 00                                        |..@.            |
0x5a88:     45 0f b6 28                           	movzx r13d, byte ptr [r8]
0x5a8c:     83 e9 30                              	sub ecx, 0x30
0x5a8f:     45 8d 75 d0                           	lea r14d, [r13 - 0x30]
0x5a93:     41 80 fe 07                           	cmp r14b, 7
0x5a97:     77 95                                 	ja 0x5a2e <function_59c0+0x6e>
0x5a99:     49 83 c0 01                           	add r8, 1
0x5a9d:     41 8d 4c cd d0                        	lea ecx, [r13 + rcx*8 - 0x30]
0x5aa2:     45 0f b6 28                           	movzx r13d, byte ptr [r8]
0x5aa6:     45 8d 75 d0                           	lea r14d, [r13 - 0x30]
0x5aaa:     41 80 fe 07                           	cmp r14b, 7
0x5aae:     76 e9                                 	jbe 0x5a99 <function_59c0+0xd9>
0x5ab0:     e9 79 ff ff ff                        	jmp 0x5a2e <function_59c0+0x6e>
; data inside code section at 0x5ab5 -- 0x5ab8
0x5ab5:     0f 1f 00                                           |...             |
0x5ab8:     80 f9 3f                              	cmp cl, 0x3f
0x5abb:     74 33                                 	je 0x5af0 <function_59c0+0x130>
0x5abd:     31 c0                                 	xor eax, eax
0x5abf:     4c 89 0f                              	mov qword ptr [rdi], r9
0x5ac2:     4c 89 36                              	mov qword ptr [rsi], r14
0x5ac5:     4c 89 13                              	mov qword ptr [rbx], r10
0x5ac8:     5b                                    	pop rbx
0x5ac9:     5d                                    	pop rbp
0x5aca:     41 5c                                 	pop r12
0x5acc:     41 5d                                 	pop r13
0x5ace:     41 5e                                 	pop r14
0x5ad0:     41 5f                                 	pop r15
0x5ad2:     c3                                    	ret 
; data inside code section at 0x5ad3 -- 0x5ad8
0x5ad3:     0f 1f 44 00 00                                     |..D..           |
0x5ad8:     84 c9                                 	test cl, cl
0x5ada:     74 09                                 	je 0x5ae5 <function_59c0+0x125>
0x5adc:     80 f9 3a                              	cmp cl, 0x3a
0x5adf:     0f 85 6b ff ff ff                     	jne 0x5a50 <function_59c0+0x90>
0x5ae5:     4d 89 c6                              	mov r14, r8
0x5ae8:     b8 01 00 00 00                        	mov eax, 1
0x5aed:     eb d0                                 	jmp 0x5abf <function_59c0+0xff>
; data inside code section at 0x5aef -- 0x5af0
0x5aef:     90                                                 |.               |
0x5af0:     41 c6 01 7f                           	mov byte ptr [r9], 0x7f
0x5af4:     49 83 c2 01                           	add r10, 1
0x5af8:     49 83 c1 01                           	add r9, 1
0x5afc:     4d 89 f0                              	mov r8, r14
0x5aff:     e9 eb fe ff ff                        	jmp 0x59ef <function_59c0+0x2f>
; data inside code section at 0x5b04 -- 0x5b08
0x5b04:     0f 1f 40 00                                        |..@.            |
; function: function_5b08 at 0x5b08 -- 0x5b12
0x5b08:     b9 1b 00 00 00                        	mov ecx, 0x1b
0x5b0d:     e9 1c ff ff ff                        	jmp 0x5a2e
; data inside code section at 0x5b12 -- 0x5b18
0x5b12:     66 0f 1f 44 00 00                                  |f..D..          |
; function: function_5b18 at 0x5b18 -- 0x5b1f
0x5b18:     4d 89 c6                              	mov r14, r8
0x5b1b:     31 c0                                 	xor eax, eax
0x5b1d:     eb a0                                 	jmp 0x5abf
; data inside code section at 0x5b1f -- 0x5b20
0x5b1f:     90                                                 |.               |
; function: function_5b20 at 0x5b20 -- 0x5c4a
0x5b20:     45 31 f6                              	xor r14d, r14d
0x5b23:     0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0x5b28:     45 0f b6 28                           	movzx r13d, byte ptr [r8]
0x5b2c:     41 8d 4d d0                           	lea ecx, [r13 - 0x30]
0x5b30:     80 f9 36                              	cmp cl, 0x36
0x5b33:     77 43                                 	ja 0x5b78 <function_5b20+0x58>
0x5b35:     49 89 c7                              	mov r15, rax
0x5b38:     49 d3 e7                              	shl r15, cl
0x5b3b:     41 f7 c7 00 00 7e 00                  	test r15d, 0x7e0000
0x5b42:     0f 85 d8 00 00 00                     	jne 0x5c20 <function_5b20+0x100>
0x5b48:     49 85 ef                              	test r15, rbp
0x5b4b:     0f 85 e7 00 00 00                     	jne 0x5c38 <function_5b20+0x118>
0x5b51:     41 f7 c7 ff 03 00 00                  	test r15d, 0x3ff
0x5b58:     74 1e                                 	je 0x5b78 <function_5b20+0x58>
0x5b5a:     49 83 c0 01                           	add r8, 1
0x5b5e:     41 c1 e6 04                           	shl r14d, 4
0x5b62:     47 8d 74 35 d0                        	lea r14d, [r13 + r14 - 0x30]
0x5b67:     45 0f b6 28                           	movzx r13d, byte ptr [r8]
0x5b6b:     41 8d 4d d0                           	lea ecx, [r13 - 0x30]
0x5b6f:     80 f9 36                              	cmp cl, 0x36
0x5b72:     76 c1                                 	jbe 0x5b35 <function_5b20+0x15>
0x5b74:     0f 1f 40 00                           	nop dword ptr [rax]
0x5b78:     45 88 31                              	mov byte ptr [r9], r14b
0x5b7b:     49 83 c2 01                           	add r10, 1
0x5b7f:     49 83 c1 01                           	add r9, 1
0x5b83:     e9 67 fe ff ff                        	jmp 0x59ef
; data inside code section at 0x5b88 -- 0x5b90
0x5b88:     0f 1f 84 00 00 00 00 00                            |........        |
0x5b90:     b9 20 00 00 00                        	mov ecx, 0x20
0x5b95:     e9 94 fe ff ff                        	jmp 0x5a2e
; data inside code section at 0x5b9a -- 0x5ba0
0x5b9a:     66 0f 1f 44 00 00                                  |f..D..          |
0x5ba0:     b9 07 00 00 00                        	mov ecx, 7
0x5ba5:     e9 84 fe ff ff                        	jmp 0x5a2e
; data inside code section at 0x5baa -- 0x5bb0
0x5baa:     66 0f 1f 44 00 00                                  |f..D..          |
0x5bb0:     b9 0b 00 00 00                        	mov ecx, 0xb
0x5bb5:     e9 74 fe ff ff                        	jmp 0x5a2e
; data inside code section at 0x5bba -- 0x5bc0
0x5bba:     66 0f 1f 44 00 00                                  |f..D..          |
0x5bc0:     b9 7f 00 00 00                        	mov ecx, 0x7f
0x5bc5:     e9 64 fe ff ff                        	jmp 0x5a2e
; data inside code section at 0x5bca -- 0x5bd0
0x5bca:     66 0f 1f 44 00 00                                  |f..D..          |
0x5bd0:     b9 08 00 00 00                        	mov ecx, 8
0x5bd5:     e9 54 fe ff ff                        	jmp 0x5a2e
; data inside code section at 0x5bda -- 0x5be0
0x5bda:     66 0f 1f 44 00 00                                  |f..D..          |
0x5be0:     b9 0c 00 00 00                        	mov ecx, 0xc
0x5be5:     e9 44 fe ff ff                        	jmp 0x5a2e
; data inside code section at 0x5bea -- 0x5bf0
0x5bea:     66 0f 1f 44 00 00                                  |f..D..          |
0x5bf0:     b9 0a 00 00 00                        	mov ecx, 0xa
0x5bf5:     e9 34 fe ff ff                        	jmp 0x5a2e
; data inside code section at 0x5bfa -- 0x5c00
0x5bfa:     66 0f 1f 44 00 00                                  |f..D..          |
0x5c00:     b9 0d 00 00 00                        	mov ecx, 0xd
0x5c05:     e9 24 fe ff ff                        	jmp 0x5a2e
; data inside code section at 0x5c0a -- 0x5c10
0x5c0a:     66 0f 1f 44 00 00                                  |f..D..          |
0x5c10:     b9 09 00 00 00                        	mov ecx, 9
0x5c15:     e9 14 fe ff ff                        	jmp 0x5a2e
; data inside code section at 0x5c1a -- 0x5c20
0x5c1a:     66 0f 1f 44 00 00                                  |f..D..          |
0x5c20:     41 c1 e6 04                           	shl r14d, 4
0x5c24:     49 83 c0 01                           	add r8, 1
0x5c28:     47 8d 74 35 c9                        	lea r14d, [r13 + r14 - 0x37]
0x5c2d:     e9 f6 fe ff ff                        	jmp 0x5b28 <function_5b20+0x8>
; data inside code section at 0x5c32 -- 0x5c38
0x5c32:     66 0f 1f 44 00 00                                  |f..D..          |
0x5c38:     41 c1 e6 04                           	shl r14d, 4
0x5c3c:     49 83 c0 01                           	add r8, 1
0x5c40:     47 8d 74 35 a9                        	lea r14d, [r13 + r14 - 0x57]
0x5c45:     e9 de fe ff ff                        	jmp 0x5b28 <function_5b20+0x8>
; data inside code section at 0x5c4a -- 0x5c50
0x5c4a:     66 0f 1f 44 00 00                                  |f..D..          |
; function: function_5c50 at 0x5c50 -- 0x5c9f
0x5c50:     48 8d 05 09 a4 21 00                  	lea rax, [rip + 0x21a409]
0x5c57:     89 ff                                 	mov edi, edi
0x5c59:     48 c1 e7 04                           	shl rdi, 4
0x5c5d:     48 01 c7                              	add rdi, rax
0x5c60:     31 c0                                 	xor eax, eax
0x5c62:     48 8b 17                              	mov rdx, qword ptr [rdi]
0x5c65:     48 85 d2                              	test rdx, rdx
0x5c68:     74 26                                 	je 0x5c90 <function_5c50+0x40>
0x5c6a:     48 83 fa 01                           	cmp rdx, 1
0x5c6e:     48 8b 77 08                           	mov rsi, qword ptr [rdi + 8]
0x5c72:     74 24                                 	je 0x5c98 <function_5c50+0x48>
0x5c74:     48 83 fa 02                           	cmp rdx, 2
0x5c78:     b8 01 00 00 00                        	mov eax, 1
0x5c7d:     75 11                                 	jne 0x5c90 <function_5c50+0x40>
0x5c7f:     48 8d 3d 67 1f 01 00                  	lea rdi, [rip + 0x11f67]
0x5c86:     b9 02 00 00 00                        	mov ecx, 2
0x5c8b:     f3 a6                                 	repe cmpsb byte ptr [rsi], byte ptr [rdi]
0x5c8d:     0f 95 c0                              	setne al
0x5c90:     f3 c3                                 	ret 
; data inside code section at 0x5c92 -- 0x5c98
0x5c92:     66 0f 1f 44 00 00                                  |f..D..          |
0x5c98:     80 3e 30                              	cmp byte ptr [rsi], 0x30
0x5c9b:     0f 95 c0                              	setne al
0x5c9e:     c3                                    	ret 
; data inside code section at 0x5c9f -- 0x5ca0
0x5c9f:     90                                                 |.               |
; function: function_5ca0 at 0x5ca0 -- 0x5d20
0x5ca0:     48 83 ec 18                           	sub rsp, 0x18
0x5ca4:     4c 8d 05 9f 1f 01 00                  	lea r8, [rip + 0x11f9f]
0x5cab:     31 d2                                 	xor edx, edx
0x5cad:     31 f6                                 	xor esi, esi
0x5caf:     48 89 e1                              	mov rcx, rsp
0x5cb2:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x5cbb:     48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x5cc0:     31 c0                                 	xor eax, eax
0x5cc2:     e8 59 f1 00 00                        	call 0x14e20 <function_14e20>
0x5cc7:     85 c0                                 	test eax, eax
0x5cc9:     74 3d                                 	je 0x5d08 <function_5ca0+0x68>
0x5ccb:     83 f8 01                              	cmp eax, 1
0x5cce:     74 20                                 	je 0x5cf0 <function_5ca0+0x50>
0x5cd0:     31 c0                                 	xor eax, eax
0x5cd2:     48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0x5cd7:     64 48 33 14 25 28 00 00 00            	xor rdx, qword ptr fs:[0x28]
0x5ce0:     75 38                                 	jne 0x5d1a <function_5ca0+0x7a>
0x5ce2:     48 83 c4 18                           	add rsp, 0x18
0x5ce6:     c3                                    	ret 
; data inside code section at 0x5ce7 -- 0x5cf0
0x5ce7:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0x5cf0:     48 c7 05 b5 b5 21 00 ff ff ff ff      	mov qword ptr [rip + 0x21b5b5], -1
0x5cfb:     b8 01 00 00 00                        	mov eax, 1
0x5d00:     eb d0                                 	jmp 0x5cd2 <function_5ca0+0x32>
; data inside code section at 0x5d02 -- 0x5d08
0x5d02:     66 0f 1f 44 00 00                                  |f..D..          |
0x5d08:     48 8b 04 24                           	mov rax, qword ptr [rsp]
0x5d0c:     48 89 05 9d b5 21 00                  	mov qword ptr [rip + 0x21b59d], rax
0x5d13:     b8 01 00 00 00                        	mov eax, 1
0x5d18:     eb b8                                 	jmp 0x5cd2 <function_5ca0+0x32>
0x5d1a:     e8 51 dc ff ff                        	call 0x3970 <__stack_chk_fail>
0x5d1f:     90                                    	nop 
; function: function_5d20 at 0x5d20 -- 0x5f80
0x5d20:     41 57                                 	push r15
0x5d22:     41 56                                 	push r14
0x5d24:     31 f6                                 	xor esi, esi
0x5d26:     41 55                                 	push r13
0x5d28:     41 54                                 	push r12
0x5d2a:     55                                    	push rbp
0x5d2b:     53                                    	push rbx
0x5d2c:     48 81 ec 58 06 00 00                  	sub rsp, 0x658
0x5d33:     48 8d 7c 24 30                        	lea rdi, [rsp + 0x30]
0x5d38:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x5d41:     48 89 84 24 48 06 00 00               	mov qword ptr [rsp + 0x648], rax
0x5d49:     31 c0                                 	xor eax, eax
0x5d4b:     48 89 7c 24 10                        	mov qword ptr [rsp + 0x10], rdi
0x5d50:     48 8d 05 e9 a2 21 00                  	lea rax, [rip + 0x21a2e9]
0x5d57:     48 8b 04 30                           	mov rax, qword ptr [rax + rsi]
0x5d5b:     0f b6 10                              	movzx edx, byte ptr [rax]
0x5d5e:     84 d2                                 	test dl, dl
0x5d60:     74 19                                 	je 0x5d7b <function_5d20+0x5b>
0x5d62:     66 0f 1f 44 00 00                     	nop word ptr [rax + rax]
0x5d68:     80 fa 25                              	cmp dl, 0x25
0x5d6b:     0f b6 48 01                           	movzx ecx, byte ptr [rax + 1]
0x5d6f:     74 0f                                 	je 0x5d80 <function_5d20+0x60>
0x5d71:     89 ca                                 	mov edx, ecx
0x5d73:     48 83 c0 01                           	add rax, 1
0x5d77:     84 d2                                 	test dl, dl
0x5d79:     75 ed                                 	jne 0x5d68 <function_5d20+0x48>
0x5d7b:     31 c0                                 	xor eax, eax
0x5d7d:     eb 0f                                 	jmp 0x5d8e <function_5d20+0x6e>
; data inside code section at 0x5d7f -- 0x5d80
0x5d7f:     90                                                 |.               |
0x5d80:     80 f9 25                              	cmp cl, 0x25
0x5d83:     0f 84 b7 00 00 00                     	je 0x5e40 <function_5d20+0x120>
0x5d89:     80 f9 62                              	cmp cl, 0x62
0x5d8c:     75 e3                                 	jne 0x5d71 <function_5d20+0x51>
0x5d8e:     48 89 04 37                           	mov qword ptr [rdi + rsi], rax
0x5d92:     48 83 c6 08                           	add rsi, 8
0x5d96:     48 83 fe 10                           	cmp rsi, 0x10
0x5d9a:     75 b4                                 	jne 0x5d50 <function_5d20+0x30>
0x5d9c:     48 83 7c 24 30 00                     	cmp qword ptr [rsp + 0x30], 0
0x5da2:     41 bd 05 00 00 00                     	mov r13d, 5
0x5da8:     0f 84 e3 00 00 00                     	je 0x5e91 <function_5d20+0x171>
0x5dae:     48 8d 44 24 40                        	lea rax, [rsp + 0x40]
0x5db3:     48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x5db8:     48 8d 44 24 28                        	lea rax, [rsp + 0x28]
0x5dbd:     48 89 04 24                           	mov qword ptr [rsp], rax
0x5dc1:     48 8b 5c 24 08                        	mov rbx, qword ptr [rsp + 8]
0x5dc6:     41 bc 0e 00 02 00                     	mov r12d, 0x2000e
0x5dcc:     31 ed                                 	xor ebp, ebp
0x5dce:     4c 8d b3 00 06 00 00                  	lea r14, [rbx + 0x600]
0x5dd5:     0f 1f 00                              	nop dword ptr [rax]
0x5dd8:     44 89 e7                              	mov edi, r12d
0x5ddb:     4c 89 6c 24 28                        	mov qword ptr [rsp + 0x28], r13
0x5de0:     e8 3b de ff ff                        	call 0x3c20 <nl_langinfo>
0x5de5:     be 25 00 00 00                        	mov esi, 0x25
0x5dea:     48 89 c7                              	mov rdi, rax
0x5ded:     49 89 c7                              	mov r15, rax
0x5df0:     e8 ab db ff ff                        	call 0x39a0 <strchr>
0x5df5:     48 85 c0                              	test rax, rax
0x5df8:     75 6e                                 	jne 0x5e68 <function_5d20+0x148>
0x5dfa:     48 8b 0c 24                           	mov rcx, qword ptr [rsp]
0x5dfe:     45 31 c9                              	xor r9d, r9d
0x5e01:     45 31 c0                              	xor r8d, r8d
0x5e04:     ba 80 00 00 00                        	mov edx, 0x80
0x5e09:     48 89 de                              	mov rsi, rbx
0x5e0c:     4c 89 ff                              	mov rdi, r15
0x5e0f:     e8 2c 9f 00 00                        	call 0xfd40 <function_fd40>
0x5e14:     48 83 f8 7f                           	cmp rax, 0x7f
0x5e18:     77 4e                                 	ja 0x5e68 <function_5d20+0x148>
0x5e1a:     48 8b 44 24 28                        	mov rax, qword ptr [rsp + 0x28]
0x5e1f:     48 39 c5                              	cmp rbp, rax
0x5e22:     48 0f 42 e8                           	cmovb rbp, rax
0x5e26:     48 83 eb 80                           	sub rbx, -0x80
0x5e2a:     41 83 c4 01                           	add r12d, 1
0x5e2e:     4c 39 f3                              	cmp rbx, r14
0x5e31:     75 a5                                 	jne 0x5dd8 <function_5d20+0xb8>
0x5e33:     49 39 ed                              	cmp r13, rbp
0x5e36:     76 67                                 	jbe 0x5e9f <function_5d20+0x17f>
0x5e38:     49 89 ed                              	mov r13, rbp
0x5e3b:     eb 84                                 	jmp 0x5dc1 <function_5d20+0xa1>
; data inside code section at 0x5e3d -- 0x5e40
0x5e3d:     0f 1f 00                                           |...             |
0x5e40:     0f b6 50 02                           	movzx edx, byte ptr [rax + 2]
0x5e44:     48 83 c0 01                           	add rax, 1
0x5e48:     e9 26 ff ff ff                        	jmp 0x5d73 <function_5d20+0x53>
0x5e4d:     4c 8b 34 24                           	mov r14, qword ptr [rsp]
0x5e51:     49 83 c6 08                           	add r14, 8
0x5e55:     49 83 fe 10                           	cmp r14, 0x10
0x5e59:     75 4c                                 	jne 0x5ea7 <function_5d20+0x187>
0x5e5b:     c6 05 66 a5 21 00 01                  	mov byte ptr [rip + 0x21a566], 1
0x5e62:     66 0f 1f 44 00 00                     	nop word ptr [rax + rax]
0x5e68:     48 8b 84 24 48 06 00 00               	mov rax, qword ptr [rsp + 0x648]
0x5e70:     64 48 33 04 25 28 00 00 00            	xor rax, qword ptr fs:[0x28]
0x5e79:     0f 85 ed 00 00 00                     	jne 0x5f6c <function_5d20+0x24c>
0x5e7f:     48 81 c4 58 06 00 00                  	add rsp, 0x658
0x5e86:     5b                                    	pop rbx
0x5e87:     5d                                    	pop rbp
0x5e88:     41 5c                                 	pop r12
0x5e8a:     41 5d                                 	pop r13
0x5e8c:     41 5e                                 	pop r14
0x5e8e:     41 5f                                 	pop r15
0x5e90:     c3                                    	ret 
0x5e91:     48 83 7c 24 38 00                     	cmp qword ptr [rsp + 0x38], 0
0x5e97:     0f 85 11 ff ff ff                     	jne 0x5dae <function_5d20+0x8e>
0x5e9d:     eb c9                                 	jmp 0x5e68 <function_5d20+0x148>
0x5e9f:     45 31 f6                              	xor r14d, r14d
0x5ea2:     48 89 5c 24 18                        	mov qword ptr [rsp + 0x18], rbx
0x5ea7:     48 8d 05 92 a1 21 00                  	lea rax, [rip + 0x21a192]
0x5eae:     4c 89 34 24                           	mov qword ptr [rsp], r14
0x5eb2:     48 8b 6c 24 08                        	mov rbp, qword ptr [rsp + 8]
0x5eb7:     4d 69 d6 c0 00 00 00                  	imul r10, r14, 0xc0
0x5ebe:     4e 8b 2c 30                           	mov r13, qword ptr [rax + r14]
0x5ec2:     48 8b 44 24 10                        	mov rax, qword ptr [rsp + 0x10]
0x5ec7:     4e 8b 3c 30                           	mov r15, qword ptr [rax + r14]
0x5ecb:     48 8d 05 0e a5 21 00                  	lea rax, [rip + 0x21a50e]
0x5ed2:     4a 8d 1c 10                           	lea rbx, [rax + r10]
0x5ed6:     4d 89 fc                              	mov r12, r15
0x5ed9:     4d 89 fe                              	mov r14, r15
0x5edc:     4c 8b 7c 24 18                        	mov r15, qword ptr [rsp + 0x18]
0x5ee1:     4d 29 ec                              	sub r12, r13
0x5ee4:     eb 66                                 	jmp 0x5f4c <function_5d20+0x22c>
; data inside code section at 0x5ee6 -- 0x5ef0
0x5ee6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x5ef0:     49 81 fc 80 00 00 00                  	cmp r12, 0x80
0x5ef7:     0f 8f 6b ff ff ff                     	jg 0x5e68 <function_5d20+0x148>
0x5efd:     49 8d 46 02                           	lea rax, [r14 + 2]
0x5f01:     48 83 ec 08                           	sub rsp, 8
0x5f05:     4c 8d 05 e4 1c 01 00                  	lea r8, [rip + 0x11ce4]
0x5f0c:     45 89 e1                              	mov r9d, r12d
0x5f0f:     48 c7 c1 ff ff ff ff                  	mov rcx, -1
0x5f16:     ba 01 00 00 00                        	mov edx, 1
0x5f1b:     50                                    	push rax
0x5f1c:     55                                    	push rbp
0x5f1d:     be 80 00 00 00                        	mov esi, 0x80
0x5f22:     41 55                                 	push r13
0x5f24:     48 89 df                              	mov rdi, rbx
0x5f27:     31 c0                                 	xor eax, eax
0x5f29:     e8 92 d8 ff ff                        	call 0x37c0 <__snprintf_chk>
0x5f2e:     48 83 c4 20                           	add rsp, 0x20
0x5f32:     83 f8 7f                              	cmp eax, 0x7f
0x5f35:     0f 87 2d ff ff ff                     	ja 0x5e68 <function_5d20+0x148>
0x5f3b:     48 83 ed 80                           	sub rbp, -0x80
0x5f3f:     48 83 eb 80                           	sub rbx, -0x80
0x5f43:     4c 39 fd                              	cmp rbp, r15
0x5f46:     0f 84 01 ff ff ff                     	je 0x5e4d <function_5d20+0x12d>
0x5f4c:     4d 85 f6                              	test r14, r14
0x5f4f:     75 9f                                 	jne 0x5ef0 <function_5d20+0x1d0>
0x5f51:     48 8d 15 a4 43 01 00                  	lea rdx, [rip + 0x143a4]
0x5f58:     4c 89 e9                              	mov rcx, r13
0x5f5b:     be 80 00 00 00                        	mov esi, 0x80
0x5f60:     48 89 df                              	mov rdi, rbx
0x5f63:     31 c0                                 	xor eax, eax
0x5f65:     e8 56 da ff ff                        	call 0x39c0 <snprintf>
0x5f6a:     eb c6                                 	jmp 0x5f32 <function_5d20+0x212>
0x5f6c:     e8 ff d9 ff ff                        	call 0x3970 <__stack_chk_fail>
0x5f71:     0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0x5f76:     66 2e 0f 1f 84 00 00 00 00 00         	nop word ptr cs:[rax + rax]
; function: function_5f80 at 0x5f80 -- 0x5fe6
0x5f80:     41 55                                 	push r13
0x5f82:     41 54                                 	push r12
0x5f84:     49 89 f4                              	mov r12, rsi
0x5f87:     55                                    	push rbp
0x5f88:     53                                    	push rbx
0x5f89:     48 89 fd                              	mov rbp, rdi
0x5f8c:     bf 20 00 00 00                        	mov edi, 0x20
0x5f91:     41 89 d5                              	mov r13d, edx
0x5f94:     48 83 ec 08                           	sub rsp, 8
0x5f98:     e8 e3 e4 00 00                        	call 0x14480 <function_14480>
0x5f9d:     48 89 c3                              	mov rbx, rax
0x5fa0:     31 c0                                 	xor eax, eax
0x5fa2:     4d 85 e4                              	test r12, r12
0x5fa5:     74 08                                 	je 0x5faf <function_5f80+0x2f>
0x5fa7:     4c 89 e7                              	mov rdi, r12
0x5faa:     e8 01 e7 00 00                        	call 0x146b0 <function_146b0>
0x5faf:     48 89 43 08                           	mov qword ptr [rbx + 8], rax
0x5fb3:     31 c0                                 	xor eax, eax
0x5fb5:     48 85 ed                              	test rbp, rbp
0x5fb8:     74 08                                 	je 0x5fc2 <function_5f80+0x42>
0x5fba:     48 89 ef                              	mov rdi, rbp
0x5fbd:     e8 ee e6 00 00                        	call 0x146b0 <function_146b0>
0x5fc2:     48 89 03                              	mov qword ptr [rbx], rax
0x5fc5:     48 8b 05 b4 b3 21 00                  	mov rax, qword ptr [rip + 0x21b3b4]
0x5fcc:     44 88 6b 10                           	mov byte ptr [rbx + 0x10], r13b
0x5fd0:     48 89 1d a9 b3 21 00                  	mov qword ptr [rip + 0x21b3a9], rbx
0x5fd7:     48 89 43 18                           	mov qword ptr [rbx + 0x18], rax
0x5fdb:     48 83 c4 08                           	add rsp, 8
0x5fdf:     5b                                    	pop rbx
0x5fe0:     5d                                    	pop rbp
0x5fe1:     41 5c                                 	pop r12
0x5fe3:     41 5d                                 	pop r13
0x5fe5:     c3                                    	ret 
; data inside code section at 0x5fe6 -- 0x5ff0
0x5fe6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_5ff0 at 0x5ff0 -- 0x6026
0x5ff0:     48 8b 46 48                           	mov rax, qword ptr [rsi + 0x48]
0x5ff4:     48 39 47 48                           	cmp qword ptr [rdi + 0x48], rax
0x5ff8:     7f 26                                 	jg 0x6020 <function_5ff0+0x30>
0x5ffa:     7c 14                                 	jl 0x6010 <function_5ff0+0x20>
0x5ffc:     48 8b 36                              	mov rsi, qword ptr [rsi]
0x5fff:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0x6002:     e9 19 db ff ff                        	jmp 0x3b20 <strcmp>
; data inside code section at 0x6007 -- 0x6010
0x6007:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0x6010:     b8 01 00 00 00                        	mov eax, 1
0x6015:     c3                                    	ret 
; data inside code section at 0x6016 -- 0x6020
0x6016:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x6020:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0x6025:     c3                                    	ret 
; data inside code section at 0x6026 -- 0x6030
0x6026:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_6030 at 0x6030 -- 0x6066
0x6030:     48 8b 57 48                           	mov rdx, qword ptr [rdi + 0x48]
0x6034:     48 39 56 48                           	cmp qword ptr [rsi + 0x48], rdx
0x6038:     48 89 f0                              	mov rax, rsi
0x603b:     7f 23                                 	jg 0x6060 <function_6030+0x30>
0x603d:     7c 11                                 	jl 0x6050 <function_6030+0x20>
0x603f:     48 8b 37                              	mov rsi, qword ptr [rdi]
0x6042:     48 8b 38                              	mov rdi, qword ptr [rax]
0x6045:     e9 d6 da ff ff                        	jmp 0x3b20 <strcmp>
; data inside code section at 0x604a -- 0x6050
0x604a:     66 0f 1f 44 00 00                                  |f..D..          |
0x6050:     b8 01 00 00 00                        	mov eax, 1
0x6055:     c3                                    	ret 
; data inside code section at 0x6056 -- 0x6060
0x6056:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x6060:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0x6065:     c3                                    	ret 
; data inside code section at 0x6066 -- 0x6070
0x6066:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_6070 at 0x6070 -- 0x607b
0x6070:     48 8b 36                              	mov rsi, qword ptr [rsi]
0x6073:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0x6076:     e9 a5 da ff ff                        	jmp 0x3b20 <strcmp>
; data inside code section at 0x607b -- 0x6080
0x607b:     0f 1f 44 00 00                                     |..D..           |
; function: function_6080 at 0x6080 -- 0x608e
0x6080:     48 89 f0                              	mov rax, rsi
0x6083:     48 8b 37                              	mov rsi, qword ptr [rdi]
0x6086:     48 8b 38                              	mov rdi, qword ptr [rax]
0x6089:     e9 92 da ff ff                        	jmp 0x3b20 <strcmp>
; data inside code section at 0x608e -- 0x6090
0x608e:     66 90                                              |f.              |
; function: function_6090 at 0x6090 -- 0x60d2
0x6090:     53                                    	push rbx
0x6091:     48 89 fb                              	mov rbx, rdi
0x6094:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0x6097:     e8 d4 dd ff ff                        	call 0x3e70 <free>
0x609c:     48 8b 7b 08                           	mov rdi, qword ptr [rbx + 8]
0x60a0:     e8 cb dd ff ff                        	call 0x3e70 <free>
0x60a5:     48 8b 7b 10                           	mov rdi, qword ptr [rbx + 0x10]
0x60a9:     e8 c2 dd ff ff                        	call 0x3e70 <free>
0x60ae:     48 8b bb b0 00 00 00                  	mov rdi, qword ptr [rbx + 0xb0]
0x60b5:     48 8d 05 66 9f 21 00                  	lea rax, [rip + 0x219f66]
0x60bc:     48 39 c7                              	cmp rdi, rax
0x60bf:     74 0f                                 	je 0x60d0 <function_6090+0x40>
0x60c1:     5b                                    	pop rbx
0x60c2:     e9 d9 dc ff ff                        	jmp 0x3da0 <function_3da0>
; data inside code section at 0x60c7 -- 0x60d0
0x60c7:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0x60d0:     5b                                    	pop rbx
0x60d1:     c3                                    	ret 
; data inside code section at 0x60d2 -- 0x60e0
0x60d2:     0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: function_60e0 at 0x60e0 -- 0x618c
0x60e0:     48 83 3d c8 b2 21 00 00               	cmp qword ptr [rip + 0x21b2c8], 0
0x60e8:     53                                    	push rbx
0x60e9:     74 22                                 	je 0x610d <function_60e0+0x2d>
0x60eb:     31 db                                 	xor ebx, ebx
0x60ed:     0f 1f 00                              	nop dword ptr [rax]
0x60f0:     48 8b 05 a9 b2 21 00                  	mov rax, qword ptr [rip + 0x21b2a9]
0x60f7:     48 8b 3c d8                           	mov rdi, qword ptr [rax + rbx*8]
0x60fb:     48 83 c3 01                           	add rbx, 1
0x60ff:     e8 8c ff ff ff                        	call 0x6090 <function_6090>
0x6104:     48 39 1d a5 b2 21 00                  	cmp qword ptr [rip + 0x21b2a5], rbx
0x610b:     77 e3                                 	ja 0x60f0 <function_60e0+0x10>
0x610d:     48 c7 05 98 b2 21 00 00 00 00 00      	mov qword ptr [rip + 0x21b298], 0
0x6118:     c6 05 8a b2 21 00 00                  	mov byte ptr [rip + 0x21b28a], 0
0x611f:     c6 05 3e b2 21 00 00                  	mov byte ptr [rip + 0x21b23e], 0
0x6126:     c7 05 30 b2 21 00 00 00 00 00         	mov dword ptr [rip + 0x21b230], 0
0x6130:     c7 05 22 b2 21 00 00 00 00 00         	mov dword ptr [rip + 0x21b222], 0
0x613a:     c7 05 14 b2 21 00 00 00 00 00         	mov dword ptr [rip + 0x21b214], 0
0x6144:     c7 05 02 b2 21 00 00 00 00 00         	mov dword ptr [rip + 0x21b202], 0
0x614e:     c7 05 f4 b1 21 00 00 00 00 00         	mov dword ptr [rip + 0x21b1f4], 0
0x6158:     c7 05 e6 b1 21 00 00 00 00 00         	mov dword ptr [rip + 0x21b1e6], 0
0x6162:     c7 05 e8 b1 21 00 00 00 00 00         	mov dword ptr [rip + 0x21b1e8], 0
0x616c:     c7 05 ce b1 21 00 00 00 00 00         	mov dword ptr [rip + 0x21b1ce], 0
0x6176:     c7 05 c0 b1 21 00 00 00 00 00         	mov dword ptr [rip + 0x21b1c0], 0
0x6180:     c7 05 b2 b1 21 00 00 00 00 00         	mov dword ptr [rip + 0x21b1b2], 0
0x618a:     5b                                    	pop rbx
0x618b:     c3                                    	ret 
; data inside code section at 0x618c -- 0x6190
0x618c:     0f 1f 40 00                                        |..@.            |
; function: function_6190 at 0x6190 -- 0x62e1
0x6190:     55                                    	push rbp
0x6191:     53                                    	push rbx
0x6192:     48 89 fb                              	mov rbx, rdi
0x6195:     48 89 da                              	mov rdx, rbx
0x6198:     48 c7 c1 ff ff ff ff                  	mov rcx, -1
0x619f:     be 02 00 00 00                        	mov esi, 2
0x61a4:     48 83 ec 18                           	sub rsp, 0x18
0x61a8:     4c 8b 05 21 b1 21 00                  	mov r8, qword ptr [rip + 0x21b121]
0x61af:     48 8d 7c 24 06                        	lea rdi, [rsp + 6]
0x61b4:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x61bd:     48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x61c2:     31 c0                                 	xor eax, eax
0x61c4:     e8 97 d4 00 00                        	call 0x13660 <function_13660>
0x61c9:     0f b6 54 24 06                        	movzx edx, byte ptr [rsp + 6]
0x61ce:     38 13                                 	cmp byte ptr [rbx], dl
0x61d0:     74 1e                                 	je 0x61f0 <function_6190+0x60>
0x61d2:     b8 01 00 00 00                        	mov eax, 1
0x61d7:     48 8b 4c 24 08                        	mov rcx, qword ptr [rsp + 8]
0x61dc:     64 48 33 0c 25 28 00 00 00            	xor rcx, qword ptr fs:[0x28]
0x61e5:     75 1c                                 	jne 0x6203 <function_6190+0x73>
0x61e7:     48 83 c4 18                           	add rsp, 0x18
0x61eb:     5b                                    	pop rbx
0x61ec:     5d                                    	pop rbp
0x61ed:     c3                                    	ret 
; data inside code section at 0x61ee -- 0x61f0
0x61ee:     66 90                                              |f.              |
0x61f0:     48 89 c5                              	mov rbp, rax
0x61f3:     48 89 df                              	mov rdi, rbx
0x61f6:     e8 55 d7 ff ff                        	call 0x3950 <strlen>
0x61fb:     48 39 e8                              	cmp rax, rbp
0x61fe:     0f 95 c0                              	setne al
0x6201:     eb d4                                 	jmp 0x61d7 <function_6190+0x47>
0x6203:     e8 68 d7 ff ff                        	call 0x3970 <__stack_chk_fail>
0x6208:     0f 1f 84 00 00 00 00 00               	nop dword ptr [rax + rax]
0x6210:     41 56                                 	push r14
0x6212:     41 55                                 	push r13
0x6214:     41 54                                 	push r12
0x6216:     55                                    	push rbp
0x6217:     41 89 f4                              	mov r12d, esi
0x621a:     53                                    	push rbx
0x621b:     48 89 fb                              	mov rbx, rdi
0x621e:     e8 2d d7 ff ff                        	call 0x3950 <strlen>
0x6223:     48 8d 48 01                           	lea rcx, [rax + 1]
0x6227:     b8 03 00 00 00                        	mov eax, 3
0x622c:     48 f7 e1                              	mul rcx
0x622f:     0f 80 9d 00 00 00                     	jo 0x62d2 <function_6190+0x142>
0x6235:     31 f6                                 	xor esi, esi
0x6237:     48 85 c0                              	test rax, rax
0x623a:     0f 88 9c 00 00 00                     	js 0x62dc <function_6190+0x14c>
0x6240:     48 85 f6                              	test rsi, rsi
0x6243:     0f 85 93 00 00 00                     	jne 0x62dc <function_6190+0x14c>
0x6249:     48 8d 3c 49                           	lea rdi, [rcx + rcx*2]
0x624d:     4c 8d 35 8c ad 21 00                  	lea r14, [rip + 0x21ad8c]
0x6254:     e8 27 e2 00 00                        	call 0x14480 <function_14480>
0x6259:     49 89 c5                              	mov r13, rax
0x625c:     48 89 c5                              	mov rbp, rax
0x625f:     0f b6 03                              	movzx eax, byte ptr [rbx]
0x6262:     84 c0                                 	test al, al
0x6264:     74 28                                 	je 0x628e <function_6190+0xfe>
0x6266:     48 83 c3 01                           	add rbx, 1
0x626a:     3c 2f                                 	cmp al, 0x2f
0x626c:     75 05                                 	jne 0x6273 <function_6190+0xe3>
0x626e:     45 84 e4                              	test r12b, r12b
0x6271:     75 55                                 	jne 0x62c8 <function_6190+0x138>
0x6273:     0f b6 d0                              	movzx edx, al
0x6276:     41 80 3c 16 00                        	cmp byte ptr [r14 + rdx], 0
0x627b:     49 89 d0                              	mov r8, rdx
0x627e:     74 20                                 	je 0x62a0 <function_6190+0x110>
0x6280:     88 45 00                              	mov byte ptr [rbp], al
0x6283:     0f b6 03                              	movzx eax, byte ptr [rbx]
0x6286:     48 83 c5 01                           	add rbp, 1
0x628a:     84 c0                                 	test al, al
0x628c:     75 d8                                 	jne 0x6266 <function_6190+0xd6>
0x628e:     c6 45 00 00                           	mov byte ptr [rbp], 0
0x6292:     4c 89 e8                              	mov rax, r13
0x6295:     5b                                    	pop rbx
0x6296:     5d                                    	pop rbp
0x6297:     41 5c                                 	pop r12
0x6299:     41 5d                                 	pop r13
0x629b:     41 5e                                 	pop r14
0x629d:     c3                                    	ret 
; data inside code section at 0x629e -- 0x62a0
0x629e:     66 90                                              |f.              |
0x62a0:     48 8d 0d 52 19 01 00                  	lea rcx, [rip + 0x11952]
0x62a7:     48 89 ef                              	mov rdi, rbp
0x62aa:     48 c7 c2 ff ff ff ff                  	mov rdx, -1
0x62b1:     be 01 00 00 00                        	mov esi, 1
0x62b6:     31 c0                                 	xor eax, eax
0x62b8:     48 83 c5 03                           	add rbp, 3
0x62bc:     e8 9f db ff ff                        	call 0x3e60 <__sprintf_chk>
0x62c1:     eb 9c                                 	jmp 0x625f <function_6190+0xcf>
; data inside code section at 0x62c3 -- 0x62c8
0x62c3:     0f 1f 44 00 00                                     |..D..           |
0x62c8:     c6 45 00 2f                           	mov byte ptr [rbp], 0x2f
0x62cc:     48 83 c5 01                           	add rbp, 1
0x62d0:     eb 8d                                 	jmp 0x625f <function_6190+0xcf>
0x62d2:     be 01 00 00 00                        	mov esi, 1
0x62d7:     e9 5b ff ff ff                        	jmp 0x6237 <function_6190+0xa7>
0x62dc:     e8 ef e3 00 00                        	call 0x146d0 <function_146d0>
; data inside code section at 0x62e1 -- 0x62f0
0x62e1:     0f 1f 44 00 00 66 2e 0f  1f 84 00 00 00 00 00      |..D..f......... |
; function: function_62f0 at 0x62f0 -- 0x6482
0x62f0:     53                                    	push rbx
0x62f1:     48 8b 1d b8 b0 21 00                  	mov rbx, qword ptr [rip + 0x21b0b8]
0x62f8:     48 89 d8                              	mov rax, rbx
0x62fb:     48 d1 e8                              	shr rax, 1
0x62fe:     48 01 d8                              	add rax, rbx
0x6301:     48 3b 05 90 b0 21 00                  	cmp rax, qword ptr [rip + 0x21b090]
0x6308:     0f 87 f2 00 00 00                     	ja 0x6400 <function_62f0+0x110>
0x630e:     48 85 db                              	test rbx, rbx
0x6311:     74 2f                                 	je 0x6342 <function_62f0+0x52>
0x6313:     48 8d 0c 9b                           	lea rcx, [rbx + rbx*4]
0x6317:     48 8b 05 a2 b0 21 00                  	mov rax, qword ptr [rip + 0x21b0a2]
0x631e:     48 8b 15 7b b0 21 00                  	mov rdx, qword ptr [rip + 0x21b07b]
0x6325:     48 8d 0c 89                           	lea rcx, [rcx + rcx*4]
0x6329:     48 8d 0c c8                           	lea rcx, [rax + rcx*8]
0x632d:     0f 1f 00                              	nop dword ptr [rax]
0x6330:     48 89 02                              	mov qword ptr [rdx], rax
0x6333:     48 05 c8 00 00 00                     	add rax, 0xc8
0x6339:     48 83 c2 08                           	add rdx, 8
0x633d:     48 39 c1                              	cmp rcx, rax
0x6340:     75 ee                                 	jne 0x6330 <function_62f0+0x40>
0x6342:     83 3d e7 af 21 00 ff                  	cmp dword ptr [rip + 0x21afe7], -1
0x6349:     0f 84 ad 00 00 00                     	je 0x63fc <function_62f0+0x10c>
0x634f:     48 8d 3d aa 9f 21 00                  	lea rdi, [rip + 0x219faa]
0x6356:     e8 85 d7 ff ff                        	call 0x3ae0 <_setjmp>
0x635b:     85 c0                                 	test eax, eax
0x635d:     8b 0d cd af 21 00                     	mov ecx, dword ptr [rip + 0x21afcd]
0x6363:     74 4b                                 	je 0x63b0 <function_62f0+0xc0>
0x6365:     83 f9 03                              	cmp ecx, 3
0x6368:     0f 84 e9 00 00 00                     	je 0x6457 <function_62f0+0x167>
0x636e:     48 8b 35 3b b0 21 00                  	mov rsi, qword ptr [rip + 0x21b03b]
0x6375:     48 8b 3d 24 b0 21 00                  	mov rdi, qword ptr [rip + 0x21b024]
0x637c:     48 85 f6                              	test rsi, rsi
0x637f:     74 22                                 	je 0x63a3 <function_62f0+0xb3>
0x6381:     48 8b 15 38 b0 21 00                  	mov rdx, qword ptr [rip + 0x21b038]
0x6388:     4c 8d 04 f7                           	lea r8, [rdi + rsi*8]
0x638c:     48 89 f8                              	mov rax, rdi
0x638f:     90                                    	nop 
0x6390:     48 89 10                              	mov qword ptr [rax], rdx
0x6393:     48 83 c0 08                           	add rax, 8
0x6397:     48 81 c2 c8 00 00 00                  	add rdx, 0xc8
0x639e:     4c 39 c0                              	cmp rax, r8
0x63a1:     75 ed                                 	jne 0x6390 <function_62f0+0xa0>
0x63a3:     b8 01 00 00 00                        	mov eax, 1
0x63a8:     eb 14                                 	jmp 0x63be <function_62f0+0xce>
; data inside code section at 0x63aa -- 0x63b0
0x63aa:     66 0f 1f 44 00 00                                  |f..D..          |
0x63b0:     48 8b 35 f9 af 21 00                  	mov rsi, qword ptr [rip + 0x21aff9]
0x63b7:     48 8b 3d e2 af 21 00                  	mov rdi, qword ptr [rip + 0x21afe2]
0x63be:     83 f9 04                              	cmp ecx, 4
0x63c1:     ba 00 00 00 00                        	mov edx, 0
0x63c6:     0f 44 15 67 af 21 00                  	cmove edx, dword ptr [rip + 0x21af67]
0x63cd:     48 98                                 	cdqe 
0x63cf:     44 0f b6 05 1d af 21 00               	movzx r8d, byte ptr [rip + 0x21af1d]
0x63d7:     01 ca                                 	add edx, ecx
0x63d9:     48 8d 14 50                           	lea rdx, [rax + rdx*2]
0x63dd:     0f b6 05 4b af 21 00                  	movzx eax, byte ptr [rip + 0x21af4b]
0x63e4:     48 8d 04 50                           	lea rax, [rax + rdx*2]
0x63e8:     49 8d 14 40                           	lea rdx, [r8 + rax*2]
0x63ec:     48 8d 05 0d 8c 21 00                  	lea rax, [rip + 0x218c0d]
0x63f3:     48 8b 14 d0                           	mov rdx, qword ptr [rax + rdx*8]
0x63f7:     e8 e4 a1 00 00                        	call 0x105e0 <function_105e0>
0x63fc:     5b                                    	pop rbx
0x63fd:     c3                                    	ret 
; data inside code section at 0x63fe -- 0x6400
0x63fe:     66 90                                              |f.              |
0x6400:     48 8b 3d 99 af 21 00                  	mov rdi, qword ptr [rip + 0x21af99]
0x6407:     e8 64 da ff ff                        	call 0x3e70 <free>
0x640c:     ba 18 00 00 00                        	mov edx, 0x18
0x6411:     31 c9                                 	xor ecx, ecx
0x6413:     48 89 d0                              	mov rax, rdx
0x6416:     48 f7 e3                              	mul rbx
0x6419:     70 5b                                 	jo 0x6476 <function_62f0+0x186>
0x641b:     48 85 c0                              	test rax, rax
0x641e:     b8 01 00 00 00                        	mov eax, 1
0x6423:     48 0f 48 c8                           	cmovs rcx, rax
0x6427:     48 85 c9                              	test rcx, rcx
0x642a:     75 51                                 	jne 0x647d <function_62f0+0x18d>
0x642c:     48 8d 3c 5b                           	lea rdi, [rbx + rbx*2]
0x6430:     48 c1 e7 03                           	shl rdi, 3
0x6434:     e8 47 e0 00 00                        	call 0x14480 <function_14480>
0x6439:     48 8b 1d 70 af 21 00                  	mov rbx, qword ptr [rip + 0x21af70]
0x6440:     48 89 05 59 af 21 00                  	mov qword ptr [rip + 0x21af59], rax
0x6447:     48 8d 04 5b                           	lea rax, [rbx + rbx*2]
0x644b:     48 89 05 46 af 21 00                  	mov qword ptr [rip + 0x21af46], rax
0x6452:     e9 b7 fe ff ff                        	jmp 0x630e <function_62f0+0x1e>
0x6457:     48 8d 0d 6a 06 01 00                  	lea rcx, [rip + 0x1066a]
0x645e:     48 8d 35 9b 17 01 00                  	lea rsi, [rip + 0x1179b]
0x6465:     48 8d 3d 9d 17 01 00                  	lea rdi, [rip + 0x1179d]
0x646c:     ba e5 0e 00 00                        	mov edx, 0xee5
0x6471:     e8 ba d5 ff ff                        	call 0x3a30 <__assert_fail>
0x6476:     b9 01 00 00 00                        	mov ecx, 1
0x647b:     eb 9e                                 	jmp 0x641b <function_62f0+0x12b>
0x647d:     e8 4e e2 00 00                        	call 0x146d0 <function_146d0>
; data inside code section at 0x6482 -- 0x6490
0x6482:     0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: function_6490 at 0x6490 -- 0x64b8
0x6490:     55                                    	push rbp
0x6491:     53                                    	push rbx
0x6492:     48 89 f5                              	mov rbp, rsi
0x6495:     48 89 fb                              	mov rbx, rdi
0x6498:     48 83 ec 08                           	sub rsp, 8
0x649c:     e8 4f d3 ff ff                        	call 0x37f0 <__errno_location>
0x64a1:     c7 00 00 00 00 00                     	mov dword ptr [rax], 0
0x64a7:     48 83 c4 08                           	add rsp, 8
0x64ab:     48 89 ee                              	mov rsi, rbp
0x64ae:     48 89 df                              	mov rdi, rbx
0x64b1:     5b                                    	pop rbx
0x64b2:     5d                                    	pop rbp
0x64b3:     e9 98 d7 ff ff                        	jmp 0x3c50 <strcoll>
; data inside code section at 0x64b8 -- 0x64c0
0x64b8:     0f 1f 84 00 00 00 00 00                            |........        |
; function: function_64c0 at 0x64c0 -- 0x64e6
0x64c0:     48 8b 46 48                           	mov rax, qword ptr [rsi + 0x48]
0x64c4:     48 39 47 48                           	cmp qword ptr [rdi + 0x48], rax
0x64c8:     7f 16                                 	jg 0x64e0 <function_64c0+0x20>
0x64ca:     b8 01 00 00 00                        	mov eax, 1
0x64cf:     7d 07                                 	jge 0x64d8 <function_64c0+0x18>
0x64d1:     f3 c3                                 	ret 
; data inside code section at 0x64d3 -- 0x64d8
0x64d3:     0f 1f 44 00 00                                     |..D..           |
0x64d8:     48 8b 36                              	mov rsi, qword ptr [rsi]
0x64db:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0x64de:     eb b0                                 	jmp 0x6490
0x64e0:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0x64e5:     c3                                    	ret 
; data inside code section at 0x64e6 -- 0x64f0
0x64e6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_64f0 at 0x64f0 -- 0x6526
0x64f0:     48 8b 47 48                           	mov rax, qword ptr [rdi + 0x48]
0x64f4:     48 39 46 48                           	cmp qword ptr [rsi + 0x48], rax
0x64f8:     48 89 f2                              	mov rdx, rsi
0x64fb:     7f 23                                 	jg 0x6520 <function_64f0+0x30>
0x64fd:     b8 01 00 00 00                        	mov eax, 1
0x6502:     7d 0c                                 	jge 0x6510 <function_64f0+0x20>
0x6504:     f3 c3                                 	ret 
; data inside code section at 0x6506 -- 0x6510
0x6506:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x6510:     48 8b 37                              	mov rsi, qword ptr [rdi]
0x6513:     48 8b 3a                              	mov rdi, qword ptr [rdx]
0x6516:     e9 75 ff ff ff                        	jmp 0x6490
; data inside code section at 0x651b -- 0x6520
0x651b:     0f 1f 44 00 00                                     |..D..           |
0x6520:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0x6525:     c3                                    	ret 
; data inside code section at 0x6526 -- 0x6530
0x6526:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_6530 at 0x6530 -- 0x653b
0x6530:     48 8b 36                              	mov rsi, qword ptr [rsi]
0x6533:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0x6536:     e9 55 ff ff ff                        	jmp 0x6490
; data inside code section at 0x653b -- 0x6540
0x653b:     0f 1f 44 00 00                                     |..D..           |
; function: function_6540 at 0x6540 -- 0x654e
0x6540:     48 89 f0                              	mov rax, rsi
0x6543:     48 8b 37                              	mov rsi, qword ptr [rdi]
0x6546:     48 8b 38                              	mov rdi, qword ptr [rax]
0x6549:     e9 42 ff ff ff                        	jmp 0x6490
; data inside code section at 0x654e -- 0x6550
0x654e:     66 90                                              |f.              |
; function: function_6550 at 0x6550 -- 0x655e
0x6550:     48 89 f0                              	mov rax, rsi
0x6553:     48 8b 37                              	mov rsi, qword ptr [rdi]
0x6556:     48 8b 38                              	mov rdi, qword ptr [rax]
0x6559:     e9 62 6e 00 00                        	jmp 0xd3c0 <function_d3c0>
; data inside code section at 0x655e -- 0x6560
0x655e:     66 90                                              |f.              |
; function: function_6560 at 0x6560 -- 0x656b
0x6560:     48 8b 36                              	mov rsi, qword ptr [rsi]
0x6563:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0x6566:     e9 55 6e 00 00                        	jmp 0xd3c0 <function_d3c0>
; data inside code section at 0x656b -- 0x6570
0x656b:     0f 1f 44 00 00                                     |..D..           |
; function: function_6570 at 0x6570 -- 0x66db
0x6570:     41 57                                 	push r15
0x6572:     41 56                                 	push r14
0x6574:     49 89 fe                              	mov r14, rdi
0x6577:     41 55                                 	push r13
0x6579:     41 54                                 	push r12
0x657b:     44 0f b6 ee                           	movzx r13d, sil
0x657f:     55                                    	push rbp
0x6580:     53                                    	push rbx
0x6581:     48 83 ec 08                           	sub rsp, 8
0x6585:     48 85 ff                              	test rdi, rdi
0x6588:     74 16                                 	je 0x65a0 <function_6570+0x30>
0x658a:     48 83 3d 36 ae 21 00 00               	cmp qword ptr [rip + 0x21ae36], 0
0x6592:     74 0c                                 	je 0x65a0 <function_6570+0x30>
0x6594:     48 89 fe                              	mov rsi, rdi
0x6597:     31 d2                                 	xor edx, edx
0x6599:     31 ff                                 	xor edi, edi
0x659b:     e8 e0 f9 ff ff                        	call 0x5f80 <function_5f80>
0x65a0:     48 8b 1d 09 ae 21 00                  	mov rbx, qword ptr [rip + 0x21ae09]
0x65a7:     4c 8d 24 dd f8 ff ff ff               	lea r12, [rbx*8 - 8]
0x65af:     48 83 eb 01                           	sub rbx, 1
0x65b3:     48 83 fb ff                           	cmp rbx, -1
0x65b7:     74 30                                 	je 0x65e9 <function_6570+0x79>
0x65b9:     0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0x65c0:     48 8b 05 d9 ad 21 00                  	mov rax, qword ptr [rip + 0x21add9]
0x65c7:     4a 8b 2c 20                           	mov rbp, qword ptr [rax + r12]
0x65cb:     8b 85 a8 00 00 00                     	mov eax, dword ptr [rbp + 0xa8]
0x65d1:     83 f8 03                              	cmp eax, 3
0x65d4:     74 6a                                 	je 0x6640 <function_6570+0xd0>
0x65d6:     83 f8 09                              	cmp eax, 9
0x65d9:     74 65                                 	je 0x6640 <function_6570+0xd0>
0x65db:     48 83 eb 01                           	sub rbx, 1
0x65df:     49 83 ec 08                           	sub r12, 8
0x65e3:     48 83 fb ff                           	cmp rbx, -1
0x65e7:     75 d7                                 	jne 0x65c0 <function_6570+0x50>
0x65e9:     48 8b 15 c0 ad 21 00                  	mov rdx, qword ptr [rip + 0x21adc0]
0x65f0:     48 85 d2                              	test rdx, rdx
0x65f3:     74 33                                 	je 0x6628 <function_6570+0xb8>
0x65f5:     48 8b 35 a4 ad 21 00                  	mov rsi, qword ptr [rip + 0x21ada4]
0x65fc:     48 8d 3c d6                           	lea rdi, [rsi + rdx*8]
0x6600:     48 89 f0                              	mov rax, rsi
0x6603:     31 d2                                 	xor edx, edx
0x6605:     0f 1f 00                              	nop dword ptr [rax]
0x6608:     48 8b 08                              	mov rcx, qword ptr [rax]
0x660b:     83 b9 a8 00 00 00 09                  	cmp dword ptr [rcx + 0xa8], 9
0x6612:     48 89 0c d6                           	mov qword ptr [rsi + rdx*8], rcx
0x6616:     0f 95 c1                              	setne cl
0x6619:     48 83 c0 08                           	add rax, 8
0x661d:     0f b6 c9                              	movzx ecx, cl
0x6620:     48 01 ca                              	add rdx, rcx
0x6623:     48 39 c7                              	cmp rdi, rax
0x6626:     75 e0                                 	jne 0x6608 <function_6570+0x98>
0x6628:     48 89 15 81 ad 21 00                  	mov qword ptr [rip + 0x21ad81], rdx
0x662f:     48 83 c4 08                           	add rsp, 8
0x6633:     5b                                    	pop rbx
0x6634:     5d                                    	pop rbp
0x6635:     41 5c                                 	pop r12
0x6637:     41 5d                                 	pop r13
0x6639:     41 5e                                 	pop r14
0x663b:     41 5f                                 	pop r15
0x663d:     c3                                    	ret 
; data inside code section at 0x663e -- 0x6640
0x663e:     66 90                                              |f.              |
0x6640:     4d 85 f6                              	test r14, r14
0x6643:     4c 8b 7d 00                           	mov r15, qword ptr [rbp]
0x6647:     74 57                                 	je 0x66a0 <function_6570+0x130>
0x6649:     4c 89 ff                              	mov rdi, r15
0x664c:     e8 bf 67 00 00                        	call 0xce10 <function_ce10>
0x6651:     80 38 2e                              	cmp byte ptr [rax], 0x2e
0x6654:     74 62                                 	je 0x66b8 <function_6570+0x148>
0x6656:     41 80 3f 2f                           	cmp byte ptr [r15], 0x2f
0x665a:     74 44                                 	je 0x66a0 <function_6570+0x130>
0x665c:     4c 89 fe                              	mov rsi, r15
0x665f:     31 d2                                 	xor edx, edx
0x6661:     4c 89 f7                              	mov rdi, r14
0x6664:     e8 97 6b 00 00                        	call 0xd200 <function_d200>
0x6669:     48 8b 75 08                           	mov rsi, qword ptr [rbp + 8]
0x666d:     49 89 c7                              	mov r15, rax
0x6670:     48 89 c7                              	mov rdi, rax
0x6673:     44 89 ea                              	mov edx, r13d
0x6676:     e8 05 f9 ff ff                        	call 0x5f80 <function_5f80>
0x667b:     4c 89 ff                              	mov rdi, r15
0x667e:     e8 ed d7 ff ff                        	call 0x3e70 <free>
0x6683:     83 bd a8 00 00 00 09                  	cmp dword ptr [rbp + 0xa8], 9
0x668a:     0f 85 4b ff ff ff                     	jne 0x65db <function_6570+0x6b>
0x6690:     48 89 ef                              	mov rdi, rbp
0x6693:     e8 f8 f9 ff ff                        	call 0x6090 <function_6090>
0x6698:     e9 3e ff ff ff                        	jmp 0x65db <function_6570+0x6b>
; data inside code section at 0x669d -- 0x66a0
0x669d:     0f 1f 00                                           |...             |
0x66a0:     48 8b 75 08                           	mov rsi, qword ptr [rbp + 8]
0x66a4:     44 89 ea                              	mov edx, r13d
0x66a7:     4c 89 ff                              	mov rdi, r15
0x66aa:     e8 d1 f8 ff ff                        	call 0x5f80 <function_5f80>
0x66af:     eb d2                                 	jmp 0x6683 <function_6570+0x113>
; data inside code section at 0x66b1 -- 0x66b8
0x66b1:     0f 1f 80 00 00 00 00                               |.......         |
0x66b8:     31 d2                                 	xor edx, edx
0x66ba:     80 78 01 2e                           	cmp byte ptr [rax + 1], 0x2e
0x66be:     0f 94 c2                              	sete dl
0x66c1:     0f b6 44 10 01                        	movzx eax, byte ptr [rax + rdx + 1]
0x66c6:     84 c0                                 	test al, al
0x66c8:     0f 84 0d ff ff ff                     	je 0x65db <function_6570+0x6b>
0x66ce:     3c 2f                                 	cmp al, 0x2f
0x66d0:     0f 84 05 ff ff ff                     	je 0x65db <function_6570+0x6b>
0x66d6:     e9 7b ff ff ff                        	jmp 0x6656 <function_6570+0xe6>
; data inside code section at 0x66db -- 0x66e0
0x66db:     0f 1f 44 00 00                                     |..D..           |
; function: function_66e0 at 0x66e0 -- 0x67a6
0x66e0:     48 39 f7                              	cmp rdi, rsi
0x66e3:     0f 83 9f 00 00 00                     	jae 0x6788 <function_66e0+0xa8>
0x66e9:     41 54                                 	push r12
0x66eb:     49 89 f4                              	mov r12, rsi
0x66ee:     55                                    	push rbp
0x66ef:     53                                    	push rbx
0x66f0:     48 89 fb                              	mov rbx, rdi
0x66f3:     eb 41                                 	jmp 0x6736 <function_66e0+0x56>
; data inside code section at 0x66f5 -- 0x66f8
0x66f5:     0f 1f 00                                           |...             |
0x66f8:     31 d2                                 	xor edx, edx
0x66fa:     4c 89 e0                              	mov rax, r12
0x66fd:     48 f7 f1                              	div rcx
0x6700:     31 d2                                 	xor edx, edx
0x6702:     49 89 c1                              	mov r9, rax
0x6705:     48 89 e8                              	mov rax, rbp
0x6708:     48 f7 f1                              	div rcx
0x670b:     49 39 c1                              	cmp r9, rax
0x670e:     76 45                                 	jbe 0x6755 <function_66e0+0x75>
0x6710:     4c 39 c6                              	cmp rsi, r8
0x6713:     73 7b                                 	jae 0x6790 <function_66e0+0xb0>
0x6715:     48 8d 46 01                           	lea rax, [rsi + 1]
0x6719:     48 89 47 28                           	mov qword ptr [rdi + 0x28], rax
0x671d:     c6 06 09                              	mov byte ptr [rsi], 9
0x6720:     48 89 d8                              	mov rax, rbx
0x6723:     31 d2                                 	xor edx, edx
0x6725:     48 f7 f1                              	div rcx
0x6728:     48 01 d9                              	add rcx, rbx
0x672b:     48 89 cb                              	mov rbx, rcx
0x672e:     48 29 d3                              	sub rbx, rdx
0x6731:     4c 39 e3                              	cmp rbx, r12
0x6734:     73 37                                 	jae 0x676d <function_66e0+0x8d>
0x6736:     48 8b 0d 83 ab 21 00                  	mov rcx, qword ptr [rip + 0x21ab83]
0x673d:     48 8b 3d 44 9b 21 00                  	mov rdi, qword ptr [rip + 0x219b44]
0x6744:     48 8d 6b 01                           	lea rbp, [rbx + 1]
0x6748:     48 85 c9                              	test rcx, rcx
0x674b:     48 8b 77 28                           	mov rsi, qword ptr [rdi + 0x28]
0x674f:     4c 8b 47 30                           	mov r8, qword ptr [rdi + 0x30]
0x6753:     75 a3                                 	jne 0x66f8 <function_66e0+0x18>
0x6755:     4c 39 c6                              	cmp rsi, r8
0x6758:     73 1e                                 	jae 0x6778 <function_66e0+0x98>
0x675a:     48 8d 46 01                           	lea rax, [rsi + 1]
0x675e:     48 89 47 28                           	mov qword ptr [rdi + 0x28], rax
0x6762:     c6 06 20                              	mov byte ptr [rsi], 0x20
0x6765:     48 89 eb                              	mov rbx, rbp
0x6768:     4c 39 e3                              	cmp rbx, r12
0x676b:     72 c9                                 	jb 0x6736 <function_66e0+0x56>
0x676d:     5b                                    	pop rbx
0x676e:     5d                                    	pop rbp
0x676f:     41 5c                                 	pop r12
0x6771:     c3                                    	ret 
; data inside code section at 0x6772 -- 0x6778
0x6772:     66 0f 1f 44 00 00                                  |f..D..          |
0x6778:     be 20 00 00 00                        	mov esi, 0x20
0x677d:     e8 4e d2 ff ff                        	call 0x39d0 <__overflow>
0x6782:     eb e1                                 	jmp 0x6765 <function_66e0+0x85>
; data inside code section at 0x6784 -- 0x6788
0x6784:     0f 1f 40 00                                        |..@.            |
0x6788:     f3 c3                                 	ret 
; data inside code section at 0x678a -- 0x6790
0x678a:     66 0f 1f 44 00 00                                  |f..D..          |
0x6790:     be 09 00 00 00                        	mov esi, 9
0x6795:     e8 36 d2 ff ff                        	call 0x39d0 <__overflow>
0x679a:     48 8b 0d 1f ab 21 00                  	mov rcx, qword ptr [rip + 0x21ab1f]
0x67a1:     e9 7a ff ff ff                        	jmp 0x6720 <function_66e0+0x40>
; data inside code section at 0x67a6 -- 0x67b0
0x67a6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_67b0 at 0x67b0 -- 0x6879
0x67b0:     41 54                                 	push r12
0x67b2:     55                                    	push rbp
0x67b3:     53                                    	push rbx
0x67b4:     48 8b 46 18                           	mov rax, qword ptr [rsi + 0x18]
0x67b8:     48 8b 5e 10                           	mov rbx, qword ptr [rsi + 0x10]
0x67bc:     48 89 c5                              	mov rbp, rax
0x67bf:     48 29 dd                              	sub rbp, rbx
0x67c2:     48 c1 ed 03                           	shr rbp, 3
0x67c6:     48 85 ed                              	test rbp, rbp
0x67c9:     0f 84 88 00 00 00                     	je 0x6857 <function_67b0+0xa7>
0x67cf:     48 39 d8                              	cmp rax, rbx
0x67d2:     0f 84 8a 00 00 00                     	je 0x6862 <function_67b0+0xb2>
0x67d8:     48 8b 56 30                           	mov rdx, qword ptr [rsi + 0x30]
0x67dc:     48 8b 4e 20                           	mov rcx, qword ptr [rsi + 0x20]
0x67e0:     48 01 d0                              	add rax, rdx
0x67e3:     48 f7 d2                              	not rdx
0x67e6:     49 89 c8                              	mov r8, rcx
0x67e9:     48 21 d0                              	and rax, rdx
0x67ec:     48 8b 56 08                           	mov rdx, qword ptr [rsi + 8]
0x67f0:     48 89 46 18                           	mov qword ptr [rsi + 0x18], rax
0x67f4:     49 29 d0                              	sub r8, rdx
0x67f7:     48 29 d0                              	sub rax, rdx
0x67fa:     4c 39 c0                              	cmp rax, r8
0x67fd:     77 5d                                 	ja 0x685c <function_67b0+0xac>
0x67ff:     48 8b 46 18                           	mov rax, qword ptr [rsi + 0x18]
0x6803:     4c 8d 24 eb                           	lea r12, [rbx + rbp*8]
0x6807:     48 8d 2d 15 14 01 00                  	lea rbp, [rip + 0x11415]
0x680e:     48 89 46 10                           	mov qword ptr [rsi + 0x10], rax
0x6812:     48 8b 35 6f 9a 21 00                  	mov rsi, qword ptr [rip + 0x219a6f]
0x6819:     e8 d2 d2 ff ff                        	call 0x3af0 <fputs_unlocked>
0x681e:     66 90                                 	nop 
0x6820:     48 8b 13                              	mov rdx, qword ptr [rbx]
0x6823:     31 c0                                 	xor eax, eax
0x6825:     48 89 ee                              	mov rsi, rbp
0x6828:     bf 01 00 00 00                        	mov edi, 1
0x682d:     48 83 c3 08                           	add rbx, 8
0x6831:     e8 9a d4 ff ff                        	call 0x3cd0 <__printf_chk>
0x6836:     4c 39 e3                              	cmp rbx, r12
0x6839:     75 e5                                 	jne 0x6820 <function_67b0+0x70>
0x683b:     48 8b 3d 46 9a 21 00                  	mov rdi, qword ptr [rip + 0x219a46]
0x6842:     48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0x6846:     48 3b 47 30                           	cmp rax, qword ptr [rdi + 0x30]
0x684a:     73 1f                                 	jae 0x686b <function_67b0+0xbb>
0x684c:     48 8d 50 01                           	lea rdx, [rax + 1]
0x6850:     48 89 57 28                           	mov qword ptr [rdi + 0x28], rdx
0x6854:     c6 00 0a                              	mov byte ptr [rax], 0xa
0x6857:     5b                                    	pop rbx
0x6858:     5d                                    	pop rbp
0x6859:     41 5c                                 	pop r12
0x685b:     c3                                    	ret 
0x685c:     48 89 4e 18                           	mov qword ptr [rsi + 0x18], rcx
0x6860:     eb 9d                                 	jmp 0x67ff <function_67b0+0x4f>
0x6862:     80 4e 50 02                           	or byte ptr [rsi + 0x50], 2
0x6866:     e9 6d ff ff ff                        	jmp 0x67d8 <function_67b0+0x28>
0x686b:     5b                                    	pop rbx
0x686c:     5d                                    	pop rbp
0x686d:     41 5c                                 	pop r12
0x686f:     be 0a 00 00 00                        	mov esi, 0xa
0x6874:     e9 57 d1 ff ff                        	jmp 0x39d0 <__overflow>
; data inside code section at 0x6879 -- 0x6880
0x6879:     0f 1f 80 00 00 00 00                               |.......         |
; function: function_6880 at 0x6880 -- 0x693b
0x6880:     55                                    	push rbp
0x6881:     53                                    	push rbx
0x6882:     89 d3                                 	mov ebx, edx
0x6884:     48 83 ec 08                           	sub rsp, 8
0x6888:     48 85 ff                              	test rdi, rdi
0x688b:     0f 84 8f 00 00 00                     	je 0x6920 <function_6880+0xa0>
0x6891:     31 f6                                 	xor esi, esi
0x6893:     48 89 fd                              	mov rbp, rdi
0x6896:     e8 d5 9a 00 00                        	call 0x10370 <function_10370>
0x689b:     48 8b 35 e6 99 21 00                  	mov rsi, qword ptr [rip + 0x2199e6]
0x68a2:     29 c3                                 	sub ebx, eax
0x68a4:     b8 00 00 00 00                        	mov eax, 0
0x68a9:     0f 48 d8                              	cmovs ebx, eax
0x68ac:     48 89 ef                              	mov rdi, rbp
0x68af:     e8 3c d2 ff ff                        	call 0x3af0 <fputs_unlocked>
0x68b4:     48 89 ef                              	mov rdi, rbp
0x68b7:     48 63 eb                              	movsxd rbp, ebx
0x68ba:     e8 91 d0 ff ff                        	call 0x3950 <strlen>
0x68bf:     48 01 c5                              	add rbp, rax
0x68c2:     66 0f 1f 44 00 00                     	nop word ptr [rax + rax]
0x68c8:     48 8b 3d b9 99 21 00                  	mov rdi, qword ptr [rip + 0x2199b9]
0x68cf:     48 8b 57 28                           	mov rdx, qword ptr [rdi + 0x28]
0x68d3:     48 3b 57 30                           	cmp rdx, qword ptr [rdi + 0x30]
0x68d7:     73 37                                 	jae 0x6910 <function_6880+0x90>
0x68d9:     48 8d 4a 01                           	lea rcx, [rdx + 1]
0x68dd:     48 89 4f 28                           	mov qword ptr [rdi + 0x28], rcx
0x68e1:     c6 02 20                              	mov byte ptr [rdx], 0x20
0x68e4:     83 eb 01                              	sub ebx, 1
0x68e7:     83 fb ff                              	cmp ebx, -1
0x68ea:     75 dc                                 	jne 0x68c8 <function_6880+0x48>
0x68ec:     48 8b 05 05 a9 21 00                  	mov rax, qword ptr [rip + 0x21a905]
0x68f3:     48 8d 44 05 01                        	lea rax, [rbp + rax + 1]
0x68f8:     48 89 05 f9 a8 21 00                  	mov qword ptr [rip + 0x21a8f9], rax
0x68ff:     48 83 c4 08                           	add rsp, 8
0x6903:     5b                                    	pop rbx
0x6904:     5d                                    	pop rbp
0x6905:     c3                                    	ret 
; data inside code section at 0x6906 -- 0x6910
0x6906:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x6910:     be 20 00 00 00                        	mov esi, 0x20
0x6915:     e8 b6 d0 ff ff                        	call 0x39d0 <__overflow>
0x691a:     eb c8                                 	jmp 0x68e4 <function_6880+0x64>
; data inside code section at 0x691c -- 0x6920
0x691c:     0f 1f 40 00                                        |..@.            |
0x6920:     48 89 f1                              	mov rcx, rsi
0x6923:     48 8d 35 fe 12 01 00                  	lea rsi, [rip + 0x112fe]
0x692a:     bf 01 00 00 00                        	mov edi, 1
0x692f:     31 c0                                 	xor eax, eax
0x6931:     48 63 eb                              	movsxd rbp, ebx
0x6934:     e8 97 d3 ff ff                        	call 0x3cd0 <__printf_chk>
0x6939:     eb b1                                 	jmp 0x68ec <function_6880+0x6c>
; data inside code section at 0x693b -- 0x6940
0x693b:     0f 1f 44 00 00                                     |..D..           |
; function: function_6940 at 0x6940 -- 0x697f
0x6940:     53                                    	push rbx
0x6941:     48 8d 05 e6 12 01 00                  	lea rax, [rip + 0x112e6]
0x6948:     89 fb                                 	mov ebx, edi
0x694a:     48 83 ec 10                           	sub rsp, 0x10
0x694e:     84 d2                                 	test dl, dl
0x6950:     74 0b                                 	je 0x695d <function_6940+0x1d>
0x6952:     31 c0                                 	xor eax, eax
0x6954:     80 3d d2 a9 21 00 00                  	cmp byte ptr [rip + 0x21a9d2], 0
0x695b:     74 13                                 	je 0x6970 <function_6940+0x30>
0x695d:     48 83 c4 10                           	add rsp, 0x10
0x6961:     89 f2                                 	mov edx, esi
0x6963:     48 89 de                              	mov rsi, rbx
0x6966:     5b                                    	pop rbx
0x6967:     48 89 c7                              	mov rdi, rax
0x696a:     e9 11 ff ff ff                        	jmp 0x6880 <function_6880>
; data inside code section at 0x696f -- 0x6970
0x696f:     90                                                 |.               |
0x6970:     89 74 24 0c                           	mov dword ptr [rsp + 0xc], esi
0x6974:     e8 97 8f 00 00                        	call 0xf910 <function_f910>
0x6979:     8b 74 24 0c                           	mov esi, dword ptr [rsp + 0xc]
0x697d:     eb de                                 	jmp 0x695d <function_6940+0x1d>
; data inside code section at 0x697f -- 0x6980
0x697f:     90                                                 |.               |
; function: function_6980 at 0x6980 -- 0x699b
0x6980:     8b 05 92 a8 21 00                     	mov eax, dword ptr [rip + 0x21a892]
0x6986:     85 c0                                 	test eax, eax
0x6988:     75 0f                                 	jne 0x6999 <function_6980+0x19>
0x698a:     8b 05 84 a8 21 00                     	mov eax, dword ptr [rip + 0x21a884]
0x6990:     83 c0 01                              	add eax, 1
0x6993:     89 05 7b a8 21 00                     	mov dword ptr [rip + 0x21a87b], eax
0x6999:     f3 c3                                 	ret 
; data inside code section at 0x699b -- 0x69a0
0x699b:     0f 1f 44 00 00                                     |..D..           |
; function: function_69a0 at 0x69a0 -- 0x6a01
0x69a0:     41 54                                 	push r12
0x69a2:     55                                    	push rbp
0x69a3:     48 89 f5                              	mov rbp, rsi
0x69a6:     53                                    	push rbx
0x69a7:     48 89 d6                              	mov rsi, rdx
0x69aa:     89 fb                                 	mov ebx, edi
0x69ac:     bf 04 00 00 00                        	mov edi, 4
0x69b1:     e8 5a d0 00 00                        	call 0x13a10 <function_13a10>
0x69b6:     49 89 c4                              	mov r12, rax
0x69b9:     e8 32 ce ff ff                        	call 0x37f0 <__errno_location>
0x69be:     8b 30                                 	mov esi, dword ptr [rax]
0x69c0:     31 ff                                 	xor edi, edi
0x69c2:     31 c0                                 	xor eax, eax
0x69c4:     4c 89 e1                              	mov rcx, r12
0x69c7:     48 89 ea                              	mov rdx, rbp
0x69ca:     e8 51 d3 ff ff                        	call 0x3d20 <error>
0x69cf:     84 db                                 	test bl, bl
0x69d1:     74 15                                 	je 0x69e8 <function_69a0+0x48>
0x69d3:     c7 05 33 a8 21 00 02 00 00 00         	mov dword ptr [rip + 0x21a833], 2
0x69dd:     5b                                    	pop rbx
0x69de:     5d                                    	pop rbp
0x69df:     41 5c                                 	pop r12
0x69e1:     c3                                    	ret 
; data inside code section at 0x69e2 -- 0x69e8
0x69e2:     66 0f 1f 44 00 00                                  |f..D..          |
0x69e8:     8b 05 22 a8 21 00                     	mov eax, dword ptr [rip + 0x21a822]
0x69ee:     85 c0                                 	test eax, eax
0x69f0:     75 eb                                 	jne 0x69dd <function_69a0+0x3d>
0x69f2:     5b                                    	pop rbx
0x69f3:     c7 05 13 a8 21 00 01 00 00 00         	mov dword ptr [rip + 0x21a813], 1
0x69fd:     5d                                    	pop rbp
0x69fe:     41 5c                                 	pop r12
0x6a00:     c3                                    	ret 
; data inside code section at 0x6a01 -- 0x6a10
0x6a01:     0f 1f 44 00 00 66 2e 0f  1f 84 00 00 00 00 00      |..D..f......... |
; function: function_6a10 at 0x6a10 -- 0x6a86
0x6a10:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0x6a16:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0x6a1c:     83 f8 03                              	cmp eax, 3
0x6a1f:     0f 94 c1                              	sete cl
0x6a22:     83 f8 09                              	cmp eax, 9
0x6a25:     0f 94 c0                              	sete al
0x6a28:     09 c1                                 	or ecx, eax
0x6a2a:     83 fa 03                              	cmp edx, 3
0x6a2d:     0f 94 c0                              	sete al
0x6a30:     83 fa 09                              	cmp edx, 9
0x6a33:     0f 94 c2                              	sete dl
0x6a36:     08 c2                                 	or dl, al
0x6a38:     75 04                                 	jne 0x6a3e <function_6a10+0x2e>
0x6a3a:     84 c9                                 	test cl, cl
0x6a3c:     75 42                                 	jne 0x6a80 <function_6a10+0x70>
0x6a3e:     84 c9                                 	test cl, cl
0x6a40:     75 0e                                 	jne 0x6a50 <function_6a10+0x40>
0x6a42:     84 d2                                 	test dl, dl
0x6a44:     b8 01 00 00 00                        	mov eax, 1
0x6a49:     74 05                                 	je 0x6a50 <function_6a10+0x40>
0x6a4b:     f3 c3                                 	ret 
; data inside code section at 0x6a4d -- 0x6a50
0x6a4d:     0f 1f 00                                           |...             |
0x6a50:     48 8b 46 70                           	mov rax, qword ptr [rsi + 0x70]
0x6a54:     48 39 47 70                           	cmp qword ptr [rdi + 0x70], rax
0x6a58:     7f 26                                 	jg 0x6a80 <function_6a10+0x70>
0x6a5a:     7c 14                                 	jl 0x6a70 <function_6a10+0x60>
0x6a5c:     48 8b 46 78                           	mov rax, qword ptr [rsi + 0x78]
0x6a60:     2b 47 78                              	sub eax, dword ptr [rdi + 0x78]
0x6a63:     75 e6                                 	jne 0x6a4b <function_6a10+0x3b>
0x6a65:     48 8b 36                              	mov rsi, qword ptr [rsi]
0x6a68:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0x6a6b:     e9 b0 d0 ff ff                        	jmp 0x3b20 <strcmp>
0x6a70:     b8 01 00 00 00                        	mov eax, 1
0x6a75:     c3                                    	ret 
; data inside code section at 0x6a76 -- 0x6a80
0x6a76:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x6a80:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0x6a85:     c3                                    	ret 
; data inside code section at 0x6a86 -- 0x6a90
0x6a86:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_6a90 at 0x6a90 -- 0x6af6
0x6a90:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0x6a96:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0x6a9c:     83 f8 03                              	cmp eax, 3
0x6a9f:     0f 94 c1                              	sete cl
0x6aa2:     83 f8 09                              	cmp eax, 9
0x6aa5:     0f 94 c0                              	sete al
0x6aa8:     09 c1                                 	or ecx, eax
0x6aaa:     83 fa 03                              	cmp edx, 3
0x6aad:     0f 94 c0                              	sete al
0x6ab0:     83 fa 09                              	cmp edx, 9
0x6ab3:     0f 94 c2                              	sete dl
0x6ab6:     08 c2                                 	or dl, al
0x6ab8:     75 04                                 	jne 0x6abe <function_6a90+0x2e>
0x6aba:     84 c9                                 	test cl, cl
0x6abc:     75 32                                 	jne 0x6af0 <function_6a90+0x60>
0x6abe:     84 c9                                 	test cl, cl
0x6ac0:     75 0e                                 	jne 0x6ad0 <function_6a90+0x40>
0x6ac2:     84 d2                                 	test dl, dl
0x6ac4:     b8 01 00 00 00                        	mov eax, 1
0x6ac9:     74 05                                 	je 0x6ad0 <function_6a90+0x40>
0x6acb:     f3 c3                                 	ret 
; data inside code section at 0x6acd -- 0x6ad0
0x6acd:     0f 1f 00                                           |...             |
0x6ad0:     48 8b 46 48                           	mov rax, qword ptr [rsi + 0x48]
0x6ad4:     48 39 47 48                           	cmp qword ptr [rdi + 0x48], rax
0x6ad8:     7f 16                                 	jg 0x6af0 <function_6a90+0x60>
0x6ada:     b8 01 00 00 00                        	mov eax, 1
0x6adf:     7c ea                                 	jl 0x6acb <function_6a90+0x3b>
0x6ae1:     48 8b 36                              	mov rsi, qword ptr [rsi]
0x6ae4:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0x6ae7:     e9 a4 f9 ff ff                        	jmp 0x6490
; data inside code section at 0x6aec -- 0x6af0
0x6aec:     0f 1f 40 00                                        |..@.            |
0x6af0:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0x6af5:     c3                                    	ret 
; data inside code section at 0x6af6 -- 0x6b00
0x6af6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_6b00 at 0x6b00 -- 0x6b76
0x6b00:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0x6b06:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0x6b0c:     83 f8 03                              	cmp eax, 3
0x6b0f:     0f 94 c1                              	sete cl
0x6b12:     83 f8 09                              	cmp eax, 9
0x6b15:     0f 94 c0                              	sete al
0x6b18:     09 c1                                 	or ecx, eax
0x6b1a:     83 fa 03                              	cmp edx, 3
0x6b1d:     0f 94 c0                              	sete al
0x6b20:     83 fa 09                              	cmp edx, 9
0x6b23:     0f 94 c2                              	sete dl
0x6b26:     08 c2                                 	or dl, al
0x6b28:     75 04                                 	jne 0x6b2e <function_6b00+0x2e>
0x6b2a:     84 c9                                 	test cl, cl
0x6b2c:     75 42                                 	jne 0x6b70 <function_6b00+0x70>
0x6b2e:     84 c9                                 	test cl, cl
0x6b30:     75 0e                                 	jne 0x6b40 <function_6b00+0x40>
0x6b32:     84 d2                                 	test dl, dl
0x6b34:     b8 01 00 00 00                        	mov eax, 1
0x6b39:     74 05                                 	je 0x6b40 <function_6b00+0x40>
0x6b3b:     f3 c3                                 	ret 
; data inside code section at 0x6b3d -- 0x6b40
0x6b3d:     0f 1f 00                                           |...             |
0x6b40:     48 8b 46 48                           	mov rax, qword ptr [rsi + 0x48]
0x6b44:     48 39 47 48                           	cmp qword ptr [rdi + 0x48], rax
0x6b48:     7f 26                                 	jg 0x6b70 <function_6b00+0x70>
0x6b4a:     7c 14                                 	jl 0x6b60 <function_6b00+0x60>
0x6b4c:     48 8b 36                              	mov rsi, qword ptr [rsi]
0x6b4f:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0x6b52:     e9 c9 cf ff ff                        	jmp 0x3b20 <strcmp>
; data inside code section at 0x6b57 -- 0x6b60
0x6b57:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0x6b60:     b8 01 00 00 00                        	mov eax, 1
0x6b65:     c3                                    	ret 
; data inside code section at 0x6b66 -- 0x6b70
0x6b66:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x6b70:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0x6b75:     c3                                    	ret 
; data inside code section at 0x6b76 -- 0x6b80
0x6b76:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_6b80 at 0x6b80 -- 0x6be6
0x6b80:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0x6b86:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0x6b8c:     49 89 f0                              	mov r8, rsi
0x6b8f:     83 f8 03                              	cmp eax, 3
0x6b92:     0f 94 c1                              	sete cl
0x6b95:     83 f8 09                              	cmp eax, 9
0x6b98:     0f 94 c0                              	sete al
0x6b9b:     09 c1                                 	or ecx, eax
0x6b9d:     83 fa 03                              	cmp edx, 3
0x6ba0:     0f 94 c0                              	sete al
0x6ba3:     83 fa 09                              	cmp edx, 9
0x6ba6:     0f 94 c2                              	sete dl
0x6ba9:     08 c2                                 	or dl, al
0x6bab:     75 04                                 	jne 0x6bb1 <function_6b80+0x31>
0x6bad:     84 c9                                 	test cl, cl
0x6baf:     75 2f                                 	jne 0x6be0 <function_6b80+0x60>
0x6bb1:     84 c9                                 	test cl, cl
0x6bb3:     75 0b                                 	jne 0x6bc0 <function_6b80+0x40>
0x6bb5:     84 d2                                 	test dl, dl
0x6bb7:     b8 01 00 00 00                        	mov eax, 1
0x6bbc:     74 02                                 	je 0x6bc0 <function_6b80+0x40>
0x6bbe:     f3 c3                                 	ret 
0x6bc0:     48 8b 47 48                           	mov rax, qword ptr [rdi + 0x48]
0x6bc4:     49 39 40 48                           	cmp qword ptr [r8 + 0x48], rax
0x6bc8:     7f 16                                 	jg 0x6be0 <function_6b80+0x60>
0x6bca:     b8 01 00 00 00                        	mov eax, 1
0x6bcf:     7c ed                                 	jl 0x6bbe <function_6b80+0x3e>
0x6bd1:     48 8b 37                              	mov rsi, qword ptr [rdi]
0x6bd4:     49 8b 38                              	mov rdi, qword ptr [r8]
0x6bd7:     e9 b4 f8 ff ff                        	jmp 0x6490
; data inside code section at 0x6bdc -- 0x6be0
0x6bdc:     0f 1f 40 00                                        |..@.            |
0x6be0:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0x6be5:     c3                                    	ret 
; data inside code section at 0x6be6 -- 0x6bf0
0x6be6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_6bf0 at 0x6bf0 -- 0x6c66
0x6bf0:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0x6bf6:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0x6bfc:     49 89 f0                              	mov r8, rsi
0x6bff:     83 f8 03                              	cmp eax, 3
0x6c02:     0f 94 c1                              	sete cl
0x6c05:     83 f8 09                              	cmp eax, 9
0x6c08:     0f 94 c0                              	sete al
0x6c0b:     09 c1                                 	or ecx, eax
0x6c0d:     83 fa 03                              	cmp edx, 3
0x6c10:     0f 94 c0                              	sete al
0x6c13:     83 fa 09                              	cmp edx, 9
0x6c16:     0f 94 c2                              	sete dl
0x6c19:     08 c2                                 	or dl, al
0x6c1b:     75 04                                 	jne 0x6c21 <function_6bf0+0x31>
0x6c1d:     84 c9                                 	test cl, cl
0x6c1f:     75 3f                                 	jne 0x6c60 <function_6bf0+0x70>
0x6c21:     84 c9                                 	test cl, cl
0x6c23:     75 0b                                 	jne 0x6c30 <function_6bf0+0x40>
0x6c25:     84 d2                                 	test dl, dl
0x6c27:     b8 01 00 00 00                        	mov eax, 1
0x6c2c:     74 02                                 	je 0x6c30 <function_6bf0+0x40>
0x6c2e:     f3 c3                                 	ret 
0x6c30:     48 8b 47 48                           	mov rax, qword ptr [rdi + 0x48]
0x6c34:     49 39 40 48                           	cmp qword ptr [r8 + 0x48], rax
0x6c38:     7f 26                                 	jg 0x6c60 <function_6bf0+0x70>
0x6c3a:     7c 14                                 	jl 0x6c50 <function_6bf0+0x60>
0x6c3c:     48 8b 37                              	mov rsi, qword ptr [rdi]
0x6c3f:     49 8b 38                              	mov rdi, qword ptr [r8]
0x6c42:     e9 d9 ce ff ff                        	jmp 0x3b20 <strcmp>
; data inside code section at 0x6c47 -- 0x6c50
0x6c47:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0x6c50:     b8 01 00 00 00                        	mov eax, 1
0x6c55:     c3                                    	ret 
; data inside code section at 0x6c56 -- 0x6c60
0x6c56:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x6c60:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0x6c65:     c3                                    	ret 
; data inside code section at 0x6c66 -- 0x6c70
0x6c66:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_6c70 at 0x6c70 -- 0x6cc6
0x6c70:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0x6c76:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0x6c7c:     83 f8 03                              	cmp eax, 3
0x6c7f:     0f 94 c1                              	sete cl
0x6c82:     83 f8 09                              	cmp eax, 9
0x6c85:     0f 94 c0                              	sete al
0x6c88:     09 c1                                 	or ecx, eax
0x6c8a:     83 fa 03                              	cmp edx, 3
0x6c8d:     0f 94 c0                              	sete al
0x6c90:     83 fa 09                              	cmp edx, 9
0x6c93:     0f 94 c2                              	sete dl
0x6c96:     08 c2                                 	or dl, al
0x6c98:     75 04                                 	jne 0x6c9e <function_6c70+0x2e>
0x6c9a:     84 c9                                 	test cl, cl
0x6c9c:     75 22                                 	jne 0x6cc0 <function_6c70+0x50>
0x6c9e:     84 c9                                 	test cl, cl
0x6ca0:     75 0e                                 	jne 0x6cb0 <function_6c70+0x40>
0x6ca2:     84 d2                                 	test dl, dl
0x6ca4:     b8 01 00 00 00                        	mov eax, 1
0x6ca9:     74 05                                 	je 0x6cb0 <function_6c70+0x40>
0x6cab:     f3 c3                                 	ret 
; data inside code section at 0x6cad -- 0x6cb0
0x6cad:     0f 1f 00                                           |...             |
0x6cb0:     48 8b 36                              	mov rsi, qword ptr [rsi]
0x6cb3:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0x6cb6:     e9 d5 f7 ff ff                        	jmp 0x6490
; data inside code section at 0x6cbb -- 0x6cc0
0x6cbb:     0f 1f 44 00 00                                     |..D..           |
0x6cc0:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0x6cc5:     c3                                    	ret 
; data inside code section at 0x6cc6 -- 0x6cd0
0x6cc6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_6cd0 at 0x6cd0 -- 0x6d26
0x6cd0:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0x6cd6:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0x6cdc:     83 f8 03                              	cmp eax, 3
0x6cdf:     0f 94 c1                              	sete cl
0x6ce2:     83 f8 09                              	cmp eax, 9
0x6ce5:     0f 94 c0                              	sete al
0x6ce8:     09 c1                                 	or ecx, eax
0x6cea:     83 fa 03                              	cmp edx, 3
0x6ced:     0f 94 c0                              	sete al
0x6cf0:     83 fa 09                              	cmp edx, 9
0x6cf3:     0f 94 c2                              	sete dl
0x6cf6:     08 c2                                 	or dl, al
0x6cf8:     75 04                                 	jne 0x6cfe <function_6cd0+0x2e>
0x6cfa:     84 c9                                 	test cl, cl
0x6cfc:     75 22                                 	jne 0x6d20 <function_6cd0+0x50>
0x6cfe:     84 c9                                 	test cl, cl
0x6d00:     75 0e                                 	jne 0x6d10 <function_6cd0+0x40>
0x6d02:     84 d2                                 	test dl, dl
0x6d04:     b8 01 00 00 00                        	mov eax, 1
0x6d09:     74 05                                 	je 0x6d10 <function_6cd0+0x40>
0x6d0b:     f3 c3                                 	ret 
; data inside code section at 0x6d0d -- 0x6d10
0x6d0d:     0f 1f 00                                           |...             |
0x6d10:     48 8b 36                              	mov rsi, qword ptr [rsi]
0x6d13:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0x6d16:     e9 05 ce ff ff                        	jmp 0x3b20 <strcmp>
; data inside code section at 0x6d1b -- 0x6d20
0x6d1b:     0f 1f 44 00 00                                     |..D..           |
0x6d20:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0x6d25:     c3                                    	ret 
; data inside code section at 0x6d26 -- 0x6d30
0x6d26:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_6d30 at 0x6d30 -- 0x6d86
0x6d30:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0x6d36:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0x6d3c:     49 89 f0                              	mov r8, rsi
0x6d3f:     83 f8 03                              	cmp eax, 3
0x6d42:     0f 94 c1                              	sete cl
0x6d45:     83 f8 09                              	cmp eax, 9
0x6d48:     0f 94 c0                              	sete al
0x6d4b:     09 c1                                 	or ecx, eax
0x6d4d:     83 fa 03                              	cmp edx, 3
0x6d50:     0f 94 c0                              	sete al
0x6d53:     83 fa 09                              	cmp edx, 9
0x6d56:     0f 94 c2                              	sete dl
0x6d59:     08 c2                                 	or dl, al
0x6d5b:     75 04                                 	jne 0x6d61 <function_6d30+0x31>
0x6d5d:     84 c9                                 	test cl, cl
0x6d5f:     75 1f                                 	jne 0x6d80 <function_6d30+0x50>
0x6d61:     84 c9                                 	test cl, cl
0x6d63:     75 0b                                 	jne 0x6d70 <function_6d30+0x40>
0x6d65:     84 d2                                 	test dl, dl
0x6d67:     b8 01 00 00 00                        	mov eax, 1
0x6d6c:     74 02                                 	je 0x6d70 <function_6d30+0x40>
0x6d6e:     f3 c3                                 	ret 
0x6d70:     48 8b 37                              	mov rsi, qword ptr [rdi]
0x6d73:     49 8b 38                              	mov rdi, qword ptr [r8]
0x6d76:     e9 15 f7 ff ff                        	jmp 0x6490
; data inside code section at 0x6d7b -- 0x6d80
0x6d7b:     0f 1f 44 00 00                                     |..D..           |
0x6d80:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0x6d85:     c3                                    	ret 
; data inside code section at 0x6d86 -- 0x6d90
0x6d86:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_6d90 at 0x6d90 -- 0x6de6
0x6d90:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0x6d96:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0x6d9c:     49 89 f0                              	mov r8, rsi
0x6d9f:     83 f8 03                              	cmp eax, 3
0x6da2:     0f 94 c1                              	sete cl
0x6da5:     83 f8 09                              	cmp eax, 9
0x6da8:     0f 94 c0                              	sete al
0x6dab:     09 c1                                 	or ecx, eax
0x6dad:     83 fa 03                              	cmp edx, 3
0x6db0:     0f 94 c0                              	sete al
0x6db3:     83 fa 09                              	cmp edx, 9
0x6db6:     0f 94 c2                              	sete dl
0x6db9:     08 c2                                 	or dl, al
0x6dbb:     75 04                                 	jne 0x6dc1 <function_6d90+0x31>
0x6dbd:     84 c9                                 	test cl, cl
0x6dbf:     75 1f                                 	jne 0x6de0 <function_6d90+0x50>
0x6dc1:     84 c9                                 	test cl, cl
0x6dc3:     75 0b                                 	jne 0x6dd0 <function_6d90+0x40>
0x6dc5:     84 d2                                 	test dl, dl
0x6dc7:     b8 01 00 00 00                        	mov eax, 1
0x6dcc:     74 02                                 	je 0x6dd0 <function_6d90+0x40>
0x6dce:     f3 c3                                 	ret 
0x6dd0:     48 8b 37                              	mov rsi, qword ptr [rdi]
0x6dd3:     49 8b 38                              	mov rdi, qword ptr [r8]
0x6dd6:     e9 45 cd ff ff                        	jmp 0x3b20 <strcmp>
; data inside code section at 0x6ddb -- 0x6de0
0x6ddb:     0f 1f 44 00 00                                     |..D..           |
0x6de0:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0x6de5:     c3                                    	ret 
; data inside code section at 0x6de6 -- 0x6df0
0x6de6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_6df0 at 0x6df0 -- 0x6eea
0x6df0:     40 84 ff                              	test dil, dil
0x6df3:     74 23                                 	je 0x6e18 <function_6df0+0x28>
0x6df5:     89 f0                                 	mov eax, esi
0x6df7:     25 00 f0 00 00                        	and eax, 0xf000
0x6dfc:     3d 00 80 00 00                        	cmp eax, 0x8000
0x6e01:     75 6d                                 	jne 0x6e70 <function_6df0+0x80>
0x6e03:     31 c0                                 	xor eax, eax
0x6e05:     83 3d 08 a5 21 00 03                  	cmp dword ptr [rip + 0x21a508], 3
0x6e0c:     0f 84 a6 00 00 00                     	je 0x6eb8 <function_6df0+0xc8>
0x6e12:     f3 c3                                 	ret 
; data inside code section at 0x6e14 -- 0x6e18
0x6e14:     0f 1f 40 00                                        |..@.            |
0x6e18:     31 c0                                 	xor eax, eax
0x6e1a:     83 fa 05                              	cmp edx, 5
0x6e1d:     74 61                                 	je 0x6e80 <function_6df0+0x90>
0x6e1f:     83 fa 03                              	cmp edx, 3
0x6e22:     0f 94 c1                              	sete cl
0x6e25:     83 fa 09                              	cmp edx, 9
0x6e28:     0f 94 c0                              	sete al
0x6e2b:     09 c1                                 	or ecx, eax
0x6e2d:     84 c9                                 	test cl, cl
0x6e2f:     b8 2f 00 00 00                        	mov eax, 0x2f
0x6e34:     75 dc                                 	jne 0x6e12 <function_6df0+0x22>
0x6e36:     31 c0                                 	xor eax, eax
0x6e38:     83 3d d5 a4 21 00 01                  	cmp dword ptr [rip + 0x21a4d5], 1
0x6e3f:     74 d1                                 	je 0x6e12 <function_6df0+0x22>
0x6e41:     40 84 ff                              	test dil, dil
0x6e44:     75 42                                 	jne 0x6e88 <function_6df0+0x98>
0x6e46:     83 fa 06                              	cmp edx, 6
0x6e49:     b8 40 00 00 00                        	mov eax, 0x40
0x6e4e:     0f 84 7c 00 00 00                     	je 0x6ed0 <function_6df0+0xe0>
0x6e54:     83 fa 01                              	cmp edx, 1
0x6e57:     b8 7c 00 00 00                        	mov eax, 0x7c
0x6e5c:     0f 84 86 00 00 00                     	je 0x6ee8 <function_6df0+0xf8>
0x6e62:     83 fa 07                              	cmp edx, 7
0x6e65:     0f 94 c0                              	sete al
0x6e68:     f7 d8                                 	neg eax
0x6e6a:     83 e0 3d                              	and eax, 0x3d
0x6e6d:     c3                                    	ret 
; data inside code section at 0x6e6e -- 0x6e70
0x6e6e:     66 90                                              |f.              |
0x6e70:     3d 00 40 00 00                        	cmp eax, 0x4000
0x6e75:     0f 94 c1                              	sete cl
0x6e78:     eb b3                                 	jmp 0x6e2d <function_6df0+0x3d>
; data inside code section at 0x6e7a -- 0x6e80
0x6e7a:     66 0f 1f 44 00 00                                  |f..D..          |
0x6e80:     f3 c3                                 	ret 
; data inside code section at 0x6e82 -- 0x6e88
0x6e82:     66 0f 1f 44 00 00                                  |f..D..          |
0x6e88:     81 e6 00 f0 00 00                     	and esi, 0xf000
0x6e8e:     b8 40 00 00 00                        	mov eax, 0x40
0x6e93:     81 fe 00 a0 00 00                     	cmp esi, 0xa000
0x6e99:     74 3d                                 	je 0x6ed8 <function_6df0+0xe8>
0x6e9b:     81 fe 00 10 00 00                     	cmp esi, 0x1000
0x6ea1:     b8 7c 00 00 00                        	mov eax, 0x7c
0x6ea6:     74 38                                 	je 0x6ee0 <function_6df0+0xf0>
0x6ea8:     81 fe 00 c0 00 00                     	cmp esi, 0xc000
0x6eae:     0f 94 c0                              	sete al
0x6eb1:     eb b5                                 	jmp 0x6e68 <function_6df0+0x78>
; data inside code section at 0x6eb3 -- 0x6eb8
0x6eb3:     0f 1f 44 00 00                                     |..D..           |
0x6eb8:     83 e6 49                              	and esi, 0x49
0x6ebb:     83 fe 01                              	cmp esi, 1
0x6ebe:     19 c0                                 	sbb eax, eax
0x6ec0:     f7 d0                                 	not eax
0x6ec2:     83 e0 2a                              	and eax, 0x2a
0x6ec5:     c3                                    	ret 
; data inside code section at 0x6ec6 -- 0x6ed0
0x6ec6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x6ed0:     f3 c3                                 	ret 
; data inside code section at 0x6ed2 -- 0x6ed8
0x6ed2:     66 0f 1f 44 00 00                                  |f..D..          |
0x6ed8:     f3 c3                                 	ret 
; data inside code section at 0x6eda -- 0x6ee0
0x6eda:     66 0f 1f 44 00 00                                  |f..D..          |
0x6ee0:     f3 c3                                 	ret 
; data inside code section at 0x6ee2 -- 0x6ee8
0x6ee2:     66 0f 1f 44 00 00                                  |f..D..          |
0x6ee8:     f3 c3                                 	ret 
; data inside code section at 0x6eea -- 0x6ef0
0x6eea:     66 0f 1f 44 00 00                                  |f..D..          |
; function: function_6ef0 at 0x6ef0 -- 0x6f3a
0x6ef0:     53                                    	push rbx
0x6ef1:     40 0f b6 ff                           	movzx edi, dil
0x6ef5:     e8 f6 fe ff ff                        	call 0x6df0 <function_6df0>
0x6efa:     84 c0                                 	test al, al
0x6efc:     89 c3                                 	mov ebx, eax
0x6efe:     74 23                                 	je 0x6f23 <function_6ef0+0x33>
0x6f00:     48 8b 3d 81 93 21 00                  	mov rdi, qword ptr [rip + 0x219381]
0x6f07:     48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0x6f0b:     48 3b 47 30                           	cmp rax, qword ptr [rdi + 0x30]
0x6f0f:     73 1f                                 	jae 0x6f30 <function_6ef0+0x40>
0x6f11:     48 8d 50 01                           	lea rdx, [rax + 1]
0x6f15:     48 89 57 28                           	mov qword ptr [rdi + 0x28], rdx
0x6f19:     88 18                                 	mov byte ptr [rax], bl
0x6f1b:     48 83 05 d5 a2 21 00 01               	add qword ptr [rip + 0x21a2d5], 1
0x6f23:     84 db                                 	test bl, bl
0x6f25:     0f 95 c0                              	setne al
0x6f28:     5b                                    	pop rbx
0x6f29:     c3                                    	ret 
; data inside code section at 0x6f2a -- 0x6f30
0x6f2a:     66 0f 1f 44 00 00                                  |f..D..          |
0x6f30:     0f b6 f3                              	movzx esi, bl
0x6f33:     e8 98 ca ff ff                        	call 0x39d0 <__overflow>
0x6f38:     eb e1                                 	jmp 0x6f1b <function_6ef0+0x2b>
; data inside code section at 0x6f3a -- 0x6f40
0x6f3a:     66 0f 1f 44 00 00                                  |f..D..          |
; function: function_6f40 at 0x6f40 -- 0x6f96
0x6f40:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0x6f46:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0x6f4c:     49 89 f0                              	mov r8, rsi
0x6f4f:     83 f8 03                              	cmp eax, 3
0x6f52:     0f 94 c1                              	sete cl
0x6f55:     83 f8 09                              	cmp eax, 9
0x6f58:     0f 94 c0                              	sete al
0x6f5b:     09 c1                                 	or ecx, eax
0x6f5d:     83 fa 09                              	cmp edx, 9
0x6f60:     0f 94 c0                              	sete al
0x6f63:     83 fa 03                              	cmp edx, 3
0x6f66:     0f 94 c2                              	sete dl
0x6f69:     08 c2                                 	or dl, al
0x6f6b:     75 04                                 	jne 0x6f71 <function_6f40+0x31>
0x6f6d:     84 c9                                 	test cl, cl
0x6f6f:     75 1f                                 	jne 0x6f90 <function_6f40+0x50>
0x6f71:     84 c9                                 	test cl, cl
0x6f73:     75 0b                                 	jne 0x6f80 <function_6f40+0x40>
0x6f75:     84 d2                                 	test dl, dl
0x6f77:     b8 01 00 00 00                        	mov eax, 1
0x6f7c:     74 02                                 	je 0x6f80 <function_6f40+0x40>
0x6f7e:     f3 c3                                 	ret 
0x6f80:     48 8b 37                              	mov rsi, qword ptr [rdi]
0x6f83:     49 8b 38                              	mov rdi, qword ptr [r8]
0x6f86:     e9 35 64 00 00                        	jmp 0xd3c0 <function_d3c0>
; data inside code section at 0x6f8b -- 0x6f90
0x6f8b:     0f 1f 44 00 00                                     |..D..           |
0x6f90:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0x6f95:     c3                                    	ret 
; data inside code section at 0x6f96 -- 0x6fa0
0x6f96:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_6fa0 at 0x6fa0 -- 0x6ff6
0x6fa0:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0x6fa6:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0x6fac:     83 f8 03                              	cmp eax, 3
0x6faf:     0f 94 c1                              	sete cl
0x6fb2:     83 f8 09                              	cmp eax, 9
0x6fb5:     0f 94 c0                              	sete al
0x6fb8:     09 c1                                 	or ecx, eax
0x6fba:     83 fa 09                              	cmp edx, 9
0x6fbd:     0f 94 c0                              	sete al
0x6fc0:     83 fa 03                              	cmp edx, 3
0x6fc3:     0f 94 c2                              	sete dl
0x6fc6:     08 c2                                 	or dl, al
0x6fc8:     75 04                                 	jne 0x6fce <function_6fa0+0x2e>
0x6fca:     84 c9                                 	test cl, cl
0x6fcc:     75 22                                 	jne 0x6ff0 <function_6fa0+0x50>
0x6fce:     84 c9                                 	test cl, cl
0x6fd0:     75 0e                                 	jne 0x6fe0 <function_6fa0+0x40>
0x6fd2:     84 d2                                 	test dl, dl
0x6fd4:     b8 01 00 00 00                        	mov eax, 1
0x6fd9:     74 05                                 	je 0x6fe0 <function_6fa0+0x40>
0x6fdb:     f3 c3                                 	ret 
; data inside code section at 0x6fdd -- 0x6fe0
0x6fdd:     0f 1f 00                                           |...             |
0x6fe0:     48 8b 36                              	mov rsi, qword ptr [rsi]
0x6fe3:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0x6fe6:     e9 d5 63 00 00                        	jmp 0xd3c0 <function_d3c0>
; data inside code section at 0x6feb -- 0x6ff0
0x6feb:     0f 1f 44 00 00                                     |..D..           |
0x6ff0:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0x6ff5:     c3                                    	ret 
; data inside code section at 0x6ff6 -- 0x7000
0x6ff6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_7000 at 0x7000 -- 0x70c6
0x7000:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0x7006:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0x700c:     83 f8 03                              	cmp eax, 3
0x700f:     0f 94 c1                              	sete cl
0x7012:     83 f8 09                              	cmp eax, 9
0x7015:     0f 94 c0                              	sete al
0x7018:     09 c1                                 	or ecx, eax
0x701a:     83 fa 03                              	cmp edx, 3
0x701d:     0f 94 c0                              	sete al
0x7020:     83 fa 09                              	cmp edx, 9
0x7023:     0f 94 c2                              	sete dl
0x7026:     08 c2                                 	or dl, al
0x7028:     75 08                                 	jne 0x7032 <function_7000+0x32>
0x702a:     84 c9                                 	test cl, cl
0x702c:     0f 85 8e 00 00 00                     	jne 0x70c0 <function_7000+0xc0>
0x7032:     84 c9                                 	test cl, cl
0x7034:     75 12                                 	jne 0x7048 <function_7000+0x48>
0x7036:     84 d2                                 	test dl, dl
0x7038:     b8 01 00 00 00                        	mov eax, 1
0x703d:     74 09                                 	je 0x7048 <function_7000+0x48>
0x703f:     f3 c3                                 	ret 
; data inside code section at 0x7041 -- 0x7048
0x7041:     0f 1f 80 00 00 00 00                               |.......         |
0x7048:     41 54                                 	push r12
0x704a:     55                                    	push rbp
0x704b:     53                                    	push rbx
0x704c:     4c 8b 26                              	mov r12, qword ptr [rsi]
0x704f:     48 89 fb                              	mov rbx, rdi
0x7052:     be 2e 00 00 00                        	mov esi, 0x2e
0x7057:     4c 89 e7                              	mov rdi, r12
0x705a:     e8 81 c9 ff ff                        	call 0x39e0 <strrchr>
0x705f:     48 8b 1b                              	mov rbx, qword ptr [rbx]
0x7062:     be 2e 00 00 00                        	mov esi, 0x2e
0x7067:     48 89 c5                              	mov rbp, rax
0x706a:     48 89 df                              	mov rdi, rbx
0x706d:     e8 6e c9 ff ff                        	call 0x39e0 <strrchr>
0x7072:     48 85 c0                              	test rax, rax
0x7075:     74 39                                 	je 0x70b0 <function_7000+0xb0>
0x7077:     48 8d 15 cc 0b 01 00                  	lea rdx, [rip + 0x10bcc]
0x707e:     48 85 ed                              	test rbp, rbp
0x7081:     48 0f 44 ea                           	cmove rbp, rdx
0x7085:     48 89 c6                              	mov rsi, rax
0x7088:     48 89 ef                              	mov rdi, rbp
0x708b:     e8 90 ca ff ff                        	call 0x3b20 <strcmp>
0x7090:     85 c0                                 	test eax, eax
0x7092:     75 14                                 	jne 0x70a8 <function_7000+0xa8>
0x7094:     48 89 de                              	mov rsi, rbx
0x7097:     4c 89 e7                              	mov rdi, r12
0x709a:     5b                                    	pop rbx
0x709b:     5d                                    	pop rbp
0x709c:     41 5c                                 	pop r12
0x709e:     e9 7d ca ff ff                        	jmp 0x3b20 <strcmp>
; data inside code section at 0x70a3 -- 0x70a8
0x70a3:     0f 1f 44 00 00                                     |..D..           |
0x70a8:     5b                                    	pop rbx
0x70a9:     5d                                    	pop rbp
0x70aa:     41 5c                                 	pop r12
0x70ac:     c3                                    	ret 
; data inside code section at 0x70ad -- 0x70b0
0x70ad:     0f 1f 00                                           |...             |
0x70b0:     48 85 ed                              	test rbp, rbp
0x70b3:     48 8d 05 90 0b 01 00                  	lea rax, [rip + 0x10b90]
0x70ba:     75 c9                                 	jne 0x7085 <function_7000+0x85>
0x70bc:     eb d6                                 	jmp 0x7094 <function_7000+0x94>
; data inside code section at 0x70be -- 0x70c0
0x70be:     66 90                                              |f.              |
0x70c0:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0x70c5:     c3                                    	ret 
; data inside code section at 0x70c6 -- 0x70d0
0x70c6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_70d0 at 0x70d0 -- 0x72e1
0x70d0:     41 57                                 	push r15
0x70d2:     41 56                                 	push r14
0x70d4:     41 55                                 	push r13
0x70d6:     41 54                                 	push r12
0x70d8:     55                                    	push rbp
0x70d9:     53                                    	push rbx
0x70da:     48 81 ec a8 00 00 00                  	sub rsp, 0xa8
0x70e1:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x70ea:     48 89 84 24 98 00 00 00               	mov qword ptr [rsp + 0x98], rax
0x70f2:     31 c0                                 	xor eax, eax
0x70f4:     40 84 ff                              	test dil, dil
0x70f7:     75 77                                 	jne 0x7170 <function_70d0+0xa0>
0x70f9:     48 8d 1d 64 f9 00 00                  	lea rbx, [rip + 0xf964]
0x7100:     bd 14 00 00 00                        	mov ebp, 0x14
0x7105:     4c 8d 25 14 a1 21 00                  	lea r12, [rip + 0x21a114]
0x710c:     4c 8d 6b 2c                           	lea r13, [rbx + 0x2c]
0x7110:     eb 11                                 	jmp 0x7123 <function_70d0+0x53>
; data inside code section at 0x7112 -- 0x7118
0x7112:     66 0f 1f 44 00 00                                  |f..D..          |
0x7118:     4c 39 eb                              	cmp rbx, r13
0x711b:     74 22                                 	je 0x713f <function_70d0+0x6f>
0x711d:     8b 2b                                 	mov ebp, dword ptr [rbx]
0x711f:     48 83 c3 04                           	add rbx, 4
0x7123:     89 ee                                 	mov esi, ebp
0x7125:     4c 89 e7                              	mov rdi, r12
0x7128:     e8 93 cc ff ff                        	call 0x3dc0 <sigismember>
0x712d:     85 c0                                 	test eax, eax
0x712f:     74 e7                                 	je 0x7118 <function_70d0+0x48>
0x7131:     31 f6                                 	xor esi, esi
0x7133:     89 ef                                 	mov edi, ebp
0x7135:     e8 f6 c9 ff ff                        	call 0x3b30 <signal>
0x713a:     4c 39 eb                              	cmp rbx, r13
0x713d:     75 de                                 	jne 0x711d <function_70d0+0x4d>
0x713f:     48 8b 84 24 98 00 00 00               	mov rax, qword ptr [rsp + 0x98]
0x7147:     64 48 33 04 25 28 00 00 00            	xor rax, qword ptr fs:[0x28]
0x7150:     0f 85 43 01 00 00                     	jne 0x7299 <function_70d0+0x1c9>
0x7156:     48 81 c4 a8 00 00 00                  	add rsp, 0xa8
0x715d:     5b                                    	pop rbx
0x715e:     5d                                    	pop rbp
0x715f:     41 5c                                 	pop r12
0x7161:     41 5d                                 	pop r13
0x7163:     41 5e                                 	pop r14
0x7165:     41 5f                                 	pop r15
0x7167:     c3                                    	ret 
; data inside code section at 0x7168 -- 0x7170
0x7168:     0f 1f 84 00 00 00 00 00                            |........        |
0x7170:     48 8d 2d ed f8 00 00                  	lea rbp, [rip + 0xf8ed]
0x7177:     48 8d 3d a2 a0 21 00                  	lea rdi, [rip + 0x21a0a2]
0x717e:     41 bd 14 00 00 00                     	mov r13d, 0x14
0x7184:     49 89 e4                              	mov r12, rsp
0x7187:     4c 8d 3d 92 a0 21 00                  	lea r15, [rip + 0x21a092]
0x718e:     e8 dd c9 ff ff                        	call 0x3b70 <sigemptyset>
0x7193:     4c 8d 75 2c                           	lea r14, [rbp + 0x2c]
0x7197:     48 89 eb                              	mov rbx, rbp
0x719a:     eb 0b                                 	jmp 0x71a7 <function_70d0+0xd7>
; data inside code section at 0x719c -- 0x71a0
0x719c:     0f 1f 40 00                                        |..@.            |
0x71a0:     44 8b 2b                              	mov r13d, dword ptr [rbx]
0x71a3:     48 83 c3 04                           	add rbx, 4
0x71a7:     31 f6                                 	xor esi, esi
0x71a9:     4c 89 e2                              	mov rdx, r12
0x71ac:     44 89 ef                              	mov edi, r13d
0x71af:     e8 ac c6 ff ff                        	call 0x3860 <sigaction>
0x71b4:     48 83 3c 24 01                        	cmp qword ptr [rsp], 1
0x71b9:     74 0b                                 	je 0x71c6 <function_70d0+0xf6>
0x71bb:     44 89 ee                              	mov esi, r13d
0x71be:     4c 89 ff                              	mov rdi, r15
0x71c1:     e8 6a cc ff ff                        	call 0x3e30 <sigaddset>
0x71c6:     4c 39 f3                              	cmp rbx, r14
0x71c9:     75 d5                                 	jne 0x71a0 <function_70d0+0xd0>
0x71cb:     66 0f 6f 05 4d a0 21 00               	movdqa xmm0, xmmword ptr [rip + 0x21a04d]
0x71d3:     41 be 14 00 00 00                     	mov r14d, 0x14
0x71d9:     c7 84 24 88 00 00 00 00 00 00 10      	mov dword ptr [rsp + 0x88], 0x10000000
0x71e4:     4c 8d 2d 35 a0 21 00                  	lea r13, [rip + 0x21a035]
0x71eb:     4c 8d 3d 9e e7 ff ff                  	lea r15, [rip - 0x1862]
0x71f2:     0f 11 44 24 08                        	movups xmmword ptr [rsp + 8], xmm0
0x71f7:     66 0f 6f 05 31 a0 21 00               	movdqa xmm0, xmmword ptr [rip + 0x21a031]
0x71ff:     0f 11 44 24 18                        	movups xmmword ptr [rsp + 0x18], xmm0
0x7204:     66 0f 6f 05 34 a0 21 00               	movdqa xmm0, xmmword ptr [rip + 0x21a034]
0x720c:     0f 11 44 24 28                        	movups xmmword ptr [rsp + 0x28], xmm0
0x7211:     66 0f 6f 05 37 a0 21 00               	movdqa xmm0, xmmword ptr [rip + 0x21a037]
0x7219:     0f 11 44 24 38                        	movups xmmword ptr [rsp + 0x38], xmm0
0x721e:     66 0f 6f 05 3a a0 21 00               	movdqa xmm0, xmmword ptr [rip + 0x21a03a]
0x7226:     0f 11 44 24 48                        	movups xmmword ptr [rsp + 0x48], xmm0
0x722b:     66 0f 6f 05 3d a0 21 00               	movdqa xmm0, xmmword ptr [rip + 0x21a03d]
0x7233:     0f 11 44 24 58                        	movups xmmword ptr [rsp + 0x58], xmm0
0x7238:     66 0f 6f 05 40 a0 21 00               	movdqa xmm0, xmmword ptr [rip + 0x21a040]
0x7240:     0f 11 44 24 68                        	movups xmmword ptr [rsp + 0x68], xmm0
0x7245:     66 0f 6f 05 43 a0 21 00               	movdqa xmm0, xmmword ptr [rip + 0x21a043]
0x724d:     0f 11 44 24 78                        	movups xmmword ptr [rsp + 0x78], xmm0
0x7252:     eb 0c                                 	jmp 0x7260 <function_70d0+0x190>
; data inside code section at 0x7254 -- 0x7258
0x7254:     0f 1f 40 00                                        |..@.            |
0x7258:     44 8b 75 00                           	mov r14d, dword ptr [rbp]
0x725c:     48 83 c5 04                           	add rbp, 4
0x7260:     44 89 f6                              	mov esi, r14d
0x7263:     4c 89 ef                              	mov rdi, r13
0x7266:     e8 55 cb ff ff                        	call 0x3dc0 <sigismember>
0x726b:     85 c0                                 	test eax, eax
0x726d:     74 20                                 	je 0x728f <function_70d0+0x1bf>
0x726f:     48 8d 05 0a f7 ff ff                  	lea rax, [rip - 0x8f6]
0x7276:     41 83 fe 14                           	cmp r14d, 0x14
0x727a:     4c 89 e6                              	mov rsi, r12
0x727d:     44 89 f7                              	mov edi, r14d
0x7280:     49 0f 45 c7                           	cmovne rax, r15
0x7284:     31 d2                                 	xor edx, edx
0x7286:     48 89 04 24                           	mov qword ptr [rsp], rax
0x728a:     e8 d1 c5 ff ff                        	call 0x3860 <sigaction>
0x728f:     48 39 dd                              	cmp rbp, rbx
0x7292:     75 c4                                 	jne 0x7258 <function_70d0+0x188>
0x7294:     e9 a6 fe ff ff                        	jmp 0x713f <function_70d0+0x6f>
0x7299:     e8 d2 c6 ff ff                        	call 0x3970 <__stack_chk_fail>
0x729e:     66 90                                 	nop 
0x72a0:     48 83 3d e0 8d 21 00 00               	cmp qword ptr [rip + 0x218de0], 0
0x72a8:     74 0e                                 	je 0x72b8 <function_70d0+0x1e8>
0x72aa:     48 8d 3d cf 8d 21 00                  	lea rdi, [rip + 0x218dcf]
0x72b1:     eb 3d                                 	jmp 0x72f0 <function_72f0>
; data inside code section at 0x72b3 -- 0x72b8
0x72b3:     0f 1f 44 00 00                                     |..D..           |
0x72b8:     48 8d 3d a1 8d 21 00                  	lea rdi, [rip + 0x218da1]
0x72bf:     48 83 ec 08                           	sub rsp, 8
0x72c3:     e8 28 00 00 00                        	call 0x72f0 <function_72f0>
0x72c8:     48 8d 3d c1 8d 21 00                  	lea rdi, [rip + 0x218dc1]
0x72cf:     e8 1c 00 00 00                        	call 0x72f0 <function_72f0>
0x72d4:     48 8d 3d 95 8d 21 00                  	lea rdi, [rip + 0x218d95]
0x72db:     48 83 c4 08                           	add rsp, 8
0x72df:     eb 0f                                 	jmp 0x72f0 <function_72f0>
; data inside code section at 0x72e1 -- 0x72f0
0x72e1:     0f 1f 44 00 00 66 2e 0f  1f 84 00 00 00 00 00      |..D..f......... |
; function: function_72f0 at 0x72f0 -- 0x7351
0x72f0:     80 3d 19 a0 21 00 00                  	cmp byte ptr [rip + 0x21a019], 0
0x72f7:     53                                    	push rbx
0x72f8:     48 89 fb                              	mov rbx, rdi
0x72fb:     74 23                                 	je 0x7320 <function_72f0+0x30>
0x72fd:     48 8b 7b 08                           	mov rdi, qword ptr [rbx + 8]
0x7301:     48 8b 33                              	mov rsi, qword ptr [rbx]
0x7304:     ba 01 00 00 00                        	mov edx, 1
0x7309:     5b                                    	pop rbx
0x730a:     48 8b 0d 77 8f 21 00                  	mov rcx, qword ptr [rip + 0x218f77]
0x7311:     e9 6a c9 ff ff                        	jmp 0x3c80 <fwrite_unlocked>
; data inside code section at 0x7316 -- 0x7320
0x7316:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x7320:     bf 01 00 00 00                        	mov edi, 1
0x7325:     c6 05 e4 9f 21 00 01                  	mov byte ptr [rip + 0x219fe4], 1
0x732c:     e8 9f c8 ff ff                        	call 0x3bd0 <tcgetpgrp>
0x7331:     85 c0                                 	test eax, eax
0x7333:     79 0b                                 	jns 0x7340 <function_72f0+0x50>
0x7335:     e8 66 ff ff ff                        	call 0x72a0
0x733a:     eb c1                                 	jmp 0x72fd <function_72f0+0xd>
; data inside code section at 0x733c -- 0x7340
0x733c:     0f 1f 40 00                                        |..@.            |
0x7340:     bf 01 00 00 00                        	mov edi, 1
0x7345:     e8 86 fd ff ff                        	call 0x70d0 <function_70d0>
0x734a:     e8 51 ff ff ff                        	call 0x72a0
0x734f:     eb ac                                 	jmp 0x72fd <function_72f0+0xd>
; data inside code section at 0x7351 -- 0x7360
0x7351:     0f 1f 44 00 00 66 2e 0f  1f 84 00 00 00 00 00      |..D..f......... |
; function: function_7360 at 0x7360 -- 0x74a0
0x7360:     55                                    	push rbp
0x7361:     53                                    	push rbx
0x7362:     48 81 ec 98 00 00 00                  	sub rsp, 0x98
0x7369:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x7372:     48 89 84 24 88 00 00 00               	mov qword ptr [rsp + 0x88], rax
0x737a:     31 c0                                 	xor eax, eax
0x737c:     48 89 e5                              	mov rbp, rsp
0x737f:     eb 58                                 	jmp 0x73d9 <function_7360+0x79>
; data inside code section at 0x7381 -- 0x7388
0x7381:     0f 1f 80 00 00 00 00                               |.......         |
0x7388:     48 8b 3d f9 8e 21 00                  	mov rdi, qword ptr [rip + 0x218ef9]
0x738f:     e8 6c ca ff ff                        	call 0x3e00 <fflush_unlocked>
0x7394:     48 8d 35 85 9e 21 00                  	lea rsi, [rip + 0x219e85]
0x739b:     31 ff                                 	xor edi, edi
0x739d:     48 89 ea                              	mov rdx, rbp
0x73a0:     e8 0b c4 ff ff                        	call 0x37b0 <sigprocmask>
0x73a5:     8b 1d 6d 9e 21 00                     	mov ebx, dword ptr [rip + 0x219e6d]
0x73ab:     8b 05 63 9e 21 00                     	mov eax, dword ptr [rip + 0x219e63]
0x73b1:     85 c0                                 	test eax, eax
0x73b3:     74 63                                 	je 0x7418 <function_7360+0xb8>
0x73b5:     83 e8 01                              	sub eax, 1
0x73b8:     bb 13 00 00 00                        	mov ebx, 0x13
0x73bd:     89 05 51 9e 21 00                     	mov dword ptr [rip + 0x219e51], eax
0x73c3:     89 df                                 	mov edi, ebx
0x73c5:     e8 06 c4 ff ff                        	call 0x37d0 <raise>
0x73ca:     31 d2                                 	xor edx, edx
0x73cc:     48 89 ee                              	mov rsi, rbp
0x73cf:     bf 02 00 00 00                        	mov edi, 2
0x73d4:     e8 d7 c3 ff ff                        	call 0x37b0 <sigprocmask>
0x73d9:     8b 05 39 9e 21 00                     	mov eax, dword ptr [rip + 0x219e39]
0x73df:     85 c0                                 	test eax, eax
0x73e1:     75 0a                                 	jne 0x73ed <function_7360+0x8d>
0x73e3:     8b 05 2b 9e 21 00                     	mov eax, dword ptr [rip + 0x219e2b]
0x73e9:     85 c0                                 	test eax, eax
0x73eb:     74 3b                                 	je 0x7428 <function_7360+0xc8>
0x73ed:     80 3d 1c 9f 21 00 00                  	cmp byte ptr [rip + 0x219f1c], 0
0x73f4:     74 92                                 	je 0x7388 <function_7360+0x28>
0x73f6:     48 8d 3d 63 8c 21 00                  	lea rdi, [rip + 0x218c63]
0x73fd:     e8 ee fe ff ff                        	call 0x72f0 <function_72f0>
0x7402:     48 8d 3d 67 8c 21 00                  	lea rdi, [rip + 0x218c67]
0x7409:     e8 e2 fe ff ff                        	call 0x72f0 <function_72f0>
0x740e:     e9 75 ff ff ff                        	jmp 0x7388 <function_7360+0x28>
; data inside code section at 0x7413 -- 0x7418
0x7413:     0f 1f 44 00 00                                     |..D..           |
0x7418:     31 f6                                 	xor esi, esi
0x741a:     89 df                                 	mov edi, ebx
0x741c:     e8 0f c7 ff ff                        	call 0x3b30 <signal>
0x7421:     eb a0                                 	jmp 0x73c3 <function_7360+0x63>
; data inside code section at 0x7423 -- 0x7428
0x7423:     0f 1f 44 00 00                                     |..D..           |
0x7428:     48 8b 84 24 88 00 00 00               	mov rax, qword ptr [rsp + 0x88]
0x7430:     64 48 33 04 25 28 00 00 00            	xor rax, qword ptr fs:[0x28]
0x7439:     75 0a                                 	jne 0x7445 <function_7360+0xe5>
0x743b:     48 81 c4 98 00 00 00                  	add rsp, 0x98
0x7442:     5b                                    	pop rbx
0x7443:     5d                                    	pop rbp
0x7444:     c3                                    	ret 
0x7445:     e8 26 c5 ff ff                        	call 0x3970 <__stack_chk_fail>
0x744a:     66 0f 1f 44 00 00                     	nop word ptr [rax + rax]
0x7450:     80 3d bb 9e 21 00 00                  	cmp byte ptr [rip + 0x219ebb], 0
0x7457:     74 17                                 	je 0x7470 <function_7360+0x110>
0x7459:     48 83 ec 08                           	sub rsp, 8
0x745d:     bf 04 00 00 00                        	mov edi, 4
0x7462:     e8 e9 e7 ff ff                        	call 0x5c50 <function_5c50>
0x7467:     84 c0                                 	test al, al
0x7469:     75 0d                                 	jne 0x7478 <function_7360+0x118>
0x746b:     48 83 c4 08                           	add rsp, 8
0x746f:     c3                                    	ret 
0x7470:     f3 c3                                 	ret 
; data inside code section at 0x7472 -- 0x7478
0x7472:     66 0f 1f 44 00 00                                  |f..D..          |
0x7478:     48 8d 3d e1 8b 21 00                  	lea rdi, [rip + 0x218be1]
0x747f:     e8 6c fe ff ff                        	call 0x72f0 <function_72f0>
0x7484:     48 8d 3d 15 8c 21 00                  	lea rdi, [rip + 0x218c15]
0x748b:     e8 60 fe ff ff                        	call 0x72f0 <function_72f0>
0x7490:     48 8d 3d d9 8b 21 00                  	lea rdi, [rip + 0x218bd9]
0x7497:     48 83 c4 08                           	add rsp, 8
0x749b:     e9 50 fe ff ff                        	jmp 0x72f0 <function_72f0>
; function: function_74a0 at 0x74a0 -- 0x7909
0x74a0:     41 57                                 	push r15
0x74a2:     41 56                                 	push r14
0x74a4:     49 89 d6                              	mov r14, rdx
0x74a7:     41 55                                 	push r13
0x74a9:     41 54                                 	push r12
0x74ab:     49 89 f4                              	mov r12, rsi
0x74ae:     55                                    	push rbp
0x74af:     53                                    	push rbx
0x74b0:     89 cb                                 	mov ebx, ecx
0x74b2:     48 83 ec 68                           	sub rsp, 0x68
0x74b6:     4c 8b 2f                              	mov r13, qword ptr [rdi]
0x74b9:     48 89 7c 24 30                        	mov qword ptr [rsp + 0x30], rdi
0x74be:     48 89 d7                              	mov rdi, rdx
0x74c1:     4c 89 44 24 20                        	mov qword ptr [rsp + 0x20], r8
0x74c6:     64 48 8b 0c 25 28 00 00 00            	mov rcx, qword ptr fs:[0x28]
0x74cf:     48 89 4c 24 58                        	mov qword ptr [rsp + 0x58], rcx
0x74d4:     31 c9                                 	xor ecx, ecx
0x74d6:     4c 89 4c 24 38                        	mov qword ptr [rsp + 0x38], r9
0x74db:     e8 b0 c0 00 00                        	call 0x13590 <function_13590>
0x74e0:     83 f8 02                              	cmp eax, 2
0x74e3:     0f 96 c0                              	setbe al
0x74e6:     22 05 ec 9d 21 00                     	and al, byte ptr [rip + 0x219dec]
0x74ec:     88 44 24 2f                           	mov byte ptr [rsp + 0x2f], al
0x74f0:     0f 85 5a 01 00 00                     	jne 0x7650 <function_74a0+0x1b0>
0x74f6:     45 31 c9                              	xor r9d, r9d
0x74f9:     85 db                                 	test ebx, ebx
0x74fb:     74 73                                 	je 0x7570 <function_74a0+0xd0>
0x74fd:     4d 89 f0                              	mov r8, r14
0x7500:     48 c7 c1 ff ff ff ff                  	mov rcx, -1
0x7507:     4c 89 e2                              	mov rdx, r12
0x750a:     be 00 20 00 00                        	mov esi, 0x2000
0x750f:     4c 89 ef                              	mov rdi, r13
0x7512:     44 89 4c 24 08                        	mov dword ptr [rsp + 8], r9d
0x7517:     e8 44 c1 00 00                        	call 0x13660 <function_13660>
0x751c:     48 3d ff 1f 00 00                     	cmp rax, 0x1fff
0x7522:     48 89 c3                              	mov rbx, rax
0x7525:     44 8b 4c 24 08                        	mov r9d, dword ptr [rsp + 8]
0x752a:     0f 87 88 03 00 00                     	ja 0x78b8 <function_74a0+0x418>
0x7530:     41 0f b6 45 00                        	movzx eax, byte ptr [r13]
0x7535:     c6 44 24 2f 01                        	mov byte ptr [rsp + 0x2f], 1
0x753a:     41 38 04 24                           	cmp byte ptr [r12], al
0x753e:     75 1a                                 	jne 0x755a <function_74a0+0xba>
0x7540:     4c 89 e7                              	mov rdi, r12
0x7543:     44 89 4c 24 08                        	mov dword ptr [rsp + 8], r9d
0x7548:     e8 03 c4 ff ff                        	call 0x3950 <strlen>
0x754d:     44 8b 4c 24 08                        	mov r9d, dword ptr [rsp + 8]
0x7552:     48 39 c3                              	cmp rbx, rax
0x7555:     0f 95 44 24 2f                        	setne byte ptr [rsp + 0x2f]
0x755a:     45 85 c9                              	test r9d, r9d
0x755d:     74 1f                                 	je 0x757e <function_74a0+0xde>
0x755f:     48 89 dd                              	mov rbp, rbx
0x7562:     e9 1c 01 00 00                        	jmp 0x7683 <function_74a0+0x1e3>
; data inside code section at 0x7567 -- 0x7570
0x7567:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0x7570:     4c 89 e7                              	mov rdi, r12
0x7573:     4d 89 e5                              	mov r13, r12
0x7576:     e8 d5 c3 ff ff                        	call 0x3950 <strlen>
0x757b:     48 89 c3                              	mov rbx, rax
0x757e:     48 83 7c 24 20 00                     	cmp qword ptr [rsp + 0x20], 0
0x7584:     0f 84 ae 00 00 00                     	je 0x7638 <function_74a0+0x198>
0x758a:     e8 b1 c3 ff ff                        	call 0x3940 <__ctype_get_mb_cur_max>
0x758f:     48 83 f8 01                           	cmp rax, 1
0x7593:     0f 87 ff 01 00 00                     	ja 0x7798 <function_74a0+0x2f8>
0x7599:     4d 8d 64 1d 00                        	lea r12, [r13 + rbx]
0x759e:     4d 39 e5                              	cmp r13, r12
0x75a1:     0f 83 4b 03 00 00                     	jae 0x78f2 <function_74a0+0x452>
0x75a7:     e8 a4 c8 ff ff                        	call 0x3e50 <__ctype_b_loc>
0x75ac:     31 ed                                 	xor ebp, ebp
0x75ae:     48 8b 08                              	mov rcx, qword ptr [rax]
0x75b1:     4c 89 e8                              	mov rax, r13
0x75b4:     0f 1f 40 00                           	nop dword ptr [rax]
0x75b8:     0f b6 10                              	movzx edx, byte ptr [rax]
0x75bb:     0f b7 14 51                           	movzx edx, word ptr [rcx + rdx*2]
0x75bf:     66 81 e2 00 40                        	and dx, 0x4000
0x75c4:     66 83 fa 01                           	cmp dx, 1
0x75c8:     48 83 dd ff                           	sbb rbp, -1
0x75cc:     48 83 c0 01                           	add rax, 1
0x75d0:     49 39 c4                              	cmp r12, rax
0x75d3:     75 e3                                 	jne 0x75b8 <function_74a0+0x118>
0x75d5:     0f b6 05 cc 9d 21 00                  	movzx eax, byte ptr [rip + 0x219dcc]
0x75dc:     84 c0                                 	test al, al
0x75de:     74 11                                 	je 0x75f1 <function_74a0+0x151>
0x75e0:     0f b6 05 c2 9d 21 00                  	movzx eax, byte ptr [rip + 0x219dc2]
0x75e7:     83 f0 01                              	xor eax, 1
0x75ea:     0a 44 24 2f                           	or al, byte ptr [rsp + 0x2f]
0x75ee:     83 f0 01                              	xor eax, 1
0x75f1:     48 8b 4c 24 38                        	mov rcx, qword ptr [rsp + 0x38]
0x75f6:     88 01                                 	mov byte ptr [rcx], al
0x75f8:     48 8b 44 24 20                        	mov rax, qword ptr [rsp + 0x20]
0x75fd:     48 85 c0                              	test rax, rax
0x7600:     74 03                                 	je 0x7605 <function_74a0+0x165>
0x7602:     48 89 28                              	mov qword ptr [rax], rbp
0x7605:     48 8b 44 24 30                        	mov rax, qword ptr [rsp + 0x30]
0x760a:     4c 89 28                              	mov qword ptr [rax], r13
0x760d:     48 89 d8                              	mov rax, rbx
0x7610:     48 8b 5c 24 58                        	mov rbx, qword ptr [rsp + 0x58]
0x7615:     64 48 33 1c 25 28 00 00 00            	xor rbx, qword ptr fs:[0x28]
0x761e:     0f 85 d5 02 00 00                     	jne 0x78f9 <function_74a0+0x459>
0x7624:     48 83 c4 68                           	add rsp, 0x68
0x7628:     5b                                    	pop rbx
0x7629:     5d                                    	pop rbp
0x762a:     41 5c                                 	pop r12
0x762c:     41 5d                                 	pop r13
0x762e:     41 5e                                 	pop r14
0x7630:     41 5f                                 	pop r15
0x7632:     c3                                    	ret 
; data inside code section at 0x7633 -- 0x7638
0x7633:     0f 1f 44 00 00                                     |..D..           |
0x7638:     80 3d 69 9d 21 00 00                  	cmp byte ptr [rip + 0x219d69], 0
0x763f:     75 9f                                 	jne 0x75e0 <function_74a0+0x140>
0x7641:     48 8b 44 24 38                        	mov rax, qword ptr [rsp + 0x38]
0x7646:     c6 00 00                              	mov byte ptr [rax], 0
0x7649:     eb ba                                 	jmp 0x7605 <function_74a0+0x165>
; data inside code section at 0x764b -- 0x7650
0x764b:     0f 1f 44 00 00                                     |..D..           |
0x7650:     85 db                                 	test ebx, ebx
0x7652:     0f 85 a6 02 00 00                     	jne 0x78fe <function_74a0+0x45e>
0x7658:     4c 89 e7                              	mov rdi, r12
0x765b:     e8 f0 c2 ff ff                        	call 0x3950 <strlen>
0x7660:     48 3d ff 1f 00 00                     	cmp rax, 0x1fff
0x7666:     48 89 c5                              	mov rbp, rax
0x7669:     48 8d 50 01                           	lea rdx, [rax + 1]
0x766d:     0f 87 25 02 00 00                     	ja 0x7898 <function_74a0+0x3f8>
0x7673:     4c 89 e6                              	mov rsi, r12
0x7676:     4c 89 ef                              	mov rdi, r13
0x7679:     e8 02 c5 ff ff                        	call 0x3b80 <memcpy>
0x767e:     c6 44 24 2f 00                        	mov byte ptr [rsp + 0x2f], 0
0x7683:     49 8d 5c 2d 00                        	lea rbx, [r13 + rbp]
0x7688:     e8 b3 c2 ff ff                        	call 0x3940 <__ctype_get_mb_cur_max>
0x768d:     48 83 f8 01                           	cmp rax, 1
0x7691:     48 89 5c 24 08                        	mov qword ptr [rsp + 8], rbx
0x7696:     0f 86 b4 01 00 00                     	jbe 0x7850 <function_74a0+0x3b0>
0x769c:     49 39 dd                              	cmp r13, rbx
0x769f:     0f 83 44 02 00 00                     	jae 0x78e9 <function_74a0+0x449>
0x76a5:     48 8d 44 24 4c                        	lea rax, [rsp + 0x4c]
0x76aa:     4c 8d 64 24 50                        	lea r12, [rsp + 0x50]
0x76af:     4c 89 eb                              	mov rbx, r13
0x76b2:     4d 89 ef                              	mov r15, r13
0x76b5:     31 ed                                 	xor ebp, ebp
0x76b7:     48 89 44 24 18                        	mov qword ptr [rsp + 0x18], rax
0x76bc:     0f 1f 40 00                           	nop dword ptr [rax]
0x76c0:     41 0f b6 07                           	movzx eax, byte ptr [r15]
0x76c4:     3c 3f                                 	cmp al, 0x3f
0x76c6:     0f 8f 24 01 00 00                     	jg 0x77f0 <function_74a0+0x350>
0x76cc:     3c 25                                 	cmp al, 0x25
0x76ce:     0f 8d 34 01 00 00                     	jge 0x7808 <function_74a0+0x368>
0x76d4:     8d 50 e0                              	lea edx, [rax - 0x20]
0x76d7:     80 fa 03                              	cmp dl, 3
0x76da:     0f 86 28 01 00 00                     	jbe 0x7808 <function_74a0+0x368>
0x76e0:     48 c7 44 24 50 00 00 00 00            	mov qword ptr [rsp + 0x50], 0
0x76e9:     0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0x76f0:     48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0x76f5:     48 8b 7c 24 18                        	mov rdi, qword ptr [rsp + 0x18]
0x76fa:     4c 89 e1                              	mov rcx, r12
0x76fd:     4c 89 fe                              	mov rsi, r15
0x7700:     4c 8d 73 01                           	lea r14, [rbx + 1]
0x7704:     4c 29 fa                              	sub rdx, r15
0x7707:     e8 04 dc 00 00                        	call 0x15310 <function_15310>
0x770c:     48 83 f8 ff                           	cmp rax, -1
0x7710:     0f 84 0a 01 00 00                     	je 0x7820 <function_74a0+0x380>
0x7716:     48 83 f8 fe                           	cmp rax, -2
0x771a:     0f 84 18 01 00 00                     	je 0x7838 <function_74a0+0x398>
0x7720:     48 85 c0                              	test rax, rax
0x7723:     8b 7c 24 4c                           	mov edi, dword ptr [rsp + 0x4c]
0x7727:     48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x772c:     0f 84 9e 00 00 00                     	je 0x77d0 <function_74a0+0x330>
0x7732:     e8 c9 c4 ff ff                        	call 0x3c00 <wcwidth>
0x7737:     48 8b 54 24 10                        	mov rdx, qword ptr [rsp + 0x10]
0x773c:     85 c0                                 	test eax, eax
0x773e:     49 8d 0c 17                           	lea rcx, [r15 + rdx]
0x7742:     78 7c                                 	js 0x77c0 <function_74a0+0x320>
0x7744:     48 89 df                              	mov rdi, rbx
0x7747:     66 0f 1f 84 00 00 00 00 00            	nop word ptr [rax + rax]
0x7750:     4c 89 fe                              	mov rsi, r15
0x7753:     a4                                    	movsb byte ptr [rdi], byte ptr [rsi]
0x7754:     48 39 ce                              	cmp rsi, rcx
0x7757:     49 89 f7                              	mov r15, rsi
0x775a:     75 f4                                 	jne 0x7750 <function_74a0+0x2b0>
0x775c:     48 01 d3                              	add rbx, rdx
0x775f:     48 98                                 	cdqe 
0x7761:     48 01 c5                              	add rbp, rax
0x7764:     4c 89 e7                              	mov rdi, r12
0x7767:     e8 a4 c6 ff ff                        	call 0x3e10 <mbsinit>
0x776c:     85 c0                                 	test eax, eax
0x776e:     74 80                                 	je 0x76f0 <function_74a0+0x250>
0x7770:     4c 3b 7c 24 08                        	cmp r15, qword ptr [rsp + 8]
0x7775:     0f 82 45 ff ff ff                     	jb 0x76c0 <function_74a0+0x220>
0x777b:     0f b6 05 26 9c 21 00                  	movzx eax, byte ptr [rip + 0x219c26]
0x7782:     4c 29 eb                              	sub rbx, r13
0x7785:     84 c0                                 	test al, al
0x7787:     0f 84 64 fe ff ff                     	je 0x75f1 <function_74a0+0x151>
0x778d:     e9 4e fe ff ff                        	jmp 0x75e0 <function_74a0+0x140>
; data inside code section at 0x7792 -- 0x7798
0x7792:     66 0f 1f 44 00 00                                  |f..D..          |
0x7798:     31 d2                                 	xor edx, edx
0x779a:     48 89 de                              	mov rsi, rbx
0x779d:     4c 89 ef                              	mov rdi, r13
0x77a0:     e8 0b 8a 00 00                        	call 0x101b0 <function_101b0>
0x77a5:     48 63 e8                              	movsxd rbp, eax
0x77a8:     0f b6 05 f9 9b 21 00                  	movzx eax, byte ptr [rip + 0x219bf9]
0x77af:     84 c0                                 	test al, al
0x77b1:     0f 84 3a fe ff ff                     	je 0x75f1 <function_74a0+0x151>
0x77b7:     e9 24 fe ff ff                        	jmp 0x75e0 <function_74a0+0x140>
; data inside code section at 0x77bc -- 0x77c0
0x77bc:     0f 1f 40 00                                        |..@.            |
0x77c0:     c6 03 3f                              	mov byte ptr [rbx], 0x3f
0x77c3:     48 83 c5 01                           	add rbp, 1
0x77c7:     4c 89 f3                              	mov rbx, r14
0x77ca:     49 89 cf                              	mov r15, rcx
0x77cd:     eb 95                                 	jmp 0x7764 <function_74a0+0x2c4>
; data inside code section at 0x77cf -- 0x77d0
0x77cf:     90                                                 |.               |
0x77d0:     e8 2b c4 ff ff                        	call 0x3c00 <wcwidth>
0x77d5:     85 c0                                 	test eax, eax
0x77d7:     49 8d 4f 01                           	lea rcx, [r15 + 1]
0x77db:     78 e3                                 	js 0x77c0 <function_74a0+0x320>
0x77dd:     41 0f b6 17                           	movzx edx, byte ptr [r15]
0x77e1:     49 89 cf                              	mov r15, rcx
0x77e4:     88 13                                 	mov byte ptr [rbx], dl
0x77e6:     4c 89 f3                              	mov rbx, r14
0x77e9:     e9 71 ff ff ff                        	jmp 0x775f <function_74a0+0x2bf>
; data inside code section at 0x77ee -- 0x77f0
0x77ee:     66 90                                              |f.              |
0x77f0:     3c 41                                 	cmp al, 0x41
0x77f2:     0f 8c e8 fe ff ff                     	jl 0x76e0 <function_74a0+0x240>
0x77f8:     3c 5f                                 	cmp al, 0x5f
0x77fa:     7e 0c                                 	jle 0x7808 <function_74a0+0x368>
0x77fc:     8d 50 9f                              	lea edx, [rax - 0x61]
0x77ff:     80 fa 1d                              	cmp dl, 0x1d
0x7802:     0f 87 d8 fe ff ff                     	ja 0x76e0 <function_74a0+0x240>
0x7808:     88 03                                 	mov byte ptr [rbx], al
0x780a:     49 83 c7 01                           	add r15, 1
0x780e:     48 83 c5 01                           	add rbp, 1
0x7812:     48 83 c3 01                           	add rbx, 1
0x7816:     e9 55 ff ff ff                        	jmp 0x7770 <function_74a0+0x2d0>
; data inside code section at 0x781b -- 0x7820
0x781b:     0f 1f 44 00 00                                     |..D..           |
0x7820:     49 83 c7 01                           	add r15, 1
0x7824:     c6 03 3f                              	mov byte ptr [rbx], 0x3f
0x7827:     48 83 c5 01                           	add rbp, 1
0x782b:     4c 89 f3                              	mov rbx, r14
0x782e:     e9 3d ff ff ff                        	jmp 0x7770 <function_74a0+0x2d0>
; data inside code section at 0x7833 -- 0x7838
0x7833:     0f 1f 44 00 00                                     |..D..           |
0x7838:     c6 03 3f                              	mov byte ptr [rbx], 0x3f
0x783b:     48 83 c5 01                           	add rbp, 1
0x783f:     4c 8b 7c 24 08                        	mov r15, qword ptr [rsp + 8]
0x7844:     eb e5                                 	jmp 0x782b <function_74a0+0x38b>
; data inside code section at 0x7846 -- 0x7850
0x7846:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x7850:     4c 3b 6c 24 08                        	cmp r13, qword ptr [rsp + 8]
0x7855:     73 24                                 	jae 0x787b <function_74a0+0x3db>
0x7857:     e8 f4 c5 ff ff                        	call 0x3e50 <__ctype_b_loc>
0x785c:     4c 89 ea                              	mov rdx, r13
0x785f:     90                                    	nop 
0x7860:     0f b6 32                              	movzx esi, byte ptr [rdx]
0x7863:     48 8b 08                              	mov rcx, qword ptr [rax]
0x7866:     f6 44 71 01 40                        	test byte ptr [rcx + rsi*2 + 1], 0x40
0x786b:     75 03                                 	jne 0x7870 <function_74a0+0x3d0>
0x786d:     c6 02 3f                              	mov byte ptr [rdx], 0x3f
0x7870:     48 83 c2 01                           	add rdx, 1
0x7874:     48 3b 54 24 08                        	cmp rdx, qword ptr [rsp + 8]
0x7879:     75 e5                                 	jne 0x7860 <function_74a0+0x3c0>
0x787b:     0f b6 05 26 9b 21 00                  	movzx eax, byte ptr [rip + 0x219b26]
0x7882:     48 89 eb                              	mov rbx, rbp
0x7885:     84 c0                                 	test al, al
0x7887:     0f 84 64 fd ff ff                     	je 0x75f1 <function_74a0+0x151>
0x788d:     e9 4e fd ff ff                        	jmp 0x75e0 <function_74a0+0x140>
; data inside code section at 0x7892 -- 0x7898
0x7892:     66 0f 1f 44 00 00                                  |f..D..          |
0x7898:     48 89 d7                              	mov rdi, rdx
0x789b:     48 89 54 24 08                        	mov qword ptr [rsp + 8], rdx
0x78a0:     e8 db cb 00 00                        	call 0x14480 <function_14480>
0x78a5:     48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0x78aa:     49 89 c5                              	mov r13, rax
0x78ad:     e9 c1 fd ff ff                        	jmp 0x7673 <function_74a0+0x1d3>
; data inside code section at 0x78b2 -- 0x78b8
0x78b2:     66 0f 1f 44 00 00                                  |f..D..          |
0x78b8:     4c 8d 78 01                           	lea r15, [rax + 1]
0x78bc:     4c 89 ff                              	mov rdi, r15
0x78bf:     e8 bc cb 00 00                        	call 0x14480 <function_14480>
0x78c4:     4d 89 f0                              	mov r8, r14
0x78c7:     48 c7 c1 ff ff ff ff                  	mov rcx, -1
0x78ce:     4c 89 e2                              	mov rdx, r12
0x78d1:     4c 89 fe                              	mov rsi, r15
0x78d4:     48 89 c7                              	mov rdi, rax
0x78d7:     49 89 c5                              	mov r13, rax
0x78da:     e8 81 bd 00 00                        	call 0x13660 <function_13660>
0x78df:     44 8b 4c 24 08                        	mov r9d, dword ptr [rsp + 8]
0x78e4:     e9 47 fc ff ff                        	jmp 0x7530 <function_74a0+0x90>
0x78e9:     31 db                                 	xor ebx, ebx
0x78eb:     31 ed                                 	xor ebp, ebp
0x78ed:     e9 e3 fc ff ff                        	jmp 0x75d5 <function_74a0+0x135>
0x78f2:     31 ed                                 	xor ebp, ebp
0x78f4:     e9 dc fc ff ff                        	jmp 0x75d5 <function_74a0+0x135>
0x78f9:     e8 72 c0 ff ff                        	call 0x3970 <__stack_chk_fail>
0x78fe:     41 b9 01 00 00 00                     	mov r9d, 1
0x7904:     e9 f4 fb ff ff                        	jmp 0x74fd <function_74a0+0x5d>
; data inside code section at 0x7909 -- 0x7910
0x7909:     0f 1f 80 00 00 00 00                               |.......         |
; function: function_7910 at 0x7910 -- 0x8178
0x7910:     41 57                                 	push r15
0x7912:     41 56                                 	push r14
0x7914:     48 89 f8                              	mov rax, rdi
0x7917:     41 55                                 	push r13
0x7919:     41 54                                 	push r12
0x791b:     49 89 ce                              	mov r14, rcx
0x791e:     55                                    	push rbp
0x791f:     53                                    	push rbx
0x7920:     4c 89 cb                              	mov rbx, r9
0x7923:     45 89 c7                              	mov r15d, r8d
0x7926:     45 31 c0                              	xor r8d, r8d
0x7929:     48 81 ec 48 20 00 00                  	sub rsp, 0x2048
0x7930:     48 89 3c 24                           	mov qword ptr [rsp], rdi
0x7934:     4c 8d 6c 24 30                        	lea r13, [rsp + 0x30]
0x7939:     48 8d 7c 24 28                        	lea rdi, [rsp + 0x28]
0x793e:     4c 8d 4c 24 27                        	lea r9, [rsp + 0x27]
0x7943:     4c 8b a4 24 80 20 00 00               	mov r12, qword ptr [rsp + 0x2080]
0x794b:     64 48 8b 0c 25 28 00 00 00            	mov rcx, qword ptr fs:[0x28]
0x7954:     48 89 8c 24 38 20 00 00               	mov qword ptr [rsp + 0x2038], rcx
0x795c:     31 c9                                 	xor ecx, ecx
0x795e:     89 d1                                 	mov ecx, edx
0x7960:     48 89 f2                              	mov rdx, rsi
0x7963:     48 89 c6                              	mov rsi, rax
0x7966:     4c 89 6c 24 28                        	mov qword ptr [rsp + 0x28], r13
0x796b:     e8 30 fb ff ff                        	call 0x74a0 <function_74a0>
0x7970:     80 7c 24 27 00                        	cmp byte ptr [rsp + 0x27], 0
0x7975:     48 89 c5                              	mov rbp, rax
0x7978:     74 09                                 	je 0x7983 <function_7910+0x73>
0x797a:     45 84 ff                              	test r15b, r15b
0x797d:     0f 85 55 02 00 00                     	jne 0x7bd8 <function_7910+0x2c8>
0x7983:     4d 85 f6                              	test r14, r14
0x7986:     74 32                                 	je 0x79ba <function_7910+0xaa>
0x7988:     bf 04 00 00 00                        	mov edi, 4
0x798d:     e8 be e2 ff ff                        	call 0x5c50 <function_5c50>
0x7992:     84 c0                                 	test al, al
0x7994:     0f 85 ae 02 00 00                     	jne 0x7c48 <function_7910+0x338>
0x799a:     48 8d 3d bf 86 21 00                  	lea rdi, [rip + 0x2186bf]
0x79a1:     e8 4a f9 ff ff                        	call 0x72f0 <function_72f0>
0x79a6:     4c 89 f7                              	mov rdi, r14
0x79a9:     e8 42 f9 ff ff                        	call 0x72f0 <function_72f0>
0x79ae:     48 8d 3d bb 86 21 00                  	lea rdi, [rip + 0x2186bb]
0x79b5:     e8 36 f9 ff ff                        	call 0x72f0 <function_72f0>
0x79ba:     4d 85 e4                              	test r12, r12
0x79bd:     0f 84 45 02 00 00                     	je 0x7c08 <function_7910+0x2f8>
0x79c3:     44 0f b6 35 dd 99 21 00               	movzx r14d, byte ptr [rip + 0x2199dd]
0x79cb:     45 84 f6                              	test r14b, r14b
0x79ce:     0f 85 ac 01 00 00                     	jne 0x7b80 <function_7910+0x270>
0x79d4:     49 89 ea                              	mov r10, rbp
0x79d7:     45 31 c9                              	xor r9d, r9d
0x79da:     48 8b 3d a7 99 21 00                  	mov rdi, qword ptr [rip + 0x2199a7]
0x79e1:     31 f6                                 	xor esi, esi
0x79e3:     4c 89 54 24 18                        	mov qword ptr [rsp + 0x18], r10
0x79e8:     4c 89 4c 24 10                        	mov qword ptr [rsp + 0x10], r9
0x79ed:     e8 1e e8 ff ff                        	call 0x6210
0x79f2:     be 01 00 00 00                        	mov esi, 1
0x79f7:     4c 89 e7                              	mov rdi, r12
0x79fa:     49 89 c7                              	mov r15, rax
0x79fd:     e8 0e e8 ff ff                        	call 0x6210
0x7a02:     80 38 2f                              	cmp byte ptr [rax], 0x2f
0x7a05:     49 89 c3                              	mov r11, rax
0x7a08:     48 8d 0d 3e 05 01 00                  	lea rcx, [rip + 0x1053e]
0x7a0f:     48 8d 05 34 02 01 00                  	lea rax, [rip + 0x10234]
0x7a16:     48 8d 35 13 02 01 00                  	lea rsi, [rip + 0x10213]
0x7a1d:     4d 89 d8                              	mov r8, r11
0x7a20:     4c 89 fa                              	mov rdx, r15
0x7a23:     bf 01 00 00 00                        	mov edi, 1
0x7a28:     4c 89 5c 24 08                        	mov qword ptr [rsp + 8], r11
0x7a2d:     48 0f 44 c8                           	cmove rcx, rax
0x7a31:     31 c0                                 	xor eax, eax
0x7a33:     e8 98 c2 ff ff                        	call 0x3cd0 <__printf_chk>
0x7a38:     4c 89 ff                              	mov rdi, r15
0x7a3b:     e8 30 c4 ff ff                        	call 0x3e70 <free>
0x7a40:     4c 8b 5c 24 08                        	mov r11, qword ptr [rsp + 8]
0x7a45:     4c 89 df                              	mov rdi, r11
0x7a48:     e8 23 c4 ff ff                        	call 0x3e70 <free>
0x7a4d:     48 85 db                              	test rbx, rbx
0x7a50:     4c 8b 4c 24 10                        	mov r9, qword ptr [rsp + 0x10]
0x7a55:     4c 8b 54 24 18                        	mov r10, qword ptr [rsp + 0x18]
0x7a5a:     0f 84 ba 01 00 00                     	je 0x7c1a <function_7910+0x30a>
0x7a60:     80 3d b1 98 21 00 00                  	cmp byte ptr [rip + 0x2198b1], 0
0x7a67:     74 24                                 	je 0x7a8d <function_7910+0x17d>
0x7a69:     48 8b 53 18                           	mov rdx, qword ptr [rbx + 0x18]
0x7a6d:     48 8b 43 20                           	mov rax, qword ptr [rbx + 0x20]
0x7a71:     48 29 d0                              	sub rax, rdx
0x7a74:     48 83 f8 07                           	cmp rax, 7
0x7a78:     0f 86 ea 01 00 00                     	jbe 0x7c68 <function_7910+0x358>
0x7a7e:     48 8b 05 73 97 21 00                  	mov rax, qword ptr [rip + 0x219773]
0x7a85:     48 89 02                              	mov qword ptr [rdx], rax
0x7a88:     48 83 43 18 08                        	add qword ptr [rbx + 0x18], 8
0x7a8d:     48 8b 7c 24 28                        	mov rdi, qword ptr [rsp + 0x28]
0x7a92:     48 8b 0d ef 87 21 00                  	mov rcx, qword ptr [rip + 0x2187ef]
0x7a99:     4c 89 d2                              	mov rdx, r10
0x7a9c:     be 01 00 00 00                        	mov esi, 1
0x7aa1:     4c 01 cf                              	add rdi, r9
0x7aa4:     e8 d7 c1 ff ff                        	call 0x3c80 <fwrite_unlocked>
0x7aa9:     48 8b 05 48 97 21 00                  	mov rax, qword ptr [rip + 0x219748]
0x7ab0:     48 01 e8                              	add rax, rbp
0x7ab3:     80 3d 5e 98 21 00 00                  	cmp byte ptr [rip + 0x21985e], 0
0x7aba:     48 89 05 37 97 21 00                  	mov qword ptr [rip + 0x219737], rax
0x7ac1:     74 1d                                 	je 0x7ae0 <function_7910+0x1d0>
0x7ac3:     48 8b 4b 18                           	mov rcx, qword ptr [rbx + 0x18]
0x7ac7:     48 8b 53 20                           	mov rdx, qword ptr [rbx + 0x20]
0x7acb:     48 29 ca                              	sub rdx, rcx
0x7ace:     48 83 fa 07                           	cmp rdx, 7
0x7ad2:     0f 86 c0 01 00 00                     	jbe 0x7c98 <function_7910+0x388>
0x7ad8:     48 89 01                              	mov qword ptr [rcx], rax
0x7adb:     48 83 43 18 08                        	add qword ptr [rbx + 0x18], 8
0x7ae0:     4d 85 e4                              	test r12, r12
0x7ae3:     74 4b                                 	je 0x7b30 <function_7910+0x220>
0x7ae5:     48 8b 0d 9c 87 21 00                  	mov rcx, qword ptr [rip + 0x21879c]
0x7aec:     48 8d 3d 51 01 01 00                  	lea rdi, [rip + 0x10151]
0x7af3:     ba 06 00 00 00                        	mov edx, 6
0x7af8:     be 01 00 00 00                        	mov esi, 1
0x7afd:     e8 7e c1 ff ff                        	call 0x3c80 <fwrite_unlocked>
0x7b02:     45 84 f6                              	test r14b, r14b
0x7b05:     74 29                                 	je 0x7b30 <function_7910+0x220>
0x7b07:     48 8b 44 24 28                        	mov rax, qword ptr [rsp + 0x28]
0x7b0c:     48 8b 3d 75 87 21 00                  	mov rdi, qword ptr [rip + 0x218775]
0x7b13:     0f b6 54 28 ff                        	movzx edx, byte ptr [rax + rbp - 1]
0x7b18:     48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0x7b1c:     48 3b 47 30                           	cmp rax, qword ptr [rdi + 0x30]
0x7b20:     0f 83 aa 01 00 00                     	jae 0x7cd0 <function_7910+0x3c0>
0x7b26:     48 8d 48 01                           	lea rcx, [rax + 1]
0x7b2a:     48 89 4f 28                           	mov qword ptr [rdi + 0x28], rcx
0x7b2e:     88 10                                 	mov byte ptr [rax], dl
0x7b30:     48 8b 7c 24 28                        	mov rdi, qword ptr [rsp + 0x28]
0x7b35:     48 3b 3c 24                           	cmp rdi, qword ptr [rsp]
0x7b39:     74 0a                                 	je 0x7b45 <function_7910+0x235>
0x7b3b:     4c 39 ef                              	cmp rdi, r13
0x7b3e:     74 05                                 	je 0x7b45 <function_7910+0x235>
0x7b40:     e8 2b c3 ff ff                        	call 0x3e70 <free>
0x7b45:     0f b6 44 24 27                        	movzx eax, byte ptr [rsp + 0x27]
0x7b4a:     48 01 e8                              	add rax, rbp
0x7b4d:     48 8b 9c 24 38 20 00 00               	mov rbx, qword ptr [rsp + 0x2038]
0x7b55:     64 48 33 1c 25 28 00 00 00            	xor rbx, qword ptr fs:[0x28]
0x7b5e:     0f 85 a8 01 00 00                     	jne 0x7d0c <function_7910+0x3fc>
0x7b64:     48 81 c4 48 20 00 00                  	add rsp, 0x2048
0x7b6b:     5b                                    	pop rbx
0x7b6c:     5d                                    	pop rbp
0x7b6d:     41 5c                                 	pop r12
0x7b6f:     41 5d                                 	pop r13
0x7b71:     41 5e                                 	pop r14
0x7b73:     41 5f                                 	pop r15
0x7b75:     c3                                    	ret 
; data inside code section at 0x7b76 -- 0x7b80
0x7b76:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x7b80:     44 0f b6 35 21 98 21 00               	movzx r14d, byte ptr [rip + 0x219821]
0x7b88:     45 84 f6                              	test r14b, r14b
0x7b8b:     0f 84 43 fe ff ff                     	je 0x79d4 <function_7910+0xc4>
0x7b91:     80 7c 24 27 00                        	cmp byte ptr [rsp + 0x27], 0
0x7b96:     0f 85 1c 01 00 00                     	jne 0x7cb8 <function_7910+0x3a8>
0x7b9c:     48 8b 44 24 28                        	mov rax, qword ptr [rsp + 0x28]
0x7ba1:     48 8b 3d e0 86 21 00                  	mov rdi, qword ptr [rip + 0x2186e0]
0x7ba8:     4c 8d 55 fe                           	lea r10, [rbp - 2]
0x7bac:     0f b6 10                              	movzx edx, byte ptr [rax]
0x7baf:     48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0x7bb3:     48 3b 47 30                           	cmp rax, qword ptr [rdi + 0x30]
0x7bb7:     0f 83 32 01 00 00                     	jae 0x7cef <function_7910+0x3df>
0x7bbd:     48 8d 48 01                           	lea rcx, [rax + 1]
0x7bc1:     41 b9 01 00 00 00                     	mov r9d, 1
0x7bc7:     48 89 4f 28                           	mov qword ptr [rdi + 0x28], rcx
0x7bcb:     88 10                                 	mov byte ptr [rax], dl
0x7bcd:     e9 08 fe ff ff                        	jmp 0x79da <function_7910+0xca>
; data inside code section at 0x7bd2 -- 0x7bd8
0x7bd2:     66 0f 1f 44 00 00                                  |f..D..          |
0x7bd8:     48 8b 3d a9 86 21 00                  	mov rdi, qword ptr [rip + 0x2186a9]
0x7bdf:     48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0x7be3:     48 3b 47 30                           	cmp rax, qword ptr [rdi + 0x30]
0x7be7:     0f 83 f3 00 00 00                     	jae 0x7ce0 <function_7910+0x3d0>
0x7bed:     48 8d 50 01                           	lea rdx, [rax + 1]
0x7bf1:     48 89 57 28                           	mov qword ptr [rdi + 0x28], rdx
0x7bf5:     c6 00 20                              	mov byte ptr [rax], 0x20
0x7bf8:     48 83 05 f8 95 21 00 01               	add qword ptr [rip + 0x2195f8], 1
0x7c00:     e9 7e fd ff ff                        	jmp 0x7983 <function_7910+0x73>
; data inside code section at 0x7c05 -- 0x7c08
0x7c05:     0f 1f 00                                           |...             |
0x7c08:     45 31 c9                              	xor r9d, r9d
0x7c0b:     45 31 f6                              	xor r14d, r14d
0x7c0e:     48 85 db                              	test rbx, rbx
0x7c11:     49 89 ea                              	mov r10, rbp
0x7c14:     0f 85 46 fe ff ff                     	jne 0x7a60 <function_7910+0x150>
0x7c1a:     48 8b 7c 24 28                        	mov rdi, qword ptr [rsp + 0x28]
0x7c1f:     48 8b 0d 62 86 21 00                  	mov rcx, qword ptr [rip + 0x218662]
0x7c26:     4c 89 d2                              	mov rdx, r10
0x7c29:     be 01 00 00 00                        	mov esi, 1
0x7c2e:     4c 01 cf                              	add rdi, r9
0x7c31:     e8 4a c0 ff ff                        	call 0x3c80 <fwrite_unlocked>
0x7c36:     48 01 2d bb 95 21 00                  	add qword ptr [rip + 0x2195bb], rbp
0x7c3d:     e9 9e fe ff ff                        	jmp 0x7ae0 <function_7910+0x1d0>
; data inside code section at 0x7c42 -- 0x7c48
0x7c42:     66 0f 1f 44 00 00                                  |f..D..          |
0x7c48:     48 8d 3d 11 84 21 00                  	lea rdi, [rip + 0x218411]
0x7c4f:     e8 9c f6 ff ff                        	call 0x72f0 <function_72f0>
0x7c54:     48 8d 3d 15 84 21 00                  	lea rdi, [rip + 0x218415]
0x7c5b:     e8 90 f6 ff ff                        	call 0x72f0 <function_72f0>
0x7c60:     e9 35 fd ff ff                        	jmp 0x799a <function_7910+0x8a>
; data inside code section at 0x7c65 -- 0x7c68
0x7c65:     0f 1f 00                                           |...             |
0x7c68:     be 08 00 00 00                        	mov esi, 8
0x7c6d:     48 89 df                              	mov rdi, rbx
0x7c70:     4c 89 54 24 10                        	mov qword ptr [rsp + 0x10], r10
0x7c75:     4c 89 4c 24 08                        	mov qword ptr [rsp + 8], r9
0x7c7a:     e8 71 d8 00 00                        	call 0x154f0 <_obstack_newchunk>
0x7c7f:     48 8b 53 18                           	mov rdx, qword ptr [rbx + 0x18]
0x7c83:     4c 8b 54 24 10                        	mov r10, qword ptr [rsp + 0x10]
0x7c88:     4c 8b 4c 24 08                        	mov r9, qword ptr [rsp + 8]
0x7c8d:     e9 ec fd ff ff                        	jmp 0x7a7e <function_7910+0x16e>
; data inside code section at 0x7c92 -- 0x7c98
0x7c92:     66 0f 1f 44 00 00                                  |f..D..          |
0x7c98:     be 08 00 00 00                        	mov esi, 8
0x7c9d:     48 89 df                              	mov rdi, rbx
0x7ca0:     e8 4b d8 00 00                        	call 0x154f0 <_obstack_newchunk>
0x7ca5:     48 8b 4b 18                           	mov rcx, qword ptr [rbx + 0x18]
0x7ca9:     48 8b 05 48 95 21 00                  	mov rax, qword ptr [rip + 0x219548]
0x7cb0:     e9 23 fe ff ff                        	jmp 0x7ad8 <function_7910+0x1c8>
; data inside code section at 0x7cb5 -- 0x7cb8
0x7cb5:     0f 1f 00                                           |...             |
0x7cb8:     49 89 ea                              	mov r10, rbp
0x7cbb:     45 31 c9                              	xor r9d, r9d
0x7cbe:     45 31 f6                              	xor r14d, r14d
0x7cc1:     e9 14 fd ff ff                        	jmp 0x79da <function_7910+0xca>
; data inside code section at 0x7cc6 -- 0x7cd0
0x7cc6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x7cd0:     0f b6 f2                              	movzx esi, dl
0x7cd3:     e8 f8 bc ff ff                        	call 0x39d0 <__overflow>
0x7cd8:     e9 53 fe ff ff                        	jmp 0x7b30 <function_7910+0x220>
; data inside code section at 0x7cdd -- 0x7ce0
0x7cdd:     0f 1f 00                                           |...             |
0x7ce0:     be 20 00 00 00                        	mov esi, 0x20
0x7ce5:     e8 e6 bc ff ff                        	call 0x39d0 <__overflow>
0x7cea:     e9 09 ff ff ff                        	jmp 0x7bf8 <function_7910+0x2e8>
0x7cef:     0f b6 f2                              	movzx esi, dl
0x7cf2:     4c 89 54 24 08                        	mov qword ptr [rsp + 8], r10
0x7cf7:     e8 d4 bc ff ff                        	call 0x39d0 <__overflow>
0x7cfc:     41 b9 01 00 00 00                     	mov r9d, 1
0x7d02:     4c 8b 54 24 08                        	mov r10, qword ptr [rsp + 8]
0x7d07:     e9 ce fc ff ff                        	jmp 0x79da <function_7910+0xca>
0x7d0c:     e8 5f bc ff ff                        	call 0x3970 <__stack_chk_fail>
0x7d11:     0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0x7d16:     66 2e 0f 1f 84 00 00 00 00 00         	nop word ptr cs:[rax + rax]
0x7d20:     41 57                                 	push r15
0x7d22:     41 56                                 	push r14
0x7d24:     41 89 f7                              	mov r15d, esi
0x7d27:     41 55                                 	push r13
0x7d29:     41 54                                 	push r12
0x7d2b:     49 89 fe                              	mov r14, rdi
0x7d2e:     55                                    	push rbp
0x7d2f:     53                                    	push rbx
0x7d30:     49 89 d5                              	mov r13, rdx
0x7d33:     49 89 cc                              	mov r12, rcx
0x7d36:     48 83 ec 18                           	sub rsp, 0x18
0x7d3a:     40 84 f6                              	test sil, sil
0x7d3d:     0f b6 05 ce 95 21 00                  	movzx eax, byte ptr [rip + 0x2195ce]
0x7d44:     74 5a                                 	je 0x7da0 <function_7910+0x490>
0x7d46:     84 c0                                 	test al, al
0x7d48:     48 8b 6f 08                           	mov rbp, qword ptr [rdi + 8]
0x7d4c:     0f 85 76 01 00 00                     	jne 0x7ec8 <function_7910+0x5b8>
0x7d52:     41 8b 96 c4 00 00 00                  	mov edx, dword ptr [r14 + 0xc4]
0x7d59:     48 8b 35 70 95 21 00                  	mov rsi, qword ptr [rip + 0x219570]
0x7d60:     48 83 ec 08                           	sub rsp, 8
0x7d64:     41 83 f7 01                           	xor r15d, 1
0x7d68:     41 ff 76 10                           	push qword ptr [r14 + 0x10]
0x7d6c:     4d 89 e9                              	mov r9, r13
0x7d6f:     45 0f b6 c7                           	movzx r8d, r15b
0x7d73:     31 c9                                 	xor ecx, ecx
0x7d75:     48 89 ef                              	mov rdi, rbp
0x7d78:     e8 93 fb ff ff                        	call 0x7910 <function_7910>
0x7d7d:     48 89 c3                              	mov rbx, rax
0x7d80:     e8 db f5 ff ff                        	call 0x7360 <function_7360>
0x7d85:     58                                    	pop rax
0x7d86:     5a                                    	pop rdx
0x7d87:     48 83 c4 18                           	add rsp, 0x18
0x7d8b:     48 89 d8                              	mov rax, rbx
0x7d8e:     5b                                    	pop rbx
0x7d8f:     5d                                    	pop rbp
0x7d90:     41 5c                                 	pop r12
0x7d92:     41 5d                                 	pop r13
0x7d94:     41 5e                                 	pop r14
0x7d96:     41 5f                                 	pop r15
0x7d98:     c3                                    	ret 
; data inside code section at 0x7d99 -- 0x7da0
0x7d99:     0f 1f 80 00 00 00 00                               |.......         |
0x7da0:     84 c0                                 	test al, al
0x7da2:     48 8b 2f                              	mov rbp, qword ptr [rdi]
0x7da5:     74 ab                                 	je 0x7d52 <function_7910+0x442>
0x7da7:     80 3d e2 95 21 00 00                  	cmp byte ptr [rip + 0x2195e2], 0
0x7dae:     0f b6 97 b9 00 00 00                  	movzx edx, byte ptr [rdi + 0xb9]
0x7db5:     0f 85 cd 01 00 00                     	jne 0x7f88 <function_7910+0x678>
0x7dbb:     45 8b 46 30                           	mov r8d, dword ptr [r14 + 0x30]
0x7dbf:     41 0f b6 8e b8 00 00 00               	movzx ecx, byte ptr [r14 + 0xb8]
0x7dc7:     84 c9                                 	test cl, cl
0x7dc9:     0f 85 43 01 00 00                     	jne 0x7f12 <function_7910+0x602>
0x7dcf:     41 8b 8e a8 00 00 00                  	mov ecx, dword ptr [r14 + 0xa8]
0x7dd6:     48 8d 05 c3 ec 00 00                  	lea rax, [rip + 0xecc3]
0x7ddd:     8b 04 88                              	mov eax, dword ptr [rax + rcx*4]
0x7de0:     83 f8 07                              	cmp eax, 7
0x7de3:     0f 94 c1                              	sete cl
0x7de6:     83 f8 05                              	cmp eax, 5
0x7de9:     0f 84 b1 01 00 00                     	je 0x7fa0 <function_7910+0x690>
0x7def:     85 d2                                 	test edx, edx
0x7df1:     0f 85 75 03 00 00                     	jne 0x816c <function_7910+0x85c>
0x7df7:     84 c9                                 	test cl, cl
0x7df9:     0f 84 6d 03 00 00                     	je 0x816c <function_7910+0x85c>
0x7dff:     80 3d 8a 95 21 00 00                  	cmp byte ptr [rip + 0x21958a], 0
0x7e06:     b9 d0 00 00 00                        	mov ecx, 0xd0
0x7e0b:     75 1a                                 	jne 0x7e27 <function_7910+0x517>
0x7e0d:     bf 0d 00 00 00                        	mov edi, 0xd
0x7e12:     e8 39 de ff ff                        	call 0x5c50 <function_5c50>
0x7e17:     3c 01                                 	cmp al, 1
0x7e19:     48 19 c9                              	sbb rcx, rcx
0x7e1c:     48 83 e1 a0                           	and rcx, 0xffffffffffffffa0
0x7e20:     48 81 c1 d0 00 00 00                  	add rcx, 0xd0
0x7e27:     48 8d 1d 32 82 21 00                  	lea rbx, [rip + 0x218232]
0x7e2e:     48 01 d9                              	add rcx, rbx
0x7e31:     48 83 79 08 00                        	cmp qword ptr [rcx + 8], 0
0x7e36:     75 14                                 	jne 0x7e4c <function_7910+0x53c>
0x7e38:     bf 04 00 00 00                        	mov edi, 4
0x7e3d:     e8 0e de ff ff                        	call 0x5c50 <function_5c50>
0x7e42:     84 c0                                 	test al, al
0x7e44:     0f 84 08 ff ff ff                     	je 0x7d52 <function_7910+0x442>
0x7e4a:     31 c9                                 	xor ecx, ecx
0x7e4c:     48 8b 35 7d 94 21 00                  	mov rsi, qword ptr [rip + 0x21947d]
0x7e53:     41 8b 96 c4 00 00 00                  	mov edx, dword ptr [r14 + 0xc4]
0x7e5a:     48 83 ec 08                           	sub rsp, 8
0x7e5e:     41 83 f7 01                           	xor r15d, 1
0x7e62:     41 ff 76 10                           	push qword ptr [r14 + 0x10]
0x7e66:     48 89 ef                              	mov rdi, rbp
0x7e69:     4d 89 e9                              	mov r9, r13
0x7e6c:     45 0f b6 c7                           	movzx r8d, r15b
0x7e70:     e8 9b fa ff ff                        	call 0x7910 <function_7910>
0x7e75:     48 89 c3                              	mov rbx, rax
0x7e78:     e8 e3 f4 ff ff                        	call 0x7360 <function_7360>
0x7e7d:     e8 1e f4 ff ff                        	call 0x72a0
0x7e82:     48 8b 0d 27 94 21 00                  	mov rcx, qword ptr [rip + 0x219427]
0x7e89:     5e                                    	pop rsi
0x7e8a:     5f                                    	pop rdi
0x7e8b:     48 85 c9                              	test rcx, rcx
0x7e8e:     0f 84 f3 fe ff ff                     	je 0x7d87 <function_7910+0x477>
0x7e94:     31 d2                                 	xor edx, edx
0x7e96:     4c 89 e0                              	mov rax, r12
0x7e99:     48 f7 f1                              	div rcx
0x7e9c:     31 d2                                 	xor edx, edx
0x7e9e:     48 89 c6                              	mov rsi, rax
0x7ea1:     4a 8d 44 23 ff                        	lea rax, [rbx + r12 - 1]
0x7ea6:     48 f7 f1                              	div rcx
0x7ea9:     48 39 c6                              	cmp rsi, rax
0x7eac:     0f 84 d5 fe ff ff                     	je 0x7d87 <function_7910+0x477>
0x7eb2:     48 8d 3d 17 83 21 00                  	lea rdi, [rip + 0x218317]
0x7eb9:     e8 32 f4 ff ff                        	call 0x72f0 <function_72f0>
0x7ebe:     e9 c4 fe ff ff                        	jmp 0x7d87 <function_7910+0x477>
; data inside code section at 0x7ec3 -- 0x7ec8
0x7ec3:     0f 1f 44 00 00                                     |..D..           |
0x7ec8:     80 bf b9 00 00 00 00                  	cmp byte ptr [rdi + 0xb9], 0
0x7ecf:     44 8b 87 ac 00 00 00                  	mov r8d, dword ptr [rdi + 0xac]
0x7ed6:     75 28                                 	jne 0x7f00 <function_7910+0x5f0>
0x7ed8:     bf 0c 00 00 00                        	mov edi, 0xc
0x7edd:     e8 6e dd ff ff                        	call 0x5c50 <function_5c50>
0x7ee2:     84 c0                                 	test al, al
0x7ee4:     ba ff ff ff ff                        	mov edx, 0xffffffff
0x7ee9:     0f 84 d0 fe ff ff                     	je 0x7dbf <function_7910+0x4af>
0x7eef:     b9 c0 00 00 00                        	mov ecx, 0xc0
0x7ef4:     e9 2e ff ff ff                        	jmp 0x7e27 <function_7910+0x517>
; data inside code section at 0x7ef9 -- 0x7f00
0x7ef9:     0f 1f 80 00 00 00 00                               |.......         |
0x7f00:     41 0f b6 8e b8 00 00 00               	movzx ecx, byte ptr [r14 + 0xb8]
0x7f08:     31 d2                                 	xor edx, edx
0x7f0a:     84 c9                                 	test cl, cl
0x7f0c:     0f 84 bd fe ff ff                     	je 0x7dcf <function_7910+0x4bf>
0x7f12:     44 89 c0                              	mov eax, r8d
0x7f15:     25 00 f0 00 00                        	and eax, 0xf000
0x7f1a:     3d 00 80 00 00                        	cmp eax, 0x8000
0x7f1f:     0f 84 eb 00 00 00                     	je 0x8010 <function_7910+0x700>
0x7f25:     3d 00 40 00 00                        	cmp eax, 0x4000
0x7f2a:     0f 84 60 01 00 00                     	je 0x8090 <function_7910+0x780>
0x7f30:     3d 00 a0 00 00                        	cmp eax, 0xa000
0x7f35:     0f 84 b5 01 00 00                     	je 0x80f0 <function_7910+0x7e0>
0x7f3b:     3d 00 10 00 00                        	cmp eax, 0x1000
0x7f40:     b9 80 00 00 00                        	mov ecx, 0x80
0x7f45:     0f 84 dc fe ff ff                     	je 0x7e27 <function_7910+0x517>
0x7f4b:     3d 00 c0 00 00                        	cmp eax, 0xc000
0x7f50:     b9 90 00 00 00                        	mov ecx, 0x90
0x7f55:     0f 84 cc fe ff ff                     	je 0x7e27 <function_7910+0x517>
0x7f5b:     3d 00 60 00 00                        	cmp eax, 0x6000
0x7f60:     b9 a0 00 00 00                        	mov ecx, 0xa0
0x7f65:     0f 84 bc fe ff ff                     	je 0x7e27 <function_7910+0x517>
0x7f6b:     3d 00 20 00 00                        	cmp eax, 0x2000
0x7f70:     b9 d0 00 00 00                        	mov ecx, 0xd0
0x7f75:     bb b0 00 00 00                        	mov ebx, 0xb0
0x7f7a:     48 0f 44 cb                           	cmove rcx, rbx
0x7f7e:     e9 a4 fe ff ff                        	jmp 0x7e27 <function_7910+0x517>
; data inside code section at 0x7f83 -- 0x7f88
0x7f83:     0f 1f 44 00 00                                     |..D..           |
0x7f88:     84 d2                                 	test dl, dl
0x7f8a:     0f 84 2b fe ff ff                     	je 0x7dbb <function_7910+0x4ab>
0x7f90:     45 8b 86 ac 00 00 00                  	mov r8d, dword ptr [r14 + 0xac]
0x7f97:     e9 23 fe ff ff                        	jmp 0x7dbf <function_7910+0x4af>
; data inside code section at 0x7f9c -- 0x7fa0
0x7f9c:     0f 1f 40 00                                        |..@.            |
0x7fa0:     48 89 ef                              	mov rdi, rbp
0x7fa3:     e8 a8 b9 ff ff                        	call 0x3950 <strlen>
0x7fa8:     48 8b 1d 59 93 21 00                  	mov rbx, qword ptr [rip + 0x219359]
0x7faf:     48 89 c1                              	mov rcx, rax
0x7fb2:     48 85 db                              	test rbx, rbx
0x7fb5:     74 3a                                 	je 0x7ff1 <function_7910+0x6e1>
0x7fb7:     66 0f 1f 84 00 00 00 00 00            	nop word ptr [rax + rax]
0x7fc0:     48 8b 13                              	mov rdx, qword ptr [rbx]
0x7fc3:     48 39 d1                              	cmp rcx, rdx
0x7fc6:     72 20                                 	jb 0x7fe8 <function_7910+0x6d8>
0x7fc8:     48 89 cf                              	mov rdi, rcx
0x7fcb:     48 8b 73 08                           	mov rsi, qword ptr [rbx + 8]
0x7fcf:     48 89 4c 24 08                        	mov qword ptr [rsp + 8], rcx
0x7fd4:     48 29 d7                              	sub rdi, rdx
0x7fd7:     48 01 ef                              	add rdi, rbp
0x7fda:     e8 21 b8 ff ff                        	call 0x3800 <strncmp>
0x7fdf:     85 c0                                 	test eax, eax
0x7fe1:     48 8b 4c 24 08                        	mov rcx, qword ptr [rsp + 8]
0x7fe6:     74 18                                 	je 0x8000 <function_7910+0x6f0>
0x7fe8:     48 8b 5b 20                           	mov rbx, qword ptr [rbx + 0x20]
0x7fec:     48 85 db                              	test rbx, rbx
0x7fef:     75 cf                                 	jne 0x7fc0 <function_7910+0x6b0>
0x7ff1:     b9 50 00 00 00                        	mov ecx, 0x50
0x7ff6:     e9 2c fe ff ff                        	jmp 0x7e27 <function_7910+0x517>
; data inside code section at 0x7ffb -- 0x8000
0x7ffb:     0f 1f 44 00 00                                     |..D..           |
0x8000:     48 8d 4b 10                           	lea rcx, [rbx + 0x10]
0x8004:     e9 28 fe ff ff                        	jmp 0x7e31 <function_7910+0x521>
; data inside code section at 0x8009 -- 0x8010
0x8009:     0f 1f 80 00 00 00 00                               |.......         |
0x8010:     41 f7 c0 00 08 00 00                  	test r8d, 0x800
0x8017:     74 1f                                 	je 0x8038 <function_7910+0x728>
0x8019:     bf 10 00 00 00                        	mov edi, 0x10
0x801e:     e8 2d dc ff ff                        	call 0x5c50 <function_5c50>
0x8023:     84 c0                                 	test al, al
0x8025:     74 11                                 	je 0x8038 <function_7910+0x728>
0x8027:     b9 00 01 00 00                        	mov ecx, 0x100
0x802c:     e9 f6 fd ff ff                        	jmp 0x7e27 <function_7910+0x517>
; data inside code section at 0x8031 -- 0x8038
0x8031:     0f 1f 80 00 00 00 00                               |.......         |
0x8038:     41 f7 c0 00 04 00 00                  	test r8d, 0x400
0x803f:     75 2f                                 	jne 0x8070 <function_7910+0x760>
0x8041:     bf 15 00 00 00                        	mov edi, 0x15
0x8046:     e8 05 dc ff ff                        	call 0x5c50 <function_5c50>
0x804b:     84 c0                                 	test al, al
0x804d:     0f 84 ad 00 00 00                     	je 0x8100 <function_7910+0x7f0>
0x8053:     41 80 be c0 00 00 00 00               	cmp byte ptr [r14 + 0xc0], 0
0x805b:     0f 84 9f 00 00 00                     	je 0x8100 <function_7910+0x7f0>
0x8061:     b9 50 01 00 00                        	mov ecx, 0x150
0x8066:     e9 bc fd ff ff                        	jmp 0x7e27 <function_7910+0x517>
; data inside code section at 0x806b -- 0x8070
0x806b:     0f 1f 44 00 00                                     |..D..           |
0x8070:     bf 11 00 00 00                        	mov edi, 0x11
0x8075:     e8 d6 db ff ff                        	call 0x5c50 <function_5c50>
0x807a:     84 c0                                 	test al, al
0x807c:     74 c3                                 	je 0x8041 <function_7910+0x731>
0x807e:     b9 10 01 00 00                        	mov ecx, 0x110
0x8083:     e9 9f fd ff ff                        	jmp 0x7e27 <function_7910+0x517>
; data inside code section at 0x8088 -- 0x8090
0x8088:     0f 1f 84 00 00 00 00 00                            |........        |
0x8090:     44 89 c0                              	mov eax, r8d
0x8093:     25 02 02 00 00                        	and eax, 0x202
0x8098:     3d 02 02 00 00                        	cmp eax, 0x202
0x809d:     0f 84 ad 00 00 00                     	je 0x8150 <function_7910+0x840>
0x80a3:     41 f6 c0 02                           	test r8b, 2
0x80a7:     74 17                                 	je 0x80c0 <function_7910+0x7b0>
0x80a9:     bf 13 00 00 00                        	mov edi, 0x13
0x80ae:     e8 9d db ff ff                        	call 0x5c50 <function_5c50>
0x80b3:     84 c0                                 	test al, al
0x80b5:     b9 30 01 00 00                        	mov ecx, 0x130
0x80ba:     0f 85 67 fd ff ff                     	jne 0x7e27 <function_7910+0x517>
0x80c0:     41 81 e0 00 02 00 00                  	and r8d, 0x200
0x80c7:     b9 60 00 00 00                        	mov ecx, 0x60
0x80cc:     0f 84 55 fd ff ff                     	je 0x7e27 <function_7910+0x517>
0x80d2:     bf 12 00 00 00                        	mov edi, 0x12
0x80d7:     e8 74 db ff ff                        	call 0x5c50 <function_5c50>
0x80dc:     3c 01                                 	cmp al, 1
0x80de:     48 19 c9                              	sbb rcx, rcx
0x80e1:     80 e1 40                              	and cl, 0x40
0x80e4:     48 81 c1 20 01 00 00                  	add rcx, 0x120
0x80eb:     e9 37 fd ff ff                        	jmp 0x7e27 <function_7910+0x517>
0x80f0:     b8 07 00 00 00                        	mov eax, 7
0x80f5:     e9 f5 fc ff ff                        	jmp 0x7def <function_7910+0x4df>
; data inside code section at 0x80fa -- 0x8100
0x80fa:     66 0f 1f 44 00 00                                  |f..D..          |
0x8100:     41 83 e0 49                           	and r8d, 0x49
0x8104:     74 1a                                 	je 0x8120 <function_7910+0x810>
0x8106:     bf 0e 00 00 00                        	mov edi, 0xe
0x810b:     e8 40 db ff ff                        	call 0x5c50 <function_5c50>
0x8110:     84 c0                                 	test al, al
0x8112:     74 0c                                 	je 0x8120 <function_7910+0x810>
0x8114:     b9 e0 00 00 00                        	mov ecx, 0xe0
0x8119:     e9 09 fd ff ff                        	jmp 0x7e27 <function_7910+0x517>
; data inside code section at 0x811e -- 0x8120
0x811e:     66 90                                              |f.              |
0x8120:     49 83 7e 28 01                        	cmp qword ptr [r14 + 0x28], 1
0x8125:     0f 86 75 fe ff ff                     	jbe 0x7fa0 <function_7910+0x690>
0x812b:     bf 16 00 00 00                        	mov edi, 0x16
0x8130:     e8 1b db ff ff                        	call 0x5c50 <function_5c50>
0x8135:     84 c0                                 	test al, al
0x8137:     0f 84 63 fe ff ff                     	je 0x7fa0 <function_7910+0x690>
0x813d:     b9 60 01 00 00                        	mov ecx, 0x160
0x8142:     e9 e0 fc ff ff                        	jmp 0x7e27 <function_7910+0x517>
; data inside code section at 0x8147 -- 0x8150
0x8147:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0x8150:     bf 14 00 00 00                        	mov edi, 0x14
0x8155:     e8 f6 da ff ff                        	call 0x5c50 <function_5c50>
0x815a:     84 c0                                 	test al, al
0x815c:     b9 40 01 00 00                        	mov ecx, 0x140
0x8161:     0f 85 c0 fc ff ff                     	jne 0x7e27 <function_7910+0x517>
0x8167:     e9 37 ff ff ff                        	jmp 0x80a3 <function_7910+0x793>
0x816c:     48 c1 e0 04                           	shl rax, 4
0x8170:     48 89 c1                              	mov rcx, rax
0x8173:     e9 af fc ff ff                        	jmp 0x7e27 <function_7910+0x517>
; data inside code section at 0x8178 -- 0x8180
0x8178:     0f 1f 84 00 00 00 00 00                            |........        |
; function: function_8180 at 0x8180 -- 0x8d19
0x8180:     55                                    	push rbp
0x8181:     53                                    	push rbx
0x8182:     48 89 f5                              	mov rbp, rsi
0x8185:     48 89 fb                              	mov rbx, rdi
0x8188:     48 81 ec a8 02 00 00                  	sub rsp, 0x2a8
0x818f:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x8198:     48 89 84 24 98 02 00 00               	mov qword ptr [rsp + 0x298], rax
0x81a0:     31 c0                                 	xor eax, eax
0x81a2:     e8 a9 f2 ff ff                        	call 0x7450
0x81a7:     80 3d 4e 91 21 00 00                  	cmp byte ptr [rip + 0x21914e], 0
0x81ae:     74 41                                 	je 0x81f1 <function_8180+0x71>
0x81b0:     80 bb b8 00 00 00 00                  	cmp byte ptr [rbx + 0xb8], 0
0x81b7:     48 8d 0d 70 fa 00 00                  	lea rcx, [rip + 0xfa70]
0x81be:     74 0d                                 	je 0x81cd <function_8180+0x4d>
0x81c0:     48 8b 7b 20                           	mov rdi, qword ptr [rbx + 0x20]
0x81c4:     48 85 ff                              	test rdi, rdi
0x81c7:     0f 85 2b 01 00 00                     	jne 0x82f8 <function_8180+0x178>
0x81cd:     31 d2                                 	xor edx, edx
0x81cf:     83 3d 62 91 21 00 04                  	cmp dword ptr [rip + 0x219162], 4
0x81d6:     74 06                                 	je 0x81de <function_8180+0x5e>
0x81d8:     8b 15 82 91 21 00                     	mov edx, dword ptr [rip + 0x219182]
0x81de:     48 8d 35 76 fa 00 00                  	lea rsi, [rip + 0xfa76]
0x81e5:     bf 01 00 00 00                        	mov edi, 1
0x81ea:     31 c0                                 	xor eax, eax
0x81ec:     e8 df ba ff ff                        	call 0x3cd0 <__printf_chk>
0x81f1:     80 3d 34 91 21 00 00                  	cmp byte ptr [rip + 0x219134], 0
0x81f8:     74 38                                 	je 0x8232 <function_8180+0xb2>
0x81fa:     80 bb b8 00 00 00 00                  	cmp byte ptr [rbx + 0xb8], 0
0x8201:     48 8d 0d 26 fa 00 00                  	lea rcx, [rip + 0xfa26]
0x8208:     0f 85 b2 00 00 00                     	jne 0x82c0 <function_8180+0x140>
0x820e:     31 d2                                 	xor edx, edx
0x8210:     83 3d 21 91 21 00 04                  	cmp dword ptr [rip + 0x219121], 4
0x8217:     74 06                                 	je 0x821f <function_8180+0x9f>
0x8219:     8b 15 3d 91 21 00                     	mov edx, dword ptr [rip + 0x21913d]
0x821f:     48 8d 35 35 fa 00 00                  	lea rsi, [rip + 0xfa35]
0x8226:     bf 01 00 00 00                        	mov edi, 1
0x822b:     31 c0                                 	xor eax, eax
0x822d:     e8 9e ba ff ff                        	call 0x3cd0 <__printf_chk>
0x8232:     80 3d 2c 91 21 00 00                  	cmp byte ptr [rip + 0x21912c], 0
0x8239:     74 2b                                 	je 0x8266 <function_8180+0xe6>
0x823b:     31 d2                                 	xor edx, edx
0x823d:     83 3d f4 90 21 00 04                  	cmp dword ptr [rip + 0x2190f4], 4
0x8244:     48 8b 8b b0 00 00 00                  	mov rcx, qword ptr [rbx + 0xb0]
0x824b:     74 06                                 	je 0x8253 <function_8180+0xd3>
0x824d:     8b 15 01 91 21 00                     	mov edx, dword ptr [rip + 0x219101]
0x8253:     48 8d 35 01 fa 00 00                  	lea rsi, [rip + 0xfa01]
0x825a:     bf 01 00 00 00                        	mov edi, 1
0x825f:     31 c0                                 	xor eax, eax
0x8261:     e8 6a ba ff ff                        	call 0x3cd0 <__printf_chk>
0x8266:     48 89 e9                              	mov rcx, rbp
0x8269:     31 d2                                 	xor edx, edx
0x826b:     31 f6                                 	xor esi, esi
0x826d:     48 89 df                              	mov rdi, rbx
0x8270:     e8 ab fa ff ff                        	call 0x7d20
0x8275:     48 89 c5                              	mov rbp, rax
0x8278:     8b 05 96 90 21 00                     	mov eax, dword ptr [rip + 0x219096]
0x827e:     85 c0                                 	test eax, eax
0x8280:     74 1b                                 	je 0x829d <function_8180+0x11d>
0x8282:     0f b6 bb b8 00 00 00                  	movzx edi, byte ptr [rbx + 0xb8]
0x8289:     8b 93 a8 00 00 00                     	mov edx, dword ptr [rbx + 0xa8]
0x828f:     8b 73 30                              	mov esi, dword ptr [rbx + 0x30]
0x8292:     e8 59 ec ff ff                        	call 0x6ef0 <function_6ef0>
0x8297:     0f b6 c0                              	movzx eax, al
0x829a:     48 01 c5                              	add rbp, rax
0x829d:     48 8b 9c 24 98 02 00 00               	mov rbx, qword ptr [rsp + 0x298]
0x82a5:     64 48 33 1c 25 28 00 00 00            	xor rbx, qword ptr fs:[0x28]
0x82ae:     48 89 e8                              	mov rax, rbp
0x82b1:     75 55                                 	jne 0x8308 <function_8180+0x188>
0x82b3:     48 81 c4 a8 02 00 00                  	add rsp, 0x2a8
0x82ba:     5b                                    	pop rbx
0x82bb:     5d                                    	pop rbp
0x82bc:     c3                                    	ret 
; data inside code section at 0x82bd -- 0x82c0
0x82bd:     0f 1f 00                                           |...             |
0x82c0:     8b 15 62 90 21 00                     	mov edx, dword ptr [rip + 0x219062]
0x82c6:     48 8b 7b 58                           	mov rdi, qword ptr [rbx + 0x58]
0x82ca:     b9 00 02 00 00                        	mov ecx, 0x200
0x82cf:     4c 8b 05 4a 90 21 00                  	mov r8, qword ptr [rip + 0x21904a]
0x82d6:     48 89 e6                              	mov rsi, rsp
0x82d9:     e8 32 6a 00 00                        	call 0xed10 <function_ed10>
0x82de:     31 d2                                 	xor edx, edx
0x82e0:     83 3d 51 90 21 00 04                  	cmp dword ptr [rip + 0x219051], 4
0x82e7:     48 89 c1                              	mov rcx, rax
0x82ea:     0f 85 29 ff ff ff                     	jne 0x8219 <function_8180+0x99>
0x82f0:     e9 2a ff ff ff                        	jmp 0x821f <function_8180+0x9f>
; data inside code section at 0x82f5 -- 0x82f8
0x82f5:     0f 1f 00                                           |...             |
0x82f8:     48 89 e6                              	mov rsi, rsp
0x82fb:     e8 f0 79 00 00                        	call 0xfcf0 <function_fcf0>
0x8300:     48 89 c1                              	mov rcx, rax
0x8303:     e9 c5 fe ff ff                        	jmp 0x81cd <function_8180+0x4d>
0x8308:     e8 63 b6 ff ff                        	call 0x3970 <__stack_chk_fail>
0x830d:     0f 1f 00                              	nop dword ptr [rax]
0x8310:     41 57                                 	push r15
0x8312:     41 56                                 	push r14
0x8314:     41 55                                 	push r13
0x8316:     41 54                                 	push r12
0x8318:     55                                    	push rbp
0x8319:     53                                    	push rbx
0x831a:     48 89 fd                              	mov rbp, rdi
0x831d:     48 81 ec 28 13 00 00                  	sub rsp, 0x1328 ; "_assert_fail"
0x8324:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x832d:     48 89 84 24 18 13 00 00               	mov qword ptr [rsp + 0x1318], rax
0x8335:     31 c0                                 	xor eax, eax
0x8337:     80 bf b8 00 00 00 00                  	cmp byte ptr [rdi + 0xb8], 0
0x833e:     0f 84 bc 03 00 00                     	je 0x8700 <function_8180+0x580>
0x8344:     4c 8d ac 24 b4 00 00 00               	lea r13, [rsp + 0xb4]
0x834c:     48 8d 7f 18                           	lea rdi, [rdi + 0x18]
0x8350:     4c 89 ee                              	mov rsi, r13
0x8353:     e8 98 4e 00 00                        	call 0xd1f0 <function_d1f0>
0x8358:     80 3d 05 90 21 00 00                  	cmp byte ptr [rip + 0x219005], 0
0x835f:     0f 85 ed 03 00 00                     	jne 0x8752 <function_8180+0x5d2>
0x8365:     c6 84 24 be 00 00 00 00               	mov byte ptr [rsp + 0xbe], 0
0x836d:     8b 05 c1 8f 21 00                     	mov eax, dword ptr [rip + 0x218fc1]
0x8373:     83 f8 01                              	cmp eax, 1
0x8376:     0f 84 0c 04 00 00                     	je 0x8788 <function_8180+0x608>
0x837c:     0f 82 46 04 00 00                     	jb 0x87c8 <function_8180+0x648>
0x8382:     83 f8 02                              	cmp eax, 2
0x8385:     0f 85 56 09 00 00                     	jne 0x8ce1 <function_8180+0xb61>
0x838b:     48 8b 45 68                           	mov rax, qword ptr [rbp + 0x68]
0x838f:     48 8b 55 60                           	mov rdx, qword ptr [rbp + 0x60]
0x8393:     48 89 44 24 28                        	mov qword ptr [rsp + 0x28], rax
0x8398:     48 89 54 24 20                        	mov qword ptr [rsp + 0x20], rdx
0x839d:     80 3d 58 8f 21 00 00                  	cmp byte ptr [rip + 0x218f58], 0
0x83a4:     0f b6 95 b8 00 00 00                  	movzx edx, byte ptr [rbp + 0xb8]
0x83ab:     0f 84 03 04 00 00                     	je 0x87b4 <function_8180+0x634>
0x83b1:     84 d2                                 	test dl, dl
0x83b3:     4c 8d 0d 74 f8 00 00                  	lea r9, [rip + 0xf874]
0x83ba:     74 0d                                 	je 0x83c9 <function_8180+0x249>
0x83bc:     48 8b 7d 20                           	mov rdi, qword ptr [rbp + 0x20]
0x83c0:     48 85 ff                              	test rdi, rdi
0x83c3:     0f 85 bf 06 00 00                     	jne 0x8a88 <function_8180+0x908>
0x83c9:     4c 8d a4 24 d0 04 00 00               	lea r12, [rsp + 0x4d0]
0x83d1:     44 8b 05 88 8f 21 00                  	mov r8d, dword ptr [rip + 0x218f88]
0x83d8:     48 8d 0d 7c f8 00 00                  	lea rcx, [rip + 0xf87c]
0x83df:     ba 3b 0e 00 00                        	mov edx, 0xe3b
0x83e4:     be 01 00 00 00                        	mov esi, 1
0x83e9:     31 c0                                 	xor eax, eax
0x83eb:     4c 89 e7                              	mov rdi, r12
0x83ee:     4c 89 e3                              	mov rbx, r12
0x83f1:     e8 6a ba ff ff                        	call 0x3e60 <__sprintf_chk>
0x83f6:     8b 03                                 	mov eax, dword ptr [rbx]
0x83f8:     48 83 c3 04                           	add rbx, 4
0x83fc:     8d 90 ff fe fe fe                     	lea edx, [rax - 0x1010101]
0x8402:     f7 d0                                 	not eax
0x8404:     21 c2                                 	and edx, eax
0x8406:     81 e2 80 80 80 80                     	and edx, 0x80808080
0x840c:     74 e8                                 	je 0x83f6 <function_8180+0x276>
0x840e:     89 d0                                 	mov eax, edx
0x8410:     c1 e8 10                              	shr eax, 0x10
0x8413:     f7 c2 80 80 00 00                     	test edx, 0x8080
0x8419:     0f 44 d0                              	cmove edx, eax
0x841c:     48 8d 43 02                           	lea rax, [rbx + 2]
0x8420:     48 0f 44 d8                           	cmove rbx, rax
0x8424:     89 d0                                 	mov eax, edx
0x8426:     00 d0                                 	add al, dl
0x8428:     0f b6 95 b8 00 00 00                  	movzx edx, byte ptr [rbp + 0xb8]
0x842f:     48 83 db 03                           	sbb rbx, 3
0x8433:     80 3d f2 8e 21 00 00                  	cmp byte ptr [rip + 0x218ef2], 0
0x843a:     74 7b                                 	je 0x84b7 <function_8180+0x337>
0x843c:     84 d2                                 	test dl, dl
0x843e:     4c 8d 3d e9 f7 00 00                  	lea r15, [rip + 0xf7e9]
0x8445:     0f 85 75 07 00 00                     	jne 0x8bc0 <function_8180+0xa40>
0x844b:     44 8b 35 0a 8f 21 00                  	mov r14d, dword ptr [rip + 0x218f0a]
0x8452:     31 f6                                 	xor esi, esi
0x8454:     4c 89 ff                              	mov rdi, r15
0x8457:     e8 14 7f 00 00                        	call 0x10370 <function_10370>
0x845c:     41 29 c6                              	sub r14d, eax
0x845f:     45 85 f6                              	test r14d, r14d
0x8462:     44 89 f0                              	mov eax, r14d
0x8465:     0f 8e 15 05 00 00                     	jle 0x8980 <function_8180+0x800>
0x846b:     83 e8 01                              	sub eax, 1
0x846e:     48 89 c2                              	mov rdx, rax
0x8471:     48 8d 4c 03 01                        	lea rcx, [rbx + rax + 1]
0x8476:     48 89 d8                              	mov rax, rbx
0x8479:     0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0x8480:     48 83 c0 01                           	add rax, 1
0x8484:     c6 40 ff 20                           	mov byte ptr [rax - 1], 0x20
0x8488:     48 39 c8                              	cmp rax, rcx
0x848b:     75 f3                                 	jne 0x8480 <function_8180+0x300>
0x848d:     48 63 c2                              	movsxd rax, edx
0x8490:     48 8d 54 03 01                        	lea rdx, [rbx + rax + 1]
0x8495:     49 83 c7 01                           	add r15, 1
0x8499:     41 0f b6 47 ff                        	movzx eax, byte ptr [r15 - 1]
0x849e:     48 8d 5a 01                           	lea rbx, [rdx + 1]
0x84a2:     84 c0                                 	test al, al
0x84a4:     88 43 ff                              	mov byte ptr [rbx - 1], al
0x84a7:     0f 85 d3 04 00 00                     	jne 0x8980 <function_8180+0x800>
0x84ad:     c6 02 20                              	mov byte ptr [rdx], 0x20
0x84b0:     0f b6 95 b8 00 00 00                  	movzx edx, byte ptr [rbp + 0xb8]
0x84b7:     84 d2                                 	test dl, dl
0x84b9:     48 8d 05 6e f7 00 00                  	lea rax, [rip + 0xf76e]
0x84c0:     0f 85 a2 04 00 00                     	jne 0x8968 <function_8180+0x7e8>
0x84c6:     48 83 ec 08                           	sub rsp, 8
0x84ca:     44 8b 0d 87 8e 21 00                  	mov r9d, dword ptr [rip + 0x218e87]
0x84d1:     48 8d 0d 73 f7 00 00                  	lea rcx, [rip + 0xf773]
0x84d8:     50                                    	push rax
0x84d9:     4d 89 e8                              	mov r8, r13
0x84dc:     48 89 df                              	mov rdi, rbx
0x84df:     48 c7 c2 ff ff ff ff                  	mov rdx, -1
0x84e6:     be 01 00 00 00                        	mov esi, 1
0x84eb:     31 c0                                 	xor eax, eax
0x84ed:     e8 6e b9 ff ff                        	call 0x3e60 <__sprintf_chk>
0x84f2:     48 89 df                              	mov rdi, rbx
0x84f5:     e8 56 b4 ff ff                        	call 0x3950 <strlen>
0x84fa:     48 01 c3                              	add rbx, rax
0x84fd:     80 3d 14 8e 21 00 00                  	cmp byte ptr [rip + 0x218e14], 0
0x8504:     41 58                                 	pop r8
0x8506:     41 59                                 	pop r9
0x8508:     0f 85 2a 04 00 00                     	jne 0x8938 <function_8180+0x7b8>
0x850e:     80 3d 0c 7b 21 00 00                  	cmp byte ptr [rip + 0x217b0c], 0
0x8515:     75 19                                 	jne 0x8530 <function_8180+0x3b0>
0x8517:     80 3d 02 7b 21 00 00                  	cmp byte ptr [rip + 0x217b02], 0
0x851e:     75 10                                 	jne 0x8530 <function_8180+0x3b0>
0x8520:     80 3d 07 8e 21 00 00                  	cmp byte ptr [rip + 0x218e07], 0
0x8527:     0f 84 43 05 00 00                     	je 0x8a70 <function_8180+0x8f0>
0x852d:     0f 1f 00                              	nop dword ptr [rax]
0x8530:     48 8b 35 51 7d 21 00                  	mov rsi, qword ptr [rip + 0x217d51]
0x8537:     4c 89 e7                              	mov rdi, r12
0x853a:     4c 29 e3                              	sub rbx, r12
0x853d:     e8 ae b5 ff ff                        	call 0x3af0 <fputs_unlocked>
0x8542:     48 01 1d af 8c 21 00                  	add qword ptr [rip + 0x218caf], rbx
0x8549:     80 3d d1 7a 21 00 00                  	cmp byte ptr [rip + 0x217ad1], 0
0x8550:     0f 85 ca 04 00 00                     	jne 0x8a20 <function_8180+0x8a0>
0x8556:     80 3d c3 7a 21 00 00                  	cmp byte ptr [rip + 0x217ac3], 0
0x855d:     0f 85 6d 04 00 00                     	jne 0x89d0 <function_8180+0x850>
0x8563:     80 3d c4 8d 21 00 00                  	cmp byte ptr [rip + 0x218dc4], 0
0x856a:     0f 85 40 04 00 00                     	jne 0x89b0 <function_8180+0x830>
0x8570:     80 3d ee 8d 21 00 00                  	cmp byte ptr [rip + 0x218dee], 0
0x8577:     4c 89 e3                              	mov rbx, r12
0x857a:     0f 85 10 04 00 00                     	jne 0x8990 <function_8180+0x810>
0x8580:     80 bd b8 00 00 00 00                  	cmp byte ptr [rbp + 0xb8], 0
0x8587:     0f 84 53 02 00 00                     	je 0x87e0 <function_8180+0x660>
0x858d:     8b 45 30                              	mov eax, dword ptr [rbp + 0x30]
0x8590:     25 00 b0 00 00                        	and eax, 0xb000
0x8595:     3d 00 20 00 00                        	cmp eax, 0x2000
0x859a:     0f 84 60 05 00 00                     	je 0x8b00 <function_8180+0x980>
0x85a0:     48 8b 7d 48                           	mov rdi, qword ptr [rbp + 0x48]
0x85a4:     4c 8b 05 6d 7a 21 00                  	mov r8, qword ptr [rip + 0x217a6d]
0x85ab:     48 8d b4 24 e0 00 00 00               	lea rsi, [rsp + 0xe0]
0x85b3:     8b 15 63 8d 21 00                     	mov edx, dword ptr [rip + 0x218d63]
0x85b9:     b9 01 00 00 00                        	mov ecx, 1
0x85be:     e8 4d 67 00 00                        	call 0xed10 <function_ed10>
0x85c3:     49 89 c6                              	mov r14, rax
0x85c6:     44 8b 2d 6f 8d 21 00                  	mov r13d, dword ptr [rip + 0x218d6f]
0x85cd:     31 f6                                 	xor esi, esi
0x85cf:     4c 89 f7                              	mov rdi, r14
0x85d2:     e8 99 7d 00 00                        	call 0x10370 <function_10370>
0x85d7:     41 29 c5                              	sub r13d, eax
0x85da:     45 85 ed                              	test r13d, r13d
0x85dd:     44 89 e8                              	mov eax, r13d
0x85e0:     7e 23                                 	jle 0x8605 <function_8180+0x485>
0x85e2:     83 e8 01                              	sub eax, 1
0x85e5:     48 89 c2                              	mov rdx, rax
0x85e8:     48 8d 4c 03 01                        	lea rcx, [rbx + rax + 1]
0x85ed:     48 89 d8                              	mov rax, rbx
0x85f0:     48 83 c0 01                           	add rax, 1
0x85f4:     c6 40 ff 20                           	mov byte ptr [rax - 1], 0x20
0x85f8:     48 39 c8                              	cmp rax, rcx
0x85fb:     75 f3                                 	jne 0x85f0 <function_8180+0x470>
0x85fd:     48 63 c2                              	movsxd rax, edx
0x8600:     48 8d 5c 03 01                        	lea rbx, [rbx + rax + 1]
0x8605:     49 83 c6 01                           	add r14, 1
0x8609:     41 0f b6 46 ff                        	movzx eax, byte ptr [r14 - 1]
0x860e:     4c 8d 6b 01                           	lea r13, [rbx + 1]
0x8612:     84 c0                                 	test al, al
0x8614:     41 88 45 ff                           	mov byte ptr [r13 - 1], al
0x8618:     0f 85 d2 01 00 00                     	jne 0x87f0 <function_8180+0x670>
0x861e:     c6 03 20                              	mov byte ptr [rbx], 0x20
0x8621:     41 c6 45 00 01                        	mov byte ptr [r13], 1
0x8626:     80 bd b8 00 00 00 00                  	cmp byte ptr [rbp + 0xb8], 0
0x862d:     48 8d 1d fa f5 00 00                  	lea rbx, [rip + 0xf5fa]
0x8634:     0f 85 36 02 00 00                     	jne 0x8870 <function_8180+0x6f0>
0x863a:     44 8b 05 d3 79 21 00                  	mov r8d, dword ptr [rip + 0x2179d3]
0x8641:     45 85 c0                              	test r8d, r8d
0x8644:     0f 88 b6 05 00 00                     	js 0x8c00 <function_8180+0xa80>
0x864a:     48 8d 0d 0a f6 00 00                  	lea rcx, [rip + 0xf60a]
0x8651:     49 89 d9                              	mov r9, rbx
0x8654:     48 c7 c2 ff ff ff ff                  	mov rdx, -1
0x865b:     be 01 00 00 00                        	mov esi, 1
0x8660:     4c 89 ef                              	mov rdi, r13
0x8663:     31 c0                                 	xor eax, eax
0x8665:     e8 f6 b7 ff ff                        	call 0x3e60 <__sprintf_chk>
0x866a:     4c 89 ef                              	mov rdi, r13
0x866d:     e8 de b2 ff ff                        	call 0x3950 <strlen>
0x8672:     49 8d 5c 05 00                        	lea rbx, [r13 + rax]
0x8677:     48 8b 35 0a 7c 21 00                  	mov rsi, qword ptr [rip + 0x217c0a]
0x867e:     4c 89 e7                              	mov rdi, r12
0x8681:     4c 29 e3                              	sub rbx, r12
0x8684:     e8 67 b4 ff ff                        	call 0x3af0 <fputs_unlocked>
0x8689:     48 8d 15 10 8b 21 00                  	lea rdx, [rip + 0x218b10]
0x8690:     31 f6                                 	xor esi, esi
0x8692:     48 89 d9                              	mov rcx, rbx
0x8695:     48 89 ef                              	mov rdi, rbp
0x8698:     48 01 1d 59 8b 21 00                  	add qword ptr [rip + 0x218b59], rbx
0x869f:     e8 7c f6 ff ff                        	call 0x7d20
0x86a4:     8b 95 a8 00 00 00                     	mov edx, dword ptr [rbp + 0xa8]
0x86aa:     49 89 c4                              	mov r12, rax
0x86ad:     83 fa 06                              	cmp edx, 6
0x86b0:     0f 84 4a 01 00 00                     	je 0x8800 <function_8180+0x680>
0x86b6:     8b 05 58 8c 21 00                     	mov eax, dword ptr [rip + 0x218c58]
0x86bc:     85 c0                                 	test eax, eax
0x86be:     74 0f                                 	je 0x86cf <function_8180+0x54f>
0x86c0:     0f b6 bd b8 00 00 00                  	movzx edi, byte ptr [rbp + 0xb8]
0x86c7:     8b 75 30                              	mov esi, dword ptr [rbp + 0x30]
0x86ca:     e8 21 e8 ff ff                        	call 0x6ef0 <function_6ef0>
0x86cf:     48 8b 84 24 18 13 00 00               	mov rax, qword ptr [rsp + 0x1318]
0x86d7:     64 48 33 04 25 28 00 00 00            	xor rax, qword ptr fs:[0x28]
0x86e0:     0f 85 00 06 00 00                     	jne 0x8ce6 <function_8180+0xb66>
0x86e6:     48 81 c4 28 13 00 00                  	add rsp, 0x1328 ; "_assert_fail"
0x86ed:     5b                                    	pop rbx
0x86ee:     5d                                    	pop rbp
0x86ef:     41 5c                                 	pop r12
0x86f1:     41 5d                                 	pop r13
0x86f3:     41 5e                                 	pop r14
0x86f5:     41 5f                                 	pop r15
0x86f7:     c3                                    	ret 
; data inside code section at 0x86f8 -- 0x8700
0x86f8:     0f 1f 84 00 00 00 00 00                            |........        |
0x8700:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0x8706:     48 8d 15 83 e4 00 00                  	lea rdx, [rip + 0xe483]
0x870d:     80 3d 50 8c 21 00 00                  	cmp byte ptr [rip + 0x218c50], 0
0x8714:     4c 8d ac 24 b4 00 00 00               	lea r13, [rsp + 0xb4]
0x871c:     41 ba 3f 3f 00 00                     	mov r10d, 0x3f3f
0x8722:     0f b6 04 02                           	movzx eax, byte ptr [rdx + rax]
0x8726:     88 84 24 b4 00 00 00                  	mov byte ptr [rsp + 0xb4], al
0x872d:     48 b8 3f 3f 3f 3f 3f 3f 3f 3f         	movabs rax, 0x3f3f3f3f3f3f3f3f
0x8737:     48 89 84 24 b5 00 00 00               	mov qword ptr [rsp + 0xb5], rax
0x873f:     66 45 89 55 09                        	mov word ptr [r13 + 9], r10w
0x8744:     c6 84 24 bf 00 00 00 00               	mov byte ptr [rsp + 0xbf], 0
0x874c:     0f 84 13 fc ff ff                     	je 0x8365 <function_8180+0x1e5>
0x8752:     8b 85 bc 00 00 00                     	mov eax, dword ptr [rbp + 0xbc]
0x8758:     83 f8 01                              	cmp eax, 1
0x875b:     0f 84 ff 02 00 00                     	je 0x8a60 <function_8180+0x8e0>
0x8761:     83 f8 02                              	cmp eax, 2
0x8764:     0f 85 03 fc ff ff                     	jne 0x836d <function_8180+0x1ed>
0x876a:     8b 05 c4 8b 21 00                     	mov eax, dword ptr [rip + 0x218bc4]
0x8770:     c6 84 24 be 00 00 00 2b               	mov byte ptr [rsp + 0xbe], 0x2b
0x8778:     83 f8 01                              	cmp eax, 1
0x877b:     0f 85 fb fb ff ff                     	jne 0x837c <function_8180+0x1fc>
0x8781:     0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0x8788:     80 3d 6d 8b 21 00 00                  	cmp byte ptr [rip + 0x218b6d], 0
0x878f:     48 8b 95 80 00 00 00                  	mov rdx, qword ptr [rbp + 0x80]
0x8796:     48 8b 85 88 00 00 00                  	mov rax, qword ptr [rbp + 0x88]
0x879d:     48 89 54 24 20                        	mov qword ptr [rsp + 0x20], rdx
0x87a2:     0f b6 95 b8 00 00 00                  	movzx edx, byte ptr [rbp + 0xb8]
0x87a9:     48 89 44 24 28                        	mov qword ptr [rsp + 0x28], rax
0x87ae:     0f 85 fd fb ff ff                     	jne 0x83b1 <function_8180+0x231>
0x87b4:     4c 8d a4 24 d0 04 00 00               	lea r12, [rsp + 0x4d0]
0x87bc:     4c 89 e3                              	mov rbx, r12
0x87bf:     e9 6f fc ff ff                        	jmp 0x8433 <function_8180+0x2b3>
; data inside code section at 0x87c4 -- 0x87c8
0x87c4:     0f 1f 40 00                                        |..@.            |
0x87c8:     48 8b 45 78                           	mov rax, qword ptr [rbp + 0x78]
0x87cc:     48 8b 55 70                           	mov rdx, qword ptr [rbp + 0x70]
0x87d0:     48 89 44 24 28                        	mov qword ptr [rsp + 0x28], rax
0x87d5:     48 89 54 24 20                        	mov qword ptr [rsp + 0x20], rdx
0x87da:     e9 be fb ff ff                        	jmp 0x839d <function_8180+0x21d>
; data inside code section at 0x87df -- 0x87e0
0x87df:     90                                                 |.               |
0x87e0:     4c 8d 35 47 f4 00 00                  	lea r14, [rip + 0xf447]
0x87e7:     e9 da fd ff ff                        	jmp 0x85c6 <function_8180+0x446>
; data inside code section at 0x87ec -- 0x87f0
0x87ec:     0f 1f 40 00                                        |..@.            |
0x87f0:     4c 89 eb                              	mov rbx, r13
0x87f3:     e9 0d fe ff ff                        	jmp 0x8605 <function_8180+0x485>
; data inside code section at 0x87f8 -- 0x8800
0x87f8:     0f 1f 84 00 00 00 00 00                            |........        |
0x8800:     48 83 7d 08 00                        	cmp qword ptr [rbp + 8], 0
0x8805:     0f 84 c4 fe ff ff                     	je 0x86cf <function_8180+0x54f>
0x880b:     48 8b 0d 76 7a 21 00                  	mov rcx, qword ptr [rip + 0x217a76]
0x8812:     48 8d 3d 47 f4 00 00                  	lea rdi, [rip + 0xf447]
0x8819:     ba 04 00 00 00                        	mov edx, 4
0x881e:     be 01 00 00 00                        	mov esi, 1
0x8823:     e8 58 b4 ff ff                        	call 0x3c80 <fwrite_unlocked>
0x8828:     4a 8d 4c 23 04                        	lea rcx, [rbx + r12 + 4]
0x882d:     31 d2                                 	xor edx, edx
0x882f:     be 01 00 00 00                        	mov esi, 1
0x8834:     48 89 ef                              	mov rdi, rbp
0x8837:     48 83 05 b9 89 21 00 04               	add qword ptr [rip + 0x2189b9], 4
0x883f:     e8 dc f4 ff ff                        	call 0x7d20
0x8844:     8b 15 ca 8a 21 00                     	mov edx, dword ptr [rip + 0x218aca]
0x884a:     85 d2                                 	test edx, edx
0x884c:     0f 84 7d fe ff ff                     	je 0x86cf <function_8180+0x54f>
0x8852:     8b b5 ac 00 00 00                     	mov esi, dword ptr [rbp + 0xac]
0x8858:     31 d2                                 	xor edx, edx
0x885a:     bf 01 00 00 00                        	mov edi, 1
0x885f:     e8 8c e6 ff ff                        	call 0x6ef0 <function_6ef0>
0x8864:     e9 66 fe ff ff                        	jmp 0x86cf <function_8180+0x54f>
; data inside code section at 0x8869 -- 0x8870
0x8869:     0f 1f 80 00 00 00 00                               |.......         |
0x8870:     48 8d 5c 24 30                        	lea rbx, [rsp + 0x30]
0x8875:     48 8b 3d 2c 8a 21 00                  	mov rdi, qword ptr [rip + 0x218a2c]
0x887c:     48 8d 74 24 20                        	lea rsi, [rsp + 0x20]
0x8881:     48 89 da                              	mov rdx, rbx
0x8884:     e8 b7 d1 00 00                        	call 0x15a40 <function_15a40>
0x8889:     48 85 c0                              	test rax, rax
0x888c:     0f 84 ae 01 00 00                     	je 0x8a40 <function_8180+0x8c0>
0x8892:     48 8b 0d d7 8a 21 00                  	mov rcx, qword ptr [rip + 0x218ad7]
0x8899:     48 8b 54 24 20                        	mov rdx, qword ptr [rsp + 0x20]
0x889e:     48 39 d1                              	cmp rcx, rdx
0x88a1:     0f 8c f9 01 00 00                     	jl 0x8aa0 <function_8180+0x920>
0x88a7:     48 8b 35 ca 8a 21 00                  	mov rsi, qword ptr [rip + 0x218aca]
0x88ae:     4c 8b 4c 24 28                        	mov r9, qword ptr [rsp + 0x28]
0x88b3:     0f 8f c7 03 00 00                     	jg 0x8c80 <function_8180+0xb00>
0x88b9:     44 39 ce                              	cmp esi, r9d
0x88bc:     41 89 f0                              	mov r8d, esi
0x88bf:     44 89 cf                              	mov edi, r9d
0x88c2:     0f 88 d8 01 00 00                     	js 0x8aa0 <function_8180+0x920>
0x88c8:     48 81 e9 ac c2 f0 00                  	sub rcx, 0xf0c2ac
0x88cf:     31 c0                                 	xor eax, eax
0x88d1:     48 39 d1                              	cmp rcx, rdx
0x88d4:     0f 8c 19 02 00 00                     	jl 0x8af3 <function_8180+0x973>
0x88da:     66 0f 1f 44 00 00                     	nop word ptr [rax + rax]
0x88e0:     80 3d e1 7a 21 00 00                  	cmp byte ptr [rip + 0x217ae1], 0
0x88e7:     4c 8b 05 ba 89 21 00                  	mov r8, qword ptr [rip + 0x2189ba]
0x88ee:     0f 84 fc 02 00 00                     	je 0x8bf0 <function_8180+0xa70>
0x88f4:     48 8d 14 00                           	lea rdx, [rax + rax]
0x88f8:     48 01 d0                              	add rax, rdx
0x88fb:     48 63 54 24 40                        	movsxd rdx, dword ptr [rsp + 0x40]
0x8900:     48 8d 14 82                           	lea rdx, [rdx + rax*4]
0x8904:     48 8d 05 d5 7a 21 00                  	lea rax, [rip + 0x217ad5]
0x890b:     48 c1 e2 07                           	shl rdx, 7
0x890f:     48 01 c2                              	add rdx, rax
0x8912:     48 89 d9                              	mov rcx, rbx
0x8915:     be e9 03 00 00                        	mov esi, 0x3e9
0x891a:     4c 89 ef                              	mov rdi, r13
0x891d:     e8 5e 96 00 00                        	call 0x11f80 <function_11f80>
0x8922:     48 85 c0                              	test rax, rax
0x8925:     0f 84 15 01 00 00                     	je 0x8a40 <function_8180+0x8c0>
0x892b:     49 01 c5                              	add r13, rax
0x892e:     e9 18 01 00 00                        	jmp 0x8a4b <function_8180+0x8cb>
; data inside code section at 0x8933 -- 0x8938
0x8933:     0f 1f 44 00 00                                     |..D..           |
0x8938:     48 8b 0d 49 79 21 00                  	mov rcx, qword ptr [rip + 0x217949]
0x893f:     48 8d 3d 0d f3 00 00                  	lea rdi, [rip + 0xf30d]
0x8946:     ba 02 00 00 00                        	mov edx, 2
0x894b:     be 01 00 00 00                        	mov esi, 1
0x8950:     e8 2b b3 ff ff                        	call 0x3c80 <fwrite_unlocked>
0x8955:     48 83 05 9b 88 21 00 02               	add qword ptr [rip + 0x21889b], 2
0x895d:     e9 ac fb ff ff                        	jmp 0x850e <function_8180+0x38e>
; data inside code section at 0x8962 -- 0x8968
0x8962:     66 0f 1f 44 00 00                                  |f..D..          |
0x8968:     48 8b 7d 28                           	mov rdi, qword ptr [rbp + 0x28]
0x896c:     48 8d b4 24 e0 00 00 00               	lea rsi, [rsp + 0xe0]
0x8974:     e8 77 73 00 00                        	call 0xfcf0 <function_fcf0>
0x8979:     e9 48 fb ff ff                        	jmp 0x84c6 <function_8180+0x346>
; data inside code section at 0x897e -- 0x8980
0x897e:     66 90                                              |f.              |
0x8980:     48 89 da                              	mov rdx, rbx
0x8983:     e9 0d fb ff ff                        	jmp 0x8495 <function_8180+0x315>
; data inside code section at 0x8988 -- 0x8990
0x8988:     0f 1f 84 00 00 00 00 00                            |........        |
0x8990:     48 8b bd b0 00 00 00                  	mov rdi, qword ptr [rbp + 0xb0]
0x8997:     8b 15 b7 89 21 00                     	mov edx, dword ptr [rip + 0x2189b7]
0x899d:     31 f6                                 	xor esi, esi
0x899f:     e8 dc de ff ff                        	call 0x6880 <function_6880>
0x89a4:     e9 d7 fb ff ff                        	jmp 0x8580 <function_8180+0x400>
; data inside code section at 0x89a9 -- 0x89b0
0x89a9:     0f 1f 80 00 00 00 00                               |.......         |
0x89b0:     0f b6 95 b8 00 00 00                  	movzx edx, byte ptr [rbp + 0xb8]
0x89b7:     8b 7d 34                              	mov edi, dword ptr [rbp + 0x34]
0x89ba:     8b 35 88 89 21 00                     	mov esi, dword ptr [rip + 0x218988]
0x89c0:     e8 7b df ff ff                        	call 0x6940 <function_6940>
0x89c5:     e9 a6 fb ff ff                        	jmp 0x8570 <function_8180+0x3f0>
; data inside code section at 0x89ca -- 0x89d0
0x89ca:     66 0f 1f 44 00 00                                  |f..D..          |
0x89d0:     80 bd b8 00 00 00 00                  	cmp byte ptr [rbp + 0xb8], 0
0x89d7:     8b 15 6f 89 21 00                     	mov edx, dword ptr [rip + 0x21896f]
0x89dd:     48 8d 3d 4a f2 00 00                  	lea rdi, [rip + 0xf24a]
0x89e4:     8b 75 38                              	mov esi, dword ptr [rbp + 0x38]
0x89e7:     74 27                                 	je 0x8a10 <function_8180+0x890>
0x89e9:     31 ff                                 	xor edi, edi
0x89eb:     80 3d 3b 89 21 00 00                  	cmp byte ptr [rip + 0x21893b], 0
0x89f2:     75 1c                                 	jne 0x8a10 <function_8180+0x890>
0x89f4:     89 f7                                 	mov edi, esi
0x89f6:     48 89 74 24 08                        	mov qword ptr [rsp + 8], rsi
0x89fb:     89 54 24 04                           	mov dword ptr [rsp + 4], edx
0x89ff:     e8 ac 70 00 00                        	call 0xfab0 <function_fab0>
0x8a04:     48 8b 74 24 08                        	mov rsi, qword ptr [rsp + 8]
0x8a09:     8b 54 24 04                           	mov edx, dword ptr [rsp + 4]
0x8a0d:     48 89 c7                              	mov rdi, rax
0x8a10:     e8 6b de ff ff                        	call 0x6880 <function_6880>
0x8a15:     e9 49 fb ff ff                        	jmp 0x8563 <function_8180+0x3e3>
; data inside code section at 0x8a1a -- 0x8a20
0x8a1a:     66 0f 1f 44 00 00                                  |f..D..          |
0x8a20:     0f b6 95 b8 00 00 00                  	movzx edx, byte ptr [rbp + 0xb8]
0x8a27:     8b 7d 34                              	mov edi, dword ptr [rbp + 0x34]
0x8a2a:     8b 35 20 89 21 00                     	mov esi, dword ptr [rip + 0x218920]
0x8a30:     e8 0b df ff ff                        	call 0x6940 <function_6940>
0x8a35:     e9 1c fb ff ff                        	jmp 0x8556 <function_8180+0x3d6>
; data inside code section at 0x8a3a -- 0x8a40
0x8a3a:     66 0f 1f 44 00 00                                  |f..D..          |
0x8a40:     41 80 7d 00 00                        	cmp byte ptr [r13], 0
0x8a45:     0f 85 a0 02 00 00                     	jne 0x8ceb <function_8180+0xb6b>
0x8a4b:     b9 20 00 00 00                        	mov ecx, 0x20
0x8a50:     49 8d 5d 01                           	lea rbx, [r13 + 1]
0x8a54:     66 41 89 4d 00                        	mov word ptr [r13], cx
0x8a59:     e9 19 fc ff ff                        	jmp 0x8677 <function_8180+0x4f7>
; data inside code section at 0x8a5e -- 0x8a60
0x8a5e:     66 90                                              |f.              |
0x8a60:     c6 84 24 be 00 00 00 2e               	mov byte ptr [rsp + 0xbe], 0x2e
0x8a68:     e9 00 f9 ff ff                        	jmp 0x836d <function_8180+0x1ed>
; data inside code section at 0x8a6d -- 0x8a70
0x8a6d:     0f 1f 00                                           |...             |
0x8a70:     80 3d ee 88 21 00 00                  	cmp byte ptr [rip + 0x2188ee], 0
0x8a77:     0f 84 03 fb ff ff                     	je 0x8580 <function_8180+0x400>
0x8a7d:     e9 ae fa ff ff                        	jmp 0x8530 <function_8180+0x3b0>
; data inside code section at 0x8a82 -- 0x8a88
0x8a82:     66 0f 1f 44 00 00                                  |f..D..          |
0x8a88:     48 8d b4 24 e0 00 00 00               	lea rsi, [rsp + 0xe0]
0x8a90:     e8 5b 72 00 00                        	call 0xfcf0 <function_fcf0>
0x8a95:     49 89 c1                              	mov r9, rax
0x8a98:     e9 2c f9 ff ff                        	jmp 0x83c9 <function_8180+0x249>
; data inside code section at 0x8a9d -- 0x8aa0
0x8a9d:     0f 1f 00                                           |...             |
0x8aa0:     48 8d 3d c9 88 21 00                  	lea rdi, [rip + 0x2188c9]
0x8aa7:     e8 24 4d 00 00                        	call 0xd7d0 <function_d7d0>
0x8aac:     48 8b 0d bd 88 21 00                  	mov rcx, qword ptr [rip + 0x2188bd]
0x8ab3:     48 8b 54 24 20                        	mov rdx, qword ptr [rsp + 0x20]
0x8ab8:     48 8b 35 b9 88 21 00                  	mov rsi, qword ptr [rip + 0x2188b9]
0x8abf:     4c 8b 4c 24 28                        	mov r9, qword ptr [rsp + 0x28]
0x8ac4:     48 8d b9 54 3d 0f ff                  	lea rdi, [rcx - 0xf0c2ac]
0x8acb:     48 39 d7                              	cmp rdi, rdx
0x8ace:     0f 8d c1 01 00 00                     	jge 0x8c95 <function_8180+0xb15>
0x8ad4:     48 39 d1                              	cmp rcx, rdx
0x8ad7:     b8 01 00 00 00                        	mov eax, 1
0x8adc:     0f 8f fe fd ff ff                     	jg 0x88e0 <function_8180+0x760>
0x8ae2:     b8 00 00 00 00                        	mov eax, 0
0x8ae7:     0f 8c f3 fd ff ff                     	jl 0x88e0 <function_8180+0x760>
0x8aed:     44 89 cf                              	mov edi, r9d
0x8af0:     41 89 f0                              	mov r8d, esi
0x8af3:     89 f8                                 	mov eax, edi
0x8af5:     44 29 c0                              	sub eax, r8d
0x8af8:     c1 e8 1f                              	shr eax, 0x1f
0x8afb:     e9 e0 fd ff ff                        	jmp 0x88e0 <function_8180+0x760>
0x8b00:     8b 15 3e 88 21 00                     	mov edx, dword ptr [rip + 0x21883e]
0x8b06:     8b 05 34 88 21 00                     	mov eax, dword ptr [rip + 0x218834]
0x8b0c:     48 8d b4 24 e0 00 00 00               	lea rsi, [rsp + 0xe0]
0x8b14:     44 8b 2d 21 88 21 00                  	mov r13d, dword ptr [rip + 0x218821]
0x8b1b:     8d 44 02 02                           	lea eax, [rdx + rax + 2]
0x8b1f:     41 29 c5                              	sub r13d, eax
0x8b22:     48 8b 45 40                           	mov rax, qword ptr [rbp + 0x40]
0x8b26:     0f b6 d0                              	movzx edx, al
0x8b29:     48 c1 e8 0c                           	shr rax, 0xc
0x8b2d:     48 89 c7                              	mov rdi, rax
0x8b30:     40 30 ff                              	xor dil, dil
0x8b33:     09 d7                                 	or edi, edx
0x8b35:     e8 b6 71 00 00                        	call 0xfcf0 <function_fcf0>
0x8b3a:     49 89 c7                              	mov r15, rax
0x8b3d:     48 8b 45 40                           	mov rax, qword ptr [rbp + 0x40]
0x8b41:     48 8d b4 24 c0 00 00 00               	lea rsi, [rsp + 0xc0]
0x8b49:     44 8b 35 f0 87 21 00                  	mov r14d, dword ptr [rip + 0x2187f0]
0x8b50:     48 89 c7                              	mov rdi, rax
0x8b53:     48 c1 e8 20                           	shr rax, 0x20
0x8b57:     48 c1 ef 08                           	shr rdi, 8
0x8b5b:     89 fa                                 	mov edx, edi
0x8b5d:     48 89 c7                              	mov rdi, rax
0x8b60:     81 e2 ff 0f 00 00                     	and edx, 0xfff
0x8b66:     81 e7 00 f0 ff ff                     	and edi, 0xfffff000
0x8b6c:     09 d7                                 	or edi, edx
0x8b6e:     e8 7d 71 00 00                        	call 0xfcf0 <function_fcf0>
0x8b73:     45 85 ed                              	test r13d, r13d
0x8b76:     41 b8 00 00 00 00                     	mov r8d, 0
0x8b7c:     41 57                                 	push r15
0x8b7e:     45 0f 49 c5                           	cmovns r8d, r13d
0x8b82:     44 03 05 bb 87 21 00                  	add r8d, dword ptr [rip + 0x2187bb]
0x8b89:     41 56                                 	push r14
0x8b8b:     48 8d 0d c4 f0 00 00                  	lea rcx, [rip + 0xf0c4]
0x8b92:     49 89 c1                              	mov r9, rax
0x8b95:     be 01 00 00 00                        	mov esi, 1
0x8b9a:     48 89 df                              	mov rdi, rbx
0x8b9d:     48 c7 c2 ff ff ff ff                  	mov rdx, -1
0x8ba4:     31 c0                                 	xor eax, eax
0x8ba6:     e8 b5 b2 ff ff                        	call 0x3e60 <__sprintf_chk>
0x8bab:     48 63 05 8a 87 21 00                  	movsxd rax, dword ptr [rip + 0x21878a]
0x8bb2:     5e                                    	pop rsi
0x8bb3:     5f                                    	pop rdi
0x8bb4:     4c 8d 6c 03 01                        	lea r13, [rbx + rax + 1]
0x8bb9:     e9 63 fa ff ff                        	jmp 0x8621 <function_8180+0x4a1>
; data inside code section at 0x8bbe -- 0x8bc0
0x8bbe:     66 90                                              |f.              |
0x8bc0:     48 8b 7d 58                           	mov rdi, qword ptr [rbp + 0x58]
0x8bc4:     4c 8b 05 55 87 21 00                  	mov r8, qword ptr [rip + 0x218755]
0x8bcb:     48 8d b4 24 e0 00 00 00               	lea rsi, [rsp + 0xe0]
0x8bd3:     8b 15 4f 87 21 00                     	mov edx, dword ptr [rip + 0x21874f]
0x8bd9:     b9 00 02 00 00                        	mov ecx, 0x200
0x8bde:     e8 2d 61 00 00                        	call 0xed10 <function_ed10>
0x8be3:     49 89 c7                              	mov r15, rax
0x8be6:     e9 60 f8 ff ff                        	jmp 0x844b <function_8180+0x2cb>
; data inside code section at 0x8beb -- 0x8bf0
0x8beb:     0f 1f 44 00 00                                     |..D..           |
0x8bf0:     48 8d 15 49 74 21 00                  	lea rdx, [rip + 0x217449]
0x8bf7:     48 8b 14 c2                           	mov rdx, qword ptr [rdx + rax*8]
0x8bfb:     e9 12 fd ff ff                        	jmp 0x8912 <function_8180+0x792>
0x8c00:     4c 8d 7c 24 70                        	lea r15, [rsp + 0x70]
0x8c05:     48 8b 3d 9c 86 21 00                  	mov rdi, qword ptr [rip + 0x21869c]
0x8c0c:     48 8d 74 24 18                        	lea rsi, [rsp + 0x18]
0x8c11:     48 c7 44 24 18 00 00 00 00            	mov qword ptr [rsp + 0x18], 0
0x8c1a:     4c 89 fa                              	mov rdx, r15
0x8c1d:     e8 1e ce 00 00                        	call 0x15a40 <function_15a40>
0x8c22:     48 85 c0                              	test rax, rax
0x8c25:     74 37                                 	je 0x8c5e <function_8180+0xade>
0x8c27:     80 3d 9a 77 21 00 00                  	cmp byte ptr [rip + 0x21779a], 0
0x8c2e:     4c 8b 05 73 86 21 00                  	mov r8, qword ptr [rip + 0x218673]
0x8c35:     48 8b 15 04 74 21 00                  	mov rdx, qword ptr [rip + 0x217404]
0x8c3c:     75 70                                 	jne 0x8cae <function_8180+0xb2e>
0x8c3e:     4c 8d b4 24 e0 00 00 00               	lea r14, [rsp + 0xe0]
0x8c46:     45 31 c9                              	xor r9d, r9d
0x8c49:     4c 89 f9                              	mov rcx, r15
0x8c4c:     be e9 03 00 00                        	mov esi, 0x3e9
0x8c51:     4c 89 f7                              	mov rdi, r14
0x8c54:     e8 27 93 00 00                        	call 0x11f80 <function_11f80>
0x8c59:     48 85 c0                              	test rax, rax
0x8c5c:     75 6b                                 	jne 0x8cc9 <function_8180+0xb49>
0x8c5e:     44 8b 05 af 73 21 00                  	mov r8d, dword ptr [rip + 0x2173af]
0x8c65:     45 85 c0                              	test r8d, r8d
0x8c68:     0f 89 dc f9 ff ff                     	jns 0x864a <function_8180+0x4ca>
0x8c6e:     c7 05 9c 73 21 00 00 00 00 00         	mov dword ptr [rip + 0x21739c], 0
0x8c78:     45 31 c0                              	xor r8d, r8d
0x8c7b:     e9 ca f9 ff ff                        	jmp 0x864a <function_8180+0x4ca>
0x8c80:     48 8d b9 54 3d 0f ff                  	lea rdi, [rcx - 0xf0c2ac]
0x8c87:     b8 01 00 00 00                        	mov eax, 1
0x8c8c:     48 39 d7                              	cmp rdi, rdx
0x8c8f:     0f 8c 4b fc ff ff                     	jl 0x88e0 <function_8180+0x760>
0x8c95:     31 c0                                 	xor eax, eax
0x8c97:     48 39 fa                              	cmp rdx, rdi
0x8c9a:     0f 8c 40 fc ff ff                     	jl 0x88e0 <function_8180+0x760>
0x8ca0:     44 39 ce                              	cmp esi, r9d
0x8ca3:     0f 89 37 fc ff ff                     	jns 0x88e0 <function_8180+0x760>
0x8ca9:     e9 26 fe ff ff                        	jmp 0x8ad4 <function_8180+0x954>
0x8cae:     48 63 94 24 80 00 00 00               	movsxd rdx, dword ptr [rsp + 0x80]
0x8cb6:     48 8d 05 23 77 21 00                  	lea rax, [rip + 0x217723]
0x8cbd:     48 c1 e2 07                           	shl rdx, 7
0x8cc1:     48 01 c2                              	add rdx, rax
0x8cc4:     e9 75 ff ff ff                        	jmp 0x8c3e <function_8180+0xabe>
0x8cc9:     31 d2                                 	xor edx, edx
0x8ccb:     48 89 c6                              	mov rsi, rax
0x8cce:     4c 89 f7                              	mov rdi, r14
0x8cd1:     e8 da 74 00 00                        	call 0x101b0 <function_101b0>
0x8cd6:     41 89 c0                              	mov r8d, eax
0x8cd9:     89 05 35 73 21 00                     	mov dword ptr [rip + 0x217335], eax
0x8cdf:     eb 84                                 	jmp 0x8c65 <function_8180+0xae5>
0x8ce1:     e8 fa aa ff ff                        	call 0x37e0 <abort>
0x8ce6:     e8 85 ac ff ff                        	call 0x3970 <__stack_chk_fail>
0x8ceb:     80 bd b8 00 00 00 00                  	cmp byte ptr [rbp + 0xb8], 0
0x8cf2:     48 8d 1d 35 ef 00 00                  	lea rbx, [rip + 0xef35]
0x8cf9:     0f 84 3b f9 ff ff                     	je 0x863a <function_8180+0x4ba>
0x8cff:     48 8b 7c 24 20                        	mov rdi, qword ptr [rsp + 0x20]
0x8d04:     48 8d b4 24 c0 00 00 00               	lea rsi, [rsp + 0xc0]
0x8d0c:     e8 3f 6f 00 00                        	call 0xfc50 <function_fc50>
0x8d11:     48 89 c3                              	mov rbx, rax
0x8d14:     e9 21 f9 ff ff                        	jmp 0x863a <function_8180+0x4ba>
; data inside code section at 0x8d19 -- 0x8d20
0x8d19:     0f 1f 80 00 00 00 00                               |.......         |
; function: function_8d20 at 0x8d20 -- 0x9267
0x8d20:     55                                    	push rbp
0x8d21:     53                                    	push rbx
0x8d22:     48 89 fd                              	mov rbp, rdi
0x8d25:     89 d1                                 	mov ecx, edx
0x8d27:     48 89 f2                              	mov rdx, rsi
0x8d2a:     48 89 ee                              	mov rsi, rbp
0x8d2d:     48 81 ec 38 20 00 00                  	sub rsp, 0x2038
0x8d34:     48 8d 5c 24 20                        	lea rbx, [rsp + 0x20]
0x8d39:     48 8d 7c 24 10                        	lea rdi, [rsp + 0x10]
0x8d3e:     4c 8d 4c 24 0f                        	lea r9, [rsp + 0xf]
0x8d43:     4c 8d 44 24 18                        	lea r8, [rsp + 0x18]
0x8d48:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x8d51:     48 89 84 24 28 20 00 00               	mov qword ptr [rsp + 0x2028], rax
0x8d59:     31 c0                                 	xor eax, eax
0x8d5b:     48 89 5c 24 10                        	mov qword ptr [rsp + 0x10], rbx
0x8d60:     e8 3b e7 ff ff                        	call 0x74a0 <function_74a0>
0x8d65:     48 8b 7c 24 10                        	mov rdi, qword ptr [rsp + 0x10]
0x8d6a:     48 39 df                              	cmp rdi, rbx
0x8d6d:     74 0a                                 	je 0x8d79 <function_8d20+0x59>
0x8d6f:     48 39 ef                              	cmp rdi, rbp
0x8d72:     74 05                                 	je 0x8d79 <function_8d20+0x59>
0x8d74:     e8 f7 b0 ff ff                        	call 0x3e70 <free>
0x8d79:     0f b6 44 24 0f                        	movzx eax, byte ptr [rsp + 0xf]
0x8d7e:     48 03 44 24 18                        	add rax, qword ptr [rsp + 0x18]
0x8d83:     48 8b 8c 24 28 20 00 00               	mov rcx, qword ptr [rsp + 0x2028]
0x8d8b:     64 48 33 0c 25 28 00 00 00            	xor rcx, qword ptr fs:[0x28]
0x8d94:     75 0a                                 	jne 0x8da0 <function_8d20+0x80>
0x8d96:     48 81 c4 38 20 00 00                  	add rsp, 0x2038
0x8d9d:     5b                                    	pop rbx
0x8d9e:     5d                                    	pop rbp
0x8d9f:     c3                                    	ret 
0x8da0:     e8 cb ab ff ff                        	call 0x3970 <__stack_chk_fail>
0x8da5:     90                                    	nop 
0x8da6:     66 2e 0f 1f 84 00 00 00 00 00         	nop word ptr cs:[rax + rax]
0x8db0:     55                                    	push rbp
0x8db1:     53                                    	push rbx
0x8db2:     48 89 fd                              	mov rbp, rdi
0x8db5:     48 81 ec a8 02 00 00                  	sub rsp, 0x2a8
0x8dbc:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x8dc5:     48 89 84 24 98 02 00 00               	mov qword ptr [rsp + 0x298], rax
0x8dcd:     31 c0                                 	xor eax, eax
0x8dcf:     80 3d 26 85 21 00 00                  	cmp byte ptr [rip + 0x218526], 0
0x8dd6:     0f 84 ac 00 00 00                     	je 0x8e88 <function_8d20+0x168>
0x8ddc:     83 3d 55 85 21 00 04                  	cmp dword ptr [rip + 0x218555], 4
0x8de3:     0f 84 37 01 00 00                     	je 0x8f20 <function_8d20+0x200>
0x8de9:     48 63 1d 70 85 21 00                  	movsxd rbx, dword ptr [rip + 0x218570]
0x8df0:     48 83 c3 01                           	add rbx, 1
0x8df4:     80 3d 31 85 21 00 00                  	cmp byte ptr [rip + 0x218531], 0
0x8dfb:     0f 84 07 01 00 00                     	je 0x8f08 <function_8d20+0x1e8>
0x8e01:     48 63 05 54 85 21 00                  	movsxd rax, dword ptr [rip + 0x218554]
0x8e08:     48 83 c0 01                           	add rax, 1
0x8e0c:     48 01 c3                              	add rbx, rax
0x8e0f:     80 3d 4f 85 21 00 00                  	cmp byte ptr [rip + 0x21854f], 0
0x8e16:     0f 85 cc 00 00 00                     	jne 0x8ee8 <function_8d20+0x1c8>
0x8e1c:     8b 95 c4 00 00 00                     	mov edx, dword ptr [rbp + 0xc4]
0x8e22:     48 8b 35 a7 84 21 00                  	mov rsi, qword ptr [rip + 0x2184a7]
0x8e29:     48 8b 7d 00                           	mov rdi, qword ptr [rbp]
0x8e2d:     e8 ee fe ff ff                        	call 0x8d20 <function_8d20>
0x8e32:     48 01 c3                              	add rbx, rax
0x8e35:     8b 05 d9 84 21 00                     	mov eax, dword ptr [rip + 0x2184d9]
0x8e3b:     85 c0                                 	test eax, eax
0x8e3d:     74 20                                 	je 0x8e5f <function_8d20+0x13f>
0x8e3f:     0f b6 bd b8 00 00 00                  	movzx edi, byte ptr [rbp + 0xb8]
0x8e46:     8b 95 a8 00 00 00                     	mov edx, dword ptr [rbp + 0xa8]
0x8e4c:     8b 75 30                              	mov esi, dword ptr [rbp + 0x30]
0x8e4f:     e8 9c df ff ff                        	call 0x6df0 <function_6df0>
0x8e54:     84 c0                                 	test al, al
0x8e56:     0f 95 c0                              	setne al
0x8e59:     0f b6 c0                              	movzx eax, al
0x8e5c:     48 01 c3                              	add rbx, rax
0x8e5f:     48 8b 8c 24 98 02 00 00               	mov rcx, qword ptr [rsp + 0x298]
0x8e67:     64 48 33 0c 25 28 00 00 00            	xor rcx, qword ptr fs:[0x28]
0x8e70:     48 89 d8                              	mov rax, rbx
0x8e73:     0f 85 d9 00 00 00                     	jne 0x8f52 <function_8d20+0x232>
0x8e79:     48 81 c4 a8 02 00 00                  	add rsp, 0x2a8
0x8e80:     5b                                    	pop rbx
0x8e81:     5d                                    	pop rbp
0x8e82:     c3                                    	ret 
; data inside code section at 0x8e83 -- 0x8e88
0x8e83:     0f 1f 44 00 00                                     |..D..           |
0x8e88:     31 db                                 	xor ebx, ebx
0x8e8a:     80 3d 9b 84 21 00 00                  	cmp byte ptr [rip + 0x21849b], 0
0x8e91:     0f 84 78 ff ff ff                     	je 0x8e0f <function_8d20+0xef>
0x8e97:     83 3d 9a 84 21 00 04                  	cmp dword ptr [rip + 0x21849a], 4
0x8e9e:     0f 85 5d ff ff ff                     	jne 0x8e01 <function_8d20+0xe1>
0x8ea4:     80 bd b8 00 00 00 00                  	cmp byte ptr [rbp + 0xb8], 0
0x8eab:     b8 02 00 00 00                        	mov eax, 2
0x8eb0:     0f 84 56 ff ff ff                     	je 0x8e0c <function_8d20+0xec>
0x8eb6:     48 8b 7d 58                           	mov rdi, qword ptr [rbp + 0x58]
0x8eba:     4c 8b 05 5f 84 21 00                  	mov r8, qword ptr [rip + 0x21845f]
0x8ec1:     48 89 e6                              	mov rsi, rsp
0x8ec4:     8b 15 5e 84 21 00                     	mov edx, dword ptr [rip + 0x21845e]
0x8eca:     b9 00 02 00 00                        	mov ecx, 0x200
0x8ecf:     e8 3c 5e 00 00                        	call 0xed10 <function_ed10>
0x8ed4:     48 89 c7                              	mov rdi, rax
0x8ed7:     e8 74 aa ff ff                        	call 0x3950 <strlen>
0x8edc:     48 83 c0 01                           	add rax, 1
0x8ee0:     e9 27 ff ff ff                        	jmp 0x8e0c <function_8d20+0xec>
; data inside code section at 0x8ee5 -- 0x8ee8
0x8ee5:     0f 1f 00                                           |...             |
0x8ee8:     83 3d 49 84 21 00 04                  	cmp dword ptr [rip + 0x218449], 4
0x8eef:     74 4f                                 	je 0x8f40 <function_8d20+0x220>
0x8ef1:     48 63 05 5c 84 21 00                  	movsxd rax, dword ptr [rip + 0x21845c]
0x8ef8:     48 83 c0 01                           	add rax, 1
0x8efc:     48 01 c3                              	add rbx, rax
0x8eff:     e9 18 ff ff ff                        	jmp 0x8e1c <function_8d20+0xfc>
; data inside code section at 0x8f04 -- 0x8f08
0x8f04:     0f 1f 40 00                                        |..@.            |
0x8f08:     80 3d 56 84 21 00 00                  	cmp byte ptr [rip + 0x218456], 0
0x8f0f:     75 e0                                 	jne 0x8ef1 <function_8d20+0x1d1>
0x8f11:     e9 06 ff ff ff                        	jmp 0x8e1c <function_8d20+0xfc>
; data inside code section at 0x8f16 -- 0x8f20
0x8f16:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x8f20:     48 8b 7f 20                           	mov rdi, qword ptr [rdi + 0x20]
0x8f24:     48 89 e6                              	mov rsi, rsp
0x8f27:     e8 c4 6d 00 00                        	call 0xfcf0 <function_fcf0>
0x8f2c:     48 89 c7                              	mov rdi, rax
0x8f2f:     e8 1c aa ff ff                        	call 0x3950 <strlen>
0x8f34:     48 8d 58 01                           	lea rbx, [rax + 1]
0x8f38:     e9 4d ff ff ff                        	jmp 0x8e8a <function_8d20+0x16a>
; data inside code section at 0x8f3d -- 0x8f40
0x8f3d:     0f 1f 00                                           |...             |
0x8f40:     48 8b bd b0 00 00 00                  	mov rdi, qword ptr [rbp + 0xb0]
0x8f47:     e8 04 aa ff ff                        	call 0x3950 <strlen>
0x8f4c:     48 83 c0 01                           	add rax, 1
0x8f50:     eb aa                                 	jmp 0x8efc <function_8d20+0x1dc>
0x8f52:     e8 19 aa ff ff                        	call 0x3970 <__stack_chk_fail>
0x8f57:     66 0f 1f 84 00 00 00 00 00            	nop word ptr [rax + rax]
0x8f60:     4c 8b 0d 49 84 21 00                  	mov r9, qword ptr [rip + 0x218449]
0x8f67:     48 8b 0d 92 82 21 00                  	mov rcx, qword ptr [rip + 0x218292]
0x8f6e:     41 56                                 	push r14
0x8f70:     41 55                                 	push r13
0x8f72:     41 54                                 	push r12
0x8f74:     55                                    	push rbp
0x8f75:     41 89 fc                              	mov r12d, edi
0x8f78:     49 39 c9                              	cmp r9, rcx
0x8f7b:     53                                    	push rbx
0x8f7c:     48 89 cb                              	mov rbx, rcx
0x8f7f:     49 0f 46 d9                           	cmovbe rbx, r9
0x8f83:     48 3b 1d 56 73 21 00                  	cmp rbx, qword ptr [rip + 0x217356]
0x8f8a:     0f 86 19 01 00 00                     	jbe 0x90a9 <function_8d20+0x389>
0x8f90:     48 89 c8                              	mov rax, rcx
0x8f93:     48 8b 3d 6e 82 21 00                  	mov rdi, qword ptr [rip + 0x21826e]
0x8f9a:     48 d1 e8                              	shr rax, 1
0x8f9d:     48 39 c3                              	cmp rbx, rax
0x8fa0:     0f 82 6a 02 00 00                     	jb 0x9210 <function_8d20+0x4f0>
0x8fa6:     ba 18 00 00 00                        	mov edx, 0x18
0x8fab:     31 f6                                 	xor esi, esi
0x8fad:     48 89 d0                              	mov rax, rdx
0x8fb0:     48 f7 e1                              	mul rcx
0x8fb3:     0f 80 8e 02 00 00                     	jo 0x9247 <function_8d20+0x527>
0x8fb9:     48 85 c0                              	test rax, rax
0x8fbc:     0f 88 8f 02 00 00                     	js 0x9251 <function_8d20+0x531>
0x8fc2:     48 85 f6                              	test rsi, rsi
0x8fc5:     0f 85 86 02 00 00                     	jne 0x9251 <function_8d20+0x531>
0x8fcb:     48 8d 34 49                           	lea rsi, [rcx + rcx*2]
0x8fcf:     48 c1 e6 03                           	shl rsi, 3
0x8fd3:     e8 08 b5 00 00                        	call 0x144e0 <function_144e0>
0x8fd8:     48 8b 2d 21 82 21 00                  	mov rbp, qword ptr [rip + 0x218221]
0x8fdf:     48 89 05 22 82 21 00                  	mov qword ptr [rip + 0x218222], rax
0x8fe6:     48 8b 05 f3 72 21 00                  	mov rax, qword ptr [rip + 0x2172f3]
0x8fed:     48 89 ef                              	mov rdi, rbp
0x8ff0:     48 29 c7                              	sub rdi, rax
0x8ff3:     48 83 c0 01                           	add rax, 1
0x8ff7:     48 01 e8                              	add rax, rbp
0x8ffa:     48 89 f9                              	mov rcx, rdi
0x8ffd:     48 89 c6                              	mov rsi, rax
0x9000:     0f 92 c0                              	setb al
0x9003:     0f b6 c0                              	movzx eax, al
0x9006:     48 0f af ce                           	imul rcx, rsi
0x900a:     48 85 c0                              	test rax, rax
0x900d:     0f 85 3e 02 00 00                     	jne 0x9251 <function_8d20+0x531>
0x9013:     31 d2                                 	xor edx, edx
0x9015:     48 89 c8                              	mov rax, rcx
0x9018:     48 f7 f7                              	div rdi
0x901b:     48 39 c6                              	cmp rsi, rax
0x901e:     0f 85 2d 02 00 00                     	jne 0x9251 <function_8d20+0x531>
0x9024:     ba 08 00 00 00                        	mov edx, 8
0x9029:     48 d1 e9                              	shr rcx, 1
0x902c:     31 f6                                 	xor esi, esi
0x902e:     48 89 d0                              	mov rax, rdx
0x9031:     48 f7 e1                              	mul rcx
0x9034:     0f 80 1c 02 00 00                     	jo 0x9256 <function_8d20+0x536>
0x903a:     48 85 c0                              	test rax, rax
0x903d:     0f 88 0e 02 00 00                     	js 0x9251 <function_8d20+0x531>
0x9043:     48 85 f6                              	test rsi, rsi
0x9046:     0f 85 05 02 00 00                     	jne 0x9251 <function_8d20+0x531>
0x904c:     48 8d 3c cd 00 00 00 00               	lea rdi, [rcx*8]
0x9054:     e8 27 b4 00 00                        	call 0x14480 <function_14480>
0x9059:     48 8b 15 80 72 21 00                  	mov rdx, qword ptr [rip + 0x217280]
0x9060:     48 39 d5                              	cmp rbp, rdx
0x9063:     76 36                                 	jbe 0x909b <function_8d20+0x37b>
0x9065:     48 8b 0d 9c 81 21 00                  	mov rcx, qword ptr [rip + 0x21819c]
0x906c:     48 8d 34 52                           	lea rsi, [rdx + rdx*2]
0x9070:     48 8d 14 d5 08 00 00 00               	lea rdx, [rdx*8 + 8]
0x9078:     48 8d 4c f1 10                        	lea rcx, [rcx + rsi*8 + 0x10]
0x907d:     48 8d 34 ed 08 00 00 00               	lea rsi, [rbp*8 + 8]
0x9085:     0f 1f 00                              	nop dword ptr [rax]
0x9088:     48 89 01                              	mov qword ptr [rcx], rax
0x908b:     48 01 d0                              	add rax, rdx
0x908e:     48 83 c2 08                           	add rdx, 8
0x9092:     48 83 c1 18                           	add rcx, 0x18
0x9096:     48 39 d6                              	cmp rsi, rdx
0x9099:     75 ed                                 	jne 0x9088 <function_8d20+0x368>
0x909b:     4c 8b 0d 0e 83 21 00                  	mov r9, qword ptr [rip + 0x21830e]
0x90a2:     48 89 2d 37 72 21 00                  	mov qword ptr [rip + 0x217237], rbp
0x90a9:     48 85 db                              	test rbx, rbx
0x90ac:     74 4b                                 	je 0x90f9 <function_8d20+0x3d9>
0x90ae:     48 8b 3d 53 81 21 00                  	mov rdi, qword ptr [rip + 0x218153]
0x90b5:     4c 8d 44 5b 03                        	lea r8, [rbx + rbx*2 + 3]
0x90ba:     31 f6                                 	xor esi, esi
0x90bc:     ba 03 00 00 00                        	mov edx, 3
0x90c1:     0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0x90c8:     48 8b 44 d7 f8                        	mov rax, qword ptr [rdi + rdx*8 - 8]
0x90cd:     48 83 c6 08                           	add rsi, 8
0x90d1:     c6 44 d7 e8 01                        	mov byte ptr [rdi + rdx*8 - 0x18], 1
0x90d6:     48 89 54 d7 f0                        	mov qword ptr [rdi + rdx*8 - 0x10], rdx
0x90db:     48 8d 0c 30                           	lea rcx, [rax + rsi]
0x90df:     90                                    	nop 
0x90e0:     48 c7 00 03 00 00 00                  	mov qword ptr [rax], 3
0x90e7:     48 83 c0 08                           	add rax, 8
0x90eb:     48 39 c1                              	cmp rcx, rax
0x90ee:     75 f0                                 	jne 0x90e0 <function_8d20+0x3c0>
0x90f0:     48 83 c2 03                           	add rdx, 3
0x90f4:     49 39 d0                              	cmp r8, rdx
0x90f7:     75 cf                                 	jne 0x90c8 <function_8d20+0x3a8>
0x90f9:     4d 85 c9                              	test r9, r9
0x90fc:     0f 84 cb 00 00 00                     	je 0x91cd <function_8d20+0x4ad>
0x9102:     31 ed                                 	xor ebp, ebp
0x9104:     0f 1f 40 00                           	nop dword ptr [rax]
0x9108:     48 8b 05 91 82 21 00                  	mov rax, qword ptr [rip + 0x218291]
0x910f:     48 8b 3c e8                           	mov rdi, qword ptr [rax + rbp*8]
0x9113:     e8 98 fc ff ff                        	call 0x8db0
0x9118:     48 85 db                              	test rbx, rbx
0x911b:     49 89 c2                              	mov r10, rax
0x911e:     48 8b 3d 8b 82 21 00                  	mov rdi, qword ptr [rip + 0x21828b]
0x9125:     0f 84 95 00 00 00                     	je 0x91c0 <function_8d20+0x4a0>
0x912b:     4c 8b 35 7e 81 21 00                  	mov r14, qword ptr [rip + 0x21817e]
0x9132:     48 8b 0d cf 80 21 00                  	mov rcx, qword ptr [rip + 0x2180cf]
0x9139:     31 f6                                 	xor esi, esi
0x913b:     4c 8d 58 02                           	lea r11, [rax + 2]
0x913f:     4c 8d 6f ff                           	lea r13, [rdi - 1]
0x9143:     eb 5c                                 	jmp 0x91a1 <function_8d20+0x481>
; data inside code section at 0x9145 -- 0x9148
0x9145:     0f 1f 00                                           |...             |
0x9148:     4b 8d 44 05 00                        	lea rax, [r13 + r8]
0x914d:     31 d2                                 	xor edx, edx
0x914f:     49 f7 f0                              	div r8
0x9152:     31 d2                                 	xor edx, edx
0x9154:     49 89 c1                              	mov r9, rax
0x9157:     48 89 e8                              	mov rax, rbp
0x915a:     49 f7 f1                              	div r9
0x915d:     49 89 c1                              	mov r9, rax
0x9160:     48 8b 51 10                           	mov rdx, qword ptr [rcx + 0x10]
0x9164:     49 39 f1                              	cmp r9, rsi
0x9167:     4c 89 d0                              	mov rax, r10
0x916a:     49 0f 45 c3                           	cmovne rax, r11
0x916e:     4a 8d 34 ca                           	lea rsi, [rdx + r9*8]
0x9172:     48 8b 16                              	mov rdx, qword ptr [rsi]
0x9175:     48 39 c2                              	cmp rdx, rax
0x9178:     73 1b                                 	jae 0x9195 <function_8d20+0x475>
0x917a:     4c 8b 49 08                           	mov r9, qword ptr [rcx + 8]
0x917e:     49 29 d1                              	sub r9, rdx
0x9181:     4c 89 ca                              	mov rdx, r9
0x9184:     48 01 c2                              	add rdx, rax
0x9187:     48 89 51 08                           	mov qword ptr [rcx + 8], rdx
0x918b:     48 89 06                              	mov qword ptr [rsi], rax
0x918e:     4c 39 71 08                           	cmp qword ptr [rcx + 8], r14
0x9192:     0f 92 01                              	setb byte ptr [rcx]
0x9195:     48 83 c1 18                           	add rcx, 0x18
0x9199:     4c 39 c3                              	cmp rbx, r8
0x919c:     4c 89 c6                              	mov rsi, r8
0x919f:     74 1f                                 	je 0x91c0 <function_8d20+0x4a0>
0x91a1:     80 39 00                              	cmp byte ptr [rcx], 0
0x91a4:     4c 8d 46 01                           	lea r8, [rsi + 1]
0x91a8:     74 eb                                 	je 0x9195 <function_8d20+0x475>
0x91aa:     45 84 e4                              	test r12b, r12b
0x91ad:     75 99                                 	jne 0x9148 <function_8d20+0x428>
0x91af:     48 89 e8                              	mov rax, rbp
0x91b2:     31 d2                                 	xor edx, edx
0x91b4:     49 f7 f0                              	div r8
0x91b7:     49 89 d1                              	mov r9, rdx
0x91ba:     eb a4                                 	jmp 0x9160 <function_8d20+0x440>
; data inside code section at 0x91bc -- 0x91c0
0x91bc:     0f 1f 40 00                                        |..@.            |
0x91c0:     48 83 c5 01                           	add rbp, 1
0x91c4:     48 39 fd                              	cmp rbp, rdi
0x91c7:     0f 82 3b ff ff ff                     	jb 0x9108 <function_8d20+0x3e8>
0x91cd:     48 83 fb 01                           	cmp rbx, 1
0x91d1:     76 31                                 	jbe 0x9204 <function_8d20+0x4e4>
0x91d3:     48 8b 15 2e 80 21 00                  	mov rdx, qword ptr [rip + 0x21802e]
0x91da:     48 8d 04 5b                           	lea rax, [rbx + rbx*2]
0x91de:     48 c1 e0 03                           	shl rax, 3
0x91e2:     80 7c 02 e8 00                        	cmp byte ptr [rdx + rax - 0x18], 0
0x91e7:     75 1b                                 	jne 0x9204 <function_8d20+0x4e4>
0x91e9:     48 8d 44 02 d0                        	lea rax, [rdx + rax - 0x30]
0x91ee:     eb 0a                                 	jmp 0x91fa <function_8d20+0x4da>
0x91f0:     48 83 e8 18                           	sub rax, 0x18
0x91f4:     80 78 18 00                           	cmp byte ptr [rax + 0x18], 0
0x91f8:     75 0a                                 	jne 0x9204 <function_8d20+0x4e4>
0x91fa:     48 83 eb 01                           	sub rbx, 1
0x91fe:     48 83 fb 01                           	cmp rbx, 1
0x9202:     75 ec                                 	jne 0x91f0 <function_8d20+0x4d0>
0x9204:     48 89 d8                              	mov rax, rbx
0x9207:     5b                                    	pop rbx
0x9208:     5d                                    	pop rbp
0x9209:     41 5c                                 	pop r12
0x920b:     41 5d                                 	pop r13
0x920d:     41 5e                                 	pop r14
0x920f:     c3                                    	ret 
0x9210:     ba 30 00 00 00                        	mov edx, 0x30
0x9215:     31 c9                                 	xor ecx, ecx
0x9217:     48 89 d0                              	mov rax, rdx
0x921a:     48 f7 e3                              	mul rbx
0x921d:     70 41                                 	jo 0x9260 <function_8d20+0x540>
0x921f:     48 85 c0                              	test rax, rax
0x9222:     78 2d                                 	js 0x9251 <function_8d20+0x531>
0x9224:     48 85 c9                              	test rcx, rcx
0x9227:     75 28                                 	jne 0x9251 <function_8d20+0x531>
0x9229:     48 8d 2c 1b                           	lea rbp, [rbx + rbx]
0x922d:     48 8d 74 1d 00                        	lea rsi, [rbp + rbx]
0x9232:     48 c1 e6 04                           	shl rsi, 4
0x9236:     e8 a5 b2 00 00                        	call 0x144e0 <function_144e0>
0x923b:     48 89 05 c6 7f 21 00                  	mov qword ptr [rip + 0x217fc6], rax
0x9242:     e9 9f fd ff ff                        	jmp 0x8fe6 <function_8d20+0x2c6>
0x9247:     be 01 00 00 00                        	mov esi, 1
0x924c:     e9 68 fd ff ff                        	jmp 0x8fb9 <function_8d20+0x299>
0x9251:     e8 7a b4 00 00                        	call 0x146d0 <function_146d0>
0x9256:     be 01 00 00 00                        	mov esi, 1
0x925b:     e9 da fd ff ff                        	jmp 0x903a <function_8d20+0x31a>
0x9260:     b9 01 00 00 00                        	mov ecx, 1
0x9265:     eb b8                                 	jmp 0x921f <function_8d20+0x4ff>
; data inside code section at 0x9267 -- 0x9270
0x9267:     66 0f 1f 84 00 00 00 00  00                        |f........       |
; function: function_9270 at 0x9270 -- 0x9418
0x9270:     41 57                                 	push r15
0x9272:     41 56                                 	push r14
0x9274:     41 55                                 	push r13
0x9276:     41 54                                 	push r12
0x9278:     55                                    	push rbp
0x9279:     53                                    	push rbx
0x927a:     48 83 ec 18                           	sub rsp, 0x18
0x927e:     48 83 3d 2a 81 21 00 00               	cmp qword ptr [rip + 0x21812a], 0
0x9286:     0f 84 fc 00 00 00                     	je 0x9388 <function_9270+0x118>
0x928c:     41 89 fe                              	mov r14d, edi
0x928f:     45 31 ed                              	xor r13d, r13d
0x9292:     31 db                                 	xor ebx, ebx
0x9294:     49 c7 c7 fd ff ff ff                  	mov r15, -3
0x929b:     eb 2b                                 	jmp 0x92c8 <function_9270+0x58>
; data inside code section at 0x929d -- 0x92a0
0x929d:     0f 1f 00                                           |...             |
0x92a0:     48 85 db                              	test rbx, rbx
0x92a3:     4c 89 ed                              	mov rbp, r13
0x92a6:     0f 85 c4 00 00 00                     	jne 0x9370 <function_9270+0x100>
0x92ac:     48 89 ee                              	mov rsi, rbp
0x92af:     4c 89 e7                              	mov rdi, r12
0x92b2:     48 83 c3 01                           	add rbx, 1
0x92b6:     e8 c5 ee ff ff                        	call 0x8180 <function_8180>
0x92bb:     48 39 1d ee 80 21 00                  	cmp qword ptr [rip + 0x2180ee], rbx
0x92c2:     0f 86 c0 00 00 00                     	jbe 0x9388 <function_9270+0x118>
0x92c8:     48 83 3d e0 7f 21 00 00               	cmp qword ptr [rip + 0x217fe0], 0
0x92d0:     48 8b 05 c9 80 21 00                  	mov rax, qword ptr [rip + 0x2180c9]
0x92d7:     4c 8b 24 d8                           	mov r12, qword ptr [rax + rbx*8]
0x92db:     74 c3                                 	je 0x92a0 <function_9270+0x30>
0x92dd:     4c 89 e7                              	mov rdi, r12
0x92e0:     e8 cb fa ff ff                        	call 0x8db0
0x92e5:     48 85 db                              	test rbx, rbx
0x92e8:     0f 84 d2 00 00 00                     	je 0x93c0 <function_9270+0x150>
0x92ee:     48 8b 15 bb 7f 21 00                  	mov rdx, qword ptr [rip + 0x217fbb]
0x92f5:     49 8d 6d 02                           	lea rbp, [r13 + 2]
0x92f9:     48 8d 0c 28                           	lea rcx, [rax + rbp]
0x92fd:     48 85 d2                              	test rdx, rdx
0x9300:     0f 84 b2 00 00 00                     	je 0x93b8 <function_9270+0x148>
0x9306:     48 39 ca                              	cmp rdx, rcx
0x9309:     76 0f                                 	jbe 0x931a <function_9270+0xaa>
0x930b:     4c 89 fa                              	mov rdx, r15
0x930e:     48 29 c2                              	sub rdx, rax
0x9311:     4c 39 ea                              	cmp rdx, r13
0x9314:     0f 83 9e 00 00 00                     	jae 0x93b8 <function_9270+0x148>
0x931a:     49 89 c5                              	mov r13, rax
0x931d:     b9 0a 00 00 00                        	mov ecx, 0xa
0x9322:     ba 0a 00 00 00                        	mov edx, 0xa
0x9327:     31 ed                                 	xor ebp, ebp
0x9329:     48 8b 3d 58 6f 21 00                  	mov rdi, qword ptr [rip + 0x216f58]
0x9330:     48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0x9334:     48 3b 47 30                           	cmp rax, qword ptr [rdi + 0x30]
0x9338:     0f 83 a2 00 00 00                     	jae 0x93e0 <function_9270+0x170>
0x933e:     48 8d 70 01                           	lea rsi, [rax + 1]
0x9342:     48 89 77 28                           	mov qword ptr [rdi + 0x28], rsi
0x9346:     44 88 30                              	mov byte ptr [rax], r14b
0x9349:     48 8b 3d 38 6f 21 00                  	mov rdi, qword ptr [rip + 0x216f38]
0x9350:     48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0x9354:     48 3b 47 30                           	cmp rax, qword ptr [rdi + 0x30]
0x9358:     73 76                                 	jae 0x93d0 <function_9270+0x160>
0x935a:     48 8d 48 01                           	lea rcx, [rax + 1]
0x935e:     48 89 4f 28                           	mov qword ptr [rdi + 0x28], rcx
0x9362:     88 10                                 	mov byte ptr [rax], dl
0x9364:     e9 43 ff ff ff                        	jmp 0x92ac <function_9270+0x3c>
; data inside code section at 0x9369 -- 0x9370
0x9369:     0f 1f 80 00 00 00 00                               |.......         |
0x9370:     49 8d 6d 02                           	lea rbp, [r13 + 2]
0x9374:     49 89 ed                              	mov r13, rbp
0x9377:     b9 20 00 00 00                        	mov ecx, 0x20
0x937c:     ba 20 00 00 00                        	mov edx, 0x20
0x9381:     eb a6                                 	jmp 0x9329 <function_9270+0xb9>
; data inside code section at 0x9383 -- 0x9388
0x9383:     0f 1f 44 00 00                                     |..D..           |
0x9388:     48 8b 3d f9 6e 21 00                  	mov rdi, qword ptr [rip + 0x216ef9]
0x938f:     48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0x9393:     48 3b 47 30                           	cmp rax, qword ptr [rdi + 0x30]
0x9397:     73 67                                 	jae 0x9400 <function_9270+0x190>
0x9399:     48 8d 50 01                           	lea rdx, [rax + 1]
0x939d:     48 89 57 28                           	mov qword ptr [rdi + 0x28], rdx
0x93a1:     c6 00 0a                              	mov byte ptr [rax], 0xa
0x93a4:     48 83 c4 18                           	add rsp, 0x18
0x93a8:     5b                                    	pop rbx
0x93a9:     5d                                    	pop rbp
0x93aa:     41 5c                                 	pop r12
0x93ac:     41 5d                                 	pop r13
0x93ae:     41 5e                                 	pop r14
0x93b0:     41 5f                                 	pop r15
0x93b2:     c3                                    	ret 
; data inside code section at 0x93b3 -- 0x93b8
0x93b3:     0f 1f 44 00 00                                     |..D..           |
0x93b8:     49 89 cd                              	mov r13, rcx
0x93bb:     eb ba                                 	jmp 0x9377 <function_9270+0x107>
; data inside code section at 0x93bd -- 0x93c0
0x93bd:     0f 1f 00                                           |...             |
0x93c0:     4c 89 ed                              	mov rbp, r13
0x93c3:     49 01 c5                              	add r13, rax
0x93c6:     e9 e1 fe ff ff                        	jmp 0x92ac <function_9270+0x3c>
; data inside code section at 0x93cb -- 0x93d0
0x93cb:     0f 1f 44 00 00                                     |..D..           |
0x93d0:     89 ce                                 	mov esi, ecx
0x93d2:     e8 f9 a5 ff ff                        	call 0x39d0 <__overflow>
0x93d7:     e9 d0 fe ff ff                        	jmp 0x92ac <function_9270+0x3c>
; data inside code section at 0x93dc -- 0x93e0
0x93dc:     0f 1f 40 00                                        |..@.            |
0x93e0:     41 0f be f6                           	movsx esi, r14b
0x93e4:     89 4c 24 0c                           	mov dword ptr [rsp + 0xc], ecx
0x93e8:     88 54 24 0b                           	mov byte ptr [rsp + 0xb], dl
0x93ec:     e8 df a5 ff ff                        	call 0x39d0 <__overflow>
0x93f1:     0f b6 54 24 0b                        	movzx edx, byte ptr [rsp + 0xb]
0x93f6:     8b 4c 24 0c                           	mov ecx, dword ptr [rsp + 0xc]
0x93fa:     e9 4a ff ff ff                        	jmp 0x9349 <function_9270+0xd9>
; data inside code section at 0x93ff -- 0x9400
0x93ff:     90                                                 |.               |
0x9400:     48 83 c4 18                           	add rsp, 0x18
0x9404:     be 0a 00 00 00                        	mov esi, 0xa
0x9409:     5b                                    	pop rbx
0x940a:     5d                                    	pop rbp
0x940b:     41 5c                                 	pop r12
0x940d:     41 5d                                 	pop r13
0x940f:     41 5e                                 	pop r14
0x9411:     41 5f                                 	pop r15
0x9413:     e9 b8 a5 ff ff                        	jmp 0x39d0 <__overflow>
; data inside code section at 0x9418 -- 0x9420
0x9418:     0f 1f 84 00 00 00 00 00                            |........        |
; function: function_9420 at 0x9420 -- 0x97fa
0x9420:     83 3d 11 7f 21 00 04                  	cmp dword ptr [rip + 0x217f11], 4
0x9427:     0f 87 4b 03 00 00                     	ja 0x9778 <function_9420+0x358>
0x942d:     41 57                                 	push r15
0x942f:     41 56                                 	push r14
0x9431:     48 8d 15 4c d1 00 00                  	lea rdx, [rip + 0xd14c]
0x9438:     41 55                                 	push r13
0x943a:     41 54                                 	push r12
0x943c:     55                                    	push rbp
0x943d:     53                                    	push rbx
0x943e:     48 83 ec 38                           	sub rsp, 0x38
0x9442:     8b 05 f0 7e 21 00                     	mov eax, dword ptr [rip + 0x217ef0]
0x9448:     48 63 04 82                           	movsxd rax, dword ptr [rdx + rax*4]
0x944c:     48 01 d0                              	add rax, rdx
0x944f:     ff e0                                 	jmp rax
; data inside code section at 0x9451 -- 0x9458
0x9451:     0f 1f 80 00 00 00 00                               |.......         |
0x9458:     48 83 3d 50 7e 21 00 00               	cmp qword ptr [rip + 0x217e50], 0
0x9460:     0f 84 02 03 00 00                     	je 0x9768 <function_9420+0x348>
0x9466:     31 ff                                 	xor edi, edi
0x9468:     e8 f3 fa ff ff                        	call 0x8f60
0x946d:     48 8d 14 40                           	lea rdx, [rax + rax*2]
0x9471:     49 89 c6                              	mov r14, rax
0x9474:     48 8b 05 8d 7d 21 00                  	mov rax, qword ptr [rip + 0x217d8d]
0x947b:     4c 8d 7c d0 e8                        	lea r15, [rax + rdx*8 - 0x18]
0x9480:     48 8b 05 19 7f 21 00                  	mov rax, qword ptr [rip + 0x217f19]
0x9487:     48 8b 18                              	mov rbx, qword ptr [rax]
0x948a:     48 89 df                              	mov rdi, rbx
0x948d:     e8 1e f9 ff ff                        	call 0x8db0
0x9492:     48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x9497:     49 8b 47 10                           	mov rax, qword ptr [r15 + 0x10]
0x949b:     31 f6                                 	xor esi, esi
0x949d:     48 89 df                              	mov rdi, rbx
0x94a0:     4c 8b 20                              	mov r12, qword ptr [rax]
0x94a3:     e8 d8 ec ff ff                        	call 0x8180 <function_8180>
0x94a8:     48 83 3d 00 7f 21 00 01               	cmp qword ptr [rip + 0x217f00], 1
0x94b0:     0f 86 da 02 00 00                     	jbe 0x9790 <function_9420+0x370>
0x94b6:     45 31 ed                              	xor r13d, r13d
0x94b9:     bb 01 00 00 00                        	mov ebx, 1
0x94be:     48 8b 4c 24 08                        	mov rcx, qword ptr [rsp + 8]
0x94c3:     eb 60                                 	jmp 0x9525 <function_9420+0x105>
; data inside code section at 0x94c5 -- 0x94c8
0x94c5:     0f 1f 00                                           |...             |
0x94c8:     48 8b 3d b9 6d 21 00                  	mov rdi, qword ptr [rip + 0x216db9]
0x94cf:     48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0x94d3:     48 3b 47 30                           	cmp rax, qword ptr [rdi + 0x30]
0x94d7:     0f 83 f3 02 00 00                     	jae 0x97d0 <function_9420+0x3b0>
0x94dd:     48 8d 50 01                           	lea rdx, [rax + 1]
0x94e1:     45 31 ed                              	xor r13d, r13d
0x94e4:     48 89 57 28                           	mov qword ptr [rdi + 0x28], rdx
0x94e8:     c6 00 0a                              	mov byte ptr [rax], 0xa
0x94eb:     48 8b 05 ae 7e 21 00                  	mov rax, qword ptr [rip + 0x217eae]
0x94f2:     4c 89 ee                              	mov rsi, r13
0x94f5:     4c 8b 24 d8                           	mov r12, qword ptr [rax + rbx*8]
0x94f9:     48 83 c3 01                           	add rbx, 1
0x94fd:     4c 89 e7                              	mov rdi, r12
0x9500:     e8 7b ec ff ff                        	call 0x8180 <function_8180>
0x9505:     4c 89 e7                              	mov rdi, r12
0x9508:     e8 a3 f8 ff ff                        	call 0x8db0
0x950d:     48 3b 1d 9c 7e 21 00                  	cmp rbx, qword ptr [rip + 0x217e9c]
0x9514:     48 89 c1                              	mov rcx, rax
0x9517:     49 8b 47 10                           	mov rax, qword ptr [r15 + 0x10]
0x951b:     4c 8b 24 e8                           	mov r12, qword ptr [rax + rbp*8]
0x951f:     0f 83 6b 02 00 00                     	jae 0x9790 <function_9420+0x370>
0x9525:     31 d2                                 	xor edx, edx
0x9527:     48 89 d8                              	mov rax, rbx
0x952a:     49 f7 f6                              	div r14
0x952d:     48 85 d2                              	test rdx, rdx
0x9530:     48 89 d5                              	mov rbp, rdx
0x9533:     74 93                                 	je 0x94c8 <function_9420+0xa8>
0x9535:     4d 01 ec                              	add r12, r13
0x9538:     4a 8d 3c 29                           	lea rdi, [rcx + r13]
0x953c:     4c 89 e6                              	mov rsi, r12
0x953f:     4d 89 e5                              	mov r13, r12
0x9542:     e8 99 d1 ff ff                        	call 0x66e0 <function_66e0>
0x9547:     eb a2                                 	jmp 0x94eb <function_9420+0xcb>
; data inside code section at 0x9549 -- 0x9550
0x9549:     0f 1f 80 00 00 00 00                               |.......         |
0x9550:     bf 2c 00 00 00                        	mov edi, 0x2c
0x9555:     48 83 c4 38                           	add rsp, 0x38
0x9559:     5b                                    	pop rbx
0x955a:     5d                                    	pop rbp
0x955b:     41 5c                                 	pop r12
0x955d:     41 5d                                 	pop r13
0x955f:     41 5e                                 	pop r14
0x9561:     41 5f                                 	pop r15
0x9563:     e9 08 fd ff ff                        	jmp 0x9270 <function_9270>
; data inside code section at 0x9568 -- 0x9570
0x9568:     0f 1f 84 00 00 00 00 00                            |........        |
0x9570:     31 db                                 	xor ebx, ebx
0x9572:     48 83 3d 36 7e 21 00 00               	cmp qword ptr [rip + 0x217e36], 0
0x957a:     0f 84 68 01 00 00                     	je 0x96e8 <function_9420+0x2c8>
0x9580:     48 8b 05 19 7e 21 00                  	mov rax, qword ptr [rip + 0x217e19]
0x9587:     31 f6                                 	xor esi, esi
0x9589:     48 8b 3c d8                           	mov rdi, qword ptr [rax + rbx*8]
0x958d:     e8 ee eb ff ff                        	call 0x8180 <function_8180>
0x9592:     48 8b 3d ef 6c 21 00                  	mov rdi, qword ptr [rip + 0x216cef]
0x9599:     48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0x959d:     48 3b 47 30                           	cmp rax, qword ptr [rdi + 0x30]
0x95a1:     0f 83 d9 01 00 00                     	jae 0x9780 <function_9420+0x360>
0x95a7:     48 8d 50 01                           	lea rdx, [rax + 1]
0x95ab:     48 89 57 28                           	mov qword ptr [rdi + 0x28], rdx
0x95af:     c6 00 0a                              	mov byte ptr [rax], 0xa
0x95b2:     48 83 c3 01                           	add rbx, 1
0x95b6:     48 39 1d f3 7d 21 00                  	cmp qword ptr [rip + 0x217df3], rbx
0x95bd:     77 c1                                 	ja 0x9580 <function_9420+0x160>
0x95bf:     48 83 c4 38                           	add rsp, 0x38
0x95c3:     5b                                    	pop rbx
0x95c4:     5d                                    	pop rbp
0x95c5:     41 5c                                 	pop r12
0x95c7:     41 5d                                 	pop r13
0x95c9:     41 5e                                 	pop r14
0x95cb:     41 5f                                 	pop r15
0x95cd:     c3                                    	ret 
; data inside code section at 0x95ce -- 0x95d0
0x95ce:     66 90                                              |f.              |
0x95d0:     48 83 3d d8 7c 21 00 00               	cmp qword ptr [rip + 0x217cd8], 0
0x95d8:     0f 84 8a 01 00 00                     	je 0x9768 <function_9420+0x348>
0x95de:     bf 01 00 00 00                        	mov edi, 1
0x95e3:     e8 78 f9 ff ff                        	call 0x8f60
0x95e8:     48 8d 14 40                           	lea rdx, [rax + rax*2]
0x95ec:     48 89 c1                              	mov rcx, rax
0x95ef:     48 8b 05 12 7c 21 00                  	mov rax, qword ptr [rip + 0x217c12]
0x95f6:     4c 8d 7c d0 e8                        	lea r15, [rax + rdx*8 - 0x18]
0x95fb:     48 8b 05 ae 7d 21 00                  	mov rax, qword ptr [rip + 0x217dae]
0x9602:     31 d2                                 	xor edx, edx
0x9604:     48 f7 f1                              	div rcx
0x9607:     48 85 d2                              	test rdx, rdx
0x960a:     0f 95 c2                              	setne dl
0x960d:     0f b6 d2                              	movzx edx, dl
0x9610:     48 01 c2                              	add rdx, rax
0x9613:     48 89 d0                              	mov rax, rdx
0x9616:     48 89 54 24 18                        	mov qword ptr [rsp + 0x18], rdx
0x961b:     0f 84 c7 00 00 00                     	je 0x96e8 <function_9420+0x2c8>
0x9621:     48 c1 e0 03                           	shl rax, 3
0x9625:     48 c7 44 24 28 00 00 00 00            	mov qword ptr [rsp + 0x28], 0
0x962e:     48 89 44 24 20                        	mov qword ptr [rsp + 0x20], rax
0x9633:     0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0x9638:     4c 8b 6c 24 28                        	mov r13, qword ptr [rsp + 0x28]
0x963d:     45 31 e4                              	xor r12d, r12d
0x9640:     31 ed                                 	xor ebp, ebp
0x9642:     4e 8d 34 ed 00 00 00 00               	lea r14, [r13*8]
0x964a:     eb 1f                                 	jmp 0x966b <function_9420+0x24b>
; data inside code section at 0x964c -- 0x9650
0x964c:     0f 1f 40 00                                        |..@.            |
0x9650:     48 8b 5c 24 10                        	mov rbx, qword ptr [rsp + 0x10]
0x9655:     48 8b 7c 24 08                        	mov rdi, qword ptr [rsp + 8]
0x965a:     48 01 eb                              	add rbx, rbp
0x965d:     48 01 ef                              	add rdi, rbp
0x9660:     48 89 de                              	mov rsi, rbx
0x9663:     48 89 dd                              	mov rbp, rbx
0x9666:     e8 75 d0 ff ff                        	call 0x66e0 <function_66e0>
0x966b:     48 8b 05 2e 7d 21 00                  	mov rax, qword ptr [rip + 0x217d2e]
0x9672:     4a 8b 1c 30                           	mov rbx, qword ptr [rax + r14]
0x9676:     48 89 df                              	mov rdi, rbx
0x9679:     e8 32 f7 ff ff                        	call 0x8db0
0x967e:     48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x9683:     49 8b 47 10                           	mov rax, qword ptr [r15 + 0x10]
0x9687:     48 89 ee                              	mov rsi, rbp
0x968a:     48 89 df                              	mov rdi, rbx
0x968d:     4a 8b 0c 20                           	mov rcx, qword ptr [rax + r12]
0x9691:     49 83 c4 08                           	add r12, 8
0x9695:     48 89 4c 24 10                        	mov qword ptr [rsp + 0x10], rcx
0x969a:     e8 e1 ea ff ff                        	call 0x8180 <function_8180>
0x969f:     4c 03 6c 24 18                        	add r13, qword ptr [rsp + 0x18]
0x96a4:     4c 03 74 24 20                        	add r14, qword ptr [rsp + 0x20]
0x96a9:     4c 3b 2d 00 7d 21 00                  	cmp r13, qword ptr [rip + 0x217d00]
0x96b0:     72 9e                                 	jb 0x9650 <function_9420+0x230>
0x96b2:     48 8b 3d cf 6b 21 00                  	mov rdi, qword ptr [rip + 0x216bcf]
0x96b9:     48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0x96bd:     48 3b 47 30                           	cmp rax, qword ptr [rdi + 0x30]
0x96c1:     0f 83 f1 00 00 00                     	jae 0x97b8 <function_9420+0x398>
0x96c7:     48 8d 50 01                           	lea rdx, [rax + 1]
0x96cb:     48 89 57 28                           	mov qword ptr [rdi + 0x28], rdx
0x96cf:     c6 00 0a                              	mov byte ptr [rax], 0xa
0x96d2:     48 83 44 24 28 01                     	add qword ptr [rsp + 0x28], 1
0x96d8:     48 8b 44 24 28                        	mov rax, qword ptr [rsp + 0x28]
0x96dd:     48 39 44 24 18                        	cmp qword ptr [rsp + 0x18], rax
0x96e2:     0f 85 50 ff ff ff                     	jne 0x9638 <function_9420+0x218>
0x96e8:     48 83 c4 38                           	add rsp, 0x38
0x96ec:     5b                                    	pop rbx
0x96ed:     5d                                    	pop rbp
0x96ee:     41 5c                                 	pop r12
0x96f0:     41 5d                                 	pop r13
0x96f2:     41 5e                                 	pop r14
0x96f4:     41 5f                                 	pop r15
0x96f6:     c3                                    	ret 
; data inside code section at 0x96f7 -- 0x9700
0x96f7:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0x9700:     31 db                                 	xor ebx, ebx
0x9702:     48 83 3d a6 7c 21 00 00               	cmp qword ptr [rip + 0x217ca6], 0
0x970a:     75 24                                 	jne 0x9730 <function_9420+0x310>
0x970c:     eb da                                 	jmp 0x96e8 <function_9420+0x2c8>
; data inside code section at 0x970e -- 0x9710
0x970e:     66 90                                              |f.              |
0x9710:     48 8d 50 01                           	lea rdx, [rax + 1]
0x9714:     48 89 57 28                           	mov qword ptr [rdi + 0x28], rdx
0x9718:     c6 00 0a                              	mov byte ptr [rax], 0xa
0x971b:     48 83 05 d5 7a 21 00 01               	add qword ptr [rip + 0x217ad5], 1
0x9723:     48 83 c3 01                           	add rbx, 1
0x9727:     48 39 1d 82 7c 21 00                  	cmp qword ptr [rip + 0x217c82], rbx
0x972e:     76 b8                                 	jbe 0x96e8 <function_9420+0x2c8>
0x9730:     e8 1b dd ff ff                        	call 0x7450
0x9735:     48 8b 05 64 7c 21 00                  	mov rax, qword ptr [rip + 0x217c64]
0x973c:     48 8b 3c d8                           	mov rdi, qword ptr [rax + rbx*8]
0x9740:     e8 cb eb ff ff                        	call 0x8310
0x9745:     48 8b 3d 3c 6b 21 00                  	mov rdi, qword ptr [rip + 0x216b3c]
0x974c:     48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0x9750:     48 3b 47 30                           	cmp rax, qword ptr [rdi + 0x30]
0x9754:     72 ba                                 	jb 0x9710 <function_9420+0x2f0>
0x9756:     be 0a 00 00 00                        	mov esi, 0xa
0x975b:     e8 70 a2 ff ff                        	call 0x39d0 <__overflow>
0x9760:     eb b9                                 	jmp 0x971b <function_9420+0x2fb>
; data inside code section at 0x9762 -- 0x9768
0x9762:     66 0f 1f 44 00 00                                  |f..D..          |
0x9768:     bf 20 00 00 00                        	mov edi, 0x20
0x976d:     e9 e3 fd ff ff                        	jmp 0x9555 <function_9420+0x135>
; data inside code section at 0x9772 -- 0x9778
0x9772:     66 0f 1f 44 00 00                                  |f..D..          |
0x9778:     f3 c3                                 	ret 
; data inside code section at 0x977a -- 0x9780
0x977a:     66 0f 1f 44 00 00                                  |f..D..          |
0x9780:     be 0a 00 00 00                        	mov esi, 0xa
0x9785:     e8 46 a2 ff ff                        	call 0x39d0 <__overflow>
0x978a:     e9 23 fe ff ff                        	jmp 0x95b2 <function_9420+0x192>
; data inside code section at 0x978f -- 0x9790
0x978f:     90                                                 |.               |
0x9790:     48 8b 3d f1 6a 21 00                  	mov rdi, qword ptr [rip + 0x216af1]
0x9797:     48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0x979b:     48 3b 47 30                           	cmp rax, qword ptr [rdi + 0x30]
0x979f:     73 41                                 	jae 0x97e2 <function_9420+0x3c2>
0x97a1:     48 8d 50 01                           	lea rdx, [rax + 1]
0x97a5:     48 89 57 28                           	mov qword ptr [rdi + 0x28], rdx
0x97a9:     c6 00 0a                              	mov byte ptr [rax], 0xa
0x97ac:     e9 37 ff ff ff                        	jmp 0x96e8 <function_9420+0x2c8>
; data inside code section at 0x97b1 -- 0x97b8
0x97b1:     0f 1f 80 00 00 00 00                               |.......         |
0x97b8:     be 0a 00 00 00                        	mov esi, 0xa
0x97bd:     e8 0e a2 ff ff                        	call 0x39d0 <__overflow>
0x97c2:     e9 0b ff ff ff                        	jmp 0x96d2 <function_9420+0x2b2>
; data inside code section at 0x97c7 -- 0x97d0
0x97c7:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0x97d0:     be 0a 00 00 00                        	mov esi, 0xa
0x97d5:     45 31 ed                              	xor r13d, r13d
0x97d8:     e8 f3 a1 ff ff                        	call 0x39d0 <__overflow>
0x97dd:     e9 09 fd ff ff                        	jmp 0x94eb <function_9420+0xcb>
0x97e2:     48 83 c4 38                           	add rsp, 0x38
0x97e6:     be 0a 00 00 00                        	mov esi, 0xa
0x97eb:     5b                                    	pop rbx
0x97ec:     5d                                    	pop rbp
0x97ed:     41 5c                                 	pop r12
0x97ef:     41 5d                                 	pop r13
0x97f1:     41 5e                                 	pop r14
0x97f3:     41 5f                                 	pop r15
0x97f5:     e9 d6 a1 ff ff                        	jmp 0x39d0 <__overflow>
; data inside code section at 0x97fa -- 0x9800
0x97fa:     66 0f 1f 44 00 00                                  |f..D..          |
; function: function_9800 at 0x9800 -- 0x9876
0x9800:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0x9806:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0x980c:     49 89 f0                              	mov r8, rsi
0x980f:     83 f8 03                              	cmp eax, 3
0x9812:     0f 94 c1                              	sete cl
0x9815:     83 f8 09                              	cmp eax, 9
0x9818:     0f 94 c0                              	sete al
0x981b:     09 c1                                 	or ecx, eax
0x981d:     83 fa 03                              	cmp edx, 3
0x9820:     0f 94 c0                              	sete al
0x9823:     83 fa 09                              	cmp edx, 9
0x9826:     0f 94 c2                              	sete dl
0x9829:     08 c2                                 	or dl, al
0x982b:     75 04                                 	jne 0x9831 <function_9800+0x31>
0x982d:     84 c9                                 	test cl, cl
0x982f:     75 3f                                 	jne 0x9870 <function_9800+0x70>
0x9831:     84 c9                                 	test cl, cl
0x9833:     75 0b                                 	jne 0x9840 <function_9800+0x40>
0x9835:     84 d2                                 	test dl, dl
0x9837:     b8 01 00 00 00                        	mov eax, 1
0x983c:     74 02                                 	je 0x9840 <function_9800+0x40>
0x983e:     f3 c3                                 	ret 
0x9840:     48 8b 47 60                           	mov rax, qword ptr [rdi + 0x60]
0x9844:     49 39 40 60                           	cmp qword ptr [r8 + 0x60], rax
0x9848:     7f 26                                 	jg 0x9870 <function_9800+0x70>
0x984a:     7c 1c                                 	jl 0x9868 <function_9800+0x68>
0x984c:     48 8b 47 68                           	mov rax, qword ptr [rdi + 0x68]
0x9850:     41 2b 40 68                           	sub eax, dword ptr [r8 + 0x68]
0x9854:     75 e8                                 	jne 0x983e <function_9800+0x3e>
0x9856:     48 8b 37                              	mov rsi, qword ptr [rdi]
0x9859:     49 8b 38                              	mov rdi, qword ptr [r8]
0x985c:     e9 bf a2 ff ff                        	jmp 0x3b20 <strcmp>
; data inside code section at 0x9861 -- 0x9868
0x9861:     0f 1f 80 00 00 00 00                               |.......         |
0x9868:     b8 01 00 00 00                        	mov eax, 1
0x986d:     c3                                    	ret 
; data inside code section at 0x986e -- 0x9870
0x986e:     66 90                                              |f.              |
0x9870:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0x9875:     c3                                    	ret 
; data inside code section at 0x9876 -- 0x9880
0x9876:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_9880 at 0x9880 -- 0x9906
0x9880:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0x9886:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0x988c:     49 89 f0                              	mov r8, rsi
0x988f:     83 f8 03                              	cmp eax, 3
0x9892:     0f 94 c1                              	sete cl
0x9895:     83 f8 09                              	cmp eax, 9
0x9898:     0f 94 c0                              	sete al
0x989b:     09 c1                                 	or ecx, eax
0x989d:     83 fa 03                              	cmp edx, 3
0x98a0:     0f 94 c0                              	sete al
0x98a3:     83 fa 09                              	cmp edx, 9
0x98a6:     0f 94 c2                              	sete dl
0x98a9:     08 c2                                 	or dl, al
0x98ab:     75 04                                 	jne 0x98b1 <function_9880+0x31>
0x98ad:     84 c9                                 	test cl, cl
0x98af:     75 4f                                 	jne 0x9900 <function_9880+0x80>
0x98b1:     84 c9                                 	test cl, cl
0x98b3:     75 0b                                 	jne 0x98c0 <function_9880+0x40>
0x98b5:     84 d2                                 	test dl, dl
0x98b7:     b8 01 00 00 00                        	mov eax, 1
0x98bc:     74 02                                 	je 0x98c0 <function_9880+0x40>
0x98be:     f3 c3                                 	ret 
0x98c0:     48 8b 87 80 00 00 00                  	mov rax, qword ptr [rdi + 0x80]
0x98c7:     49 39 80 80 00 00 00                  	cmp qword ptr [r8 + 0x80], rax
0x98ce:     7f 30                                 	jg 0x9900 <function_9880+0x80>
0x98d0:     7c 1e                                 	jl 0x98f0 <function_9880+0x70>
0x98d2:     48 8b 87 88 00 00 00                  	mov rax, qword ptr [rdi + 0x88]
0x98d9:     41 2b 80 88 00 00 00                  	sub eax, dword ptr [r8 + 0x88]
0x98e0:     75 dc                                 	jne 0x98be <function_9880+0x3e>
0x98e2:     48 8b 37                              	mov rsi, qword ptr [rdi]
0x98e5:     49 8b 38                              	mov rdi, qword ptr [r8]
0x98e8:     e9 33 a2 ff ff                        	jmp 0x3b20 <strcmp>
; data inside code section at 0x98ed -- 0x98f0
0x98ed:     0f 1f 00                                           |...             |
0x98f0:     b8 01 00 00 00                        	mov eax, 1
0x98f5:     c3                                    	ret 
; data inside code section at 0x98f6 -- 0x9900
0x98f6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x9900:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0x9905:     c3                                    	ret 
; data inside code section at 0x9906 -- 0x9910
0x9906:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_9910 at 0x9910 -- 0x99e0
0x9910:     55                                    	push rbp
0x9911:     53                                    	push rbx
0x9912:     89 fd                                 	mov ebp, edi
0x9914:     48 83 ec 28                           	sub rsp, 0x28
0x9918:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x9921:     48 89 44 24 18                        	mov qword ptr [rsp + 0x18], rax
0x9926:     31 c0                                 	xor eax, eax
0x9928:     80 3d fe 79 21 00 00                  	cmp byte ptr [rip + 0x2179fe], 0
0x992f:     74 77                                 	je 0x99a8 <function_9910+0x98>
0x9931:     48 89 e3                              	mov rbx, rsp
0x9934:     48 8d 0d e9 e2 00 00                  	lea rcx, [rip + 0xe2e9]
0x993b:     41 89 e8                              	mov r8d, ebp
0x993e:     ba 15 00 00 00                        	mov edx, 0x15
0x9943:     be 01 00 00 00                        	mov esi, 1
0x9948:     48 89 df                              	mov rdi, rbx
0x994b:     31 c0                                 	xor eax, eax
0x994d:     e8 0e a5 ff ff                        	call 0x3e60 <__sprintf_chk>
0x9952:     48 89 d8                              	mov rax, rbx
0x9955:     8b 08                                 	mov ecx, dword ptr [rax]
0x9957:     48 83 c0 04                           	add rax, 4
0x995b:     8d 91 ff fe fe fe                     	lea edx, [rcx - 0x1010101]
0x9961:     f7 d1                                 	not ecx
0x9963:     21 ca                                 	and edx, ecx
0x9965:     81 e2 80 80 80 80                     	and edx, 0x80808080
0x996b:     74 e8                                 	je 0x9955 <function_9910+0x45>
0x996d:     89 d1                                 	mov ecx, edx
0x996f:     c1 e9 10                              	shr ecx, 0x10
0x9972:     f7 c2 80 80 00 00                     	test edx, 0x8080
0x9978:     0f 44 d1                              	cmove edx, ecx
0x997b:     48 8d 48 02                           	lea rcx, [rax + 2]
0x997f:     89 d6                                 	mov esi, edx
0x9981:     48 0f 44 c1                           	cmove rax, rcx
0x9985:     40 00 d6                              	add sil, dl
0x9988:     48 83 d8 03                           	sbb rax, 3
0x998c:     29 d8                                 	sub eax, ebx
0x998e:     48 8b 74 24 18                        	mov rsi, qword ptr [rsp + 0x18]
0x9993:     64 48 33 34 25 28 00 00 00            	xor rsi, qword ptr fs:[0x28]
0x999c:     75 2e                                 	jne 0x99cc <function_9910+0xbc>
0x999e:     48 83 c4 28                           	add rsp, 0x28
0x99a2:     5b                                    	pop rbx
0x99a3:     5d                                    	pop rbp
0x99a4:     c3                                    	ret 
; data inside code section at 0x99a5 -- 0x99a8
0x99a5:     0f 1f 00                                           |...             |
0x99a8:     e8 63 5f 00 00                        	call 0xf910 <function_f910>
0x99ad:     48 85 c0                              	test rax, rax
0x99b0:     48 89 c7                              	mov rdi, rax
0x99b3:     0f 84 78 ff ff ff                     	je 0x9931 <function_9910+0x21>
0x99b9:     31 f6                                 	xor esi, esi
0x99bb:     e8 b0 69 00 00                        	call 0x10370 <function_10370>
0x99c0:     ba 00 00 00 00                        	mov edx, 0
0x99c5:     85 c0                                 	test eax, eax
0x99c7:     0f 48 c2                              	cmovs eax, edx
0x99ca:     eb c2                                 	jmp 0x998e <function_9910+0x7e>
0x99cc:     e8 9f 9f ff ff                        	call 0x3970 <__stack_chk_fail>
0x99d1:     0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0x99d6:     66 2e 0f 1f 84 00 00 00 00 00         	nop word ptr cs:[rax + rax]
; function: function_99e0 at 0x99e0 -- 0xa85b
0x99e0:     55                                    	push rbp
0x99e1:     48 89 e5                              	mov rbp, rsp
0x99e4:     41 57                                 	push r15
0x99e6:     41 56                                 	push r14
0x99e8:     41 55                                 	push r13
0x99ea:     41 54                                 	push r12
0x99ec:     49 89 cf                              	mov r15, rcx
0x99ef:     53                                    	push rbx
0x99f0:     41 89 f6                              	mov r14d, esi
0x99f3:     41 89 d5                              	mov r13d, edx
0x99f6:     48 81 ec 78 03 00 00                  	sub rsp, 0x378
0x99fd:     48 8b 0d ac 79 21 00                  	mov rcx, qword ptr [rip + 0x2179ac]
0x9a04:     48 89 bd 78 fc ff ff                  	mov qword ptr [rbp - 0x388], rdi
0x9a0b:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x9a14:     48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x9a18:     31 c0                                 	xor eax, eax
0x9a1a:     48 3b 0d 97 79 21 00                  	cmp rcx, qword ptr [rip + 0x217997]
0x9a21:     48 8b 3d 98 79 21 00                  	mov rdi, qword ptr [rip + 0x217998]
0x9a28:     75 4e                                 	jne 0x9a78 <function_99e0+0x98>
0x9a2a:     ba 90 01 00 00                        	mov edx, 0x190
0x9a2f:     31 f6                                 	xor esi, esi
0x9a31:     48 89 d0                              	mov rax, rdx
0x9a34:     48 f7 e1                              	mul rcx
0x9a37:     0f 80 0f 0e 00 00                     	jo 0xa84c <function_99e0+0xe6c>
0x9a3d:     48 85 c0                              	test rax, rax
0x9a40:     0f 88 10 0e 00 00                     	js 0xa856 <function_99e0+0xe76>
0x9a46:     48 85 f6                              	test rsi, rsi
0x9a49:     0f 85 07 0e 00 00                     	jne 0xa856 <function_99e0+0xe76>
0x9a4f:     48 8d 04 89                           	lea rax, [rcx + rcx*4]
0x9a53:     48 8d 34 80                           	lea rsi, [rax + rax*4]
0x9a57:     48 c1 e6 04                           	shl rsi, 4
0x9a5b:     e8 80 aa 00 00                        	call 0x144e0 <function_144e0>
0x9a60:     48 d1 25 51 79 21 00                  	shl qword ptr [rip + 0x217951], 1
0x9a67:     48 8b 0d 42 79 21 00                  	mov rcx, qword ptr [rip + 0x217942]
0x9a6e:     48 89 c7                              	mov rdi, rax
0x9a71:     48 89 05 48 79 21 00                  	mov qword ptr [rip + 0x217948], rax
0x9a78:     48 8d 04 89                           	lea rax, [rcx + rcx*4]
0x9a7c:     48 8d 04 80                           	lea rax, [rax + rax*4]
0x9a80:     48 8d 1c c7                           	lea rbx, [rdi + rax*8]
0x9a84:     31 c0                                 	xor eax, eax
0x9a86:     48 8d 7b 08                           	lea rdi, [rbx + 8]
0x9a8a:     48 89 d9                              	mov rcx, rbx
0x9a8d:     48 c7 03 00 00 00 00                  	mov qword ptr [rbx], 0
0x9a94:     48 c7 83 bc 00 00 00 00 00 00 00      	mov qword ptr [rbx + 0xbc], 0
0x9a9f:     48 83 e7 f8                           	and rdi, 0xfffffffffffffff8
0x9aa3:     48 29 f9                              	sub rcx, rdi
0x9aa6:     81 c1 c4 00 00 00                     	add ecx, 0xc4
0x9aac:     c1 e9 03                              	shr ecx, 3
0x9aaf:     f3 48 ab                              	rep stosq qword ptr [rdi], rax
0x9ab2:     48 c7 43 20 00 00 00 00               	mov qword ptr [rbx + 0x20], 0
0x9aba:     44 89 b3 a8 00 00 00                  	mov dword ptr [rbx + 0xa8], r14d
0x9ac1:     c7 83 c4 00 00 00 ff ff ff ff         	mov dword ptr [rbx + 0xc4], 0xffffffff
0x9acb:     80 3d d7 78 21 00 00                  	cmp byte ptr [rip + 0x2178d7], 0
0x9ad2:     75 0d                                 	jne 0x9ae1 <function_99e0+0x101>
0x9ad4:     80 3d cd 78 21 00 00                  	cmp byte ptr [rip + 0x2178cd], 0
0x9adb:     0f 85 0f 09 00 00                     	jne 0xa3f0 <function_99e0+0xa10>
0x9ae1:     45 84 ed                              	test r13b, r13b
0x9ae4:     44 0f b6 05 25 78 21 00               	movzx r8d, byte ptr [rip + 0x217825]
0x9aec:     0f 84 de 01 00 00                     	je 0x9cd0 <function_99e0+0x2f0>
0x9af2:     4c 8b a5 78 fc ff ff                  	mov r12, qword ptr [rbp - 0x388]
0x9af9:     41 0f b6 14 24                        	movzx edx, byte ptr [r12]
0x9afe:     80 fa 2f                              	cmp dl, 0x2f
0x9b01:     0f 84 71 0b 00 00                     	je 0xa678 <function_99e0+0xc98>
0x9b07:     41 0f b6 0f                           	movzx ecx, byte ptr [r15]
0x9b0b:     84 c9                                 	test cl, cl
0x9b0d:     0f 85 08 08 00 00                     	jne 0xa31b <function_99e0+0x93b>
0x9b13:     45 84 c0                              	test r8b, r8b
0x9b16:     0f 85 ce 05 00 00                     	jne 0xa0ea <function_99e0+0x70a>
0x9b1c:     8b 0d d6 77 21 00                     	mov ecx, dword ptr [rip + 0x2177d6]
0x9b22:     4c 8d 7b 18                           	lea r15, [rbx + 0x18]
0x9b26:     83 f9 03                              	cmp ecx, 3
0x9b29:     0f 82 21 03 00 00                     	jb 0x9e50 <function_99e0+0x470>
0x9b2f:     83 f9 04                              	cmp ecx, 4
0x9b32:     0f 86 f8 05 00 00                     	jbe 0xa130 <function_99e0+0x750>
0x9b38:     83 f9 05                              	cmp ecx, 5
0x9b3b:     0f 85 0f 03 00 00                     	jne 0x9e50 <function_99e0+0x470>
0x9b41:     4c 89 fa                              	mov rdx, r15
0x9b44:     4c 89 e6                              	mov rsi, r12
0x9b47:     bf 01 00 00 00                        	mov edi, 1
0x9b4c:     e8 8f a0 ff ff                        	call 0x3be0 <__xstat>
0x9b51:     85 c0                                 	test eax, eax
0x9b53:     ba 01 00 00 00                        	mov edx, 1
0x9b58:     0f 85 0c 03 00 00                     	jne 0x9e6a <function_99e0+0x48a>
0x9b5e:     41 83 fe 05                           	cmp r14d, 5
0x9b62:     c6 83 b8 00 00 00 01                  	mov byte ptr [rbx + 0xb8], 1
0x9b69:     0f 84 01 05 00 00                     	je 0xa070 <function_99e0+0x690>
0x9b6f:     8b 43 30                              	mov eax, dword ptr [rbx + 0x30]
0x9b72:     25 00 f0 00 00                        	and eax, 0xf000
0x9b77:     3d 00 80 00 00                        	cmp eax, 0x8000
0x9b7c:     0f 84 ee 04 00 00                     	je 0xa070 <function_99e0+0x690>
0x9b82:     44 8b 1d af 77 21 00                  	mov r11d, dword ptr [rip + 0x2177af]
0x9b89:     45 85 db                              	test r11d, r11d
0x9b8c:     0f 84 0e 03 00 00                     	je 0x9ea0 <function_99e0+0x4c0>
0x9b92:     80 3d cc 77 21 00 00                  	cmp byte ptr [rip + 0x2177cc], 0
0x9b99:     0f 85 01 03 00 00                     	jne 0x9ea0 <function_99e0+0x4c0>
0x9b9f:     8b 43 30                              	mov eax, dword ptr [rbx + 0x30]
0x9ba2:     25 00 f0 00 00                        	and eax, 0xf000
0x9ba7:     3d 00 a0 00 00                        	cmp eax, 0xa000
0x9bac:     0f 84 c6 08 00 00                     	je 0xa478 <function_99e0+0xa98>
0x9bb2:     3d 00 40 00 00                        	cmp eax, 0x4000
0x9bb7:     0f 84 63 09 00 00                     	je 0xa520 <function_99e0+0xb40>
0x9bbd:     c7 83 a8 00 00 00 05 00 00 00         	mov dword ptr [rbx + 0xa8], 5
0x9bc7:     8b 3d 6b 77 21 00                     	mov edi, dword ptr [rip + 0x21776b]
0x9bcd:     4c 8b 63 58                           	mov r12, qword ptr [rbx + 0x58]
0x9bd1:     85 ff                                 	test edi, edi
0x9bd3:     74 09                                 	je 0x9bde <function_99e0+0x1fe>
0x9bd5:     80 3d 50 77 21 00 00                  	cmp byte ptr [rip + 0x217750], 0
0x9bdc:     74 71                                 	je 0x9c4f <function_99e0+0x26f>
0x9bde:     4c 8b 05 3b 77 21 00                  	mov r8, qword ptr [rip + 0x21773b]
0x9be5:     8b 15 3d 77 21 00                     	mov edx, dword ptr [rip + 0x21773d]
0x9beb:     4c 8d ad 30 fd ff ff                  	lea r13, [rbp - 0x2d0]
0x9bf2:     b9 00 02 00 00                        	mov ecx, 0x200
0x9bf7:     4c 89 e7                              	mov rdi, r12
0x9bfa:     4c 89 ee                              	mov rsi, r13
0x9bfd:     e8 0e 51 00 00                        	call 0xed10 <function_ed10>
0x9c02:     31 f6                                 	xor esi, esi
0x9c04:     48 89 c7                              	mov rdi, rax
0x9c07:     e8 64 67 00 00                        	call 0x10370 <function_10370>
0x9c0c:     3b 05 4a 77 21 00                     	cmp eax, dword ptr [rip + 0x21774a]
0x9c12:     7e 06                                 	jle 0x9c1a <function_99e0+0x23a>
0x9c14:     89 05 42 77 21 00                     	mov dword ptr [rip + 0x217742], eax
0x9c1a:     8b 35 18 77 21 00                     	mov esi, dword ptr [rip + 0x217718]
0x9c20:     85 f6                                 	test esi, esi
0x9c22:     0f 85 38 0a 00 00                     	jne 0xa660 <function_99e0+0xc80>
0x9c28:     80 3d f2 63 21 00 00                  	cmp byte ptr [rip + 0x2163f2], 0
0x9c2f:     0f 85 03 0a 00 00                     	jne 0xa638 <function_99e0+0xc58>
0x9c35:     80 3d e4 63 21 00 00                  	cmp byte ptr [rip + 0x2163e4], 0
0x9c3c:     0f 85 6e 09 00 00                     	jne 0xa5b0 <function_99e0+0xbd0>
0x9c42:     80 3d e5 76 21 00 00                  	cmp byte ptr [rip + 0x2176e5], 0
0x9c49:     0f 85 41 09 00 00                     	jne 0xa590 <function_99e0+0xbb0>
0x9c4f:     80 3d 0f 77 21 00 00                  	cmp byte ptr [rip + 0x21770f], 0
0x9c56:     74 18                                 	je 0x9c70 <function_99e0+0x290>
0x9c58:     48 8b bb b0 00 00 00                  	mov rdi, qword ptr [rbx + 0xb0]
0x9c5f:     e8 ec 9c ff ff                        	call 0x3950 <strlen>
0x9c64:     3b 05 ea 76 21 00                     	cmp eax, dword ptr [rip + 0x2176ea]
0x9c6a:     0f 8f b0 07 00 00                     	jg 0xa420 <function_99e0+0xa40>
0x9c70:     8b 0d c2 76 21 00                     	mov ecx, dword ptr [rip + 0x2176c2]
0x9c76:     85 c9                                 	test ecx, ecx
0x9c78:     0f 84 42 05 00 00                     	je 0xa1c0 <function_99e0+0x7e0>
0x9c7e:     0f b6 05 77 76 21 00                  	movzx eax, byte ptr [rip + 0x217677]
0x9c85:     84 c0                                 	test al, al
0x9c87:     0f 85 03 05 00 00                     	jne 0xa190 <function_99e0+0x7b0>
0x9c8d:     48 8b bd 78 fc ff ff                  	mov rdi, qword ptr [rbp - 0x388]
0x9c94:     e8 17 aa 00 00                        	call 0x146b0 <function_146b0>
0x9c99:     48 83 05 0f 77 21 00 01               	add qword ptr [rip + 0x21770f], 1
0x9ca1:     48 89 03                              	mov qword ptr [rbx], rax
0x9ca4:     48 8b 75 c8                           	mov rsi, qword ptr [rbp - 0x38]
0x9ca8:     64 48 33 34 25 28 00 00 00            	xor rsi, qword ptr fs:[0x28]
0x9cb1:     4c 89 e0                              	mov rax, r12
0x9cb4:     0f 85 8d 0b 00 00                     	jne 0xa847 <function_99e0+0xe67>
0x9cba:     48 8d 65 d8                           	lea rsp, [rbp - 0x28]
0x9cbe:     5b                                    	pop rbx
0x9cbf:     41 5c                                 	pop r12
0x9cc1:     41 5d                                 	pop r13
0x9cc3:     41 5e                                 	pop r14
0x9cc5:     41 5f                                 	pop r15
0x9cc7:     5d                                    	pop rbp
0x9cc8:     c3                                    	ret 
; data inside code section at 0x9cc9 -- 0x9cd0
0x9cc9:     0f 1f 80 00 00 00 00                               |.......         |
0x9cd0:     45 84 c0                              	test r8b, r8b
0x9cd3:     0f 85 f7 03 00 00                     	jne 0xa0d0 <function_99e0+0x6f0>
0x9cd9:     80 3d c1 75 21 00 00                  	cmp byte ptr [rip + 0x2175c1], 0
0x9ce0:     0f 85 2a 01 00 00                     	jne 0x9e10 <function_99e0+0x430>
0x9ce6:     41 83 fe 03                           	cmp r14d, 3
0x9cea:     0f 84 40 0a 00 00                     	je 0xa730 <function_99e0+0xd50>
0x9cf0:     0f b6 05 05 76 21 00                  	movzx eax, byte ptr [rip + 0x217605]
0x9cf7:     84 c0                                 	test al, al
0x9cf9:     75 35                                 	jne 0x9d30 <function_99e0+0x350>
0x9cfb:     80 3d 9e 75 21 00 00                  	cmp byte ptr [rip + 0x21759e], 0
0x9d02:     74 1c                                 	je 0x9d20 <function_99e0+0x340>
0x9d04:     45 85 f6                              	test r14d, r14d
0x9d07:     0f 94 c1                              	sete cl
0x9d0a:     41 83 fe 06                           	cmp r14d, 6
0x9d0e:     89 ca                                 	mov edx, ecx
0x9d10:     74 32                                 	je 0x9d44 <function_99e0+0x364>
0x9d12:     84 c9                                 	test cl, cl
0x9d14:     75 2e                                 	jne 0x9d44 <function_99e0+0x364>
0x9d16:     80 3d 83 75 21 00 00                  	cmp byte ptr [rip + 0x217583], 0
0x9d1d:     75 65                                 	jne 0x9d84 <function_99e0+0x3a4>
0x9d1f:     90                                    	nop 
0x9d20:     45 31 e4                              	xor r12d, r12d
0x9d23:     e9 65 ff ff ff                        	jmp 0x9c8d <function_99e0+0x2ad>
; data inside code section at 0x9d28 -- 0x9d30
0x9d28:     0f 1f 84 00 00 00 00 00                            |........        |
0x9d30:     45 85 f6                              	test r14d, r14d
0x9d33:     0f 94 c2                              	sete dl
0x9d36:     41 83 fe 06                           	cmp r14d, 6
0x9d3a:     74 08                                 	je 0x9d44 <function_99e0+0x364>
0x9d3c:     84 d2                                 	test dl, dl
0x9d3e:     0f 84 cc 00 00 00                     	je 0x9e10 <function_99e0+0x430>
0x9d44:     83 3d ad 75 21 00 05                  	cmp dword ptr [rip + 0x2175ad], 5
0x9d4b:     0f 84 bf 00 00 00                     	je 0x9e10 <function_99e0+0x430>
0x9d51:     80 3d 38 76 21 00 00                  	cmp byte ptr [rip + 0x217638], 0
0x9d58:     0f 85 b2 00 00 00                     	jne 0x9e10 <function_99e0+0x430>
0x9d5e:     80 3d 98 75 21 00 00                  	cmp byte ptr [rip + 0x217598], 0
0x9d65:     0f 85 a5 00 00 00                     	jne 0x9e10 <function_99e0+0x430>
0x9d6b:     84 c0                                 	test al, al
0x9d6d:     0f 85 9d 00 00 00                     	jne 0x9e10 <function_99e0+0x430>
0x9d73:     80 3d 26 75 21 00 00                  	cmp byte ptr [rip + 0x217526], 0
0x9d7a:     74 a4                                 	je 0x9d20 <function_99e0+0x340>
0x9d7c:     84 d2                                 	test dl, dl
0x9d7e:     0f 85 8c 00 00 00                     	jne 0x9e10 <function_99e0+0x430>
0x9d84:     45 31 e4                              	xor r12d, r12d
0x9d87:     41 83 fe 05                           	cmp r14d, 5
0x9d8b:     0f 85 fc fe ff ff                     	jne 0x9c8d <function_99e0+0x2ad>
0x9d91:     83 3d 7c 75 21 00 03                  	cmp dword ptr [rip + 0x21757c], 3
0x9d98:     74 76                                 	je 0x9e10 <function_99e0+0x430>
0x9d9a:     80 3d 71 75 21 00 00                  	cmp byte ptr [rip + 0x217571], 0
0x9da1:     44 88 85 70 fc ff ff                  	mov byte ptr [rbp - 0x390], r8b
0x9da8:     0f 84 df fe ff ff                     	je 0x9c8d <function_99e0+0x2ad>
0x9dae:     bf 0e 00 00 00                        	mov edi, 0xe
0x9db3:     e8 98 be ff ff                        	call 0x5c50 <function_5c50>
0x9db8:     84 c0                                 	test al, al
0x9dba:     44 0f b6 85 70 fc ff ff               	movzx r8d, byte ptr [rbp - 0x390]
0x9dc2:     75 4c                                 	jne 0x9e10 <function_99e0+0x430>
0x9dc4:     bf 10 00 00 00                        	mov edi, 0x10
0x9dc9:     e8 82 be ff ff                        	call 0x5c50 <function_5c50>
0x9dce:     84 c0                                 	test al, al
0x9dd0:     44 0f b6 85 70 fc ff ff               	movzx r8d, byte ptr [rbp - 0x390]
0x9dd8:     75 36                                 	jne 0x9e10 <function_99e0+0x430>
0x9dda:     bf 11 00 00 00                        	mov edi, 0x11
0x9ddf:     e8 6c be ff ff                        	call 0x5c50 <function_5c50>
0x9de4:     84 c0                                 	test al, al
0x9de6:     44 0f b6 85 70 fc ff ff               	movzx r8d, byte ptr [rbp - 0x390]
0x9dee:     75 20                                 	jne 0x9e10 <function_99e0+0x430>
0x9df0:     bf 15 00 00 00                        	mov edi, 0x15
0x9df5:     e8 56 be ff ff                        	call 0x5c50 <function_5c50>
0x9dfa:     84 c0                                 	test al, al
0x9dfc:     44 0f b6 85 70 fc ff ff               	movzx r8d, byte ptr [rbp - 0x390]
0x9e04:     0f 84 83 fe ff ff                     	je 0x9c8d <function_99e0+0x2ad>
0x9e0a:     66 0f 1f 44 00 00                     	nop word ptr [rax + rax]
0x9e10:     48 8b 85 78 fc ff ff                  	mov rax, qword ptr [rbp - 0x388]
0x9e17:     0f b6 10                              	movzx edx, byte ptr [rax]
0x9e1a:     80 fa 2f                              	cmp dl, 0x2f
0x9e1d:     0f 85 e5 06 00 00                     	jne 0xa508 <function_99e0+0xb28>
0x9e23:     8b 05 cf 74 21 00                     	mov eax, dword ptr [rip + 0x2174cf]
0x9e29:     4c 8d 7b 18                           	lea r15, [rbx + 0x18]
0x9e2d:     83 f8 03                              	cmp eax, 3
0x9e30:     72 15                                 	jb 0x9e47 <function_99e0+0x467>
0x9e32:     83 f8 04                              	cmp eax, 4
0x9e35:     76 10                                 	jbe 0x9e47 <function_99e0+0x467>
0x9e37:     83 f8 05                              	cmp eax, 5
0x9e3a:     4c 8b a5 78 fc ff ff                  	mov r12, qword ptr [rbp - 0x388]
0x9e41:     0f 84 fa fc ff ff                     	je 0x9b41 <function_99e0+0x161>
0x9e47:     4c 8b a5 78 fc ff ff                  	mov r12, qword ptr [rbp - 0x388]
0x9e4e:     66 90                                 	nop 
0x9e50:     4c 89 fa                              	mov rdx, r15
0x9e53:     4c 89 e6                              	mov rsi, r12
0x9e56:     bf 01 00 00 00                        	mov edi, 1
0x9e5b:     e8 00 9b ff ff                        	call 0x3960 <__lxstat>
0x9e60:     31 d2                                 	xor edx, edx
0x9e62:     85 c0                                 	test eax, eax
0x9e64:     0f 84 f4 fc ff ff                     	je 0x9b5e <function_99e0+0x17e>
0x9e6a:     48 8d 35 0c de 00 00                  	lea rsi, [rip + 0xde0c]
0x9e71:     31 ff                                 	xor edi, edi
0x9e73:     ba 05 00 00 00                        	mov edx, 5
0x9e78:     e8 b3 9a ff ff                        	call 0x3930 <dcgettext>
0x9e7d:     4c 89 e2                              	mov rdx, r12
0x9e80:     41 0f b6 fd                           	movzx edi, r13b
0x9e84:     48 89 c6                              	mov rsi, rax
0x9e87:     e8 14 cb ff ff                        	call 0x69a0 <function_69a0>
0x9e8c:     45 31 e4                              	xor r12d, r12d
0x9e8f:     45 84 ed                              	test r13b, r13b
0x9e92:     0f 85 0c fe ff ff                     	jne 0x9ca4 <function_99e0+0x2c4>
0x9e98:     e9 f0 fd ff ff                        	jmp 0x9c8d <function_99e0+0x2ad>
; data inside code section at 0x9e9d -- 0x9ea0
0x9e9d:     0f 1f 00                                           |...             |
0x9ea0:     48 8b 05 49 64 21 00                  	mov rax, qword ptr [rip + 0x216449]
0x9ea7:     48 39 43 18                           	cmp qword ptr [rbx + 0x18], rax
0x9eab:     0f 84 75 09 00 00                     	je 0xa826 <function_99e0+0xe46>
0x9eb1:     84 d2                                 	test dl, dl
0x9eb3:     48 8d b3 b0 00 00 00                  	lea rsi, [rbx + 0xb0]
0x9eba:     4c 89 e7                              	mov rdi, r12
0x9ebd:     0f 84 cd 03 00 00                     	je 0xa290 <function_99e0+0x8b0>
0x9ec3:     e8 e8 b3 00 00                        	call 0x152b0 <function_152b0>
0x9ec8:     85 c0                                 	test eax, eax
0x9eca:     0f 88 cd 03 00 00                     	js 0xa29d <function_99e0+0x8bd>
0x9ed0:     48 8b bb b0 00 00 00                  	mov rdi, qword ptr [rbx + 0xb0]
0x9ed7:     48 8d 35 cd dd 00 00                  	lea rsi, [rip + 0xddcd]
0x9ede:     b9 0a 00 00 00                        	mov ecx, 0xa
0x9ee3:     8b 15 4f 74 21 00                     	mov edx, dword ptr [rip + 0x21744f]
0x9ee9:     f3 a6                                 	repe cmpsb byte ptr [rsi], byte ptr [rdi]
0x9eeb:     41 0f 95 c6                           	setne r14b
0x9eef:     85 d2                                 	test edx, edx
0x9ef1:     0f 84 a1 05 00 00                     	je 0xa498 <function_99e0+0xab8>
0x9ef7:     44 89 f1                              	mov ecx, r14d
0x9efa:     31 c0                                 	xor eax, eax
0x9efc:     31 d2                                 	xor edx, edx
0x9efe:     45 84 f6                              	test r14b, r14b
0x9f01:     74 0e                                 	je 0x9f11 <function_99e0+0x531>
0x9f03:     44 89 f1                              	mov ecx, r14d
0x9f06:     89 ca                                 	mov edx, ecx
0x9f08:     c1 e2 1f                              	shl edx, 0x1f
0x9f0b:     c1 fa 1f                              	sar edx, 0x1f
0x9f0e:     83 c2 02                              	add edx, 2
0x9f11:     08 0d 4d 74 21 00                     	or byte ptr [rip + 0x21744d], cl
0x9f17:     85 c0                                 	test eax, eax
0x9f19:     89 93 bc 00 00 00                     	mov dword ptr [rbx + 0xbc], edx
0x9f1f:     0f 85 35 06 00 00                     	jne 0xa55a <function_99e0+0xb7a>
0x9f25:     8b 43 30                              	mov eax, dword ptr [rbx + 0x30]
0x9f28:     25 00 f0 00 00                        	and eax, 0xf000
0x9f2d:     3d 00 a0 00 00                        	cmp eax, 0xa000
0x9f32:     0f 85 7a fc ff ff                     	jne 0x9bb2 <function_99e0+0x1d2>
0x9f38:     44 8b 15 f9 73 21 00                  	mov r10d, dword ptr [rip + 0x2173f9]
0x9f3f:     45 85 d2                              	test r10d, r10d
0x9f42:     0f 85 30 05 00 00                     	jne 0xa478 <function_99e0+0xa98>
0x9f48:     48 8b 73 48                           	mov rsi, qword ptr [rbx + 0x48]
0x9f4c:     4c 89 e7                              	mov rdi, r12
0x9f4f:     e8 6c 22 00 00                        	call 0xc1c0 <function_c1c0>
0x9f54:     48 85 c0                              	test rax, rax
0x9f57:     49 89 c6                              	mov r14, rax
0x9f5a:     48 89 43 08                           	mov qword ptr [rbx + 8], rax
0x9f5e:     0f 84 8c 07 00 00                     	je 0xa6f0 <function_99e0+0xd10>
0x9f64:     41 80 3e 2f                           	cmp byte ptr [r14], 0x2f
0x9f68:     0f 84 1a 07 00 00                     	je 0xa688 <function_99e0+0xca8>
0x9f6e:     4c 89 e7                              	mov rdi, r12
0x9f71:     e8 da 2d 00 00                        	call 0xcd50 <function_cd50>
0x9f76:     48 85 c0                              	test rax, rax
0x9f79:     0f 84 09 07 00 00                     	je 0xa688 <function_99e0+0xca8>
0x9f7f:     4c 89 f7                              	mov rdi, r14
0x9f82:     48 89 85 70 fc ff ff                  	mov qword ptr [rbp - 0x390], rax
0x9f89:     e8 c2 99 ff ff                        	call 0x3950 <strlen>
0x9f8e:     48 8b 95 70 fc ff ff                  	mov rdx, qword ptr [rbp - 0x390]
0x9f95:     48 8d 7c 02 02                        	lea rdi, [rdx + rax + 2]
0x9f9a:     e8 e1 a4 00 00                        	call 0x14480 <function_14480>
0x9f9f:     48 8b 95 70 fc ff ff                  	mov rdx, qword ptr [rbp - 0x390]
0x9fa6:     49 89 c7                              	mov r15, rax
0x9fa9:     41 80 7c 14 ff 2f                     	cmp byte ptr [r12 + rdx - 1], 0x2f
0x9faf:     74 04                                 	je 0x9fb5 <function_99e0+0x5d5>
0x9fb1:     48 83 c2 01                           	add rdx, 1
0x9fb5:     4c 89 e6                              	mov rsi, r12
0x9fb8:     4c 89 ff                              	mov rdi, r15
0x9fbb:     e8 e0 9c ff ff                        	call 0x3ca0 <stpncpy>
0x9fc0:     4c 89 f6                              	mov rsi, r14
0x9fc3:     48 89 c7                              	mov rdi, rax
0x9fc6:     e8 65 98 ff ff                        	call 0x3830 <strcpy>
0x9fcb:     4d 85 ff                              	test r15, r15
0x9fce:     0f 84 4c 07 00 00                     	je 0xa720 <function_99e0+0xd40>
0x9fd4:     44 8b 8b c4 00 00 00                  	mov r9d, dword ptr [rbx + 0xc4]
0x9fdb:     45 85 c9                              	test r9d, r9d
0x9fde:     0f 84 ec 07 00 00                     	je 0xa7d0 <function_99e0+0xdf0>
0x9fe4:     83 3d 29 73 21 00 01                  	cmp dword ptr [rip + 0x217329], 1
0x9feb:     77 09                                 	ja 0x9ff6 <function_99e0+0x616>
0x9fed:     80 3d 09 73 21 00 00                  	cmp byte ptr [rip + 0x217309], 0
0x9ff4:     74 50                                 	je 0xa046 <function_99e0+0x666>
0x9ff6:     48 8d 95 80 fc ff ff                  	lea rdx, [rbp - 0x380]
0x9ffd:     4c 89 fe                              	mov rsi, r15
0xa000:     bf 01 00 00 00                        	mov edi, 1
0xa005:     e8 d6 9b ff ff                        	call 0x3be0 <__xstat>
0xa00a:     85 c0                                 	test eax, eax
0xa00c:     75 38                                 	jne 0xa046 <function_99e0+0x666>
0xa00e:     45 84 ed                              	test r13b, r13b
0xa011:     c6 83 b9 00 00 00 01                  	mov byte ptr [rbx + 0xb9], 1
0xa018:     8b 85 98 fc ff ff                     	mov eax, dword ptr [rbp - 0x368]
0xa01e:     74 20                                 	je 0xa040 <function_99e0+0x660>
0xa020:     44 8b 05 11 73 21 00                  	mov r8d, dword ptr [rip + 0x217311]
0xa027:     45 85 c0                              	test r8d, r8d
0xa02a:     74 14                                 	je 0xa040 <function_99e0+0x660>
0xa02c:     89 c2                                 	mov edx, eax
0xa02e:     81 e2 00 f0 00 00                     	and edx, 0xf000
0xa034:     81 fa 00 40 00 00                     	cmp edx, 0x4000
0xa03a:     74 0a                                 	je 0xa046 <function_99e0+0x666>
0xa03c:     0f 1f 40 00                           	nop dword ptr [rax]
0xa040:     89 83 ac 00 00 00                     	mov dword ptr [rbx + 0xac], eax
0xa046:     4c 89 ff                              	mov rdi, r15
0xa049:     e8 22 9e ff ff                        	call 0x3e70 <free>
0xa04e:     8b 43 30                              	mov eax, dword ptr [rbx + 0x30]
0xa051:     25 00 f0 00 00                        	and eax, 0xf000
0xa056:     3d 00 a0 00 00                        	cmp eax, 0xa000
0xa05b:     0f 84 24 04 00 00                     	je 0xa485 <function_99e0+0xaa5>
0xa061:     e9 4c fb ff ff                        	jmp 0x9bb2 <function_99e0+0x1d2>
; data inside code section at 0xa066 -- 0xa070
0xa066:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0xa070:     80 3d 9b 72 21 00 00                  	cmp byte ptr [rip + 0x21729b], 0
0xa077:     0f 84 05 fb ff ff                     	je 0x9b82 <function_99e0+0x1a2>
0xa07d:     bf 15 00 00 00                        	mov edi, 0x15
0xa082:     88 95 70 fc ff ff                     	mov byte ptr [rbp - 0x390], dl
0xa088:     e8 c3 bb ff ff                        	call 0x5c50 <function_5c50>
0xa08d:     84 c0                                 	test al, al
0xa08f:     0f b6 95 70 fc ff ff                  	movzx edx, byte ptr [rbp - 0x390]
0xa096:     0f 84 e6 fa ff ff                     	je 0x9b82 <function_99e0+0x1a2>
0xa09c:     e8 4f 97 ff ff                        	call 0x37f0 <__errno_location>
0xa0a1:     4c 8b 73 18                           	mov r14, qword ptr [rbx + 0x18]
0xa0a5:     4c 3b 35 4c 62 21 00                  	cmp r14, qword ptr [rip + 0x21624c]
0xa0ac:     0f b6 95 70 fc ff ff                  	movzx edx, byte ptr [rbp - 0x390]
0xa0b3:     c7 00 5f 00 00 00                     	mov dword ptr [rax], 0x5f
0xa0b9:     74 07                                 	je 0xa0c2 <function_99e0+0x6e2>
0xa0bb:     4c 89 35 36 62 21 00                  	mov qword ptr [rip + 0x216236], r14
0xa0c2:     c6 83 c0 00 00 00 00                  	mov byte ptr [rbx + 0xc0], 0
0xa0c9:     e9 b4 fa ff ff                        	jmp 0x9b82 <function_99e0+0x1a2>
; data inside code section at 0xa0ce -- 0xa0d0
0xa0ce:     66 90                                              |f.              |
0xa0d0:     48 8b 85 78 fc ff ff                  	mov rax, qword ptr [rbp - 0x388]
0xa0d7:     0f b6 10                              	movzx edx, byte ptr [rax]
0xa0da:     80 fa 2f                              	cmp dl, 0x2f
0xa0dd:     0f 85 25 02 00 00                     	jne 0xa308 <function_99e0+0x928>
0xa0e3:     4c 8b a5 78 fc ff ff                  	mov r12, qword ptr [rbp - 0x388]
0xa0ea:     be 02 00 00 00                        	mov esi, 2
0xa0ef:     4c 89 e7                              	mov rdi, r12
0xa0f2:     e8 49 25 00 00                        	call 0xc640 <function_c640>
0xa0f7:     48 85 c0                              	test rax, rax
0xa0fa:     48 89 43 10                           	mov qword ptr [rbx + 0x10], rax
0xa0fe:     0f 85 18 fa ff ff                     	jne 0x9b1c <function_99e0+0x13c>
0xa104:     48 8d 35 5a db 00 00                  	lea rsi, [rip + 0xdb5a]
0xa10b:     31 ff                                 	xor edi, edi
0xa10d:     ba 05 00 00 00                        	mov edx, 5
0xa112:     e8 19 98 ff ff                        	call 0x3930 <dcgettext>
0xa117:     41 0f b6 fd                           	movzx edi, r13b
0xa11b:     4c 89 e2                              	mov rdx, r12
0xa11e:     48 89 c6                              	mov rsi, rax
0xa121:     e8 7a c8 ff ff                        	call 0x69a0 <function_69a0>
0xa126:     e9 f1 f9 ff ff                        	jmp 0x9b1c <function_99e0+0x13c>
; data inside code section at 0xa12b -- 0xa130
0xa12b:     0f 1f 44 00 00                                     |..D..           |
0xa130:     45 84 ed                              	test r13b, r13b
0xa133:     0f 84 17 fd ff ff                     	je 0x9e50 <function_99e0+0x470>
0xa139:     4c 89 fa                              	mov rdx, r15
0xa13c:     4c 89 e6                              	mov rsi, r12
0xa13f:     bf 01 00 00 00                        	mov edi, 1
0xa144:     89 8d 70 fc ff ff                     	mov dword ptr [rbp - 0x390], ecx
0xa14a:     e8 91 9a ff ff                        	call 0x3be0 <__xstat>
0xa14f:     8b 8d 70 fc ff ff                     	mov ecx, dword ptr [rbp - 0x390]
0xa155:     83 f9 03                              	cmp ecx, 3
0xa158:     74 1d                                 	je 0xa177 <function_99e0+0x797>
0xa15a:     85 c0                                 	test eax, eax
0xa15c:     0f 88 4e 05 00 00                     	js 0xa6b0 <function_99e0+0xcd0>
0xa162:     8b 53 30                              	mov edx, dword ptr [rbx + 0x30]
0xa165:     81 e2 00 f0 00 00                     	and edx, 0xf000
0xa16b:     81 fa 00 40 00 00                     	cmp edx, 0x4000
0xa171:     0f 85 d9 fc ff ff                     	jne 0x9e50 <function_99e0+0x470>
0xa177:     85 c0                                 	test eax, eax
0xa179:     44 89 ea                              	mov edx, r13d
0xa17c:     0f 84 dc f9 ff ff                     	je 0x9b5e <function_99e0+0x17e>
0xa182:     e9 37 05 00 00                        	jmp 0xa6be <function_99e0+0xcde>
; data inside code section at 0xa187 -- 0xa190
0xa187:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xa190:     48 8b 7b 20                           	mov rdi, qword ptr [rbx + 0x20]
0xa194:     48 8d b5 30 fd ff ff                  	lea rsi, [rbp - 0x2d0]
0xa19b:     e8 50 5b 00 00                        	call 0xfcf0 <function_fcf0>
0xa1a0:     48 89 c7                              	mov rdi, rax
0xa1a3:     e8 a8 97 ff ff                        	call 0x3950 <strlen>
0xa1a8:     3b 05 b2 71 21 00                     	cmp eax, dword ptr [rip + 0x2171b2]
0xa1ae:     0f 8e d9 fa ff ff                     	jle 0x9c8d <function_99e0+0x2ad>
0xa1b4:     89 05 a6 71 21 00                     	mov dword ptr [rip + 0x2171a6], eax
0xa1ba:     e9 ce fa ff ff                        	jmp 0x9c8d <function_99e0+0x2ad>
; data inside code section at 0xa1bf -- 0xa1c0
0xa1bf:     90                                                 |.               |
0xa1c0:     48 8b 7b 28                           	mov rdi, qword ptr [rbx + 0x28]
0xa1c4:     48 8d b5 10 fd ff ff                  	lea rsi, [rbp - 0x2f0]
0xa1cb:     e8 20 5b 00 00                        	call 0xfcf0 <function_fcf0>
0xa1d0:     48 89 c7                              	mov rdi, rax
0xa1d3:     e8 78 97 ff ff                        	call 0x3950 <strlen>
0xa1d8:     3b 05 7a 71 21 00                     	cmp eax, dword ptr [rip + 0x21717a]
0xa1de:     7e 06                                 	jle 0xa1e6 <function_99e0+0x806>
0xa1e0:     89 05 72 71 21 00                     	mov dword ptr [rip + 0x217172], eax
0xa1e6:     8b 43 30                              	mov eax, dword ptr [rbx + 0x30]
0xa1e9:     25 00 b0 00 00                        	and eax, 0xb000
0xa1ee:     3d 00 20 00 00                        	cmp eax, 0x2000
0xa1f3:     0f 85 37 02 00 00                     	jne 0xa430 <function_99e0+0xa50>
0xa1f9:     48 8b 43 40                           	mov rax, qword ptr [rbx + 0x40]
0xa1fd:     4c 8d ad 30 fd ff ff                  	lea r13, [rbp - 0x2d0]
0xa204:     4c 89 ee                              	mov rsi, r13
0xa207:     48 89 c7                              	mov rdi, rax
0xa20a:     48 c1 e8 20                           	shr rax, 0x20
0xa20e:     48 c1 ef 08                           	shr rdi, 8
0xa212:     89 fa                                 	mov edx, edi
0xa214:     48 89 c7                              	mov rdi, rax
0xa217:     81 e2 ff 0f 00 00                     	and edx, 0xfff
0xa21d:     81 e7 00 f0 ff ff                     	and edi, 0xfffff000
0xa223:     09 d7                                 	or edi, edx
0xa225:     e8 c6 5a 00 00                        	call 0xfcf0 <function_fcf0>
0xa22a:     48 89 c7                              	mov rdi, rax
0xa22d:     e8 1e 97 ff ff                        	call 0x3950 <strlen>
0xa232:     3b 05 0c 71 21 00                     	cmp eax, dword ptr [rip + 0x21710c]
0xa238:     7e 06                                 	jle 0xa240 <function_99e0+0x860>
0xa23a:     89 05 04 71 21 00                     	mov dword ptr [rip + 0x217104], eax
0xa240:     48 8b 43 40                           	mov rax, qword ptr [rbx + 0x40]
0xa244:     4c 89 ee                              	mov rsi, r13
0xa247:     0f b6 d0                              	movzx edx, al
0xa24a:     48 c1 e8 0c                           	shr rax, 0xc
0xa24e:     48 89 c7                              	mov rdi, rax
0xa251:     40 30 ff                              	xor dil, dil
0xa254:     09 d7                                 	or edi, edx
0xa256:     e8 95 5a 00 00                        	call 0xfcf0 <function_fcf0>
0xa25b:     48 89 c7                              	mov rdi, rax
0xa25e:     e8 ed 96 ff ff                        	call 0x3950 <strlen>
0xa263:     8b 15 d7 70 21 00                     	mov edx, dword ptr [rip + 0x2170d7]
0xa269:     39 d0                                 	cmp eax, edx
0xa26b:     7e 08                                 	jle 0xa275 <function_99e0+0x895>
0xa26d:     89 05 cd 70 21 00                     	mov dword ptr [rip + 0x2170cd], eax
0xa273:     89 c2                                 	mov edx, eax
0xa275:     8b 05 c9 70 21 00                     	mov eax, dword ptr [rip + 0x2170c9]
0xa27b:     8d 44 02 02                           	lea eax, [rdx + rax + 2]
0xa27f:     3b 05 b7 70 21 00                     	cmp eax, dword ptr [rip + 0x2170b7]
0xa285:     0f 8e f3 f9 ff ff                     	jle 0x9c7e <function_99e0+0x29e>
0xa28b:     e9 d8 01 00 00                        	jmp 0xa468 <function_99e0+0xa88>
0xa290:     e8 3b b0 00 00                        	call 0x152d0 <function_152d0>
0xa295:     85 c0                                 	test eax, eax
0xa297:     0f 89 33 fc ff ff                     	jns 0x9ed0 <function_99e0+0x4f0>
0xa29d:     e8 4e 95 ff ff                        	call 0x37f0 <__errno_location>
0xa2a2:     48 89 c1                              	mov rcx, rax
0xa2a5:     8b 00                                 	mov eax, dword ptr [rax]
0xa2a7:     83 f8 5f                              	cmp eax, 0x5f
0xa2aa:     40 0f 94 c6                           	sete sil
0xa2ae:     83 f8 3d                              	cmp eax, 0x3d
0xa2b1:     0f 94 c2                              	sete dl
0xa2b4:     83 e8 16                              	sub eax, 0x16
0xa2b7:     09 f2                                 	or edx, esi
0xa2b9:     83 e0 ef                              	and eax, 0xffffffef
0xa2bc:     74 05                                 	je 0xa2c3 <function_99e0+0x8e3>
0xa2be:     40 84 f6                              	test sil, sil
0xa2c1:     74 0b                                 	je 0xa2ce <function_99e0+0x8ee>
0xa2c3:     48 8b 43 18                           	mov rax, qword ptr [rbx + 0x18]
0xa2c7:     48 89 05 22 60 21 00                  	mov qword ptr [rip + 0x216022], rax
0xa2ce:     48 8d 05 4d 5d 21 00                  	lea rax, [rip + 0x215d4d]
0xa2d5:     84 d2                                 	test dl, dl
0xa2d7:     48 89 83 b0 00 00 00                  	mov qword ptr [rbx + 0xb0], rax
0xa2de:     0f 84 6c 02 00 00                     	je 0xa550 <function_99e0+0xb70>
0xa2e4:     8b 05 4e 70 21 00                     	mov eax, dword ptr [rip + 0x21704e]
0xa2ea:     85 c0                                 	test eax, eax
0xa2ec:     0f 84 fe 04 00 00                     	je 0xa7f0 <function_99e0+0xe10>
0xa2f2:     c7 83 bc 00 00 00 00 00 00 00         	mov dword ptr [rbx + 0xbc], 0
0xa2fc:     e9 9e f8 ff ff                        	jmp 0x9b9f <function_99e0+0x1bf>
; data inside code section at 0xa301 -- 0xa308
0xa301:     0f 1f 80 00 00 00 00                               |.......         |
0xa308:     41 0f b6 0f                           	movzx ecx, byte ptr [r15]
0xa30c:     4c 8b a5 78 fc ff ff                  	mov r12, qword ptr [rbp - 0x388]
0xa313:     84 c9                                 	test cl, cl
0xa315:     0f 84 cf fd ff ff                     	je 0xa0ea <function_99e0+0x70a>
0xa31b:     48 8b bd 78 fc ff ff                  	mov rdi, qword ptr [rbp - 0x388]
0xa322:     44 88 85 6e fc ff ff                  	mov byte ptr [rbp - 0x392], r8b
0xa329:     88 95 6f fc ff ff                     	mov byte ptr [rbp - 0x391], dl
0xa32f:     88 8d 70 fc ff ff                     	mov byte ptr [rbp - 0x390], cl
0xa335:     e8 16 96 ff ff                        	call 0x3950 <strlen>
0xa33a:     4c 89 ff                              	mov rdi, r15
0xa33d:     49 89 c4                              	mov r12, rax
0xa340:     e8 0b 96 ff ff                        	call 0x3950 <strlen>
0xa345:     49 8d 44 04 20                        	lea rax, [r12 + rax + 0x20]
0xa34a:     0f b6 8d 70 fc ff ff                  	movzx ecx, byte ptr [rbp - 0x390]
0xa351:     45 0f b6 57 01                        	movzx r10d, byte ptr [r15 + 1]
0xa356:     0f b6 95 6f fc ff ff                  	movzx edx, byte ptr [rbp - 0x391]
0xa35d:     44 0f b6 85 6e fc ff ff               	movzx r8d, byte ptr [rbp - 0x392]
0xa365:     48 83 e0 f0                           	and rax, 0xfffffffffffffff0
0xa369:     48 29 c4                              	sub rsp, rax
0xa36c:     48 8d 7c 24 0f                        	lea rdi, [rsp + 0xf]
0xa371:     48 83 e7 f0                           	and rdi, 0xfffffffffffffff0
0xa375:     80 f9 2e                              	cmp cl, 0x2e
0xa378:     49 89 fc                              	mov r12, rdi
0xa37b:     0f 84 6f 01 00 00                     	je 0xa4f0 <function_99e0+0xb10>
0xa381:     4c 89 fe                              	mov rsi, r15
0xa384:     eb 15                                 	jmp 0xa39b <function_99e0+0x9bb>
; data inside code section at 0xa386 -- 0xa390
0xa386:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0xa390:     44 89 d1                              	mov ecx, r10d
0xa393:     44 0f b6 56 01                        	movzx r10d, byte ptr [rsi + 1]
0xa398:     48 89 c7                              	mov rdi, rax
0xa39b:     48 8d 47 01                           	lea rax, [rdi + 1]
0xa39f:     48 83 c6 01                           	add rsi, 1
0xa3a3:     45 84 d2                              	test r10b, r10b
0xa3a6:     88 48 ff                              	mov byte ptr [rax - 1], cl
0xa3a9:     75 e5                                 	jne 0xa390 <function_99e0+0x9b0>
0xa3ab:     49 39 f7                              	cmp r15, rsi
0xa3ae:     73 0d                                 	jae 0xa3bd <function_99e0+0x9dd>
0xa3b0:     80 7e ff 2f                           	cmp byte ptr [rsi - 1], 0x2f
0xa3b4:     74 07                                 	je 0xa3bd <function_99e0+0x9dd>
0xa3b6:     c6 00 2f                              	mov byte ptr [rax], 0x2f
0xa3b9:     48 8d 47 02                           	lea rax, [rdi + 2]
0xa3bd:     84 d2                                 	test dl, dl
0xa3bf:     74 21                                 	je 0xa3e2 <function_99e0+0xa02>
0xa3c1:     48 8b 8d 78 fc ff ff                  	mov rcx, qword ptr [rbp - 0x388]
0xa3c8:     0f 1f 84 00 00 00 00 00               	nop dword ptr [rax + rax]
0xa3d0:     48 83 c1 01                           	add rcx, 1
0xa3d4:     48 83 c0 01                           	add rax, 1
0xa3d8:     88 50 ff                              	mov byte ptr [rax - 1], dl
0xa3db:     0f b6 11                              	movzx edx, byte ptr [rcx]
0xa3de:     84 d2                                 	test dl, dl
0xa3e0:     75 ee                                 	jne 0xa3d0 <function_99e0+0x9f0>
0xa3e2:     c6 00 00                              	mov byte ptr [rax], 0
0xa3e5:     e9 29 f7 ff ff                        	jmp 0x9b13 <function_99e0+0x133>
; data inside code section at 0xa3ea -- 0xa3f0
0xa3ea:     66 0f 1f 44 00 00                                  |f..D..          |
0xa3f0:     48 8b bd 78 fc ff ff                  	mov rdi, qword ptr [rbp - 0x388]
0xa3f7:     e8 94 bd ff ff                        	call 0x6190 <function_6190>
0xa3fc:     0f b6 d0                              	movzx edx, al
0xa3ff:     84 c0                                 	test al, al
0xa401:     89 93 c4 00 00 00                     	mov dword ptr [rbx + 0xc4], edx
0xa407:     0f 84 d4 f6 ff ff                     	je 0x9ae1 <function_99e0+0x101>
0xa40d:     c6 05 95 6f 21 00 01                  	mov byte ptr [rip + 0x216f95], 1
0xa414:     e9 c8 f6 ff ff                        	jmp 0x9ae1 <function_99e0+0x101>
; data inside code section at 0xa419 -- 0xa420
0xa419:     0f 1f 80 00 00 00 00                               |.......         |
0xa420:     89 05 2e 6f 21 00                     	mov dword ptr [rip + 0x216f2e], eax
0xa426:     e9 45 f8 ff ff                        	jmp 0x9c70 <function_99e0+0x290>
; data inside code section at 0xa42b -- 0xa430
0xa42b:     0f 1f 44 00 00                                     |..D..           |
0xa430:     48 8b 7b 48                           	mov rdi, qword ptr [rbx + 0x48]
0xa434:     4c 8b 05 dd 5b 21 00                  	mov r8, qword ptr [rip + 0x215bdd]
0xa43b:     48 8d b5 30 fd ff ff                  	lea rsi, [rbp - 0x2d0]
0xa442:     8b 15 d4 6e 21 00                     	mov edx, dword ptr [rip + 0x216ed4]
0xa448:     b9 01 00 00 00                        	mov ecx, 1
0xa44d:     e8 be 48 00 00                        	call 0xed10 <function_ed10>
0xa452:     31 f6                                 	xor esi, esi
0xa454:     48 89 c7                              	mov rdi, rax
0xa457:     e8 14 5f 00 00                        	call 0x10370 <function_10370>
0xa45c:     3b 05 da 6e 21 00                     	cmp eax, dword ptr [rip + 0x216eda]
0xa462:     0f 8e 16 f8 ff ff                     	jle 0x9c7e <function_99e0+0x29e>
0xa468:     89 05 ce 6e 21 00                     	mov dword ptr [rip + 0x216ece], eax
0xa46e:     e9 0b f8 ff ff                        	jmp 0x9c7e <function_99e0+0x29e>
; data inside code section at 0xa473 -- 0xa478
0xa473:     0f 1f 44 00 00                                     |..D..           |
0xa478:     80 3d 7e 6e 21 00 00                  	cmp byte ptr [rip + 0x216e7e], 0
0xa47f:     0f 85 c3 fa ff ff                     	jne 0x9f48 <function_99e0+0x568>
0xa485:     c7 83 a8 00 00 00 06 00 00 00         	mov dword ptr [rbx + 0xa8], 6
0xa48f:     e9 33 f7 ff ff                        	jmp 0x9bc7 <function_99e0+0x1e7>
; data inside code section at 0xa494 -- 0xa498
0xa494:     0f 1f 40 00                                        |..@.            |
0xa498:     e8 53 93 ff ff                        	call 0x37f0 <__errno_location>
0xa49d:     48 89 c1                              	mov rcx, rax
0xa4a0:     48 8b 05 41 5e 21 00                  	mov rax, qword ptr [rip + 0x215e41]
0xa4a7:     48 39 43 18                           	cmp qword ptr [rbx + 0x18], rax
0xa4ab:     0f 84 ef 01 00 00                     	je 0xa6a0 <function_99e0+0xcc0>
0xa4b1:     c7 01 00 00 00 00                     	mov dword ptr [rcx], 0
0xa4b7:     4c 89 fe                              	mov rsi, r15
0xa4ba:     4c 89 e7                              	mov rdi, r12
0xa4bd:     48 89 8d 70 fc ff ff                  	mov qword ptr [rbp - 0x390], rcx
0xa4c4:     e8 f7 29 00 00                        	call 0xcec0 <function_cec0>
0xa4c9:     85 c0                                 	test eax, eax
0xa4cb:     48 8b 8d 70 fc ff ff                  	mov rcx, qword ptr [rbp - 0x390]
0xa4d2:     0f 8e 28 03 00 00                     	jle 0xa800 <function_99e0+0xe20>
0xa4d8:     31 c0                                 	xor eax, eax
0xa4da:     b9 01 00 00 00                        	mov ecx, 1
0xa4df:     ba 02 00 00 00                        	mov edx, 2
0xa4e4:     e9 28 fa ff ff                        	jmp 0x9f11 <function_99e0+0x531>
; data inside code section at 0xa4e9 -- 0xa4f0
0xa4e9:     0f 1f 80 00 00 00 00                               |.......         |
0xa4f0:     45 84 d2                              	test r10b, r10b
0xa4f3:     48 89 f8                              	mov rax, rdi
0xa4f6:     0f 84 c1 fe ff ff                     	je 0xa3bd <function_99e0+0x9dd>
0xa4fc:     e9 80 fe ff ff                        	jmp 0xa381 <function_99e0+0x9a1>
; data inside code section at 0xa501 -- 0xa508
0xa501:     0f 1f 80 00 00 00 00                               |.......         |
0xa508:     41 0f b6 0f                           	movzx ecx, byte ptr [r15]
0xa50c:     84 c9                                 	test cl, cl
0xa50e:     0f 85 07 fe ff ff                     	jne 0xa31b <function_99e0+0x93b>
0xa514:     4c 8b a5 78 fc ff ff                  	mov r12, qword ptr [rbp - 0x388]
0xa51b:     e9 fc f5 ff ff                        	jmp 0x9b1c <function_99e0+0x13c>
0xa520:     45 84 ed                              	test r13b, r13b
0xa523:     74 1b                                 	je 0xa540 <function_99e0+0xb60>
0xa525:     80 3d c9 6d 21 00 00                  	cmp byte ptr [rip + 0x216dc9], 0
0xa52c:     75 12                                 	jne 0xa540 <function_99e0+0xb60>
0xa52e:     c7 83 a8 00 00 00 09 00 00 00         	mov dword ptr [rbx + 0xa8], 9
0xa538:     e9 8a f6 ff ff                        	jmp 0x9bc7 <function_99e0+0x1e7>
; data inside code section at 0xa53d -- 0xa540
0xa53d:     0f 1f 00                                           |...             |
0xa540:     c7 83 a8 00 00 00 03 00 00 00         	mov dword ptr [rbx + 0xa8], 3
0xa54a:     e9 78 f6 ff ff                        	jmp 0x9bc7 <function_99e0+0x1e7>
; data inside code section at 0xa54f -- 0xa550
0xa54f:     90                                                 |.               |
0xa550:     c7 83 bc 00 00 00 00 00 00 00         	mov dword ptr [rbx + 0xbc], 0
0xa55a:     4c 89 e2                              	mov rdx, r12
0xa55d:     31 ff                                 	xor edi, edi
0xa55f:     be 03 00 00 00                        	mov esi, 3
0xa564:     e8 a7 95 00 00                        	call 0x13b10 <function_13b10>
0xa569:     49 89 c6                              	mov r14, rax
0xa56c:     e8 7f 92 ff ff                        	call 0x37f0 <__errno_location>
0xa571:     8b 30                                 	mov esi, dword ptr [rax]
0xa573:     48 8d 15 82 fd 00 00                  	lea rdx, [rip + 0xfd82]
0xa57a:     4c 89 f1                              	mov rcx, r14
0xa57d:     31 ff                                 	xor edi, edi
0xa57f:     31 c0                                 	xor eax, eax
0xa581:     e8 9a 97 ff ff                        	call 0x3d20 <error>
0xa586:     e9 9a f9 ff ff                        	jmp 0x9f25 <function_99e0+0x545>
; data inside code section at 0xa58b -- 0xa590
0xa58b:     0f 1f 44 00 00                                     |..D..           |
0xa590:     8b 7b 34                              	mov edi, dword ptr [rbx + 0x34]
0xa593:     e8 78 f3 ff ff                        	call 0x9910 <function_9910>
0xa598:     3b 05 aa 6d 21 00                     	cmp eax, dword ptr [rip + 0x216daa]
0xa59e:     0f 8e ab f6 ff ff                     	jle 0x9c4f <function_99e0+0x26f>
0xa5a4:     89 05 9e 6d 21 00                     	mov dword ptr [rip + 0x216d9e], eax
0xa5aa:     e9 a0 f6 ff ff                        	jmp 0x9c4f <function_99e0+0x26f>
; data inside code section at 0xa5af -- 0xa5b0
0xa5af:     90                                                 |.               |
0xa5b0:     80 3d 76 6d 21 00 00                  	cmp byte ptr [rip + 0x216d76], 0
0xa5b7:     44 8b 73 38                           	mov r14d, dword ptr [rbx + 0x38]
0xa5bb:     0f 84 df 01 00 00                     	je 0xa7a0 <function_99e0+0xdc0>
0xa5c1:     48 8d 0d 5c d6 00 00                  	lea rcx, [rip + 0xd65c]
0xa5c8:     45 89 f0                              	mov r8d, r14d
0xa5cb:     ba 15 00 00 00                        	mov edx, 0x15
0xa5d0:     be 01 00 00 00                        	mov esi, 1
0xa5d5:     4c 89 ef                              	mov rdi, r13
0xa5d8:     31 c0                                 	xor eax, eax
0xa5da:     e8 81 98 ff ff                        	call 0x3e60 <__sprintf_chk>
0xa5df:     4c 89 e8                              	mov rax, r13
0xa5e2:     8b 08                                 	mov ecx, dword ptr [rax]
0xa5e4:     48 83 c0 04                           	add rax, 4
0xa5e8:     8d 91 ff fe fe fe                     	lea edx, [rcx - 0x1010101]
0xa5ee:     f7 d1                                 	not ecx
0xa5f0:     21 ca                                 	and edx, ecx
0xa5f2:     81 e2 80 80 80 80                     	and edx, 0x80808080
0xa5f8:     74 e8                                 	je 0xa5e2 <function_99e0+0xc02>
0xa5fa:     89 d1                                 	mov ecx, edx
0xa5fc:     c1 e9 10                              	shr ecx, 0x10
0xa5ff:     f7 c2 80 80 00 00                     	test edx, 0x8080
0xa605:     0f 44 d1                              	cmove edx, ecx
0xa608:     48 8d 48 02                           	lea rcx, [rax + 2]
0xa60c:     89 d6                                 	mov esi, edx
0xa60e:     48 0f 44 c1                           	cmove rax, rcx
0xa612:     40 00 d6                              	add sil, dl
0xa615:     48 83 d8 03                           	sbb rax, 3
0xa619:     44 29 e8                              	sub eax, r13d
0xa61c:     39 05 2a 6d 21 00                     	cmp dword ptr [rip + 0x216d2a], eax
0xa622:     0f 8d 1a f6 ff ff                     	jge 0x9c42 <function_99e0+0x262>
0xa628:     89 05 1e 6d 21 00                     	mov dword ptr [rip + 0x216d1e], eax
0xa62e:     e9 0f f6 ff ff                        	jmp 0x9c42 <function_99e0+0x262>
; data inside code section at 0xa633 -- 0xa638
0xa633:     0f 1f 44 00 00                                     |..D..           |
0xa638:     8b 7b 34                              	mov edi, dword ptr [rbx + 0x34]
0xa63b:     e8 d0 f2 ff ff                        	call 0x9910 <function_9910>
0xa640:     3b 05 0a 6d 21 00                     	cmp eax, dword ptr [rip + 0x216d0a]
0xa646:     0f 8e e9 f5 ff ff                     	jle 0x9c35 <function_99e0+0x255>
0xa64c:     89 05 fe 6c 21 00                     	mov dword ptr [rip + 0x216cfe], eax
0xa652:     e9 de f5 ff ff                        	jmp 0x9c35 <function_99e0+0x255>
; data inside code section at 0xa657 -- 0xa660
0xa657:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xa660:     80 3d fe 6c 21 00 00                  	cmp byte ptr [rip + 0x216cfe], 0
0xa667:     0f 85 eb f5 ff ff                     	jne 0x9c58 <function_99e0+0x278>
0xa66d:     e9 0c f6 ff ff                        	jmp 0x9c7e <function_99e0+0x29e>
; data inside code section at 0xa672 -- 0xa678
0xa672:     66 0f 1f 44 00 00                                  |f..D..          |
0xa678:     4c 8b a5 78 fc ff ff                  	mov r12, qword ptr [rbp - 0x388]
0xa67f:     e9 8f f4 ff ff                        	jmp 0x9b13 <function_99e0+0x133>
; data inside code section at 0xa684 -- 0xa688
0xa684:     0f 1f 40 00                                        |..@.            |
0xa688:     4c 89 f7                              	mov rdi, r14
0xa68b:     e8 20 a0 00 00                        	call 0x146b0 <function_146b0>
0xa690:     49 89 c7                              	mov r15, rax
0xa693:     e9 33 f9 ff ff                        	jmp 0x9fcb <function_99e0+0x5eb>
; data inside code section at 0xa698 -- 0xa6a0
0xa698:     0f 1f 84 00 00 00 00 00                            |........        |
0xa6a0:     c7 01 5f 00 00 00                     	mov dword ptr [rcx], 0x5f
0xa6a6:     31 c0                                 	xor eax, eax
0xa6a8:     44 89 f1                              	mov ecx, r14d
0xa6ab:     e9 4c f8 ff ff                        	jmp 0x9efc <function_99e0+0x51c>
0xa6b0:     e8 3b 91 ff ff                        	call 0x37f0 <__errno_location>
0xa6b5:     83 38 02                              	cmp dword ptr [rax], 2
0xa6b8:     0f 84 92 f7 ff ff                     	je 0x9e50 <function_99e0+0x470>
0xa6be:     48 8d 35 b8 d5 00 00                  	lea rsi, [rip + 0xd5b8]
0xa6c5:     ba 05 00 00 00                        	mov edx, 5
0xa6ca:     31 ff                                 	xor edi, edi
0xa6cc:     e8 5f 92 ff ff                        	call 0x3930 <dcgettext>
0xa6d1:     4c 89 e2                              	mov rdx, r12
0xa6d4:     48 89 c6                              	mov rsi, rax
0xa6d7:     bf 01 00 00 00                        	mov edi, 1
0xa6dc:     e8 bf c2 ff ff                        	call 0x69a0 <function_69a0>
0xa6e1:     45 31 e4                              	xor r12d, r12d
0xa6e4:     e9 bb f5 ff ff                        	jmp 0x9ca4 <function_99e0+0x2c4>
; data inside code section at 0xa6e9 -- 0xa6f0
0xa6e9:     0f 1f 80 00 00 00 00                               |.......         |
0xa6f0:     48 8d 35 97 d5 00 00                  	lea rsi, [rip + 0xd597]
0xa6f7:     31 ff                                 	xor edi, edi
0xa6f9:     ba 05 00 00 00                        	mov edx, 5
0xa6fe:     e8 2d 92 ff ff                        	call 0x3930 <dcgettext>
0xa703:     41 0f b6 fd                           	movzx edi, r13b
0xa707:     4c 89 e2                              	mov rdx, r12
0xa70a:     48 89 c6                              	mov rsi, rax
0xa70d:     e8 8e c2 ff ff                        	call 0x69a0 <function_69a0>
0xa712:     4c 8b 73 08                           	mov r14, qword ptr [rbx + 8]
0xa716:     4d 85 f6                              	test r14, r14
0xa719:     0f 85 45 f8 ff ff                     	jne 0x9f64 <function_99e0+0x584>
0xa71f:     90                                    	nop 
0xa720:     45 31 ff                              	xor r15d, r15d
0xa723:     e9 1e f9 ff ff                        	jmp 0xa046 <function_99e0+0x666>
; data inside code section at 0xa728 -- 0xa730
0xa728:     0f 1f 84 00 00 00 00 00                            |........        |
0xa730:     80 3d db 6b 21 00 00                  	cmp byte ptr [rip + 0x216bdb], 0
0xa737:     0f 84 b3 f5 ff ff                     	je 0x9cf0 <function_99e0+0x310>
0xa73d:     bf 13 00 00 00                        	mov edi, 0x13
0xa742:     44 88 85 70 fc ff ff                  	mov byte ptr [rbp - 0x390], r8b
0xa749:     e8 02 b5 ff ff                        	call 0x5c50 <function_5c50>
0xa74e:     84 c0                                 	test al, al
0xa750:     44 0f b6 85 70 fc ff ff               	movzx r8d, byte ptr [rbp - 0x390]
0xa758:     0f 85 b2 f6 ff ff                     	jne 0x9e10 <function_99e0+0x430>
0xa75e:     bf 12 00 00 00                        	mov edi, 0x12
0xa763:     e8 e8 b4 ff ff                        	call 0x5c50 <function_5c50>
0xa768:     84 c0                                 	test al, al
0xa76a:     44 0f b6 85 70 fc ff ff               	movzx r8d, byte ptr [rbp - 0x390]
0xa772:     0f 85 98 f6 ff ff                     	jne 0x9e10 <function_99e0+0x430>
0xa778:     bf 14 00 00 00                        	mov edi, 0x14
0xa77d:     e8 ce b4 ff ff                        	call 0x5c50 <function_5c50>
0xa782:     84 c0                                 	test al, al
0xa784:     44 0f b6 85 70 fc ff ff               	movzx r8d, byte ptr [rbp - 0x390]
0xa78c:     0f 85 7e f6 ff ff                     	jne 0x9e10 <function_99e0+0x430>
0xa792:     e9 59 f5 ff ff                        	jmp 0x9cf0 <function_99e0+0x310>
; data inside code section at 0xa797 -- 0xa7a0
0xa797:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xa7a0:     44 89 f7                              	mov edi, r14d
0xa7a3:     e8 08 53 00 00                        	call 0xfab0 <function_fab0>
0xa7a8:     48 85 c0                              	test rax, rax
0xa7ab:     48 89 c7                              	mov rdi, rax
0xa7ae:     0f 84 0d fe ff ff                     	je 0xa5c1 <function_99e0+0xbe1>
0xa7b4:     31 f6                                 	xor esi, esi
0xa7b6:     e8 b5 5b 00 00                        	call 0x10370 <function_10370>
0xa7bb:     ba 00 00 00 00                        	mov edx, 0
0xa7c0:     85 c0                                 	test eax, eax
0xa7c2:     0f 48 c2                              	cmovs eax, edx
0xa7c5:     e9 52 fe ff ff                        	jmp 0xa61c <function_99e0+0xc3c>
; data inside code section at 0xa7ca -- 0xa7d0
0xa7ca:     66 0f 1f 44 00 00                                  |f..D..          |
0xa7d0:     48 8b 7b 08                           	mov rdi, qword ptr [rbx + 8]
0xa7d4:     e8 b7 b9 ff ff                        	call 0x6190 <function_6190>
0xa7d9:     84 c0                                 	test al, al
0xa7db:     0f 84 03 f8 ff ff                     	je 0x9fe4 <function_99e0+0x604>
0xa7e1:     c7 83 c4 00 00 00 ff ff ff ff         	mov dword ptr [rbx + 0xc4], 0xffffffff
0xa7eb:     e9 f4 f7 ff ff                        	jmp 0x9fe4 <function_99e0+0x604>
0xa7f0:     45 31 f6                              	xor r14d, r14d
0xa7f3:     e9 a8 fc ff ff                        	jmp 0xa4a0 <function_99e0+0xac0>
; data inside code section at 0xa7f8 -- 0xa800
0xa7f8:     0f 1f 84 00 00 00 00 00                            |........        |
0xa800:     8b 11                                 	mov edx, dword ptr [rcx]
0xa802:     c1 e8 1f                              	shr eax, 0x1f
0xa805:     8d 4a ea                              	lea ecx, [rdx - 0x16]
0xa808:     83 e1 ef                              	and ecx, 0xffffffef
0xa80b:     74 09                                 	je 0xa816 <function_99e0+0xe36>
0xa80d:     83 fa 5f                              	cmp edx, 0x5f
0xa810:     0f 85 92 fe ff ff                     	jne 0xa6a8 <function_99e0+0xcc8>
0xa816:     48 8b 53 18                           	mov rdx, qword ptr [rbx + 0x18]
0xa81a:     48 89 15 c7 5a 21 00                  	mov qword ptr [rip + 0x215ac7], rdx
0xa821:     e9 82 fe ff ff                        	jmp 0xa6a8 <function_99e0+0xcc8>
0xa826:     e8 c5 8f ff ff                        	call 0x37f0 <__errno_location>
0xa82b:     c7 00 5f 00 00 00                     	mov dword ptr [rax], 0x5f
0xa831:     48 89 c1                              	mov rcx, rax
0xa834:     48 8d 05 e7 57 21 00                  	lea rax, [rip + 0x2157e7]
0xa83b:     48 89 83 b0 00 00 00                  	mov qword ptr [rbx + 0xb0], rax
0xa842:     e9 9d fa ff ff                        	jmp 0xa2e4 <function_99e0+0x904>
0xa847:     e8 24 91 ff ff                        	call 0x3970 <__stack_chk_fail>
0xa84c:     be 01 00 00 00                        	mov esi, 1
0xa851:     e9 e7 f1 ff ff                        	jmp 0x9a3d <function_99e0+0x5d>
0xa856:     e8 75 9e 00 00                        	call 0x146d0 <function_146d0>
; data inside code section at 0xa85b -- 0xa860
0xa85b:     0f 1f 44 00 00                                     |..D..           |
; function: function_a860 at 0xa860 -- 0xaf14
0xa860:     41 57                                 	push r15
0xa862:     41 56                                 	push r14
0xa864:     49 89 fe                              	mov r14, rdi
0xa867:     41 55                                 	push r13
0xa869:     41 54                                 	push r12
0xa86b:     55                                    	push rbp
0xa86c:     53                                    	push rbx
0xa86d:     48 89 f3                              	mov rbx, rsi
0xa870:     48 81 ec 48 03 00 00                  	sub rsp, 0x348
0xa877:     89 54 24 0c                           	mov dword ptr [rsp + 0xc], edx
0xa87b:     88 54 24 0b                           	mov byte ptr [rsp + 0xb], dl
0xa87f:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0xa888:     48 89 84 24 38 03 00 00               	mov qword ptr [rsp + 0x338], rax
0xa890:     31 c0                                 	xor eax, eax
0xa892:     e8 59 8f ff ff                        	call 0x37f0 <__errno_location>
0xa897:     4c 89 f7                              	mov rdi, r14
0xa89a:     c7 00 00 00 00 00                     	mov dword ptr [rax], 0
0xa8a0:     49 89 c4                              	mov r12, rax
0xa8a3:     e8 58 90 ff ff                        	call 0x3900 <opendir>
0xa8a8:     48 85 c0                              	test rax, rax
0xa8ab:     0f 84 2f 05 00 00                     	je 0xade0 <function_a860+0x580>
0xa8b1:     48 83 3d 0f 6b 21 00 00               	cmp qword ptr [rip + 0x216b0f], 0
0xa8b9:     49 89 c5                              	mov r13, rax
0xa8bc:     0f 84 75 01 00 00                     	je 0xaa37 <function_a860+0x1d7>
0xa8c2:     48 89 c7                              	mov rdi, rax
0xa8c5:     e8 76 92 ff ff                        	call 0x3b40 <dirfd>
0xa8ca:     85 c0                                 	test eax, eax
0xa8cc:     48 8d 54 24 10                        	lea rdx, [rsp + 0x10]
0xa8d1:     78 6d                                 	js 0xa940 <function_a860+0xe0>
0xa8d3:     89 c6                                 	mov esi, eax
0xa8d5:     bf 01 00 00 00                        	mov edi, 1
0xa8da:     e8 61 93 ff ff                        	call 0x3c40 <__fxstat>
0xa8df:     c1 e8 1f                              	shr eax, 0x1f
0xa8e2:     84 c0                                 	test al, al
0xa8e4:     74 6e                                 	je 0xa954 <function_a860+0xf4>
0xa8e6:     48 8d 35 e3 d8 00 00                  	lea rsi, [rip + 0xd8e3]
0xa8ed:     ba 05 00 00 00                        	mov edx, 5
0xa8f2:     31 ff                                 	xor edi, edi
0xa8f4:     e8 37 90 ff ff                        	call 0x3930 <dcgettext>
0xa8f9:     0f b6 7c 24 0c                        	movzx edi, byte ptr [rsp + 0xc]
0xa8fe:     4c 89 f2                              	mov rdx, r14
0xa901:     48 89 c6                              	mov rsi, rax
0xa904:     e8 97 c0 ff ff                        	call 0x69a0 <function_69a0>
0xa909:     4c 89 ef                              	mov rdi, r13
0xa90c:     e8 af 91 ff ff                        	call 0x3ac0 <closedir>
0xa911:     48 8b 84 24 38 03 00 00               	mov rax, qword ptr [rsp + 0x338]
0xa919:     64 48 33 04 25 28 00 00 00            	xor rax, qword ptr fs:[0x28]
0xa922:     0f 85 e2 05 00 00                     	jne 0xaf0a <function_a860+0x6aa>
0xa928:     48 81 c4 48 03 00 00                  	add rsp, 0x348
0xa92f:     5b                                    	pop rbx
0xa930:     5d                                    	pop rbp
0xa931:     41 5c                                 	pop r12
0xa933:     41 5d                                 	pop r13
0xa935:     41 5e                                 	pop r14
0xa937:     41 5f                                 	pop r15
0xa939:     c3                                    	ret 
; data inside code section at 0xa93a -- 0xa940
0xa93a:     66 0f 1f 44 00 00                                  |f..D..          |
0xa940:     4c 89 f6                              	mov rsi, r14
0xa943:     bf 01 00 00 00                        	mov edi, 1
0xa948:     e8 93 92 ff ff                        	call 0x3be0 <__xstat>
0xa94d:     c1 e8 1f                              	shr eax, 0x1f
0xa950:     84 c0                                 	test al, al
0xa952:     75 92                                 	jne 0xa8e6 <function_a860+0x86>
0xa954:     48 8b 54 24 18                        	mov rdx, qword ptr [rsp + 0x18]
0xa959:     bf 10 00 00 00                        	mov edi, 0x10
0xa95e:     4c 8b 7c 24 10                        	mov r15, qword ptr [rsp + 0x10]
0xa963:     48 89 14 24                           	mov qword ptr [rsp], rdx
0xa967:     e8 14 9b 00 00                        	call 0x14480 <function_14480>
0xa96c:     48 8b 14 24                           	mov rdx, qword ptr [rsp]
0xa970:     48 8b 3d 51 6a 21 00                  	mov rdi, qword ptr [rip + 0x216a51]
0xa977:     48 89 c6                              	mov rsi, rax
0xa97a:     4c 89 78 08                           	mov qword ptr [rax + 8], r15
0xa97e:     48 89 c5                              	mov rbp, rax
0xa981:     48 89 10                              	mov qword ptr [rax], rdx
0xa984:     e8 77 3f 00 00                        	call 0xe900 <function_e900>
0xa989:     48 85 c0                              	test rax, rax
0xa98c:     0f 84 7d 05 00 00                     	je 0xaf0f <function_a860+0x6af>
0xa992:     48 39 c5                              	cmp rbp, rax
0xa995:     74 55                                 	je 0xa9ec <function_a860+0x18c>
0xa997:     48 89 ef                              	mov rdi, rbp
0xa99a:     e8 d1 94 ff ff                        	call 0x3e70 <free>
0xa99f:     4c 89 f2                              	mov rdx, r14
0xa9a2:     be 03 00 00 00                        	mov esi, 3
0xa9a7:     31 ff                                 	xor edi, edi
0xa9a9:     e8 62 91 00 00                        	call 0x13b10 <function_13b10>
0xa9ae:     48 8d 35 43 d8 00 00                  	lea rsi, [rip + 0xd843]
0xa9b5:     48 89 c3                              	mov rbx, rax
0xa9b8:     ba 05 00 00 00                        	mov edx, 5
0xa9bd:     31 ff                                 	xor edi, edi
0xa9bf:     e8 6c 8f ff ff                        	call 0x3930 <dcgettext>
0xa9c4:     48 89 d9                              	mov rcx, rbx
0xa9c7:     48 89 c2                              	mov rdx, rax
0xa9ca:     31 f6                                 	xor esi, esi
0xa9cc:     31 ff                                 	xor edi, edi
0xa9ce:     31 c0                                 	xor eax, eax
0xa9d0:     e8 4b 93 ff ff                        	call 0x3d20 <error>
0xa9d5:     4c 89 ef                              	mov rdi, r13
0xa9d8:     e8 e3 90 ff ff                        	call 0x3ac0 <closedir>
0xa9dd:     c7 05 29 68 21 00 02 00 00 00         	mov dword ptr [rip + 0x216829], 2
0xa9e7:     e9 25 ff ff ff                        	jmp 0xa911 <function_a860+0xb1>
0xa9ec:     48 8b 05 05 67 21 00                  	mov rax, qword ptr [rip + 0x216705]
0xa9f3:     48 8b 15 06 67 21 00                  	mov rdx, qword ptr [rip + 0x216706]
0xa9fa:     48 8b 6c 24 18                        	mov rbp, qword ptr [rsp + 0x18]
0xa9ff:     4c 8b 7c 24 10                        	mov r15, qword ptr [rsp + 0x10]
0xaa04:     48 29 c2                              	sub rdx, rax
0xaa07:     48 83 fa 0f                           	cmp rdx, 0xf
0xaa0b:     77 18                                 	ja 0xaa25 <function_a860+0x1c5>
0xaa0d:     48 8d 3d cc 66 21 00                  	lea rdi, [rip + 0x2166cc]
0xaa14:     be 10 00 00 00                        	mov esi, 0x10
0xaa19:     e8 d2 aa 00 00                        	call 0x154f0 <_obstack_newchunk>
0xaa1e:     48 8b 05 d3 66 21 00                  	mov rax, qword ptr [rip + 0x2166d3]
0xaa25:     48 8d 50 10                           	lea rdx, [rax + 0x10]
0xaa29:     48 89 15 c8 66 21 00                  	mov qword ptr [rip + 0x2166c8], rdx
0xaa30:     4c 89 78 08                           	mov qword ptr [rax + 8], r15
0xaa34:     48 89 28                              	mov qword ptr [rax], rbp
0xaa37:     e8 a4 b6 ff ff                        	call 0x60e0 <function_60e0>
0xaa3c:     80 3d b3 68 21 00 00                  	cmp byte ptr [rip + 0x2168b3], 0
0xaa43:     0f 85 a7 00 00 00                     	jne 0xaaf0 <function_a860+0x290>
0xaa49:     80 3d 68 68 21 00 00                  	cmp byte ptr [rip + 0x216868], 0
0xaa50:     0f 85 9a 00 00 00                     	jne 0xaaf0 <function_a860+0x290>
0xaa56:     48 c7 04 24 00 00 00 00               	mov qword ptr [rsp], 0
0xaa5e:     66 90                                 	nop 
0xaa60:     41 c7 04 24 00 00 00 00               	mov dword ptr [r12], 0
0xaa68:     4c 89 ef                              	mov rdi, r13
0xaa6b:     e8 80 91 ff ff                        	call 0x3bf0 <readdir>
0xaa70:     48 85 c0                              	test rax, rax
0xaa73:     48 89 c5                              	mov rbp, rax
0xaa76:     0f 84 34 01 00 00                     	je 0xabb0 <function_a860+0x350>
0xaa7c:     48 8d 58 13                           	lea rbx, [rax + 0x13]
0xaa80:     8b 05 6a 68 21 00                     	mov eax, dword ptr [rip + 0x21686a]
0xaa86:     83 f8 02                              	cmp eax, 2
0xaa89:     0f 84 a1 02 00 00                     	je 0xad30 <function_a860+0x4d0>
0xaa8f:     80 7d 13 2e                           	cmp byte ptr [rbp + 0x13], 0x2e
0xaa93:     0f 84 77 02 00 00                     	je 0xad10 <function_a860+0x4b0>
0xaa99:     85 c0                                 	test eax, eax
0xaa9b:     0f 85 8f 02 00 00                     	jne 0xad30 <function_a860+0x4d0>
0xaaa1:     4c 8b 3d 38 68 21 00                  	mov r15, qword ptr [rip + 0x216838]
0xaaa8:     4d 85 ff                              	test r15, r15
0xaaab:     75 18                                 	jne 0xaac5 <function_a860+0x265>
0xaaad:     e9 7e 02 00 00                        	jmp 0xad30 <function_a860+0x4d0>
; data inside code section at 0xaab2 -- 0xaab8
0xaab2:     66 0f 1f 44 00 00                                  |f..D..          |
0xaab8:     4d 8b 7f 08                           	mov r15, qword ptr [r15 + 8]
0xaabc:     4d 85 ff                              	test r15, r15
0xaabf:     0f 84 6b 02 00 00                     	je 0xad30 <function_a860+0x4d0>
0xaac5:     49 8b 3f                              	mov rdi, qword ptr [r15]
0xaac8:     ba 04 00 00 00                        	mov edx, 4
0xaacd:     48 89 de                              	mov rsi, rbx
0xaad0:     e8 7b 8f ff ff                        	call 0x3a50 <fnmatch>
0xaad5:     85 c0                                 	test eax, eax
0xaad7:     75 df                                 	jne 0xaab8 <function_a860+0x258>
0xaad9:     0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0xaae0:     e8 7b c8 ff ff                        	call 0x7360 <function_7360>
0xaae5:     e9 76 ff ff ff                        	jmp 0xaa60 <function_a860+0x200>
; data inside code section at 0xaaea -- 0xaaf0
0xaaea:     66 0f 1f 44 00 00                                  |f..D..          |
0xaaf0:     80 3d 19 55 21 00 00                  	cmp byte ptr [rip + 0x215519], 0
0xaaf7:     75 28                                 	jne 0xab21 <function_a860+0x2c1>
0xaaf9:     48 8b 3d 88 57 21 00                  	mov rdi, qword ptr [rip + 0x215788]
0xab00:     48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0xab04:     48 3b 47 30                           	cmp rax, qword ptr [rdi + 0x30]
0xab08:     0f 83 ed 03 00 00                     	jae 0xaefb <function_a860+0x69b>
0xab0e:     48 8d 50 01                           	lea rdx, [rax + 1]
0xab12:     48 89 57 28                           	mov qword ptr [rdi + 0x28], rdx
0xab16:     c6 00 0a                              	mov byte ptr [rax], 0xa
0xab19:     48 83 05 d7 66 21 00 01               	add qword ptr [rip + 0x2166d7], 1
0xab21:     80 3d f0 67 21 00 00                  	cmp byte ptr [rip + 0x2167f0], 0
0xab28:     c6 05 e1 54 21 00 00                  	mov byte ptr [rip + 0x2154e1], 0
0xab2f:     0f 85 7e 03 00 00                     	jne 0xaeb3 <function_a860+0x653>
0xab35:     31 ed                                 	xor ebp, ebp
0xab37:     80 3d d3 67 21 00 00                  	cmp byte ptr [rip + 0x2167d3], 0
0xab3e:     0f 85 2e 03 00 00                     	jne 0xae72 <function_a860+0x612>
0xab44:     48 85 db                              	test rbx, rbx
0xab47:     48 8b 35 7a 67 21 00                  	mov rsi, qword ptr [rip + 0x21677a]
0xab4e:     4c 8d 0d eb 65 21 00                  	lea r9, [rip + 0x2165eb]
0xab55:     49 0f 44 de                           	cmove rbx, r14
0xab59:     48 83 ec 08                           	sub rsp, 8
0xab5d:     41 b8 01 00 00 00                     	mov r8d, 1
0xab63:     55                                    	push rbp
0xab64:     31 c9                                 	xor ecx, ecx
0xab66:     ba ff ff ff ff                        	mov edx, 0xffffffff
0xab6b:     48 89 df                              	mov rdi, rbx
0xab6e:     e8 9d cd ff ff                        	call 0x7910 <function_7910>
0xab73:     48 89 ef                              	mov rdi, rbp
0xab76:     e8 f5 92 ff ff                        	call 0x3e70 <free>
0xab7b:     48 8b 0d 06 57 21 00                  	mov rcx, qword ptr [rip + 0x215706]
0xab82:     48 8d 3d 36 d3 00 00                  	lea rdi, [rip + 0xd336]
0xab89:     be 01 00 00 00                        	mov esi, 1
0xab8e:     ba 02 00 00 00                        	mov edx, 2
0xab93:     e8 e8 90 ff ff                        	call 0x3c80 <fwrite_unlocked>
0xab98:     59                                    	pop rcx
0xab99:     48 83 05 57 66 21 00 02               	add qword ptr [rip + 0x216657], 2
0xaba1:     5e                                    	pop rsi
0xaba2:     e9 af fe ff ff                        	jmp 0xaa56 <function_a860+0x1f6>
; data inside code section at 0xaba7 -- 0xabb0
0xaba7:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xabb0:     41 8b 14 24                           	mov edx, dword ptr [r12]
0xabb4:     85 d2                                 	test edx, edx
0xabb6:     74 2e                                 	je 0xabe6 <function_a860+0x386>
0xabb8:     48 8d 35 0f d1 00 00                  	lea rsi, [rip + 0xd10f]
0xabbf:     31 ff                                 	xor edi, edi
0xabc1:     ba 05 00 00 00                        	mov edx, 5
0xabc6:     e8 65 8d ff ff                        	call 0x3930 <dcgettext>
0xabcb:     0f b6 7c 24 0b                        	movzx edi, byte ptr [rsp + 0xb]
0xabd0:     4c 89 f2                              	mov rdx, r14
0xabd3:     48 89 c6                              	mov rsi, rax
0xabd6:     e8 c5 bd ff ff                        	call 0x69a0 <function_69a0>
0xabdb:     41 83 3c 24 4b                        	cmp dword ptr [r12], 0x4b
0xabe0:     0f 84 fa fe ff ff                     	je 0xaae0 <function_a860+0x280>
0xabe6:     4c 89 ef                              	mov rdi, r13
0xabe9:     e8 d2 8e ff ff                        	call 0x3ac0 <closedir>
0xabee:     85 c0                                 	test eax, eax
0xabf0:     0f 85 2a 02 00 00                     	jne 0xae20 <function_a860+0x5c0>
0xabf6:     e8 f5 b6 ff ff                        	call 0x62f0 <function_62f0>
0xabfb:     80 3d f4 66 21 00 00                  	cmp byte ptr [rip + 0x2166f4], 0
0xac02:     0f 85 00 02 00 00                     	jne 0xae08 <function_a860+0x5a8>
0xac08:     8b 05 2a 67 21 00                     	mov eax, dword ptr [rip + 0x21672a]
0xac0e:     85 c0                                 	test eax, eax
0xac10:     74 0d                                 	je 0xac1f <function_a860+0x3bf>
0xac12:     80 3d 13 67 21 00 00                  	cmp byte ptr [rip + 0x216713], 0
0xac19:     0f 84 d5 00 00 00                     	je 0xacf4 <function_a860+0x494>
0xac1f:     80 3d f2 66 21 00 00                  	cmp byte ptr [rip + 0x2166f2], 0
0xac26:     0f 85 1c 02 00 00                     	jne 0xae48 <function_a860+0x5e8>
0xac2c:     48 8d 35 c5 d0 00 00                  	lea rsi, [rip + 0xd0c5]
0xac33:     ba 05 00 00 00                        	mov edx, 5
0xac38:     31 ff                                 	xor edi, edi
0xac3a:     e8 f1 8c ff ff                        	call 0x3930 <dcgettext>
0xac3f:     48 8b 35 42 56 21 00                  	mov rsi, qword ptr [rip + 0x215642]
0xac46:     48 89 c3                              	mov rbx, rax
0xac49:     48 89 c7                              	mov rdi, rax
0xac4c:     e8 9f 8e ff ff                        	call 0x3af0 <fputs_unlocked>
0xac51:     48 89 df                              	mov rdi, rbx
0xac54:     e8 f7 8c ff ff                        	call 0x3950 <strlen>
0xac59:     48 8b 3d 28 56 21 00                  	mov rdi, qword ptr [rip + 0x215628]
0xac60:     48 01 05 91 65 21 00                  	add qword ptr [rip + 0x216591], rax
0xac67:     48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0xac6b:     48 3b 47 30                           	cmp rax, qword ptr [rdi + 0x30]
0xac6f:     0f 83 68 02 00 00                     	jae 0xaedd <function_a860+0x67d>
0xac75:     48 8d 50 01                           	lea rdx, [rax + 1]
0xac79:     48 89 57 28                           	mov qword ptr [rdi + 0x28], rdx
0xac7d:     c6 00 20                              	mov byte ptr [rax], 0x20
0xac80:     4c 8b 05 99 66 21 00                  	mov r8, qword ptr [rip + 0x216699]
0xac87:     8b 15 9b 66 21 00                     	mov edx, dword ptr [rip + 0x21669b]
0xac8d:     48 8d b4 24 a0 00 00 00               	lea rsi, [rsp + 0xa0]
0xac95:     48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0xac99:     b9 00 02 00 00                        	mov ecx, 0x200
0xac9e:     48 83 05 52 65 21 00 01               	add qword ptr [rip + 0x216552], 1
0xaca6:     e8 65 40 00 00                        	call 0xed10 <function_ed10>
0xacab:     48 8b 35 d6 55 21 00                  	mov rsi, qword ptr [rip + 0x2155d6]
0xacb2:     48 89 c3                              	mov rbx, rax
0xacb5:     48 89 c7                              	mov rdi, rax
0xacb8:     e8 33 8e ff ff                        	call 0x3af0 <fputs_unlocked>
0xacbd:     48 89 df                              	mov rdi, rbx
0xacc0:     e8 8b 8c ff ff                        	call 0x3950 <strlen>
0xacc5:     48 8b 3d bc 55 21 00                  	mov rdi, qword ptr [rip + 0x2155bc]
0xaccc:     48 01 05 25 65 21 00                  	add qword ptr [rip + 0x216525], rax
0xacd3:     48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0xacd7:     48 3b 47 30                           	cmp rax, qword ptr [rdi + 0x30]
0xacdb:     0f 83 0b 02 00 00                     	jae 0xaeec <function_a860+0x68c>
0xace1:     48 8d 50 01                           	lea rdx, [rax + 1]
0xace5:     48 89 57 28                           	mov qword ptr [rdi + 0x28], rdx
0xace9:     c6 00 0a                              	mov byte ptr [rax], 0xa
0xacec:     48 83 05 04 65 21 00 01               	add qword ptr [rip + 0x216504], 1
0xacf4:     48 83 3d b4 66 21 00 00               	cmp qword ptr [rip + 0x2166b4], 0
0xacfc:     0f 84 0f fc ff ff                     	je 0xa911 <function_a860+0xb1>
0xad02:     e8 19 e7 ff ff                        	call 0x9420 <function_9420>
0xad07:     e9 05 fc ff ff                        	jmp 0xa911 <function_a860+0xb1>
; data inside code section at 0xad0c -- 0xad10
0xad0c:     0f 1f 40 00                                        |..@.            |
0xad10:     85 c0                                 	test eax, eax
0xad12:     0f 84 c8 fd ff ff                     	je 0xaae0 <function_a860+0x280>
0xad18:     31 c0                                 	xor eax, eax
0xad1a:     80 7d 14 2e                           	cmp byte ptr [rbp + 0x14], 0x2e
0xad1e:     0f 94 c0                              	sete al
0xad21:     80 7c 05 14 00                        	cmp byte ptr [rbp + rax + 0x14], 0
0xad26:     0f 84 b4 fd ff ff                     	je 0xaae0 <function_a860+0x280>
0xad2c:     0f 1f 40 00                           	nop dword ptr [rax]
0xad30:     4c 8b 3d b1 65 21 00                  	mov r15, qword ptr [rip + 0x2165b1]
0xad37:     4d 85 ff                              	test r15, r15
0xad3a:     75 0d                                 	jne 0xad49 <function_a860+0x4e9>
0xad3c:     eb 2a                                 	jmp 0xad68 <function_a860+0x508>
; data inside code section at 0xad3e -- 0xad40
0xad3e:     66 90                                              |f.              |
0xad40:     4d 8b 7f 08                           	mov r15, qword ptr [r15 + 8]
0xad44:     4d 85 ff                              	test r15, r15
0xad47:     74 1f                                 	je 0xad68 <function_a860+0x508>
0xad49:     49 8b 3f                              	mov rdi, qword ptr [r15]
0xad4c:     ba 04 00 00 00                        	mov edx, 4
0xad51:     48 89 de                              	mov rsi, rbx
0xad54:     e8 f7 8c ff ff                        	call 0x3a50 <fnmatch>
0xad59:     85 c0                                 	test eax, eax
0xad5b:     75 e3                                 	jne 0xad40 <function_a860+0x4e0>
0xad5d:     e9 7e fd ff ff                        	jmp 0xaae0 <function_a860+0x280>
; data inside code section at 0xad62 -- 0xad68
0xad62:     66 0f 1f 44 00 00                                  |f..D..          |
0xad68:     0f b6 45 12                           	movzx eax, byte ptr [rbp + 0x12]
0xad6c:     31 f6                                 	xor esi, esi
0xad6e:     83 e8 01                              	sub eax, 1
0xad71:     3c 0d                                 	cmp al, 0xd
0xad73:     77 0d                                 	ja 0xad82 <function_a860+0x522>
0xad75:     48 8d 0d 84 bc 00 00                  	lea rcx, [rip + 0xbc84]
0xad7c:     0f b6 c0                              	movzx eax, al
0xad7f:     8b 34 81                              	mov esi, dword ptr [rcx + rax*4]
0xad82:     31 d2                                 	xor edx, edx
0xad84:     4c 89 f1                              	mov rcx, r14
0xad87:     48 89 df                              	mov rdi, rbx
0xad8a:     e8 51 ec ff ff                        	call 0x99e0 <function_99e0>
0xad8f:     48 01 04 24                           	add qword ptr [rsp], rax
0xad93:     83 3d 9e 65 21 00 01                  	cmp dword ptr [rip + 0x21659e], 1
0xad9a:     0f 85 40 fd ff ff                     	jne 0xaae0 <function_a860+0x280>
0xada0:     83 3d 89 65 21 00 ff                  	cmp dword ptr [rip + 0x216589], -1
0xada7:     0f 85 33 fd ff ff                     	jne 0xaae0 <function_a860+0x280>
0xadad:     80 3d 78 65 21 00 00                  	cmp byte ptr [rip + 0x216578], 0
0xadb4:     0f 85 26 fd ff ff                     	jne 0xaae0 <function_a860+0x280>
0xadba:     80 3d 35 65 21 00 00                  	cmp byte ptr [rip + 0x216535], 0
0xadc1:     0f 85 19 fd ff ff                     	jne 0xaae0 <function_a860+0x280>
0xadc7:     e8 24 b5 ff ff                        	call 0x62f0 <function_62f0>
0xadcc:     e8 4f e6 ff ff                        	call 0x9420 <function_9420>
0xadd1:     e8 0a b3 ff ff                        	call 0x60e0 <function_60e0>
0xadd6:     e9 05 fd ff ff                        	jmp 0xaae0 <function_a860+0x280>
; data inside code section at 0xaddb -- 0xade0
0xaddb:     0f 1f 44 00 00                                     |..D..           |
0xade0:     48 8d 35 ce ce 00 00                  	lea rsi, [rip + 0xcece]
0xade7:     31 ff                                 	xor edi, edi
0xade9:     ba 05 00 00 00                        	mov edx, 5
0xadee:     e8 3d 8b ff ff                        	call 0x3930 <dcgettext>
0xadf3:     0f b6 7c 24 0c                        	movzx edi, byte ptr [rsp + 0xc]
0xadf8:     4c 89 f2                              	mov rdx, r14
0xadfb:     48 89 c6                              	mov rsi, rax
0xadfe:     e8 9d bb ff ff                        	call 0x69a0 <function_69a0>
0xae03:     e9 09 fb ff ff                        	jmp 0xa911 <function_a860+0xb1>
0xae08:     31 f6                                 	xor esi, esi
0xae0a:     4c 89 f7                              	mov rdi, r14
0xae0d:     e8 5e b7 ff ff                        	call 0x6570 <function_6570>
0xae12:     e9 f1 fd ff ff                        	jmp 0xac08 <function_a860+0x3a8>
; data inside code section at 0xae17 -- 0xae20
0xae17:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xae20:     48 8d 35 bc ce 00 00                  	lea rsi, [rip + 0xcebc]
0xae27:     31 ff                                 	xor edi, edi
0xae29:     ba 05 00 00 00                        	mov edx, 5
0xae2e:     e8 fd 8a ff ff                        	call 0x3930 <dcgettext>
0xae33:     0f b6 7c 24 0c                        	movzx edi, byte ptr [rsp + 0xc]
0xae38:     4c 89 f2                              	mov rdx, r14
0xae3b:     48 89 c6                              	mov rsi, rax
0xae3e:     e8 5d bb ff ff                        	call 0x69a0 <function_69a0>
0xae43:     e9 ae fd ff ff                        	jmp 0xabf6 <function_a860+0x396>
0xae48:     48 8b 0d 39 54 21 00                  	mov rcx, qword ptr [rip + 0x215439]
0xae4f:     48 8d 3d fd cd 00 00                  	lea rdi, [rip + 0xcdfd]
0xae56:     ba 02 00 00 00                        	mov edx, 2
0xae5b:     be 01 00 00 00                        	mov esi, 1
0xae60:     e8 1b 8e ff ff                        	call 0x3c80 <fwrite_unlocked>
0xae65:     48 83 05 8b 63 21 00 02               	add qword ptr [rip + 0x21638b], 2
0xae6d:     e9 ba fd ff ff                        	jmp 0xac2c <function_a860+0x3cc>
0xae72:     be 02 00 00 00                        	mov esi, 2
0xae77:     4c 89 f7                              	mov rdi, r14
0xae7a:     e8 c1 17 00 00                        	call 0xc640 <function_c640>
0xae7f:     48 85 c0                              	test rax, rax
0xae82:     48 89 c5                              	mov rbp, rax
0xae85:     0f 85 b9 fc ff ff                     	jne 0xab44 <function_a860+0x2e4>
0xae8b:     48 8d 35 d3 cd 00 00                  	lea rsi, [rip + 0xcdd3]
0xae92:     31 ff                                 	xor edi, edi
0xae94:     ba 05 00 00 00                        	mov edx, 5
0xae99:     e8 92 8a ff ff                        	call 0x3930 <dcgettext>
0xae9e:     0f b6 7c 24 0c                        	movzx edi, byte ptr [rsp + 0xc]
0xaea3:     4c 89 f2                              	mov rdx, r14
0xaea6:     48 89 c6                              	mov rsi, rax
0xaea9:     e8 f2 ba ff ff                        	call 0x69a0 <function_69a0>
0xaeae:     e9 91 fc ff ff                        	jmp 0xab44 <function_a860+0x2e4>
0xaeb3:     48 8b 0d ce 53 21 00                  	mov rcx, qword ptr [rip + 0x2153ce]
0xaeba:     48 8d 3d 92 cd 00 00                  	lea rdi, [rip + 0xcd92]
0xaec1:     ba 02 00 00 00                        	mov edx, 2
0xaec6:     be 01 00 00 00                        	mov esi, 1
0xaecb:     e8 b0 8d ff ff                        	call 0x3c80 <fwrite_unlocked>
0xaed0:     48 83 05 20 63 21 00 02               	add qword ptr [rip + 0x216320], 2
0xaed8:     e9 58 fc ff ff                        	jmp 0xab35 <function_a860+0x2d5>
0xaedd:     be 20 00 00 00                        	mov esi, 0x20
0xaee2:     e8 e9 8a ff ff                        	call 0x39d0 <__overflow>
0xaee7:     e9 94 fd ff ff                        	jmp 0xac80 <function_a860+0x420>
0xaeec:     be 0a 00 00 00                        	mov esi, 0xa
0xaef1:     e8 da 8a ff ff                        	call 0x39d0 <__overflow>
0xaef6:     e9 f1 fd ff ff                        	jmp 0xacec <function_a860+0x48c>
0xaefb:     be 0a 00 00 00                        	mov esi, 0xa
0xaf00:     e8 cb 8a ff ff                        	call 0x39d0 <__overflow>
0xaf05:     e9 0f fc ff ff                        	jmp 0xab19 <function_a860+0x2b9>
0xaf0a:     e8 61 8a ff ff                        	call 0x3970 <__stack_chk_fail>
0xaf0f:     e8 bc 97 00 00                        	call 0x146d0 <function_146d0>
; data inside code section at 0xaf14 -- 0xaf20
0xaf14:     66 90 66 2e 0f 1f 84 00  00 00 00 00               |f.f.........    |
; function: function_af20 at 0xaf20 -- 0xaf66
0xaf20:     48 8b 86 80 00 00 00                  	mov rax, qword ptr [rsi + 0x80]
0xaf27:     48 39 87 80 00 00 00                  	cmp qword ptr [rdi + 0x80], rax
0xaf2e:     7f 30                                 	jg 0xaf60 <function_af20+0x40>
0xaf30:     7c 1e                                 	jl 0xaf50 <function_af20+0x30>
0xaf32:     48 8b 86 88 00 00 00                  	mov rax, qword ptr [rsi + 0x88]
0xaf39:     2b 87 88 00 00 00                     	sub eax, dword ptr [rdi + 0x88]
0xaf3f:     75 14                                 	jne 0xaf55 <function_af20+0x35>
0xaf41:     48 8b 36                              	mov rsi, qword ptr [rsi]
0xaf44:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0xaf47:     e9 44 b5 ff ff                        	jmp 0x6490
; data inside code section at 0xaf4c -- 0xaf50
0xaf4c:     0f 1f 40 00                                        |..@.            |
0xaf50:     b8 01 00 00 00                        	mov eax, 1
0xaf55:     f3 c3                                 	ret 
; data inside code section at 0xaf57 -- 0xaf60
0xaf57:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xaf60:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xaf65:     c3                                    	ret 
; data inside code section at 0xaf66 -- 0xaf70
0xaf66:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_af70 at 0xaf70 -- 0xafa6
0xaf70:     48 8b 47 60                           	mov rax, qword ptr [rdi + 0x60]
0xaf74:     48 39 46 60                           	cmp qword ptr [rsi + 0x60], rax
0xaf78:     48 89 f2                              	mov rdx, rsi
0xaf7b:     7f 23                                 	jg 0xafa0 <function_af70+0x30>
0xaf7d:     7c 19                                 	jl 0xaf98 <function_af70+0x28>
0xaf7f:     48 8b 47 68                           	mov rax, qword ptr [rdi + 0x68]
0xaf83:     2b 46 68                              	sub eax, dword ptr [rsi + 0x68]
0xaf86:     75 15                                 	jne 0xaf9d <function_af70+0x2d>
0xaf88:     48 8b 37                              	mov rsi, qword ptr [rdi]
0xaf8b:     48 8b 3a                              	mov rdi, qword ptr [rdx]
0xaf8e:     e9 fd b4 ff ff                        	jmp 0x6490
; data inside code section at 0xaf93 -- 0xaf98
0xaf93:     0f 1f 44 00 00                                     |..D..           |
0xaf98:     b8 01 00 00 00                        	mov eax, 1
0xaf9d:     f3 c3                                 	ret 
; data inside code section at 0xaf9f -- 0xafa0
0xaf9f:     90                                                 |.               |
0xafa0:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xafa5:     c3                                    	ret 
; data inside code section at 0xafa6 -- 0xafb0
0xafa6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_afb0 at 0xafb0 -- 0xafe6
0xafb0:     48 8b 47 70                           	mov rax, qword ptr [rdi + 0x70]
0xafb4:     48 39 46 70                           	cmp qword ptr [rsi + 0x70], rax
0xafb8:     48 89 f2                              	mov rdx, rsi
0xafbb:     7f 23                                 	jg 0xafe0 <function_afb0+0x30>
0xafbd:     7c 19                                 	jl 0xafd8 <function_afb0+0x28>
0xafbf:     48 8b 47 78                           	mov rax, qword ptr [rdi + 0x78]
0xafc3:     2b 46 78                              	sub eax, dword ptr [rsi + 0x78]
0xafc6:     75 15                                 	jne 0xafdd <function_afb0+0x2d>
0xafc8:     48 8b 37                              	mov rsi, qword ptr [rdi]
0xafcb:     48 8b 3a                              	mov rdi, qword ptr [rdx]
0xafce:     e9 bd b4 ff ff                        	jmp 0x6490
; data inside code section at 0xafd3 -- 0xafd8
0xafd3:     0f 1f 44 00 00                                     |..D..           |
0xafd8:     b8 01 00 00 00                        	mov eax, 1
0xafdd:     f3 c3                                 	ret 
; data inside code section at 0xafdf -- 0xafe0
0xafdf:     90                                                 |.               |
0xafe0:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xafe5:     c3                                    	ret 
; data inside code section at 0xafe6 -- 0xaff0
0xafe6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_aff0 at 0xaff0 -- 0xb026
0xaff0:     48 8b 46 60                           	mov rax, qword ptr [rsi + 0x60]
0xaff4:     48 39 47 60                           	cmp qword ptr [rdi + 0x60], rax
0xaff8:     7f 26                                 	jg 0xb020 <function_aff0+0x30>
0xaffa:     7c 14                                 	jl 0xb010 <function_aff0+0x20>
0xaffc:     48 8b 46 68                           	mov rax, qword ptr [rsi + 0x68]
0xb000:     2b 47 68                              	sub eax, dword ptr [rdi + 0x68]
0xb003:     75 10                                 	jne 0xb015 <function_aff0+0x25>
0xb005:     48 8b 36                              	mov rsi, qword ptr [rsi]
0xb008:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0xb00b:     e9 80 b4 ff ff                        	jmp 0x6490
0xb010:     b8 01 00 00 00                        	mov eax, 1
0xb015:     f3 c3                                 	ret 
; data inside code section at 0xb017 -- 0xb020
0xb017:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xb020:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb025:     c3                                    	ret 
; data inside code section at 0xb026 -- 0xb030
0xb026:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_b030 at 0xb030 -- 0xb076
0xb030:     48 8b 87 80 00 00 00                  	mov rax, qword ptr [rdi + 0x80]
0xb037:     48 39 86 80 00 00 00                  	cmp qword ptr [rsi + 0x80], rax
0xb03e:     48 89 f2                              	mov rdx, rsi
0xb041:     7f 2d                                 	jg 0xb070 <function_b030+0x40>
0xb043:     7c 1b                                 	jl 0xb060 <function_b030+0x30>
0xb045:     48 8b 87 88 00 00 00                  	mov rax, qword ptr [rdi + 0x88]
0xb04c:     2b 86 88 00 00 00                     	sub eax, dword ptr [rsi + 0x88]
0xb052:     75 11                                 	jne 0xb065 <function_b030+0x35>
0xb054:     48 8b 37                              	mov rsi, qword ptr [rdi]
0xb057:     48 8b 3a                              	mov rdi, qword ptr [rdx]
0xb05a:     e9 31 b4 ff ff                        	jmp 0x6490
; data inside code section at 0xb05f -- 0xb060
0xb05f:     90                                                 |.               |
0xb060:     b8 01 00 00 00                        	mov eax, 1
0xb065:     f3 c3                                 	ret 
; data inside code section at 0xb067 -- 0xb070
0xb067:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xb070:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb075:     c3                                    	ret 
; data inside code section at 0xb076 -- 0xb080
0xb076:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_b080 at 0xb080 -- 0xb0b6
0xb080:     48 8b 46 70                           	mov rax, qword ptr [rsi + 0x70]
0xb084:     48 39 47 70                           	cmp qword ptr [rdi + 0x70], rax
0xb088:     7f 26                                 	jg 0xb0b0 <function_b080+0x30>
0xb08a:     7c 14                                 	jl 0xb0a0 <function_b080+0x20>
0xb08c:     48 8b 46 78                           	mov rax, qword ptr [rsi + 0x78]
0xb090:     2b 47 78                              	sub eax, dword ptr [rdi + 0x78]
0xb093:     75 10                                 	jne 0xb0a5 <function_b080+0x25>
0xb095:     48 8b 36                              	mov rsi, qword ptr [rsi]
0xb098:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0xb09b:     e9 f0 b3 ff ff                        	jmp 0x6490
0xb0a0:     b8 01 00 00 00                        	mov eax, 1
0xb0a5:     f3 c3                                 	ret 
; data inside code section at 0xb0a7 -- 0xb0b0
0xb0a7:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xb0b0:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb0b5:     c3                                    	ret 
; data inside code section at 0xb0b6 -- 0xb0c0
0xb0b6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_b0c0 at 0xb0c0 -- 0xb0f6
0xb0c0:     48 8b 47 60                           	mov rax, qword ptr [rdi + 0x60]
0xb0c4:     48 39 46 60                           	cmp qword ptr [rsi + 0x60], rax
0xb0c8:     48 89 f2                              	mov rdx, rsi
0xb0cb:     7f 23                                 	jg 0xb0f0 <function_b0c0+0x30>
0xb0cd:     7c 19                                 	jl 0xb0e8 <function_b0c0+0x28>
0xb0cf:     48 8b 47 68                           	mov rax, qword ptr [rdi + 0x68]
0xb0d3:     2b 46 68                              	sub eax, dword ptr [rsi + 0x68]
0xb0d6:     75 15                                 	jne 0xb0ed <function_b0c0+0x2d>
0xb0d8:     48 8b 37                              	mov rsi, qword ptr [rdi]
0xb0db:     48 8b 3a                              	mov rdi, qword ptr [rdx]
0xb0de:     e9 3d 8a ff ff                        	jmp 0x3b20 <strcmp>
; data inside code section at 0xb0e3 -- 0xb0e8
0xb0e3:     0f 1f 44 00 00                                     |..D..           |
0xb0e8:     b8 01 00 00 00                        	mov eax, 1
0xb0ed:     f3 c3                                 	ret 
; data inside code section at 0xb0ef -- 0xb0f0
0xb0ef:     90                                                 |.               |
0xb0f0:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb0f5:     c3                                    	ret 
; data inside code section at 0xb0f6 -- 0xb100
0xb0f6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_b100 at 0xb100 -- 0xb136
0xb100:     48 8b 46 70                           	mov rax, qword ptr [rsi + 0x70]
0xb104:     48 39 47 70                           	cmp qword ptr [rdi + 0x70], rax
0xb108:     7f 26                                 	jg 0xb130 <function_b100+0x30>
0xb10a:     7c 14                                 	jl 0xb120 <function_b100+0x20>
0xb10c:     48 8b 46 78                           	mov rax, qword ptr [rsi + 0x78]
0xb110:     2b 47 78                              	sub eax, dword ptr [rdi + 0x78]
0xb113:     75 10                                 	jne 0xb125 <function_b100+0x25>
0xb115:     48 8b 36                              	mov rsi, qword ptr [rsi]
0xb118:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0xb11b:     e9 00 8a ff ff                        	jmp 0x3b20 <strcmp>
0xb120:     b8 01 00 00 00                        	mov eax, 1
0xb125:     f3 c3                                 	ret 
; data inside code section at 0xb127 -- 0xb130
0xb127:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xb130:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb135:     c3                                    	ret 
; data inside code section at 0xb136 -- 0xb140
0xb136:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_b140 at 0xb140 -- 0xb176
0xb140:     48 8b 46 60                           	mov rax, qword ptr [rsi + 0x60]
0xb144:     48 39 47 60                           	cmp qword ptr [rdi + 0x60], rax
0xb148:     7f 26                                 	jg 0xb170 <function_b140+0x30>
0xb14a:     7c 14                                 	jl 0xb160 <function_b140+0x20>
0xb14c:     48 8b 46 68                           	mov rax, qword ptr [rsi + 0x68]
0xb150:     2b 47 68                              	sub eax, dword ptr [rdi + 0x68]
0xb153:     75 10                                 	jne 0xb165 <function_b140+0x25>
0xb155:     48 8b 36                              	mov rsi, qword ptr [rsi]
0xb158:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0xb15b:     e9 c0 89 ff ff                        	jmp 0x3b20 <strcmp>
0xb160:     b8 01 00 00 00                        	mov eax, 1
0xb165:     f3 c3                                 	ret 
; data inside code section at 0xb167 -- 0xb170
0xb167:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xb170:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb175:     c3                                    	ret 
; data inside code section at 0xb176 -- 0xb180
0xb176:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_b180 at 0xb180 -- 0xb1b6
0xb180:     48 8b 47 70                           	mov rax, qword ptr [rdi + 0x70]
0xb184:     48 39 46 70                           	cmp qword ptr [rsi + 0x70], rax
0xb188:     48 89 f2                              	mov rdx, rsi
0xb18b:     7f 23                                 	jg 0xb1b0 <function_b180+0x30>
0xb18d:     7c 19                                 	jl 0xb1a8 <function_b180+0x28>
0xb18f:     48 8b 47 78                           	mov rax, qword ptr [rdi + 0x78]
0xb193:     2b 46 78                              	sub eax, dword ptr [rsi + 0x78]
0xb196:     75 15                                 	jne 0xb1ad <function_b180+0x2d>
0xb198:     48 8b 37                              	mov rsi, qword ptr [rdi]
0xb19b:     48 8b 3a                              	mov rdi, qword ptr [rdx]
0xb19e:     e9 7d 89 ff ff                        	jmp 0x3b20 <strcmp>
; data inside code section at 0xb1a3 -- 0xb1a8
0xb1a3:     0f 1f 44 00 00                                     |..D..           |
0xb1a8:     b8 01 00 00 00                        	mov eax, 1
0xb1ad:     f3 c3                                 	ret 
; data inside code section at 0xb1af -- 0xb1b0
0xb1af:     90                                                 |.               |
0xb1b0:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb1b5:     c3                                    	ret 
; data inside code section at 0xb1b6 -- 0xb1c0
0xb1b6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_b1c0 at 0xb1c0 -- 0xb206
0xb1c0:     48 8b 87 80 00 00 00                  	mov rax, qword ptr [rdi + 0x80]
0xb1c7:     48 39 86 80 00 00 00                  	cmp qword ptr [rsi + 0x80], rax
0xb1ce:     48 89 f2                              	mov rdx, rsi
0xb1d1:     7f 2d                                 	jg 0xb200 <function_b1c0+0x40>
0xb1d3:     7c 1b                                 	jl 0xb1f0 <function_b1c0+0x30>
0xb1d5:     48 8b 87 88 00 00 00                  	mov rax, qword ptr [rdi + 0x88]
0xb1dc:     2b 86 88 00 00 00                     	sub eax, dword ptr [rsi + 0x88]
0xb1e2:     75 11                                 	jne 0xb1f5 <function_b1c0+0x35>
0xb1e4:     48 8b 37                              	mov rsi, qword ptr [rdi]
0xb1e7:     48 8b 3a                              	mov rdi, qword ptr [rdx]
0xb1ea:     e9 31 89 ff ff                        	jmp 0x3b20 <strcmp>
; data inside code section at 0xb1ef -- 0xb1f0
0xb1ef:     90                                                 |.               |
0xb1f0:     b8 01 00 00 00                        	mov eax, 1
0xb1f5:     f3 c3                                 	ret 
; data inside code section at 0xb1f7 -- 0xb200
0xb1f7:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xb200:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb205:     c3                                    	ret 
; data inside code section at 0xb206 -- 0xb210
0xb206:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_b210 at 0xb210 -- 0xb256
0xb210:     48 8b 86 80 00 00 00                  	mov rax, qword ptr [rsi + 0x80]
0xb217:     48 39 87 80 00 00 00                  	cmp qword ptr [rdi + 0x80], rax
0xb21e:     7f 30                                 	jg 0xb250 <function_b210+0x40>
0xb220:     7c 1e                                 	jl 0xb240 <function_b210+0x30>
0xb222:     48 8b 86 88 00 00 00                  	mov rax, qword ptr [rsi + 0x88]
0xb229:     2b 87 88 00 00 00                     	sub eax, dword ptr [rdi + 0x88]
0xb22f:     75 14                                 	jne 0xb245 <function_b210+0x35>
0xb231:     48 8b 36                              	mov rsi, qword ptr [rsi]
0xb234:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0xb237:     e9 e4 88 ff ff                        	jmp 0x3b20 <strcmp>
; data inside code section at 0xb23c -- 0xb240
0xb23c:     0f 1f 40 00                                        |..@.            |
0xb240:     b8 01 00 00 00                        	mov eax, 1
0xb245:     f3 c3                                 	ret 
; data inside code section at 0xb247 -- 0xb250
0xb247:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xb250:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb255:     c3                                    	ret 
; data inside code section at 0xb256 -- 0xb260
0xb256:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_b260 at 0xb260 -- 0xb2e6
0xb260:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0xb266:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0xb26c:     49 89 f0                              	mov r8, rsi
0xb26f:     83 f8 03                              	cmp eax, 3
0xb272:     0f 94 c1                              	sete cl
0xb275:     83 f8 09                              	cmp eax, 9
0xb278:     0f 94 c0                              	sete al
0xb27b:     09 c1                                 	or ecx, eax
0xb27d:     83 fa 03                              	cmp edx, 3
0xb280:     0f 94 c0                              	sete al
0xb283:     83 fa 09                              	cmp edx, 9
0xb286:     0f 94 c2                              	sete dl
0xb289:     08 c2                                 	or dl, al
0xb28b:     75 04                                 	jne 0xb291 <function_b260+0x31>
0xb28d:     84 c9                                 	test cl, cl
0xb28f:     75 4f                                 	jne 0xb2e0 <function_b260+0x80>
0xb291:     84 c9                                 	test cl, cl
0xb293:     75 0b                                 	jne 0xb2a0 <function_b260+0x40>
0xb295:     84 d2                                 	test dl, dl
0xb297:     b8 01 00 00 00                        	mov eax, 1
0xb29c:     74 02                                 	je 0xb2a0 <function_b260+0x40>
0xb29e:     f3 c3                                 	ret 
0xb2a0:     48 8b 87 80 00 00 00                  	mov rax, qword ptr [rdi + 0x80]
0xb2a7:     49 39 80 80 00 00 00                  	cmp qword ptr [r8 + 0x80], rax
0xb2ae:     7f 30                                 	jg 0xb2e0 <function_b260+0x80>
0xb2b0:     7c 1e                                 	jl 0xb2d0 <function_b260+0x70>
0xb2b2:     48 8b 87 88 00 00 00                  	mov rax, qword ptr [rdi + 0x88]
0xb2b9:     41 2b 80 88 00 00 00                  	sub eax, dword ptr [r8 + 0x88]
0xb2c0:     75 dc                                 	jne 0xb29e <function_b260+0x3e>
0xb2c2:     48 8b 37                              	mov rsi, qword ptr [rdi]
0xb2c5:     49 8b 38                              	mov rdi, qword ptr [r8]
0xb2c8:     e9 c3 b1 ff ff                        	jmp 0x6490
; data inside code section at 0xb2cd -- 0xb2d0
0xb2cd:     0f 1f 00                                           |...             |
0xb2d0:     b8 01 00 00 00                        	mov eax, 1
0xb2d5:     c3                                    	ret 
; data inside code section at 0xb2d6 -- 0xb2e0
0xb2d6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0xb2e0:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb2e5:     c3                                    	ret 
; data inside code section at 0xb2e6 -- 0xb2f0
0xb2e6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_b2f0 at 0xb2f0 -- 0xb366
0xb2f0:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0xb2f6:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0xb2fc:     49 89 f0                              	mov r8, rsi
0xb2ff:     83 f8 03                              	cmp eax, 3
0xb302:     0f 94 c1                              	sete cl
0xb305:     83 f8 09                              	cmp eax, 9
0xb308:     0f 94 c0                              	sete al
0xb30b:     09 c1                                 	or ecx, eax
0xb30d:     83 fa 03                              	cmp edx, 3
0xb310:     0f 94 c0                              	sete al
0xb313:     83 fa 09                              	cmp edx, 9
0xb316:     0f 94 c2                              	sete dl
0xb319:     08 c2                                 	or dl, al
0xb31b:     75 04                                 	jne 0xb321 <function_b2f0+0x31>
0xb31d:     84 c9                                 	test cl, cl
0xb31f:     75 3f                                 	jne 0xb360 <function_b2f0+0x70>
0xb321:     84 c9                                 	test cl, cl
0xb323:     75 0b                                 	jne 0xb330 <function_b2f0+0x40>
0xb325:     84 d2                                 	test dl, dl
0xb327:     b8 01 00 00 00                        	mov eax, 1
0xb32c:     74 02                                 	je 0xb330 <function_b2f0+0x40>
0xb32e:     f3 c3                                 	ret 
0xb330:     48 8b 47 60                           	mov rax, qword ptr [rdi + 0x60]
0xb334:     49 39 40 60                           	cmp qword ptr [r8 + 0x60], rax
0xb338:     7f 26                                 	jg 0xb360 <function_b2f0+0x70>
0xb33a:     7c 1c                                 	jl 0xb358 <function_b2f0+0x68>
0xb33c:     48 8b 47 68                           	mov rax, qword ptr [rdi + 0x68]
0xb340:     41 2b 40 68                           	sub eax, dword ptr [r8 + 0x68]
0xb344:     75 e8                                 	jne 0xb32e <function_b2f0+0x3e>
0xb346:     48 8b 37                              	mov rsi, qword ptr [rdi]
0xb349:     49 8b 38                              	mov rdi, qword ptr [r8]
0xb34c:     e9 3f b1 ff ff                        	jmp 0x6490
; data inside code section at 0xb351 -- 0xb358
0xb351:     0f 1f 80 00 00 00 00                               |.......         |
0xb358:     b8 01 00 00 00                        	mov eax, 1
0xb35d:     c3                                    	ret 
; data inside code section at 0xb35e -- 0xb360
0xb35e:     66 90                                              |f.              |
0xb360:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb365:     c3                                    	ret 
; data inside code section at 0xb366 -- 0xb370
0xb366:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_b370 at 0xb370 -- 0xb3e6
0xb370:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0xb376:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0xb37c:     83 f8 03                              	cmp eax, 3
0xb37f:     0f 94 c1                              	sete cl
0xb382:     83 f8 09                              	cmp eax, 9
0xb385:     0f 94 c0                              	sete al
0xb388:     09 c1                                 	or ecx, eax
0xb38a:     83 fa 03                              	cmp edx, 3
0xb38d:     0f 94 c0                              	sete al
0xb390:     83 fa 09                              	cmp edx, 9
0xb393:     0f 94 c2                              	sete dl
0xb396:     08 c2                                 	or dl, al
0xb398:     75 04                                 	jne 0xb39e <function_b370+0x2e>
0xb39a:     84 c9                                 	test cl, cl
0xb39c:     75 42                                 	jne 0xb3e0 <function_b370+0x70>
0xb39e:     84 c9                                 	test cl, cl
0xb3a0:     75 0e                                 	jne 0xb3b0 <function_b370+0x40>
0xb3a2:     84 d2                                 	test dl, dl
0xb3a4:     b8 01 00 00 00                        	mov eax, 1
0xb3a9:     74 05                                 	je 0xb3b0 <function_b370+0x40>
0xb3ab:     f3 c3                                 	ret 
; data inside code section at 0xb3ad -- 0xb3b0
0xb3ad:     0f 1f 00                                           |...             |
0xb3b0:     48 8b 46 70                           	mov rax, qword ptr [rsi + 0x70]
0xb3b4:     48 39 47 70                           	cmp qword ptr [rdi + 0x70], rax
0xb3b8:     7f 26                                 	jg 0xb3e0 <function_b370+0x70>
0xb3ba:     7c 14                                 	jl 0xb3d0 <function_b370+0x60>
0xb3bc:     48 8b 46 78                           	mov rax, qword ptr [rsi + 0x78]
0xb3c0:     2b 47 78                              	sub eax, dword ptr [rdi + 0x78]
0xb3c3:     75 e6                                 	jne 0xb3ab <function_b370+0x3b>
0xb3c5:     48 8b 36                              	mov rsi, qword ptr [rsi]
0xb3c8:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0xb3cb:     e9 c0 b0 ff ff                        	jmp 0x6490
0xb3d0:     b8 01 00 00 00                        	mov eax, 1
0xb3d5:     c3                                    	ret 
; data inside code section at 0xb3d6 -- 0xb3e0
0xb3d6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0xb3e0:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb3e5:     c3                                    	ret 
; data inside code section at 0xb3e6 -- 0xb3f0
0xb3e6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_b3f0 at 0xb3f0 -- 0xb476
0xb3f0:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0xb3f6:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0xb3fc:     83 f8 03                              	cmp eax, 3
0xb3ff:     0f 94 c1                              	sete cl
0xb402:     83 f8 09                              	cmp eax, 9
0xb405:     0f 94 c0                              	sete al
0xb408:     09 c1                                 	or ecx, eax
0xb40a:     83 fa 03                              	cmp edx, 3
0xb40d:     0f 94 c0                              	sete al
0xb410:     83 fa 09                              	cmp edx, 9
0xb413:     0f 94 c2                              	sete dl
0xb416:     08 c2                                 	or dl, al
0xb418:     75 04                                 	jne 0xb41e <function_b3f0+0x2e>
0xb41a:     84 c9                                 	test cl, cl
0xb41c:     75 52                                 	jne 0xb470 <function_b3f0+0x80>
0xb41e:     84 c9                                 	test cl, cl
0xb420:     75 0e                                 	jne 0xb430 <function_b3f0+0x40>
0xb422:     84 d2                                 	test dl, dl
0xb424:     b8 01 00 00 00                        	mov eax, 1
0xb429:     74 05                                 	je 0xb430 <function_b3f0+0x40>
0xb42b:     f3 c3                                 	ret 
; data inside code section at 0xb42d -- 0xb430
0xb42d:     0f 1f 00                                           |...             |
0xb430:     48 8b 86 80 00 00 00                  	mov rax, qword ptr [rsi + 0x80]
0xb437:     48 39 87 80 00 00 00                  	cmp qword ptr [rdi + 0x80], rax
0xb43e:     7f 30                                 	jg 0xb470 <function_b3f0+0x80>
0xb440:     7c 1e                                 	jl 0xb460 <function_b3f0+0x70>
0xb442:     48 8b 86 88 00 00 00                  	mov rax, qword ptr [rsi + 0x88]
0xb449:     2b 87 88 00 00 00                     	sub eax, dword ptr [rdi + 0x88]
0xb44f:     75 da                                 	jne 0xb42b <function_b3f0+0x3b>
0xb451:     48 8b 36                              	mov rsi, qword ptr [rsi]
0xb454:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0xb457:     e9 34 b0 ff ff                        	jmp 0x6490
; data inside code section at 0xb45c -- 0xb460
0xb45c:     0f 1f 40 00                                        |..@.            |
0xb460:     b8 01 00 00 00                        	mov eax, 1
0xb465:     c3                                    	ret 
; data inside code section at 0xb466 -- 0xb470
0xb466:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0xb470:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb475:     c3                                    	ret 
; data inside code section at 0xb476 -- 0xb480
0xb476:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_b480 at 0xb480 -- 0xb4f6
0xb480:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0xb486:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0xb48c:     49 89 f0                              	mov r8, rsi
0xb48f:     83 f8 03                              	cmp eax, 3
0xb492:     0f 94 c1                              	sete cl
0xb495:     83 f8 09                              	cmp eax, 9
0xb498:     0f 94 c0                              	sete al
0xb49b:     09 c1                                 	or ecx, eax
0xb49d:     83 fa 03                              	cmp edx, 3
0xb4a0:     0f 94 c0                              	sete al
0xb4a3:     83 fa 09                              	cmp edx, 9
0xb4a6:     0f 94 c2                              	sete dl
0xb4a9:     08 c2                                 	or dl, al
0xb4ab:     75 04                                 	jne 0xb4b1 <function_b480+0x31>
0xb4ad:     84 c9                                 	test cl, cl
0xb4af:     75 3f                                 	jne 0xb4f0 <function_b480+0x70>
0xb4b1:     84 c9                                 	test cl, cl
0xb4b3:     75 0b                                 	jne 0xb4c0 <function_b480+0x40>
0xb4b5:     84 d2                                 	test dl, dl
0xb4b7:     b8 01 00 00 00                        	mov eax, 1
0xb4bc:     74 02                                 	je 0xb4c0 <function_b480+0x40>
0xb4be:     f3 c3                                 	ret 
0xb4c0:     48 8b 47 70                           	mov rax, qword ptr [rdi + 0x70]
0xb4c4:     49 39 40 70                           	cmp qword ptr [r8 + 0x70], rax
0xb4c8:     7f 26                                 	jg 0xb4f0 <function_b480+0x70>
0xb4ca:     7c 1c                                 	jl 0xb4e8 <function_b480+0x68>
0xb4cc:     48 8b 47 78                           	mov rax, qword ptr [rdi + 0x78]
0xb4d0:     41 2b 40 78                           	sub eax, dword ptr [r8 + 0x78]
0xb4d4:     75 e8                                 	jne 0xb4be <function_b480+0x3e>
0xb4d6:     48 8b 37                              	mov rsi, qword ptr [rdi]
0xb4d9:     49 8b 38                              	mov rdi, qword ptr [r8]
0xb4dc:     e9 af af ff ff                        	jmp 0x6490
; data inside code section at 0xb4e1 -- 0xb4e8
0xb4e1:     0f 1f 80 00 00 00 00                               |.......         |
0xb4e8:     b8 01 00 00 00                        	mov eax, 1
0xb4ed:     c3                                    	ret 
; data inside code section at 0xb4ee -- 0xb4f0
0xb4ee:     66 90                                              |f.              |
0xb4f0:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb4f5:     c3                                    	ret 
; data inside code section at 0xb4f6 -- 0xb500
0xb4f6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_b500 at 0xb500 -- 0xb576
0xb500:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0xb506:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0xb50c:     83 f8 03                              	cmp eax, 3
0xb50f:     0f 94 c1                              	sete cl
0xb512:     83 f8 09                              	cmp eax, 9
0xb515:     0f 94 c0                              	sete al
0xb518:     09 c1                                 	or ecx, eax
0xb51a:     83 fa 03                              	cmp edx, 3
0xb51d:     0f 94 c0                              	sete al
0xb520:     83 fa 09                              	cmp edx, 9
0xb523:     0f 94 c2                              	sete dl
0xb526:     08 c2                                 	or dl, al
0xb528:     75 04                                 	jne 0xb52e <function_b500+0x2e>
0xb52a:     84 c9                                 	test cl, cl
0xb52c:     75 42                                 	jne 0xb570 <function_b500+0x70>
0xb52e:     84 c9                                 	test cl, cl
0xb530:     75 0e                                 	jne 0xb540 <function_b500+0x40>
0xb532:     84 d2                                 	test dl, dl
0xb534:     b8 01 00 00 00                        	mov eax, 1
0xb539:     74 05                                 	je 0xb540 <function_b500+0x40>
0xb53b:     f3 c3                                 	ret 
; data inside code section at 0xb53d -- 0xb540
0xb53d:     0f 1f 00                                           |...             |
0xb540:     48 8b 46 60                           	mov rax, qword ptr [rsi + 0x60]
0xb544:     48 39 47 60                           	cmp qword ptr [rdi + 0x60], rax
0xb548:     7f 26                                 	jg 0xb570 <function_b500+0x70>
0xb54a:     7c 14                                 	jl 0xb560 <function_b500+0x60>
0xb54c:     48 8b 46 68                           	mov rax, qword ptr [rsi + 0x68]
0xb550:     2b 47 68                              	sub eax, dword ptr [rdi + 0x68]
0xb553:     75 e6                                 	jne 0xb53b <function_b500+0x3b>
0xb555:     48 8b 36                              	mov rsi, qword ptr [rsi]
0xb558:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0xb55b:     e9 30 af ff ff                        	jmp 0x6490
0xb560:     b8 01 00 00 00                        	mov eax, 1
0xb565:     c3                                    	ret 
; data inside code section at 0xb566 -- 0xb570
0xb566:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0xb570:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb575:     c3                                    	ret 
; data inside code section at 0xb576 -- 0xb580
0xb576:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_b580 at 0xb580 -- 0xb5e5
0xb580:     41 54                                 	push r12
0xb582:     55                                    	push rbp
0xb583:     48 89 f5                              	mov rbp, rsi
0xb586:     53                                    	push rbx
0xb587:     49 89 fc                              	mov r12, rdi
0xb58a:     48 8b 7d 00                           	mov rdi, qword ptr [rbp]
0xb58e:     be 2e 00 00 00                        	mov esi, 0x2e
0xb593:     e8 48 84 ff ff                        	call 0x39e0 <strrchr>
0xb598:     49 8b 3c 24                           	mov rdi, qword ptr [r12]
0xb59c:     be 2e 00 00 00                        	mov esi, 0x2e
0xb5a1:     48 89 c3                              	mov rbx, rax
0xb5a4:     e8 37 84 ff ff                        	call 0x39e0 <strrchr>
0xb5a9:     48 8d 15 9a c6 00 00                  	lea rdx, [rip + 0xc69a]
0xb5b0:     48 85 c0                              	test rax, rax
0xb5b3:     48 0f 44 c2                           	cmove rax, rdx
0xb5b7:     48 85 db                              	test rbx, rbx
0xb5ba:     48 0f 44 da                           	cmove rbx, rdx
0xb5be:     48 89 c6                              	mov rsi, rax
0xb5c1:     48 89 df                              	mov rdi, rbx
0xb5c4:     e8 c7 ae ff ff                        	call 0x6490
0xb5c9:     85 c0                                 	test eax, eax
0xb5cb:     75 13                                 	jne 0xb5e0 <function_b580+0x60>
0xb5cd:     5b                                    	pop rbx
0xb5ce:     49 8b 34 24                           	mov rsi, qword ptr [r12]
0xb5d2:     48 8b 7d 00                           	mov rdi, qword ptr [rbp]
0xb5d6:     5d                                    	pop rbp
0xb5d7:     41 5c                                 	pop r12
0xb5d9:     e9 b2 ae ff ff                        	jmp 0x6490
; data inside code section at 0xb5de -- 0xb5e0
0xb5de:     66 90                                              |f.              |
0xb5e0:     5b                                    	pop rbx
0xb5e1:     5d                                    	pop rbp
0xb5e2:     41 5c                                 	pop r12
0xb5e4:     c3                                    	ret 
; data inside code section at 0xb5e5 -- 0xb5f0
0xb5e5:     90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: function_b5f0 at 0xb5f0 -- 0xb655
0xb5f0:     41 54                                 	push r12
0xb5f2:     55                                    	push rbp
0xb5f3:     48 89 fd                              	mov rbp, rdi
0xb5f6:     53                                    	push rbx
0xb5f7:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0xb5fa:     49 89 f4                              	mov r12, rsi
0xb5fd:     be 2e 00 00 00                        	mov esi, 0x2e
0xb602:     e8 d9 83 ff ff                        	call 0x39e0 <strrchr>
0xb607:     49 8b 3c 24                           	mov rdi, qword ptr [r12]
0xb60b:     be 2e 00 00 00                        	mov esi, 0x2e
0xb610:     48 89 c3                              	mov rbx, rax
0xb613:     e8 c8 83 ff ff                        	call 0x39e0 <strrchr>
0xb618:     48 8d 15 2b c6 00 00                  	lea rdx, [rip + 0xc62b]
0xb61f:     48 85 c0                              	test rax, rax
0xb622:     48 0f 44 c2                           	cmove rax, rdx
0xb626:     48 85 db                              	test rbx, rbx
0xb629:     48 0f 44 da                           	cmove rbx, rdx
0xb62d:     48 89 c6                              	mov rsi, rax
0xb630:     48 89 df                              	mov rdi, rbx
0xb633:     e8 58 ae ff ff                        	call 0x6490
0xb638:     85 c0                                 	test eax, eax
0xb63a:     75 14                                 	jne 0xb650 <function_b5f0+0x60>
0xb63c:     5b                                    	pop rbx
0xb63d:     49 8b 34 24                           	mov rsi, qword ptr [r12]
0xb641:     48 8b 7d 00                           	mov rdi, qword ptr [rbp]
0xb645:     5d                                    	pop rbp
0xb646:     41 5c                                 	pop r12
0xb648:     e9 43 ae ff ff                        	jmp 0x6490
; data inside code section at 0xb64d -- 0xb650
0xb64d:     0f 1f 00                                           |...             |
0xb650:     5b                                    	pop rbx
0xb651:     5d                                    	pop rbp
0xb652:     41 5c                                 	pop r12
0xb654:     c3                                    	ret 
; data inside code section at 0xb655 -- 0xb660
0xb655:     90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: function_b660 at 0xb660 -- 0xb6e6
0xb660:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0xb666:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0xb66c:     83 f8 03                              	cmp eax, 3
0xb66f:     0f 94 c1                              	sete cl
0xb672:     83 f8 09                              	cmp eax, 9
0xb675:     0f 94 c0                              	sete al
0xb678:     09 c1                                 	or ecx, eax
0xb67a:     83 fa 03                              	cmp edx, 3
0xb67d:     0f 94 c0                              	sete al
0xb680:     83 fa 09                              	cmp edx, 9
0xb683:     0f 94 c2                              	sete dl
0xb686:     08 c2                                 	or dl, al
0xb688:     75 04                                 	jne 0xb68e <function_b660+0x2e>
0xb68a:     84 c9                                 	test cl, cl
0xb68c:     75 52                                 	jne 0xb6e0 <function_b660+0x80>
0xb68e:     84 c9                                 	test cl, cl
0xb690:     75 0e                                 	jne 0xb6a0 <function_b660+0x40>
0xb692:     84 d2                                 	test dl, dl
0xb694:     b8 01 00 00 00                        	mov eax, 1
0xb699:     74 05                                 	je 0xb6a0 <function_b660+0x40>
0xb69b:     f3 c3                                 	ret 
; data inside code section at 0xb69d -- 0xb6a0
0xb69d:     0f 1f 00                                           |...             |
0xb6a0:     48 8b 86 80 00 00 00                  	mov rax, qword ptr [rsi + 0x80]
0xb6a7:     48 39 87 80 00 00 00                  	cmp qword ptr [rdi + 0x80], rax
0xb6ae:     7f 30                                 	jg 0xb6e0 <function_b660+0x80>
0xb6b0:     7c 1e                                 	jl 0xb6d0 <function_b660+0x70>
0xb6b2:     48 8b 86 88 00 00 00                  	mov rax, qword ptr [rsi + 0x88]
0xb6b9:     2b 87 88 00 00 00                     	sub eax, dword ptr [rdi + 0x88]
0xb6bf:     75 da                                 	jne 0xb69b <function_b660+0x3b>
0xb6c1:     48 8b 36                              	mov rsi, qword ptr [rsi]
0xb6c4:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0xb6c7:     e9 54 84 ff ff                        	jmp 0x3b20 <strcmp>
; data inside code section at 0xb6cc -- 0xb6d0
0xb6cc:     0f 1f 40 00                                        |..@.            |
0xb6d0:     b8 01 00 00 00                        	mov eax, 1
0xb6d5:     c3                                    	ret 
; data inside code section at 0xb6d6 -- 0xb6e0
0xb6d6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0xb6e0:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb6e5:     c3                                    	ret 
; data inside code section at 0xb6e6 -- 0xb6f0
0xb6e6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_b6f0 at 0xb6f0 -- 0xb766
0xb6f0:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0xb6f6:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0xb6fc:     83 f8 03                              	cmp eax, 3
0xb6ff:     0f 94 c1                              	sete cl
0xb702:     83 f8 09                              	cmp eax, 9
0xb705:     0f 94 c0                              	sete al
0xb708:     09 c1                                 	or ecx, eax
0xb70a:     83 fa 03                              	cmp edx, 3
0xb70d:     0f 94 c0                              	sete al
0xb710:     83 fa 09                              	cmp edx, 9
0xb713:     0f 94 c2                              	sete dl
0xb716:     08 c2                                 	or dl, al
0xb718:     75 04                                 	jne 0xb71e <function_b6f0+0x2e>
0xb71a:     84 c9                                 	test cl, cl
0xb71c:     75 42                                 	jne 0xb760 <function_b6f0+0x70>
0xb71e:     84 c9                                 	test cl, cl
0xb720:     75 0e                                 	jne 0xb730 <function_b6f0+0x40>
0xb722:     84 d2                                 	test dl, dl
0xb724:     b8 01 00 00 00                        	mov eax, 1
0xb729:     74 05                                 	je 0xb730 <function_b6f0+0x40>
0xb72b:     f3 c3                                 	ret 
; data inside code section at 0xb72d -- 0xb730
0xb72d:     0f 1f 00                                           |...             |
0xb730:     48 8b 46 60                           	mov rax, qword ptr [rsi + 0x60]
0xb734:     48 39 47 60                           	cmp qword ptr [rdi + 0x60], rax
0xb738:     7f 26                                 	jg 0xb760 <function_b6f0+0x70>
0xb73a:     7c 14                                 	jl 0xb750 <function_b6f0+0x60>
0xb73c:     48 8b 46 68                           	mov rax, qword ptr [rsi + 0x68]
0xb740:     2b 47 68                              	sub eax, dword ptr [rdi + 0x68]
0xb743:     75 e6                                 	jne 0xb72b <function_b6f0+0x3b>
0xb745:     48 8b 36                              	mov rsi, qword ptr [rsi]
0xb748:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0xb74b:     e9 d0 83 ff ff                        	jmp 0x3b20 <strcmp>
0xb750:     b8 01 00 00 00                        	mov eax, 1
0xb755:     c3                                    	ret 
; data inside code section at 0xb756 -- 0xb760
0xb756:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0xb760:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb765:     c3                                    	ret 
; data inside code section at 0xb766 -- 0xb770
0xb766:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_b770 at 0xb770 -- 0xb7e6
0xb770:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0xb776:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0xb77c:     49 89 f0                              	mov r8, rsi
0xb77f:     83 f8 03                              	cmp eax, 3
0xb782:     0f 94 c1                              	sete cl
0xb785:     83 f8 09                              	cmp eax, 9
0xb788:     0f 94 c0                              	sete al
0xb78b:     09 c1                                 	or ecx, eax
0xb78d:     83 fa 03                              	cmp edx, 3
0xb790:     0f 94 c0                              	sete al
0xb793:     83 fa 09                              	cmp edx, 9
0xb796:     0f 94 c2                              	sete dl
0xb799:     08 c2                                 	or dl, al
0xb79b:     75 04                                 	jne 0xb7a1 <function_b770+0x31>
0xb79d:     84 c9                                 	test cl, cl
0xb79f:     75 3f                                 	jne 0xb7e0 <function_b770+0x70>
0xb7a1:     84 c9                                 	test cl, cl
0xb7a3:     75 0b                                 	jne 0xb7b0 <function_b770+0x40>
0xb7a5:     84 d2                                 	test dl, dl
0xb7a7:     b8 01 00 00 00                        	mov eax, 1
0xb7ac:     74 02                                 	je 0xb7b0 <function_b770+0x40>
0xb7ae:     f3 c3                                 	ret 
0xb7b0:     48 8b 47 70                           	mov rax, qword ptr [rdi + 0x70]
0xb7b4:     49 39 40 70                           	cmp qword ptr [r8 + 0x70], rax
0xb7b8:     7f 26                                 	jg 0xb7e0 <function_b770+0x70>
0xb7ba:     7c 1c                                 	jl 0xb7d8 <function_b770+0x68>
0xb7bc:     48 8b 47 78                           	mov rax, qword ptr [rdi + 0x78]
0xb7c0:     41 2b 40 78                           	sub eax, dword ptr [r8 + 0x78]
0xb7c4:     75 e8                                 	jne 0xb7ae <function_b770+0x3e>
0xb7c6:     48 8b 37                              	mov rsi, qword ptr [rdi]
0xb7c9:     49 8b 38                              	mov rdi, qword ptr [r8]
0xb7cc:     e9 4f 83 ff ff                        	jmp 0x3b20 <strcmp>
; data inside code section at 0xb7d1 -- 0xb7d8
0xb7d1:     0f 1f 80 00 00 00 00                               |.......         |
0xb7d8:     b8 01 00 00 00                        	mov eax, 1
0xb7dd:     c3                                    	ret 
; data inside code section at 0xb7de -- 0xb7e0
0xb7de:     66 90                                              |f.              |
0xb7e0:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb7e5:     c3                                    	ret 
; data inside code section at 0xb7e6 -- 0xb7f0
0xb7e6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_b7f0 at 0xb7f0 -- 0xb870
0xb7f0:     41 54                                 	push r12
0xb7f2:     55                                    	push rbp
0xb7f3:     49 89 fc                              	mov r12, rdi
0xb7f6:     53                                    	push rbx
0xb7f7:     48 8b 2e                              	mov rbp, qword ptr [rsi]
0xb7fa:     be 2e 00 00 00                        	mov esi, 0x2e
0xb7ff:     48 89 ef                              	mov rdi, rbp
0xb802:     e8 d9 81 ff ff                        	call 0x39e0 <strrchr>
0xb807:     4d 8b 24 24                           	mov r12, qword ptr [r12]
0xb80b:     be 2e 00 00 00                        	mov esi, 0x2e
0xb810:     48 89 c3                              	mov rbx, rax
0xb813:     4c 89 e7                              	mov rdi, r12
0xb816:     e8 c5 81 ff ff                        	call 0x39e0 <strrchr>
0xb81b:     48 85 c0                              	test rax, rax
0xb81e:     74 30                                 	je 0xb850 <function_b7f0+0x60>
0xb820:     48 8d 15 23 c4 00 00                  	lea rdx, [rip + 0xc423]
0xb827:     48 85 db                              	test rbx, rbx
0xb82a:     48 89 c6                              	mov rsi, rax
0xb82d:     48 0f 44 da                           	cmove rbx, rdx
0xb831:     48 89 df                              	mov rdi, rbx
0xb834:     e8 e7 82 ff ff                        	call 0x3b20 <strcmp>
0xb839:     85 c0                                 	test eax, eax
0xb83b:     75 2e                                 	jne 0xb86b <function_b7f0+0x7b>
0xb83d:     5b                                    	pop rbx
0xb83e:     4c 89 e6                              	mov rsi, r12
0xb841:     48 89 ef                              	mov rdi, rbp
0xb844:     5d                                    	pop rbp
0xb845:     41 5c                                 	pop r12
0xb847:     e9 d4 82 ff ff                        	jmp 0x3b20 <strcmp>
; data inside code section at 0xb84c -- 0xb850
0xb84c:     0f 1f 40 00                                        |..@.            |
0xb850:     48 85 db                              	test rbx, rbx
0xb853:     48 8d 05 f0 c3 00 00                  	lea rax, [rip + 0xc3f0]
0xb85a:     74 e1                                 	je 0xb83d <function_b7f0+0x4d>
0xb85c:     48 89 c6                              	mov rsi, rax
0xb85f:     48 89 df                              	mov rdi, rbx
0xb862:     e8 b9 82 ff ff                        	call 0x3b20 <strcmp>
0xb867:     85 c0                                 	test eax, eax
0xb869:     74 d2                                 	je 0xb83d <function_b7f0+0x4d>
0xb86b:     5b                                    	pop rbx
0xb86c:     5d                                    	pop rbp
0xb86d:     41 5c                                 	pop r12
0xb86f:     c3                                    	ret 
; function: function_b870 at 0xb870 -- 0xb8f0
0xb870:     41 54                                 	push r12
0xb872:     55                                    	push rbp
0xb873:     49 89 f4                              	mov r12, rsi
0xb876:     53                                    	push rbx
0xb877:     48 8b 2f                              	mov rbp, qword ptr [rdi]
0xb87a:     be 2e 00 00 00                        	mov esi, 0x2e
0xb87f:     48 89 ef                              	mov rdi, rbp
0xb882:     e8 59 81 ff ff                        	call 0x39e0 <strrchr>
0xb887:     4d 8b 24 24                           	mov r12, qword ptr [r12]
0xb88b:     be 2e 00 00 00                        	mov esi, 0x2e
0xb890:     48 89 c3                              	mov rbx, rax
0xb893:     4c 89 e7                              	mov rdi, r12
0xb896:     e8 45 81 ff ff                        	call 0x39e0 <strrchr>
0xb89b:     48 85 c0                              	test rax, rax
0xb89e:     74 30                                 	je 0xb8d0 <function_b870+0x60>
0xb8a0:     48 8d 15 a3 c3 00 00                  	lea rdx, [rip + 0xc3a3]
0xb8a7:     48 85 db                              	test rbx, rbx
0xb8aa:     48 89 c6                              	mov rsi, rax
0xb8ad:     48 0f 44 da                           	cmove rbx, rdx
0xb8b1:     48 89 df                              	mov rdi, rbx
0xb8b4:     e8 67 82 ff ff                        	call 0x3b20 <strcmp>
0xb8b9:     85 c0                                 	test eax, eax
0xb8bb:     75 2e                                 	jne 0xb8eb <function_b870+0x7b>
0xb8bd:     5b                                    	pop rbx
0xb8be:     4c 89 e6                              	mov rsi, r12
0xb8c1:     48 89 ef                              	mov rdi, rbp
0xb8c4:     5d                                    	pop rbp
0xb8c5:     41 5c                                 	pop r12
0xb8c7:     e9 54 82 ff ff                        	jmp 0x3b20 <strcmp>
; data inside code section at 0xb8cc -- 0xb8d0
0xb8cc:     0f 1f 40 00                                        |..@.            |
0xb8d0:     48 85 db                              	test rbx, rbx
0xb8d3:     48 8d 05 70 c3 00 00                  	lea rax, [rip + 0xc370]
0xb8da:     74 e1                                 	je 0xb8bd <function_b870+0x4d>
0xb8dc:     48 89 c6                              	mov rsi, rax
0xb8df:     48 89 df                              	mov rdi, rbx
0xb8e2:     e8 39 82 ff ff                        	call 0x3b20 <strcmp>
0xb8e7:     85 c0                                 	test eax, eax
0xb8e9:     74 d2                                 	je 0xb8bd <function_b870+0x4d>
0xb8eb:     5b                                    	pop rbx
0xb8ec:     5d                                    	pop rbp
0xb8ed:     41 5c                                 	pop r12
0xb8ef:     c3                                    	ret 
; function: function_b8f0 at 0xb8f0 -- 0xb99e
0xb8f0:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0xb8f6:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0xb8fc:     83 f8 03                              	cmp eax, 3
0xb8ff:     0f 94 c1                              	sete cl
0xb902:     83 f8 09                              	cmp eax, 9
0xb905:     0f 94 c0                              	sete al
0xb908:     09 c1                                 	or ecx, eax
0xb90a:     83 fa 03                              	cmp edx, 3
0xb90d:     0f 94 c0                              	sete al
0xb910:     83 fa 09                              	cmp edx, 9
0xb913:     0f 94 c2                              	sete dl
0xb916:     08 c2                                 	or dl, al
0xb918:     75 04                                 	jne 0xb91e <function_b8f0+0x2e>
0xb91a:     84 c9                                 	test cl, cl
0xb91c:     75 7a                                 	jne 0xb998 <function_b8f0+0xa8>
0xb91e:     84 c9                                 	test cl, cl
0xb920:     75 0e                                 	jne 0xb930 <function_b8f0+0x40>
0xb922:     84 d2                                 	test dl, dl
0xb924:     b8 01 00 00 00                        	mov eax, 1
0xb929:     74 05                                 	je 0xb930 <function_b8f0+0x40>
0xb92b:     f3 c3                                 	ret 
; data inside code section at 0xb92d -- 0xb930
0xb92d:     0f 1f 00                                           |...             |
0xb930:     41 54                                 	push r12
0xb932:     55                                    	push rbp
0xb933:     48 89 fd                              	mov rbp, rdi
0xb936:     53                                    	push rbx
0xb937:     48 89 f3                              	mov rbx, rsi
0xb93a:     be 2e 00 00 00                        	mov esi, 0x2e
0xb93f:     48 8b 3b                              	mov rdi, qword ptr [rbx]
0xb942:     e8 99 80 ff ff                        	call 0x39e0 <strrchr>
0xb947:     48 8b 7d 00                           	mov rdi, qword ptr [rbp]
0xb94b:     be 2e 00 00 00                        	mov esi, 0x2e
0xb950:     49 89 c4                              	mov r12, rax
0xb953:     e8 88 80 ff ff                        	call 0x39e0 <strrchr>
0xb958:     48 8d 15 eb c2 00 00                  	lea rdx, [rip + 0xc2eb]
0xb95f:     48 85 c0                              	test rax, rax
0xb962:     48 0f 44 c2                           	cmove rax, rdx
0xb966:     4d 85 e4                              	test r12, r12
0xb969:     4c 0f 44 e2                           	cmove r12, rdx
0xb96d:     48 89 c6                              	mov rsi, rax
0xb970:     4c 89 e7                              	mov rdi, r12
0xb973:     e8 18 ab ff ff                        	call 0x6490
0xb978:     85 c0                                 	test eax, eax
0xb97a:     75 14                                 	jne 0xb990 <function_b8f0+0xa0>
0xb97c:     48 8b 75 00                           	mov rsi, qword ptr [rbp]
0xb980:     48 8b 3b                              	mov rdi, qword ptr [rbx]
0xb983:     5b                                    	pop rbx
0xb984:     5d                                    	pop rbp
0xb985:     41 5c                                 	pop r12
0xb987:     e9 04 ab ff ff                        	jmp 0x6490
; data inside code section at 0xb98c -- 0xb990
0xb98c:     0f 1f 40 00                                        |..@.            |
0xb990:     5b                                    	pop rbx
0xb991:     5d                                    	pop rbp
0xb992:     41 5c                                 	pop r12
0xb994:     c3                                    	ret 
; data inside code section at 0xb995 -- 0xb998
0xb995:     0f 1f 00                                           |...             |
0xb998:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xb99d:     c3                                    	ret 
; data inside code section at 0xb99e -- 0xb9a0
0xb99e:     66 90                                              |f.              |
; function: function_b9a0 at 0xb9a0 -- 0xba4e
0xb9a0:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0xb9a6:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0xb9ac:     83 f8 03                              	cmp eax, 3
0xb9af:     0f 94 c1                              	sete cl
0xb9b2:     83 f8 09                              	cmp eax, 9
0xb9b5:     0f 94 c0                              	sete al
0xb9b8:     09 c1                                 	or ecx, eax
0xb9ba:     83 fa 03                              	cmp edx, 3
0xb9bd:     0f 94 c0                              	sete al
0xb9c0:     83 fa 09                              	cmp edx, 9
0xb9c3:     0f 94 c2                              	sete dl
0xb9c6:     08 c2                                 	or dl, al
0xb9c8:     75 04                                 	jne 0xb9ce <function_b9a0+0x2e>
0xb9ca:     84 c9                                 	test cl, cl
0xb9cc:     75 7a                                 	jne 0xba48 <function_b9a0+0xa8>
0xb9ce:     84 c9                                 	test cl, cl
0xb9d0:     75 0e                                 	jne 0xb9e0 <function_b9a0+0x40>
0xb9d2:     84 d2                                 	test dl, dl
0xb9d4:     b8 01 00 00 00                        	mov eax, 1
0xb9d9:     74 05                                 	je 0xb9e0 <function_b9a0+0x40>
0xb9db:     f3 c3                                 	ret 
; data inside code section at 0xb9dd -- 0xb9e0
0xb9dd:     0f 1f 00                                           |...             |
0xb9e0:     41 54                                 	push r12
0xb9e2:     55                                    	push rbp
0xb9e3:     48 89 f5                              	mov rbp, rsi
0xb9e6:     53                                    	push rbx
0xb9e7:     48 89 fb                              	mov rbx, rdi
0xb9ea:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0xb9ed:     be 2e 00 00 00                        	mov esi, 0x2e
0xb9f2:     e8 e9 7f ff ff                        	call 0x39e0 <strrchr>
0xb9f7:     48 8b 7d 00                           	mov rdi, qword ptr [rbp]
0xb9fb:     be 2e 00 00 00                        	mov esi, 0x2e
0xba00:     49 89 c4                              	mov r12, rax
0xba03:     e8 d8 7f ff ff                        	call 0x39e0 <strrchr>
0xba08:     48 8d 15 3b c2 00 00                  	lea rdx, [rip + 0xc23b]
0xba0f:     48 85 c0                              	test rax, rax
0xba12:     48 0f 44 c2                           	cmove rax, rdx
0xba16:     4d 85 e4                              	test r12, r12
0xba19:     4c 0f 44 e2                           	cmove r12, rdx
0xba1d:     48 89 c6                              	mov rsi, rax
0xba20:     4c 89 e7                              	mov rdi, r12
0xba23:     e8 68 aa ff ff                        	call 0x6490
0xba28:     85 c0                                 	test eax, eax
0xba2a:     75 14                                 	jne 0xba40 <function_b9a0+0xa0>
0xba2c:     48 8b 75 00                           	mov rsi, qword ptr [rbp]
0xba30:     48 8b 3b                              	mov rdi, qword ptr [rbx]
0xba33:     5b                                    	pop rbx
0xba34:     5d                                    	pop rbp
0xba35:     41 5c                                 	pop r12
0xba37:     e9 54 aa ff ff                        	jmp 0x6490
; data inside code section at 0xba3c -- 0xba40
0xba3c:     0f 1f 40 00                                        |..@.            |
0xba40:     5b                                    	pop rbx
0xba41:     5d                                    	pop rbp
0xba42:     41 5c                                 	pop r12
0xba44:     c3                                    	ret 
; data inside code section at 0xba45 -- 0xba48
0xba45:     0f 1f 00                                           |...             |
0xba48:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xba4d:     c3                                    	ret 
; data inside code section at 0xba4e -- 0xba50
0xba4e:     66 90                                              |f.              |
; function: function_ba50 at 0xba50 -- 0xbb16
0xba50:     8b 87 a8 00 00 00                     	mov eax, dword ptr [rdi + 0xa8]
0xba56:     8b 96 a8 00 00 00                     	mov edx, dword ptr [rsi + 0xa8]
0xba5c:     83 f8 03                              	cmp eax, 3
0xba5f:     0f 94 c1                              	sete cl
0xba62:     83 f8 09                              	cmp eax, 9
0xba65:     0f 94 c0                              	sete al
0xba68:     09 c1                                 	or ecx, eax
0xba6a:     83 fa 03                              	cmp edx, 3
0xba6d:     0f 94 c0                              	sete al
0xba70:     83 fa 09                              	cmp edx, 9
0xba73:     0f 94 c2                              	sete dl
0xba76:     08 c2                                 	or dl, al
0xba78:     75 08                                 	jne 0xba82 <function_ba50+0x32>
0xba7a:     84 c9                                 	test cl, cl
0xba7c:     0f 85 8e 00 00 00                     	jne 0xbb10 <function_ba50+0xc0>
0xba82:     84 c9                                 	test cl, cl
0xba84:     75 12                                 	jne 0xba98 <function_ba50+0x48>
0xba86:     84 d2                                 	test dl, dl
0xba88:     b8 01 00 00 00                        	mov eax, 1
0xba8d:     74 09                                 	je 0xba98 <function_ba50+0x48>
0xba8f:     f3 c3                                 	ret 
; data inside code section at 0xba91 -- 0xba98
0xba91:     0f 1f 80 00 00 00 00                               |.......         |
0xba98:     41 54                                 	push r12
0xba9a:     55                                    	push rbp
0xba9b:     53                                    	push rbx
0xba9c:     4c 8b 27                              	mov r12, qword ptr [rdi]
0xba9f:     48 89 f3                              	mov rbx, rsi
0xbaa2:     be 2e 00 00 00                        	mov esi, 0x2e
0xbaa7:     4c 89 e7                              	mov rdi, r12
0xbaaa:     e8 31 7f ff ff                        	call 0x39e0 <strrchr>
0xbaaf:     48 8b 1b                              	mov rbx, qword ptr [rbx]
0xbab2:     be 2e 00 00 00                        	mov esi, 0x2e
0xbab7:     48 89 c5                              	mov rbp, rax
0xbaba:     48 89 df                              	mov rdi, rbx
0xbabd:     e8 1e 7f ff ff                        	call 0x39e0 <strrchr>
0xbac2:     48 85 c0                              	test rax, rax
0xbac5:     74 39                                 	je 0xbb00 <function_ba50+0xb0>
0xbac7:     48 8d 15 7c c1 00 00                  	lea rdx, [rip + 0xc17c]
0xbace:     48 85 ed                              	test rbp, rbp
0xbad1:     48 0f 44 ea                           	cmove rbp, rdx
0xbad5:     48 89 c6                              	mov rsi, rax
0xbad8:     48 89 ef                              	mov rdi, rbp
0xbadb:     e8 40 80 ff ff                        	call 0x3b20 <strcmp>
0xbae0:     85 c0                                 	test eax, eax
0xbae2:     75 14                                 	jne 0xbaf8 <function_ba50+0xa8>
0xbae4:     48 89 de                              	mov rsi, rbx
0xbae7:     4c 89 e7                              	mov rdi, r12
0xbaea:     5b                                    	pop rbx
0xbaeb:     5d                                    	pop rbp
0xbaec:     41 5c                                 	pop r12
0xbaee:     e9 2d 80 ff ff                        	jmp 0x3b20 <strcmp>
; data inside code section at 0xbaf3 -- 0xbaf8
0xbaf3:     0f 1f 44 00 00                                     |..D..           |
0xbaf8:     5b                                    	pop rbx
0xbaf9:     5d                                    	pop rbp
0xbafa:     41 5c                                 	pop r12
0xbafc:     c3                                    	ret 
; data inside code section at 0xbafd -- 0xbb00
0xbafd:     0f 1f 00                                           |...             |
0xbb00:     48 85 ed                              	test rbp, rbp
0xbb03:     48 8d 05 40 c1 00 00                  	lea rax, [rip + 0xc140]
0xbb0a:     75 c9                                 	jne 0xbad5 <function_ba50+0x85>
0xbb0c:     eb d6                                 	jmp 0xbae4 <function_ba50+0x94>
; data inside code section at 0xbb0e -- 0xbb10
0xbb0e:     66 90                                              |f.              |
0xbb10:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xbb15:     c3                                    	ret 
; data inside code section at 0xbb16 -- 0xbb20
0xbb16:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_bb20 at 0xbb20 -- 0xc1bb
0xbb20:     41 54                                 	push r12
0xbb22:     55                                    	push rbp
0xbb23:     41 89 fc                              	mov r12d, edi
0xbb26:     53                                    	push rbx
0xbb27:     ba 05 00 00 00                        	mov edx, 5
0xbb2c:     48 83 c4 80                           	add rsp, -0x80
0xbb30:     48 8b 1d c9 58 21 00                  	mov rbx, qword ptr [rip + 0x2158c9]
0xbb37:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0xbb40:     48 89 44 24 78                        	mov qword ptr [rsp + 0x78], rax
0xbb45:     31 c0                                 	xor eax, eax
0xbb47:     85 ff                                 	test edi, edi
0xbb49:     74 2f                                 	je 0xbb7a <function_bb20+0x5a>
0xbb4b:     48 8d 35 d6 c6 00 00                  	lea rsi, [rip + 0xc6d6]
0xbb52:     31 ff                                 	xor edi, edi
0xbb54:     e8 d7 7d ff ff                        	call 0x3930 <dcgettext>
0xbb59:     48 8b 3d 60 47 21 00                  	mov rdi, qword ptr [rip + 0x214760]
0xbb60:     48 89 c2                              	mov rdx, rax
0xbb63:     48 89 d9                              	mov rcx, rbx
0xbb66:     be 01 00 00 00                        	mov esi, 1
0xbb6b:     31 c0                                 	xor eax, eax
0xbb6d:     e8 7e 82 ff ff                        	call 0x3df0 <__fprintf_chk>
0xbb72:     44 89 e7                              	mov edi, r12d
0xbb75:     e8 56 82 ff ff                        	call 0x3dd0 <exit>
0xbb7a:     48 8d 35 cf c6 00 00                  	lea rsi, [rip + 0xc6cf]
0xbb81:     31 ff                                 	xor edi, edi
0xbb83:     48 8d 2d f8 c1 00 00                  	lea rbp, [rip + 0xc1f8]
0xbb8a:     e8 a1 7d ff ff                        	call 0x3930 <dcgettext>
0xbb8f:     48 89 da                              	mov rdx, rbx
0xbb92:     48 89 c6                              	mov rsi, rax
0xbb95:     bf 01 00 00 00                        	mov edi, 1
0xbb9a:     31 c0                                 	xor eax, eax
0xbb9c:     e8 2f 81 ff ff                        	call 0x3cd0 <__printf_chk>
0xbba1:     48 8b 1d e0 46 21 00                  	mov rbx, qword ptr [rip + 0x2146e0]
0xbba8:     48 8d 35 c9 c6 00 00                  	lea rsi, [rip + 0xc6c9]
0xbbaf:     ba 05 00 00 00                        	mov edx, 5
0xbbb4:     31 ff                                 	xor edi, edi
0xbbb6:     e8 75 7d ff ff                        	call 0x3930 <dcgettext>
0xbbbb:     48 89 de                              	mov rsi, rbx
0xbbbe:     48 89 c7                              	mov rdi, rax
0xbbc1:     e8 2a 7f ff ff                        	call 0x3af0 <fputs_unlocked>
0xbbc6:     48 8b 1d bb 46 21 00                  	mov rbx, qword ptr [rip + 0x2146bb]
0xbbcd:     48 8d 35 34 c7 00 00                  	lea rsi, [rip + 0xc734]
0xbbd4:     ba 05 00 00 00                        	mov edx, 5
0xbbd9:     31 ff                                 	xor edi, edi
0xbbdb:     e8 50 7d ff ff                        	call 0x3930 <dcgettext>
0xbbe0:     48 89 de                              	mov rsi, rbx
0xbbe3:     48 89 c7                              	mov rdi, rax
0xbbe6:     e8 05 7f ff ff                        	call 0x3af0 <fputs_unlocked>
0xbbeb:     48 8b 1d 96 46 21 00                  	mov rbx, qword ptr [rip + 0x214696]
0xbbf2:     48 8d 35 5f c7 00 00                  	lea rsi, [rip + 0xc75f]
0xbbf9:     ba 05 00 00 00                        	mov edx, 5
0xbbfe:     31 ff                                 	xor edi, edi
0xbc00:     e8 2b 7d ff ff                        	call 0x3930 <dcgettext>
0xbc05:     48 89 de                              	mov rsi, rbx
0xbc08:     48 89 c7                              	mov rdi, rax
0xbc0b:     e8 e0 7e ff ff                        	call 0x3af0 <fputs_unlocked>
0xbc10:     48 8b 1d 71 46 21 00                  	mov rbx, qword ptr [rip + 0x214671]
0xbc17:     48 8d 35 4a c8 00 00                  	lea rsi, [rip + 0xc84a]
0xbc1e:     ba 05 00 00 00                        	mov edx, 5
0xbc23:     31 ff                                 	xor edi, edi
0xbc25:     e8 06 7d ff ff                        	call 0x3930 <dcgettext>
0xbc2a:     48 89 de                              	mov rsi, rbx
0xbc2d:     48 89 c7                              	mov rdi, rax
0xbc30:     e8 bb 7e ff ff                        	call 0x3af0 <fputs_unlocked>
0xbc35:     48 8b 1d 4c 46 21 00                  	mov rbx, qword ptr [rip + 0x21464c]
0xbc3c:     48 8d 35 6d ca 00 00                  	lea rsi, [rip + 0xca6d]
0xbc43:     ba 05 00 00 00                        	mov edx, 5
0xbc48:     31 ff                                 	xor edi, edi
0xbc4a:     e8 e1 7c ff ff                        	call 0x3930 <dcgettext>
0xbc4f:     48 89 de                              	mov rsi, rbx
0xbc52:     48 89 c7                              	mov rdi, rax
0xbc55:     e8 96 7e ff ff                        	call 0x3af0 <fputs_unlocked>
0xbc5a:     48 8b 1d 27 46 21 00                  	mov rbx, qword ptr [rip + 0x214627]
0xbc61:     48 8d 35 b8 cb 00 00                  	lea rsi, [rip + 0xcbb8]
0xbc68:     ba 05 00 00 00                        	mov edx, 5
0xbc6d:     31 ff                                 	xor edi, edi
0xbc6f:     e8 bc 7c ff ff                        	call 0x3930 <dcgettext>
0xbc74:     48 89 de                              	mov rsi, rbx
0xbc77:     48 89 c7                              	mov rdi, rax
0xbc7a:     e8 71 7e ff ff                        	call 0x3af0 <fputs_unlocked>
0xbc7f:     48 8b 1d 02 46 21 00                  	mov rbx, qword ptr [rip + 0x214602]
0xbc86:     48 8d 35 3b cd 00 00                  	lea rsi, [rip + 0xcd3b]
0xbc8d:     ba 05 00 00 00                        	mov edx, 5
0xbc92:     31 ff                                 	xor edi, edi
0xbc94:     e8 97 7c ff ff                        	call 0x3930 <dcgettext>
0xbc99:     48 89 de                              	mov rsi, rbx
0xbc9c:     48 89 c7                              	mov rdi, rax
0xbc9f:     e8 4c 7e ff ff                        	call 0x3af0 <fputs_unlocked>
0xbca4:     48 8b 1d dd 45 21 00                  	mov rbx, qword ptr [rip + 0x2145dd]
0xbcab:     48 8d 35 56 cd 00 00                  	lea rsi, [rip + 0xcd56]
0xbcb2:     ba 05 00 00 00                        	mov edx, 5
0xbcb7:     31 ff                                 	xor edi, edi
0xbcb9:     e8 72 7c ff ff                        	call 0x3930 <dcgettext>
0xbcbe:     48 89 de                              	mov rsi, rbx
0xbcc1:     48 89 c7                              	mov rdi, rax
0xbcc4:     e8 27 7e ff ff                        	call 0x3af0 <fputs_unlocked>
0xbcc9:     48 8b 1d b8 45 21 00                  	mov rbx, qword ptr [rip + 0x2145b8]
0xbcd0:     48 8d 35 29 ce 00 00                  	lea rsi, [rip + 0xce29]
0xbcd7:     ba 05 00 00 00                        	mov edx, 5
0xbcdc:     31 ff                                 	xor edi, edi
0xbcde:     e8 4d 7c ff ff                        	call 0x3930 <dcgettext>
0xbce3:     48 89 de                              	mov rsi, rbx
0xbce6:     48 89 c7                              	mov rdi, rax
0xbce9:     e8 02 7e ff ff                        	call 0x3af0 <fputs_unlocked>
0xbcee:     48 8b 1d 93 45 21 00                  	mov rbx, qword ptr [rip + 0x214593]
0xbcf5:     48 8d 35 14 cf 00 00                  	lea rsi, [rip + 0xcf14]
0xbcfc:     ba 05 00 00 00                        	mov edx, 5
0xbd01:     31 ff                                 	xor edi, edi
0xbd03:     e8 28 7c ff ff                        	call 0x3930 <dcgettext>
0xbd08:     48 89 de                              	mov rsi, rbx
0xbd0b:     48 89 c7                              	mov rdi, rax
0xbd0e:     e8 dd 7d ff ff                        	call 0x3af0 <fputs_unlocked>
0xbd13:     48 8b 1d 6e 45 21 00                  	mov rbx, qword ptr [rip + 0x21456e]
0xbd1a:     48 8d 35 97 d0 00 00                  	lea rsi, [rip + 0xd097]
0xbd21:     ba 05 00 00 00                        	mov edx, 5
0xbd26:     31 ff                                 	xor edi, edi
0xbd28:     e8 03 7c ff ff                        	call 0x3930 <dcgettext>
0xbd2d:     48 89 de                              	mov rsi, rbx
0xbd30:     48 89 c7                              	mov rdi, rax
0xbd33:     e8 b8 7d ff ff                        	call 0x3af0 <fputs_unlocked>
0xbd38:     48 8b 1d 49 45 21 00                  	mov rbx, qword ptr [rip + 0x214549]
0xbd3f:     48 8d 35 0a d1 00 00                  	lea rsi, [rip + 0xd10a]
0xbd46:     ba 05 00 00 00                        	mov edx, 5
0xbd4b:     31 ff                                 	xor edi, edi
0xbd4d:     e8 de 7b ff ff                        	call 0x3930 <dcgettext>
0xbd52:     48 89 de                              	mov rsi, rbx
0xbd55:     48 89 c7                              	mov rdi, rax
0xbd58:     e8 93 7d ff ff                        	call 0x3af0 <fputs_unlocked>
0xbd5d:     48 8b 1d 24 45 21 00                  	mov rbx, qword ptr [rip + 0x214524]
0xbd64:     48 8d 35 95 d2 00 00                  	lea rsi, [rip + 0xd295]
0xbd6b:     ba 05 00 00 00                        	mov edx, 5
0xbd70:     31 ff                                 	xor edi, edi
0xbd72:     e8 b9 7b ff ff                        	call 0x3930 <dcgettext>
0xbd77:     48 89 de                              	mov rsi, rbx
0xbd7a:     48 89 c7                              	mov rdi, rax
0xbd7d:     e8 6e 7d ff ff                        	call 0x3af0 <fputs_unlocked>
0xbd82:     48 8b 1d ff 44 21 00                  	mov rbx, qword ptr [rip + 0x2144ff]
0xbd89:     48 8d 35 d8 d3 00 00                  	lea rsi, [rip + 0xd3d8]
0xbd90:     ba 05 00 00 00                        	mov edx, 5
0xbd95:     31 ff                                 	xor edi, edi
0xbd97:     e8 94 7b ff ff                        	call 0x3930 <dcgettext>
0xbd9c:     48 89 de                              	mov rsi, rbx
0xbd9f:     48 89 c7                              	mov rdi, rax
0xbda2:     e8 49 7d ff ff                        	call 0x3af0 <fputs_unlocked>
0xbda7:     48 8b 1d da 44 21 00                  	mov rbx, qword ptr [rip + 0x2144da]
0xbdae:     48 8d 35 e3 d4 00 00                  	lea rsi, [rip + 0xd4e3]
0xbdb5:     ba 05 00 00 00                        	mov edx, 5
0xbdba:     31 ff                                 	xor edi, edi
0xbdbc:     e8 6f 7b ff ff                        	call 0x3930 <dcgettext>
0xbdc1:     48 89 de                              	mov rsi, rbx
0xbdc4:     48 89 c7                              	mov rdi, rax
0xbdc7:     e8 24 7d ff ff                        	call 0x3af0 <fputs_unlocked>
0xbdcc:     48 8b 1d b5 44 21 00                  	mov rbx, qword ptr [rip + 0x2144b5]
0xbdd3:     48 8d 35 be d6 00 00                  	lea rsi, [rip + 0xd6be]
0xbdda:     ba 05 00 00 00                        	mov edx, 5
0xbddf:     31 ff                                 	xor edi, edi
0xbde1:     e8 4a 7b ff ff                        	call 0x3930 <dcgettext>
0xbde6:     48 89 de                              	mov rsi, rbx
0xbde9:     48 89 c7                              	mov rdi, rax
0xbdec:     e8 ff 7c ff ff                        	call 0x3af0 <fputs_unlocked>
0xbdf1:     48 8b 1d 90 44 21 00                  	mov rbx, qword ptr [rip + 0x214490]
0xbdf8:     48 8d 35 61 d7 00 00                  	lea rsi, [rip + 0xd761]
0xbdff:     ba 05 00 00 00                        	mov edx, 5
0xbe04:     31 ff                                 	xor edi, edi
0xbe06:     e8 25 7b ff ff                        	call 0x3930 <dcgettext>
0xbe0b:     48 89 de                              	mov rsi, rbx
0xbe0e:     48 89 c7                              	mov rdi, rax
0xbe11:     e8 da 7c ff ff                        	call 0x3af0 <fputs_unlocked>
0xbe16:     48 8b 1d 6b 44 21 00                  	mov rbx, qword ptr [rip + 0x21446b]
0xbe1d:     48 8d 35 44 d9 00 00                  	lea rsi, [rip + 0xd944]
0xbe24:     ba 05 00 00 00                        	mov edx, 5
0xbe29:     31 ff                                 	xor edi, edi
0xbe2b:     e8 00 7b ff ff                        	call 0x3930 <dcgettext>
0xbe30:     48 89 de                              	mov rsi, rbx
0xbe33:     48 89 c7                              	mov rdi, rax
0xbe36:     e8 b5 7c ff ff                        	call 0x3af0 <fputs_unlocked>
0xbe3b:     48 8b 1d 46 44 21 00                  	mov rbx, qword ptr [rip + 0x214446]
0xbe42:     48 8d 35 37 db 00 00                  	lea rsi, [rip + 0xdb37]
0xbe49:     ba 05 00 00 00                        	mov edx, 5
0xbe4e:     31 ff                                 	xor edi, edi
0xbe50:     e8 db 7a ff ff                        	call 0x3930 <dcgettext>
0xbe55:     48 89 de                              	mov rsi, rbx
0xbe58:     48 89 c7                              	mov rdi, rax
0xbe5b:     e8 90 7c ff ff                        	call 0x3af0 <fputs_unlocked>
0xbe60:     48 8b 1d 21 44 21 00                  	mov rbx, qword ptr [rip + 0x214421]
0xbe67:     48 8d 35 a2 db 00 00                  	lea rsi, [rip + 0xdba2]
0xbe6e:     ba 05 00 00 00                        	mov edx, 5
0xbe73:     31 ff                                 	xor edi, edi
0xbe75:     e8 b6 7a ff ff                        	call 0x3930 <dcgettext>
0xbe7a:     48 89 de                              	mov rsi, rbx
0xbe7d:     48 89 c7                              	mov rdi, rax
0xbe80:     e8 6b 7c ff ff                        	call 0x3af0 <fputs_unlocked>
0xbe85:     48 8b 1d fc 43 21 00                  	mov rbx, qword ptr [rip + 0x2143fc]
0xbe8c:     48 8d 35 f5 dc 00 00                  	lea rsi, [rip + 0xdcf5]
0xbe93:     31 ff                                 	xor edi, edi
0xbe95:     ba 05 00 00 00                        	mov edx, 5
0xbe9a:     e8 91 7a ff ff                        	call 0x3930 <dcgettext>
0xbe9f:     48 89 de                              	mov rsi, rbx
0xbea2:     48 89 c7                              	mov rdi, rax
0xbea5:     e8 46 7c ff ff                        	call 0x3af0 <fputs_unlocked>
0xbeaa:     48 8b 1d d7 43 21 00                  	mov rbx, qword ptr [rip + 0x2143d7]
0xbeb1:     48 8d 35 40 de 00 00                  	lea rsi, [rip + 0xde40]
0xbeb8:     ba 05 00 00 00                        	mov edx, 5
0xbebd:     31 ff                                 	xor edi, edi
0xbebf:     e8 6c 7a ff ff                        	call 0x3930 <dcgettext>
0xbec4:     48 89 de                              	mov rsi, rbx
0xbec7:     48 89 c7                              	mov rdi, rax
0xbeca:     e8 21 7c ff ff                        	call 0x3af0 <fputs_unlocked>
0xbecf:     48 8b 1d b2 43 21 00                  	mov rbx, qword ptr [rip + 0x2143b2]
0xbed6:     48 8d 35 4b de 00 00                  	lea rsi, [rip + 0xde4b]
0xbedd:     ba 05 00 00 00                        	mov edx, 5
0xbee2:     31 ff                                 	xor edi, edi
0xbee4:     e8 47 7a ff ff                        	call 0x3930 <dcgettext>
0xbee9:     48 89 de                              	mov rsi, rbx
0xbeec:     48 89 c7                              	mov rdi, rax
0xbeef:     e8 fc 7b ff ff                        	call 0x3af0 <fputs_unlocked>
0xbef4:     48 8b 1d 8d 43 21 00                  	mov rbx, qword ptr [rip + 0x21438d]
0xbefb:     48 8d 35 5e de 00 00                  	lea rsi, [rip + 0xde5e]
0xbf02:     ba 05 00 00 00                        	mov edx, 5
0xbf07:     31 ff                                 	xor edi, edi
0xbf09:     e8 22 7a ff ff                        	call 0x3930 <dcgettext>
0xbf0e:     48 89 de                              	mov rsi, rbx
0xbf11:     48 89 c7                              	mov rdi, rax
0xbf14:     e8 d7 7b ff ff                        	call 0x3af0 <fputs_unlocked>
0xbf19:     48 8b 1d 68 43 21 00                  	mov rbx, qword ptr [rip + 0x214368]
0xbf20:     48 8d 35 d9 de 00 00                  	lea rsi, [rip + 0xded9]
0xbf27:     ba 05 00 00 00                        	mov edx, 5
0xbf2c:     31 ff                                 	xor edi, edi
0xbf2e:     e8 fd 79 ff ff                        	call 0x3930 <dcgettext>
0xbf33:     48 89 de                              	mov rsi, rbx
0xbf36:     48 89 c7                              	mov rdi, rax
0xbf39:     e8 b2 7b ff ff                        	call 0x3af0 <fputs_unlocked>
0xbf3e:     48 8b 1d 43 43 21 00                  	mov rbx, qword ptr [rip + 0x214343]
0xbf45:     48 8d 35 d4 df 00 00                  	lea rsi, [rip + 0xdfd4]
0xbf4c:     31 ff                                 	xor edi, edi
0xbf4e:     ba 05 00 00 00                        	mov edx, 5
0xbf53:     e8 d8 79 ff ff                        	call 0x3930 <dcgettext>
0xbf58:     48 89 de                              	mov rsi, rbx
0xbf5b:     48 89 c7                              	mov rdi, rax
0xbf5e:     e8 8d 7b ff ff                        	call 0x3af0 <fputs_unlocked>
0xbf63:     8b 05 77 42 21 00                     	mov eax, dword ptr [rip + 0x214277]
0xbf69:     83 f8 01                              	cmp eax, 1
0xbf6c:     74 15                                 	je 0xbf83 <function_bb20+0x463>
0xbf6e:     83 f8 02                              	cmp eax, 2
0xbf71:     48 8d 2d 86 bd 00 00                  	lea rbp, [rip + 0xbd86]
0xbf78:     48 8d 05 80 bd 00 00                  	lea rax, [rip + 0xbd80]
0xbf7f:     48 0f 44 e8                           	cmove rbp, rax
0xbf83:     48 8d 05 79 bd 00 00                  	lea rax, [rip + 0xbd79]
0xbf8a:     48 8d 0d b1 bd 00 00                  	lea rcx, [rip + 0xbdb1]
0xbf91:     48 8d 35 a5 c1 00 00                  	lea rsi, [rip + 0xc1a5]
0xbf98:     48 c7 44 24 60 00 00 00 00            	mov qword ptr [rsp + 0x60], 0
0xbfa1:     48 c7 44 24 68 00 00 00 00            	mov qword ptr [rsp + 0x68], 0
0xbfaa:     48 89 e3                              	mov rbx, rsp
0xbfad:     48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0xbfb2:     48 8d 05 c2 bd 00 00                  	lea rax, [rip + 0xbdc2]
0xbfb9:     48 89 4c 24 30                        	mov qword ptr [rsp + 0x30], rcx
0xbfbe:     48 8d 0d 87 bd 00 00                  	lea rcx, [rip + 0xbd87]
0xbfc5:     48 89 34 24                           	mov qword ptr [rsp], rsi
0xbfc9:     48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0xbfce:     48 8d 05 3e bd 00 00                  	lea rax, [rip + 0xbd3e]
0xbfd5:     48 89 4c 24 40                        	mov qword ptr [rsp + 0x40], rcx
0xbfda:     48 8d 0d 75 bd 00 00                  	lea rcx, [rip + 0xbd75]
0xbfe1:     48 89 44 24 18                        	mov qword ptr [rsp + 0x18], rax
0xbfe6:     48 8d 05 3c bd 00 00                  	lea rax, [rip + 0xbd3c]
0xbfed:     48 89 4c 24 50                        	mov qword ptr [rsp + 0x50], rcx
0xbff2:     48 89 44 24 20                        	mov qword ptr [rsp + 0x20], rax
0xbff7:     48 8d 05 35 bd 00 00                  	lea rax, [rip + 0xbd35]
0xbffe:     48 89 44 24 28                        	mov qword ptr [rsp + 0x28], rax
0xc003:     48 89 44 24 38                        	mov qword ptr [rsp + 0x38], rax
0xc008:     48 89 44 24 48                        	mov qword ptr [rsp + 0x48], rax
0xc00d:     48 89 44 24 58                        	mov qword ptr [rsp + 0x58], rax
0xc012:     eb 10                                 	jmp 0xc024 <function_bb20+0x504>
; data inside code section at 0xc014 -- 0xc018
0xc014:     0f 1f 40 00                                        |..@.            |
0xc018:     48 83 c3 10                           	add rbx, 0x10
0xc01c:     48 8b 33                              	mov rsi, qword ptr [rbx]
0xc01f:     48 85 f6                              	test rsi, rsi
0xc022:     74 0c                                 	je 0xc030 <function_bb20+0x510>
0xc024:     48 89 ef                              	mov rdi, rbp
0xc027:     e8 f4 7a ff ff                        	call 0x3b20 <strcmp>
0xc02c:     85 c0                                 	test eax, eax
0xc02e:     75 e8                                 	jne 0xc018 <function_bb20+0x4f8>
0xc030:     48 8b 5b 08                           	mov rbx, qword ptr [rbx + 8]
0xc034:     31 ff                                 	xor edi, edi
0xc036:     ba 05 00 00 00                        	mov edx, 5
0xc03b:     48 8d 35 1e bd 00 00                  	lea rsi, [rip + 0xbd1e]
0xc042:     48 85 db                              	test rbx, rbx
0xc045:     0f 84 bd 00 00 00                     	je 0xc108 <function_bb20+0x5e8>
0xc04b:     e8 e0 78 ff ff                        	call 0x3930 <dcgettext>
0xc050:     48 8d 0d 61 df 00 00                  	lea rcx, [rip + 0xdf61]
0xc057:     48 8d 15 19 bd 00 00                  	lea rdx, [rip + 0xbd19]
0xc05e:     48 89 c6                              	mov rsi, rax
0xc061:     bf 01 00 00 00                        	mov edi, 1
0xc066:     31 c0                                 	xor eax, eax
0xc068:     e8 63 7c ff ff                        	call 0x3cd0 <__printf_chk>
0xc06d:     31 f6                                 	xor esi, esi
0xc06f:     bf 05 00 00 00                        	mov edi, 5
0xc074:     e8 47 7c ff ff                        	call 0x3cc0 <setlocale>
0xc079:     48 85 c0                              	test rax, rax
0xc07c:     74 1c                                 	je 0xc09a <function_bb20+0x57a>
0xc07e:     48 8d 35 00 bd 00 00                  	lea rsi, [rip + 0xbd00]
0xc085:     ba 03 00 00 00                        	mov edx, 3
0xc08a:     48 89 c7                              	mov rdi, rax
0xc08d:     e8 6e 77 ff ff                        	call 0x3800 <strncmp>
0xc092:     85 c0                                 	test eax, eax
0xc094:     0f 85 f7 00 00 00                     	jne 0xc191 <function_bb20+0x671>
0xc09a:     48 8d 35 87 df 00 00                  	lea rsi, [rip + 0xdf87]
0xc0a1:     31 ff                                 	xor edi, edi
0xc0a3:     ba 05 00 00 00                        	mov edx, 5
0xc0a8:     e8 83 78 ff ff                        	call 0x3930 <dcgettext>
0xc0ad:     48 8d 15 04 df 00 00                  	lea rdx, [rip + 0xdf04]
0xc0b4:     48 89 e9                              	mov rcx, rbp
0xc0b7:     48 89 c6                              	mov rsi, rax
0xc0ba:     bf 01 00 00 00                        	mov edi, 1
0xc0bf:     31 c0                                 	xor eax, eax
0xc0c1:     e8 0a 7c ff ff                        	call 0x3cd0 <__printf_chk>
0xc0c6:     48 39 dd                              	cmp rbp, rbx
0xc0c9:     48 8d 0d 4d bc 00 00                  	lea rcx, [rip + 0xbc4d]
0xc0d0:     48 8d 2d 73 bb 00 00                  	lea rbp, [rip + 0xbb73]
0xc0d7:     48 0f 44 e9                           	cmove rbp, rcx
0xc0db:     48 8d 35 66 df 00 00                  	lea rsi, [rip + 0xdf66]
0xc0e2:     31 ff                                 	xor edi, edi
0xc0e4:     ba 05 00 00 00                        	mov edx, 5
0xc0e9:     e8 42 78 ff ff                        	call 0x3930 <dcgettext>
0xc0ee:     48 89 e9                              	mov rcx, rbp
0xc0f1:     48 89 c6                              	mov rsi, rax
0xc0f4:     48 89 da                              	mov rdx, rbx
0xc0f7:     bf 01 00 00 00                        	mov edi, 1
0xc0fc:     31 c0                                 	xor eax, eax
0xc0fe:     e8 cd 7b ff ff                        	call 0x3cd0 <__printf_chk>
0xc103:     e9 6a fa ff ff                        	jmp 0xbb72 <function_bb20+0x52>
0xc108:     e8 23 78 ff ff                        	call 0x3930 <dcgettext>
0xc10d:     48 8d 0d a4 de 00 00                  	lea rcx, [rip + 0xdea4]
0xc114:     48 8d 15 5c bc 00 00                  	lea rdx, [rip + 0xbc5c]
0xc11b:     48 89 c6                              	mov rsi, rax
0xc11e:     bf 01 00 00 00                        	mov edi, 1
0xc123:     31 c0                                 	xor eax, eax
0xc125:     e8 a6 7b ff ff                        	call 0x3cd0 <__printf_chk>
0xc12a:     31 f6                                 	xor esi, esi
0xc12c:     bf 05 00 00 00                        	mov edi, 5
0xc131:     e8 8a 7b ff ff                        	call 0x3cc0 <setlocale>
0xc136:     48 85 c0                              	test rax, rax
0xc139:     74 18                                 	je 0xc153 <function_bb20+0x633>
0xc13b:     48 8d 35 43 bc 00 00                  	lea rsi, [rip + 0xbc43]
0xc142:     ba 03 00 00 00                        	mov edx, 3
0xc147:     48 89 c7                              	mov rdi, rax
0xc14a:     e8 b1 76 ff ff                        	call 0x3800 <strncmp>
0xc14f:     85 c0                                 	test eax, eax
0xc151:     75 3b                                 	jne 0xc18e <function_bb20+0x66e>
0xc153:     48 8d 35 ce de 00 00                  	lea rsi, [rip + 0xdece]
0xc15a:     ba 05 00 00 00                        	mov edx, 5
0xc15f:     31 ff                                 	xor edi, edi
0xc161:     48 89 eb                              	mov rbx, rbp
0xc164:     e8 c7 77 ff ff                        	call 0x3930 <dcgettext>
0xc169:     48 8d 15 48 de 00 00                  	lea rdx, [rip + 0xde48]
0xc170:     48 89 e9                              	mov rcx, rbp
0xc173:     48 89 c6                              	mov rsi, rax
0xc176:     bf 01 00 00 00                        	mov edi, 1
0xc17b:     31 c0                                 	xor eax, eax
0xc17d:     48 8d 2d 99 bb 00 00                  	lea rbp, [rip + 0xbb99]
0xc184:     e8 47 7b ff ff                        	call 0x3cd0 <__printf_chk>
0xc189:     e9 4d ff ff ff                        	jmp 0xc0db <function_bb20+0x5bb>
0xc18e:     48 89 eb                              	mov rbx, rbp
0xc191:     48 8d 35 48 de 00 00                  	lea rsi, [rip + 0xde48]
0xc198:     31 ff                                 	xor edi, edi
0xc19a:     ba 05 00 00 00                        	mov edx, 5
0xc19f:     e8 8c 77 ff ff                        	call 0x3930 <dcgettext>
0xc1a4:     48 89 ea                              	mov rdx, rbp
0xc1a7:     48 89 c6                              	mov rsi, rax
0xc1aa:     bf 01 00 00 00                        	mov edi, 1
0xc1af:     31 c0                                 	xor eax, eax
0xc1b1:     e8 1a 7b ff ff                        	call 0x3cd0 <__printf_chk>
0xc1b6:     e9 df fe ff ff                        	jmp 0xc09a <function_bb20+0x57a>
; data inside code section at 0xc1bb -- 0xc1c0
0xc1bb:     0f 1f 44 00 00                                     |..D..           |
; function: function_c1c0 at 0xc1c0 -- 0xc2af
0xc1c0:     41 57                                 	push r15
0xc1c2:     41 56                                 	push r14
0xc1c4:     b8 01 04 00 00                        	mov eax, 0x401
0xc1c9:     41 55                                 	push r13
0xc1cb:     41 54                                 	push r12
0xc1cd:     49 89 fd                              	mov r13, rdi
0xc1d0:     55                                    	push rbp
0xc1d1:     53                                    	push rbx
0xc1d2:     48 8d 5e 01                           	lea rbx, [rsi + 1]
0xc1d6:     49 be ff ff ff ff ff ff ff 3f         	movabs r14, 0x3fffffffffffffff
0xc1e0:     49 bf fe ff ff ff ff ff ff 7f         	movabs r15, 0x7ffffffffffffffe
0xc1ea:     48 83 ec 08                           	sub rsp, 8
0xc1ee:     48 81 fe 01 04 00 00                  	cmp rsi, 0x401
0xc1f5:     48 0f 43 d8                           	cmovae rbx, rax
0xc1f9:     0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0xc200:     48 89 df                              	mov rdi, rbx
0xc203:     e8 70 7c ff ff                        	call 0x3e78 <malloc>
0xc208:     48 85 c0                              	test rax, rax
0xc20b:     48 89 c5                              	mov rbp, rax
0xc20e:     74 3b                                 	je 0xc24b <function_c1c0+0x8b>
0xc210:     48 89 da                              	mov rdx, rbx
0xc213:     48 89 c6                              	mov rsi, rax
0xc216:     4c 89 ef                              	mov rdi, r13
0xc219:     e8 92 76 ff ff                        	call 0x38b0 <readlink>
0xc21e:     48 85 c0                              	test rax, rax
0xc221:     49 89 c4                              	mov r12, rax
0xc224:     78 52                                 	js 0xc278 <function_c1c0+0xb8>
0xc226:     4c 39 e3                              	cmp rbx, r12
0xc229:     77 65                                 	ja 0xc290 <function_c1c0+0xd0>
0xc22b:     48 89 ef                              	mov rdi, rbp
0xc22e:     e8 3d 7c ff ff                        	call 0x3e70 <free>
0xc233:     4c 39 f3                              	cmp rbx, r14
0xc236:     77 28                                 	ja 0xc260 <function_c1c0+0xa0>
0xc238:     48 01 db                              	add rbx, rbx
0xc23b:     48 89 df                              	mov rdi, rbx
0xc23e:     e8 35 7c ff ff                        	call 0x3e78 <malloc>
0xc243:     48 85 c0                              	test rax, rax
0xc246:     48 89 c5                              	mov rbp, rax
0xc249:     75 c5                                 	jne 0xc210 <function_c1c0+0x50>
0xc24b:     48 83 c4 08                           	add rsp, 8
0xc24f:     48 89 e8                              	mov rax, rbp
0xc252:     5b                                    	pop rbx
0xc253:     5d                                    	pop rbp
0xc254:     41 5c                                 	pop r12
0xc256:     41 5d                                 	pop r13
0xc258:     41 5e                                 	pop r14
0xc25a:     41 5f                                 	pop r15
0xc25c:     c3                                    	ret 
; data inside code section at 0xc25d -- 0xc260
0xc25d:     0f 1f 00                                           |...             |
0xc260:     4c 39 fb                              	cmp rbx, r15
0xc263:     77 3b                                 	ja 0xc2a0 <function_c1c0+0xe0>
0xc265:     48 bb ff ff ff ff ff ff ff 7f         	movabs rbx, 0x7fffffffffffffff
0xc26f:     eb 8f                                 	jmp 0xc200 <function_c1c0+0x40>
; data inside code section at 0xc271 -- 0xc278
0xc271:     0f 1f 80 00 00 00 00                               |.......         |
0xc278:     e8 73 75 ff ff                        	call 0x37f0 <__errno_location>
0xc27d:     83 38 22                              	cmp dword ptr [rax], 0x22
0xc280:     74 a4                                 	je 0xc226 <function_c1c0+0x66>
0xc282:     48 89 ef                              	mov rdi, rbp
0xc285:     31 ed                                 	xor ebp, ebp
0xc287:     e8 e4 7b ff ff                        	call 0x3e70 <free>
0xc28c:     eb bd                                 	jmp 0xc24b <function_c1c0+0x8b>
; data inside code section at 0xc28e -- 0xc290
0xc28e:     66 90                                              |f.              |
0xc290:     42 c6 44 25 00 00                     	mov byte ptr [rbp + r12], 0
0xc296:     eb b3                                 	jmp 0xc24b <function_c1c0+0x8b>
; data inside code section at 0xc298 -- 0xc2a0
0xc298:     0f 1f 84 00 00 00 00 00                            |........        |
0xc2a0:     e8 4b 75 ff ff                        	call 0x37f0 <__errno_location>
0xc2a5:     31 ed                                 	xor ebp, ebp
0xc2a7:     c7 00 0c 00 00 00                     	mov dword ptr [rax], 0xc
0xc2ad:     eb 9c                                 	jmp 0xc24b <function_c1c0+0x8b>
; data inside code section at 0xc2af -- 0xc2b0
0xc2af:     90                                                 |.               |
; function: function_c2b0 at 0xc2b0 -- 0xc2ba
0xc2b0:     bf 01 00 00 00                        	mov edi, 1
0xc2b5:     e9 66 f8 ff ff                        	jmp 0xbb20 <function_bb20>
; data inside code section at 0xc2ba -- 0xc2c0
0xc2ba:     66 0f 1f 44 00 00                                  |f..D..          |
; function: function_c2c0 at 0xc2c0 -- 0xc3d6
0xc2c0:     41 57                                 	push r15
0xc2c2:     41 56                                 	push r14
0xc2c4:     49 89 f7                              	mov r15, rsi
0xc2c7:     41 55                                 	push r13
0xc2c9:     41 54                                 	push r12
0xc2cb:     49 89 cd                              	mov r13, rcx
0xc2ce:     55                                    	push rbp
0xc2cf:     53                                    	push rbx
0xc2d0:     48 89 d5                              	mov rbp, rdx
0xc2d3:     48 83 ec 28                           	sub rsp, 0x28
0xc2d7:     48 89 7c 24 08                        	mov qword ptr [rsp + 8], rdi
0xc2dc:     48 89 54 24 18                        	mov qword ptr [rsp + 0x18], rdx
0xc2e1:     e8 6a 76 ff ff                        	call 0x3950 <strlen>
0xc2e6:     4d 8b 37                              	mov r14, qword ptr [r15]
0xc2e9:     48 c7 04 24 ff ff ff ff               	mov qword ptr [rsp], -1
0xc2f1:     4d 85 f6                              	test r14, r14
0xc2f4:     0f 84 b3 00 00 00                     	je 0xc3ad <function_c2c0+0xed>
0xc2fa:     49 89 c4                              	mov r12, rax
0xc2fd:     c6 44 24 17 00                        	mov byte ptr [rsp + 0x17], 0
0xc302:     31 db                                 	xor ebx, ebx
0xc304:     eb 51                                 	jmp 0xc357 <function_c2c0+0x97>
; data inside code section at 0xc306 -- 0xc310
0xc306:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0xc310:     48 8b 44 24 18                        	mov rax, qword ptr [rsp + 0x18]
0xc315:     48 85 c0                              	test rax, rax
0xc318:     0f 84 a2 00 00 00                     	je 0xc3c0 <function_c2c0+0x100>
0xc31e:     48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0xc322:     4c 89 ea                              	mov rdx, r13
0xc325:     48 89 ee                              	mov rsi, rbp
0xc328:     49 0f af fd                           	imul rdi, r13
0xc32c:     48 01 c7                              	add rdi, rax
0xc32f:     e8 9c 77 ff ff                        	call 0x3ad0 <memcmp>
0xc334:     85 c0                                 	test eax, eax
0xc336:     0f b6 44 24 17                        	movzx eax, byte ptr [rsp + 0x17]
0xc33b:     b9 01 00 00 00                        	mov ecx, 1
0xc340:     0f 45 c1                              	cmovne eax, ecx
0xc343:     88 44 24 17                           	mov byte ptr [rsp + 0x17], al
0xc347:     48 83 c3 01                           	add rbx, 1
0xc34b:     4c 01 ed                              	add rbp, r13
0xc34e:     4d 8b 34 df                           	mov r14, qword ptr [r15 + rbx*8]
0xc352:     4d 85 f6                              	test r14, r14
0xc355:     74 41                                 	je 0xc398 <function_c2c0+0xd8>
0xc357:     48 8b 74 24 08                        	mov rsi, qword ptr [rsp + 8]
0xc35c:     4c 89 e2                              	mov rdx, r12
0xc35f:     4c 89 f7                              	mov rdi, r14
0xc362:     e8 99 74 ff ff                        	call 0x3800 <strncmp>
0xc367:     85 c0                                 	test eax, eax
0xc369:     75 dc                                 	jne 0xc347 <function_c2c0+0x87>
0xc36b:     4c 89 f7                              	mov rdi, r14
0xc36e:     e8 dd 75 ff ff                        	call 0x3950 <strlen>
0xc373:     4c 39 e0                              	cmp rax, r12
0xc376:     74 58                                 	je 0xc3d0 <function_c2c0+0x110>
0xc378:     48 83 3c 24 ff                        	cmp qword ptr [rsp], -1
0xc37d:     75 91                                 	jne 0xc310 <function_c2c0+0x50>
0xc37f:     48 89 1c 24                           	mov qword ptr [rsp], rbx
0xc383:     48 83 c3 01                           	add rbx, 1
0xc387:     4c 01 ed                              	add rbp, r13
0xc38a:     4d 8b 34 df                           	mov r14, qword ptr [r15 + rbx*8]
0xc38e:     4d 85 f6                              	test r14, r14
0xc391:     75 c4                                 	jne 0xc357 <function_c2c0+0x97>
0xc393:     0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0xc398:     80 7c 24 17 00                        	cmp byte ptr [rsp + 0x17], 0
0xc39d:     48 c7 c0 fe ff ff ff                  	mov rax, -2
0xc3a4:     48 0f 44 04 24                        	cmove rax, qword ptr [rsp]
0xc3a9:     48 89 04 24                           	mov qword ptr [rsp], rax
0xc3ad:     48 8b 04 24                           	mov rax, qword ptr [rsp]
0xc3b1:     48 83 c4 28                           	add rsp, 0x28
0xc3b5:     5b                                    	pop rbx
0xc3b6:     5d                                    	pop rbp
0xc3b7:     41 5c                                 	pop r12
0xc3b9:     41 5d                                 	pop r13
0xc3bb:     41 5e                                 	pop r14
0xc3bd:     41 5f                                 	pop r15
0xc3bf:     c3                                    	ret 
0xc3c0:     c6 44 24 17 01                        	mov byte ptr [rsp + 0x17], 1
0xc3c5:     eb 80                                 	jmp 0xc347 <function_c2c0+0x87>
; data inside code section at 0xc3c7 -- 0xc3d0
0xc3c7:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xc3d0:     48 89 1c 24                           	mov qword ptr [rsp], rbx
0xc3d4:     eb d7                                 	jmp 0xc3ad <function_c2c0+0xed>
; data inside code section at 0xc3d6 -- 0xc3e0
0xc3d6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_c3e0 at 0xc3e0 -- 0xc453
0xc3e0:     48 83 fa ff                           	cmp rdx, -1
0xc3e4:     41 54                                 	push r12
0xc3e6:     ba 05 00 00 00                        	mov edx, 5
0xc3eb:     55                                    	push rbp
0xc3ec:     49 89 f4                              	mov r12, rsi
0xc3ef:     53                                    	push rbx
0xc3f0:     48 89 fd                              	mov rbp, rdi
0xc3f3:     74 4b                                 	je 0xc440 <function_c3e0+0x60>
0xc3f5:     48 8d 35 c4 de 00 00                  	lea rsi, [rip + 0xdec4]
0xc3fc:     31 ff                                 	xor edi, edi
0xc3fe:     e8 2d 75 ff ff                        	call 0x3930 <dcgettext>
0xc403:     48 89 c3                              	mov rbx, rax
0xc406:     48 89 ee                              	mov rsi, rbp
0xc409:     bf 01 00 00 00                        	mov edi, 1
0xc40e:     e8 ad 78 00 00                        	call 0x13cc0 <function_13cc0>
0xc413:     4c 89 e2                              	mov rdx, r12
0xc416:     48 89 c5                              	mov rbp, rax
0xc419:     be 08 00 00 00                        	mov esi, 8
0xc41e:     31 ff                                 	xor edi, edi
0xc420:     e8 cb 74 00 00                        	call 0x138f0 <function_138f0>
0xc425:     49 89 e8                              	mov r8, rbp
0xc428:     48 89 da                              	mov rdx, rbx
0xc42b:     48 89 c1                              	mov rcx, rax
0xc42e:     5b                                    	pop rbx
0xc42f:     5d                                    	pop rbp
0xc430:     41 5c                                 	pop r12
0xc432:     31 f6                                 	xor esi, esi
0xc434:     31 ff                                 	xor edi, edi
0xc436:     31 c0                                 	xor eax, eax
0xc438:     e9 e3 78 ff ff                        	jmp 0x3d20 <error>
; data inside code section at 0xc43d -- 0xc440
0xc43d:     0f 1f 00                                           |...             |
0xc440:     48 8d 35 5e de 00 00                  	lea rsi, [rip + 0xde5e]
0xc447:     31 ff                                 	xor edi, edi
0xc449:     e8 e2 74 ff ff                        	call 0x3930 <dcgettext>
0xc44e:     48 89 c3                              	mov rbx, rax
0xc451:     eb b3                                 	jmp 0xc406 <function_c3e0+0x26>
; data inside code section at 0xc453 -- 0xc460
0xc453:     0f 1f 00 66 2e 0f 1f 84  00 00 00 00 00            |...f.........   |
; function: function_c460 at 0xc460 -- 0xc580
0xc460:     41 57                                 	push r15
0xc462:     41 56                                 	push r14
0xc464:     49 89 fe                              	mov r14, rdi
0xc467:     41 55                                 	push r13
0xc469:     41 54                                 	push r12
0xc46b:     31 ff                                 	xor edi, edi
0xc46d:     55                                    	push rbp
0xc46e:     53                                    	push rbx
0xc46f:     48 89 f5                              	mov rbp, rsi
0xc472:     48 8d 35 64 de 00 00                  	lea rsi, [rip + 0xde64]
0xc479:     49 89 d4                              	mov r12, rdx
0xc47c:     ba 05 00 00 00                        	mov edx, 5
0xc481:     48 83 ec 08                           	sub rsp, 8
0xc485:     48 8b 1d 34 3e 21 00                  	mov rbx, qword ptr [rip + 0x213e34]
0xc48c:     e8 9f 74 ff ff                        	call 0x3930 <dcgettext>
0xc491:     48 89 c7                              	mov rdi, rax
0xc494:     48 89 de                              	mov rsi, rbx
0xc497:     e8 54 76 ff ff                        	call 0x3af0 <fputs_unlocked>
0xc49c:     4d 8b 3e                              	mov r15, qword ptr [r14]
0xc49f:     4d 85 ff                              	test r15, r15
0xc4a2:     0f 84 90 00 00 00                     	je 0xc538 <function_c460+0xd8>
0xc4a8:     45 31 ed                              	xor r13d, r13d
0xc4ab:     31 db                                 	xor ebx, ebx
0xc4ad:     eb 39                                 	jmp 0xc4e8 <function_c460+0x88>
; data inside code section at 0xc4af -- 0xc4b0
0xc4af:     90                                                 |.               |
0xc4b0:     4c 89 ff                              	mov rdi, r15
0xc4b3:     48 83 c3 01                           	add rbx, 1
0xc4b7:     49 89 ed                              	mov r13, rbp
0xc4ba:     e8 21 78 00 00                        	call 0x13ce0 <function_13ce0>
0xc4bf:     48 8b 3d fa 3d 21 00                  	mov rdi, qword ptr [rip + 0x213dfa]
0xc4c6:     48 8d 15 25 de 00 00                  	lea rdx, [rip + 0xde25]
0xc4cd:     48 89 c1                              	mov rcx, rax
0xc4d0:     be 01 00 00 00                        	mov esi, 1
0xc4d5:     31 c0                                 	xor eax, eax
0xc4d7:     4c 01 e5                              	add rbp, r12
0xc4da:     e8 11 79 ff ff                        	call 0x3df0 <__fprintf_chk>
0xc4df:     4d 8b 3c de                           	mov r15, qword ptr [r14 + rbx*8]
0xc4e3:     4d 85 ff                              	test r15, r15
0xc4e6:     74 50                                 	je 0xc538 <function_c460+0xd8>
0xc4e8:     48 85 db                              	test rbx, rbx
0xc4eb:     74 c3                                 	je 0xc4b0 <function_c460+0x50>
0xc4ed:     4c 89 e2                              	mov rdx, r12
0xc4f0:     48 89 ee                              	mov rsi, rbp
0xc4f3:     4c 89 ef                              	mov rdi, r13
0xc4f6:     e8 d5 75 ff ff                        	call 0x3ad0 <memcmp>
0xc4fb:     85 c0                                 	test eax, eax
0xc4fd:     75 b1                                 	jne 0xc4b0 <function_c460+0x50>
0xc4ff:     4c 89 ff                              	mov rdi, r15
0xc502:     48 83 c3 01                           	add rbx, 1
0xc506:     4c 01 e5                              	add rbp, r12
0xc509:     e8 d2 77 00 00                        	call 0x13ce0 <function_13ce0>
0xc50e:     48 8b 3d ab 3d 21 00                  	mov rdi, qword ptr [rip + 0x213dab]
0xc515:     48 8d 15 de dd 00 00                  	lea rdx, [rip + 0xddde]
0xc51c:     48 89 c1                              	mov rcx, rax
0xc51f:     be 01 00 00 00                        	mov esi, 1
0xc524:     31 c0                                 	xor eax, eax
0xc526:     e8 c5 78 ff ff                        	call 0x3df0 <__fprintf_chk>
0xc52b:     4d 8b 3c de                           	mov r15, qword ptr [r14 + rbx*8]
0xc52f:     4d 85 ff                              	test r15, r15
0xc532:     75 b4                                 	jne 0xc4e8 <function_c460+0x88>
0xc534:     0f 1f 40 00                           	nop dword ptr [rax]
0xc538:     48 8b 3d 81 3d 21 00                  	mov rdi, qword ptr [rip + 0x213d81]
0xc53f:     48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0xc543:     48 3b 47 30                           	cmp rax, qword ptr [rdi + 0x30]
0xc547:     73 1f                                 	jae 0xc568 <function_c460+0x108>
0xc549:     48 8d 50 01                           	lea rdx, [rax + 1]
0xc54d:     48 89 57 28                           	mov qword ptr [rdi + 0x28], rdx
0xc551:     c6 00 0a                              	mov byte ptr [rax], 0xa
0xc554:     48 83 c4 08                           	add rsp, 8
0xc558:     5b                                    	pop rbx
0xc559:     5d                                    	pop rbp
0xc55a:     41 5c                                 	pop r12
0xc55c:     41 5d                                 	pop r13
0xc55e:     41 5e                                 	pop r14
0xc560:     41 5f                                 	pop r15
0xc562:     c3                                    	ret 
; data inside code section at 0xc563 -- 0xc568
0xc563:     0f 1f 44 00 00                                     |..D..           |
0xc568:     48 83 c4 08                           	add rsp, 8
0xc56c:     be 0a 00 00 00                        	mov esi, 0xa
0xc571:     5b                                    	pop rbx
0xc572:     5d                                    	pop rbp
0xc573:     41 5c                                 	pop r12
0xc575:     41 5d                                 	pop r13
0xc577:     41 5e                                 	pop r14
0xc579:     41 5f                                 	pop r15
0xc57b:     e9 50 74 ff ff                        	jmp 0x39d0 <__overflow>
; function: function_c580 at 0xc580 -- 0xc5ed
0xc580:     41 57                                 	push r15
0xc582:     41 56                                 	push r14
0xc584:     49 89 fe                              	mov r14, rdi
0xc587:     41 55                                 	push r13
0xc589:     41 54                                 	push r12
0xc58b:     49 89 f4                              	mov r12, rsi
0xc58e:     55                                    	push rbp
0xc58f:     53                                    	push rbx
0xc590:     48 89 cd                              	mov rbp, rcx
0xc593:     48 89 d3                              	mov rbx, rdx
0xc596:     4c 89 c1                              	mov rcx, r8
0xc599:     48 89 ea                              	mov rdx, rbp
0xc59c:     48 83 ec 08                           	sub rsp, 8
0xc5a0:     48 89 de                              	mov rsi, rbx
0xc5a3:     4c 89 e7                              	mov rdi, r12
0xc5a6:     4d 89 c7                              	mov r15, r8
0xc5a9:     4d 89 cd                              	mov r13, r9
0xc5ac:     e8 0f fd ff ff                        	call 0xc2c0 <function_c2c0>
0xc5b1:     48 85 c0                              	test rax, rax
0xc5b4:     78 0f                                 	js 0xc5c5 <function_c580+0x45>
0xc5b6:     48 83 c4 08                           	add rsp, 8
0xc5ba:     5b                                    	pop rbx
0xc5bb:     5d                                    	pop rbp
0xc5bc:     41 5c                                 	pop r12
0xc5be:     41 5d                                 	pop r13
0xc5c0:     41 5e                                 	pop r14
0xc5c2:     41 5f                                 	pop r15
0xc5c4:     c3                                    	ret 
0xc5c5:     48 89 c2                              	mov rdx, rax
0xc5c8:     4c 89 e6                              	mov rsi, r12
0xc5cb:     4c 89 f7                              	mov rdi, r14
0xc5ce:     e8 0d fe ff ff                        	call 0xc3e0 <function_c3e0>
0xc5d3:     4c 89 fa                              	mov rdx, r15
0xc5d6:     48 89 ee                              	mov rsi, rbp
0xc5d9:     48 89 df                              	mov rdi, rbx
0xc5dc:     e8 7f fe ff ff                        	call 0xc460 <function_c460>
0xc5e1:     41 ff d5                              	call r13
0xc5e4:     48 c7 c0 ff ff ff ff                  	mov rax, -1
0xc5eb:     eb c9                                 	jmp 0xc5b6 <function_c580+0x36>
; data inside code section at 0xc5ed -- 0xc5f0
0xc5ed:     0f 1f 00                                           |...             |
; function: function_c5f0 at 0xc5f0 -- 0xc63d
0xc5f0:     41 56                                 	push r14
0xc5f2:     41 55                                 	push r13
0xc5f4:     41 54                                 	push r12
0xc5f6:     55                                    	push rbp
0xc5f7:     53                                    	push rbx
0xc5f8:     4c 8b 36                              	mov r14, qword ptr [rsi]
0xc5fb:     4d 85 f6                              	test r14, r14
0xc5fe:     74 31                                 	je 0xc631 <function_c5f0+0x41>
0xc600:     49 89 cc                              	mov r12, rcx
0xc603:     49 89 fd                              	mov r13, rdi
0xc606:     48 89 d5                              	mov rbp, rdx
0xc609:     48 8d 5e 08                           	lea rbx, [rsi + 8]
0xc60d:     eb 10                                 	jmp 0xc61f <function_c5f0+0x2f>
; data inside code section at 0xc60f -- 0xc610
0xc60f:     90                                                 |.               |
0xc610:     4c 8b 33                              	mov r14, qword ptr [rbx]
0xc613:     4c 01 e5                              	add rbp, r12
0xc616:     48 83 c3 08                           	add rbx, 8
0xc61a:     4d 85 f6                              	test r14, r14
0xc61d:     74 12                                 	je 0xc631 <function_c5f0+0x41>
0xc61f:     4c 89 e2                              	mov rdx, r12
0xc622:     48 89 ee                              	mov rsi, rbp
0xc625:     4c 89 ef                              	mov rdi, r13
0xc628:     e8 a3 74 ff ff                        	call 0x3ad0 <memcmp>
0xc62d:     85 c0                                 	test eax, eax
0xc62f:     75 df                                 	jne 0xc610 <function_c5f0+0x20>
0xc631:     5b                                    	pop rbx
0xc632:     4c 89 f0                              	mov rax, r14
0xc635:     5d                                    	pop rbp
0xc636:     41 5c                                 	pop r12
0xc638:     41 5d                                 	pop r13
0xc63a:     41 5e                                 	pop r14
0xc63c:     c3                                    	ret 
; data inside code section at 0xc63d -- 0xc640
0xc63d:     0f 1f 00                                           |...             |
; function: function_c640 at 0xc640 -- 0xcc88
0xc640:     41 57                                 	push r15
0xc642:     41 56                                 	push r14
0xc644:     41 55                                 	push r13
0xc646:     41 54                                 	push r12
0xc648:     55                                    	push rbp
0xc649:     53                                    	push rbx
0xc64a:     48 81 ec e8 00 00 00                  	sub rsp, 0xe8
0xc651:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0xc65a:     48 89 84 24 d8 00 00 00               	mov qword ptr [rsp + 0xd8], rax
0xc662:     31 c0                                 	xor eax, eax
0xc664:     89 f0                                 	mov eax, esi
0xc666:     83 e0 04                              	and eax, 4
0xc669:     0f 95 44 24 1b                        	setne byte ptr [rsp + 0x1b]
0xc66e:     83 e6 03                              	and esi, 3
0xc671:     89 44 24 1c                           	mov dword ptr [rsp + 0x1c], eax
0xc675:     8d 46 ff                              	lea eax, [rsi - 1]
0xc678:     89 74 24 04                           	mov dword ptr [rsp + 4], esi
0xc67c:     85 c6                                 	test esi, eax
0xc67e:     0f 85 4c 05 00 00                     	jne 0xcbd0 <function_c640+0x590>
0xc684:     48 85 ff                              	test rdi, rdi
0xc687:     49 89 fe                              	mov r14, rdi
0xc68a:     0f 84 40 05 00 00                     	je 0xcbd0 <function_c640+0x590>
0xc690:     0f b6 07                              	movzx eax, byte ptr [rdi]
0xc693:     84 c0                                 	test al, al
0xc695:     0f 84 75 05 00 00                     	je 0xcc10 <function_c640+0x5d0>
0xc69b:     3c 2f                                 	cmp al, 0x2f
0xc69d:     0f 84 bd 04 00 00                     	je 0xcb60 <function_c640+0x520>
0xc6a3:     e8 98 81 00 00                        	call 0x14840 <function_14840>
0xc6a8:     48 85 c0                              	test rax, rax
0xc6ab:     48 89 c5                              	mov rbp, rax
0xc6ae:     0f 84 ac 01 00 00                     	je 0xc860 <function_c640+0x220>
0xc6b4:     48 89 c7                              	mov rdi, rax
0xc6b7:     e8 94 72 ff ff                        	call 0x3950 <strlen>
0xc6bc:     48 3d ff 0f 00 00                     	cmp rax, 0xfff
0xc6c2:     49 89 c7                              	mov r15, rax
0xc6c5:     0f 86 b5 04 00 00                     	jbe 0xcb80 <function_c640+0x540>
0xc6cb:     49 01 ef                              	add r15, rbp
0xc6ce:     4c 89 fb                              	mov rbx, r15
0xc6d1:     48 8d 44 24 40                        	lea rax, [rsp + 0x40]
0xc6d6:     4c 89 74 24 20                        	mov qword ptr [rsp + 0x20], r14
0xc6db:     48 c7 44 24 10 00 00 00 00            	mov qword ptr [rsp + 0x10], 0
0xc6e4:     48 c7 44 24 30 00 00 00 00            	mov qword ptr [rsp + 0x30], 0
0xc6ed:     48 c7 44 24 28 00 00 00 00            	mov qword ptr [rsp + 0x28], 0
0xc6f6:     48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0xc6fb:     41 0f b6 06                           	movzx eax, byte ptr [r14]
0xc6ff:     84 c0                                 	test al, al
0xc701:     0f 84 08 01 00 00                     	je 0xc80f <function_c640+0x1cf>
0xc707:     66 0f 1f 84 00 00 00 00 00            	nop word ptr [rax + rax]
0xc710:     3c 2f                                 	cmp al, 0x2f
0xc712:     75 18                                 	jne 0xc72c <function_c640+0xec>
0xc714:     0f 1f 40 00                           	nop dword ptr [rax]
0xc718:     49 83 c6 01                           	add r14, 1
0xc71c:     41 0f b6 06                           	movzx eax, byte ptr [r14]
0xc720:     3c 2f                                 	cmp al, 0x2f
0xc722:     74 f4                                 	je 0xc718 <function_c640+0xd8>
0xc724:     84 c0                                 	test al, al
0xc726:     0f 84 c4 02 00 00                     	je 0xc9f0 <function_c640+0x3b0>
0xc72c:     4d 89 f5                              	mov r13, r14
0xc72f:     eb 0c                                 	jmp 0xc73d <function_c640+0xfd>
; data inside code section at 0xc731 -- 0xc738
0xc731:     0f 1f 80 00 00 00 00                               |.......         |
0xc738:     80 fa 2f                              	cmp dl, 0x2f
0xc73b:     74 0d                                 	je 0xc74a <function_c640+0x10a>
0xc73d:     49 83 c5 01                           	add r13, 1
0xc741:     41 0f b6 55 00                        	movzx edx, byte ptr [r13]
0xc746:     84 d2                                 	test dl, dl
0xc748:     75 ee                                 	jne 0xc738 <function_c640+0xf8>
0xc74a:     4d 39 f5                              	cmp r13, r14
0xc74d:     0f 84 bc 00 00 00                     	je 0xc80f <function_c640+0x1cf>
0xc753:     4d 89 ec                              	mov r12, r13
0xc756:     4d 29 f4                              	sub r12, r14
0xc759:     49 83 fc 01                           	cmp r12, 1
0xc75d:     0f 84 cd 01 00 00                     	je 0xc930 <function_c640+0x2f0>
0xc763:     49 83 fc 02                           	cmp r12, 2
0xc767:     75 08                                 	jne 0xc771 <function_c640+0x131>
0xc769:     3c 2e                                 	cmp al, 0x2e
0xc76b:     0f 84 8f 02 00 00                     	je 0xca00 <function_c640+0x3c0>
0xc771:     41 80 7f ff 2f                        	cmp byte ptr [r15 - 1], 0x2f
0xc776:     74 08                                 	je 0xc780 <function_c640+0x140>
0xc778:     41 c6 07 2f                           	mov byte ptr [r15], 0x2f
0xc77c:     49 83 c7 01                           	add r15, 1
0xc780:     4b 8d 04 27                           	lea rax, [r15 + r12]
0xc784:     48 39 c3                              	cmp rbx, rax
0xc787:     77 31                                 	ja 0xc7ba <function_c640+0x17a>
0xc789:     48 29 eb                              	sub rbx, rbp
0xc78c:     49 29 ef                              	sub r15, rbp
0xc78f:     48 89 ef                              	mov rdi, rbp
0xc792:     49 8d 44 1c 01                        	lea rax, [r12 + rbx + 1]
0xc797:     48 81 c3 00 10 00 00                  	add rbx, 0x1000
0xc79e:     49 81 fc 00 10 00 00                  	cmp r12, 0x1000
0xc7a5:     48 0f 4d d8                           	cmovge rbx, rax
0xc7a9:     48 89 de                              	mov rsi, rbx
0xc7ac:     e8 2f 7d 00 00                        	call 0x144e0 <function_144e0>
0xc7b1:     48 89 c5                              	mov rbp, rax
0xc7b4:     48 01 c3                              	add rbx, rax
0xc7b7:     49 01 c7                              	add r15, rax
0xc7ba:     4c 89 ff                              	mov rdi, r15
0xc7bd:     4c 89 e2                              	mov rdx, r12
0xc7c0:     4c 89 f6                              	mov rsi, r14
0xc7c3:     e8 b8 73 ff ff                        	call 0x3b80 <memcpy>
0xc7c8:     83 7c 24 04 02                        	cmp dword ptr [rsp + 4], 2
0xc7cd:     4f 8d 3c 27                           	lea r15, [r15 + r12]
0xc7d1:     41 c6 07 00                           	mov byte ptr [r15], 0
0xc7d5:     0f 85 b5 00 00 00                     	jne 0xc890 <function_c640+0x250>
0xc7db:     80 7c 24 1b 00                        	cmp byte ptr [rsp + 0x1b], 0
0xc7e0:     0f 84 aa 00 00 00                     	je 0xc890 <function_c640+0x250>
0xc7e6:     c7 44 24 58 00 00 00 00               	mov dword ptr [rsp + 0x58], 0
0xc7ee:     41 80 7d 00 00                        	cmp byte ptr [r13], 0
0xc7f3:     74 0b                                 	je 0xc800 <function_c640+0x1c0>
0xc7f5:     83 7c 24 04 02                        	cmp dword ptr [rsp + 4], 2
0xc7fa:     0f 85 57 04 00 00                     	jne 0xcc57 <function_c640+0x617>
0xc800:     4d 89 ee                              	mov r14, r13
0xc803:     41 0f b6 06                           	movzx eax, byte ptr [r14]
0xc807:     84 c0                                 	test al, al
0xc809:     0f 85 01 ff ff ff                     	jne 0xc710 <function_c640+0xd0>
0xc80f:     48 8d 45 01                           	lea rax, [rbp + 1]
0xc813:     49 39 c7                              	cmp r15, rax
0xc816:     76 0b                                 	jbe 0xc823 <function_c640+0x1e3>
0xc818:     41 80 7f ff 2f                        	cmp byte ptr [r15 - 1], 0x2f
0xc81d:     75 04                                 	jne 0xc823 <function_c640+0x1e3>
0xc81f:     49 83 ef 01                           	sub r15, 1
0xc823:     49 8d 47 01                           	lea rax, [r15 + 1]
0xc827:     41 c6 07 00                           	mov byte ptr [r15], 0
0xc82b:     48 39 c3                              	cmp rbx, rax
0xc82e:     74 12                                 	je 0xc842 <function_c640+0x202>
0xc830:     49 29 ef                              	sub r15, rbp
0xc833:     48 89 ef                              	mov rdi, rbp
0xc836:     49 8d 77 01                           	lea rsi, [r15 + 1]
0xc83a:     e8 a1 7c 00 00                        	call 0x144e0 <function_144e0>
0xc83f:     48 89 c5                              	mov rbp, rax
0xc842:     48 8b 7c 24 28                        	mov rdi, qword ptr [rsp + 0x28]
0xc847:     e8 24 76 ff ff                        	call 0x3e70 <free>
0xc84c:     48 8b 44 24 10                        	mov rax, qword ptr [rsp + 0x10]
0xc851:     48 85 c0                              	test rax, rax
0xc854:     74 0a                                 	je 0xc860 <function_c640+0x220>
0xc856:     48 89 c7                              	mov rdi, rax
0xc859:     e8 f2 1a 00 00                        	call 0xe350 <function_e350>
0xc85e:     66 90                                 	nop 
0xc860:     48 8b 8c 24 d8 00 00 00               	mov rcx, qword ptr [rsp + 0xd8]
0xc868:     64 48 33 0c 25 28 00 00 00            	xor rcx, qword ptr fs:[0x28]
0xc871:     48 89 e8                              	mov rax, rbp
0xc874:     0f 85 f7 03 00 00                     	jne 0xcc71 <function_c640+0x631>
0xc87a:     48 81 c4 e8 00 00 00                  	add rsp, 0xe8
0xc881:     5b                                    	pop rbx
0xc882:     5d                                    	pop rbp
0xc883:     41 5c                                 	pop r12
0xc885:     41 5d                                 	pop r13
0xc887:     41 5e                                 	pop r14
0xc889:     41 5f                                 	pop r15
0xc88b:     c3                                    	ret 
; data inside code section at 0xc88c -- 0xc890
0xc88c:     0f 1f 40 00                                        |..@.            |
0xc890:     8b 44 24 1c                           	mov eax, dword ptr [rsp + 0x1c]
0xc894:     48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0xc899:     48 89 ee                              	mov rsi, rbp
0xc89c:     bf 01 00 00 00                        	mov edi, 1
0xc8a1:     85 c0                                 	test eax, eax
0xc8a3:     0f 84 b7 00 00 00                     	je 0xc960 <function_c640+0x320>
0xc8a9:     e8 32 73 ff ff                        	call 0x3be0 <__xstat>
0xc8ae:     85 c0                                 	test eax, eax
0xc8b0:     0f 95 c0                              	setne al
0xc8b3:     84 c0                                 	test al, al
0xc8b5:     0f 84 85 00 00 00                     	je 0xc940 <function_c640+0x300>
0xc8bb:     e8 30 6f ff ff                        	call 0x37f0 <__errno_location>
0xc8c0:     49 89 c6                              	mov r14, rax
0xc8c3:     8b 10                                 	mov edx, dword ptr [rax]
0xc8c5:     8b 44 24 04                           	mov eax, dword ptr [rsp + 4]
0xc8c9:     85 c0                                 	test eax, eax
0xc8cb:     74 31                                 	je 0xc8fe <function_c640+0x2be>
0xc8cd:     83 f8 01                              	cmp eax, 1
0xc8d0:     0f 85 10 ff ff ff                     	jne 0xc7e6 <function_c640+0x1a6>
0xc8d6:     48 8d 35 70 b6 00 00                  	lea rsi, [rip + 0xb670]
0xc8dd:     4c 89 ef                              	mov rdi, r13
0xc8e0:     89 54 24 38                           	mov dword ptr [rsp + 0x38], edx
0xc8e4:     e8 c7 71 ff ff                        	call 0x3ab0 <strspn>
0xc8e9:     41 80 7c 05 00 00                     	cmp byte ptr [r13 + rax], 0
0xc8ef:     8b 54 24 38                           	mov edx, dword ptr [rsp + 0x38]
0xc8f3:     75 09                                 	jne 0xc8fe <function_c640+0x2be>
0xc8f5:     83 fa 02                              	cmp edx, 2
0xc8f8:     0f 84 02 ff ff ff                     	je 0xc800 <function_c640+0x1c0>
0xc8fe:     4d 89 f4                              	mov r12, r14
0xc901:     48 8b 7c 24 28                        	mov rdi, qword ptr [rsp + 0x28]
0xc906:     89 54 24 04                           	mov dword ptr [rsp + 4], edx
0xc90a:     e8 61 75 ff ff                        	call 0x3e70 <free>
0xc90f:     48 89 ef                              	mov rdi, rbp
0xc912:     e8 59 75 ff ff                        	call 0x3e70 <free>
0xc917:     48 83 7c 24 10 00                     	cmp qword ptr [rsp + 0x10], 0
0xc91d:     8b 54 24 04                           	mov edx, dword ptr [rsp + 4]
0xc921:     0f 84 b5 00 00 00                     	je 0xc9dc <function_c640+0x39c>
0xc927:     e9 9e 00 00 00                        	jmp 0xc9ca <function_c640+0x38a>
; data inside code section at 0xc92c -- 0xc930
0xc92c:     0f 1f 40 00                                        |..@.            |
0xc930:     3c 2e                                 	cmp al, 0x2e
0xc932:     0f 85 39 fe ff ff                     	jne 0xc771 <function_c640+0x131>
0xc938:     e9 c3 fe ff ff                        	jmp 0xc800 <function_c640+0x1c0>
; data inside code section at 0xc93d -- 0xc940
0xc93d:     0f 1f 00                                           |...             |
0xc940:     8b 44 24 58                           	mov eax, dword ptr [rsp + 0x58]
0xc944:     25 00 f0 00 00                        	and eax, 0xf000
0xc949:     3d 00 a0 00 00                        	cmp eax, 0xa000
0xc94e:     74 20                                 	je 0xc970 <function_c640+0x330>
0xc950:     3d 00 40 00 00                        	cmp eax, 0x4000
0xc955:     0f 84 a5 fe ff ff                     	je 0xc800 <function_c640+0x1c0>
0xc95b:     e9 8e fe ff ff                        	jmp 0xc7ee <function_c640+0x1ae>
0xc960:     e8 fb 6f ff ff                        	call 0x3960 <__lxstat>
0xc965:     85 c0                                 	test eax, eax
0xc967:     0f 95 c0                              	setne al
0xc96a:     e9 44 ff ff ff                        	jmp 0xc8b3 <function_c640+0x273>
; data inside code section at 0xc96f -- 0xc970
0xc96f:     90                                                 |.               |
0xc970:     48 83 7c 24 10 00                     	cmp qword ptr [rsp + 0x10], 0
0xc976:     0f 84 aa 01 00 00                     	je 0xcb26 <function_c640+0x4e6>
0xc97c:     48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0xc981:     48 8b 74 24 20                        	mov rsi, qword ptr [rsp + 0x20]
0xc986:     48 8b 7c 24 10                        	mov rdi, qword ptr [rsp + 0x10]
0xc98b:     e8 70 06 00 00                        	call 0xd000 <function_d000>
0xc990:     84 c0                                 	test al, al
0xc992:     0f 84 b8 00 00 00                     	je 0xca50 <function_c640+0x410>
0xc998:     83 7c 24 04 02                        	cmp dword ptr [rsp + 4], 2
0xc99d:     0f 84 5d fe ff ff                     	je 0xc800 <function_c640+0x1c0>
0xc9a3:     e8 48 6e ff ff                        	call 0x37f0 <__errno_location>
0xc9a8:     ba 28 00 00 00                        	mov edx, 0x28
0xc9ad:     49 89 c4                              	mov r12, rax
0xc9b0:     48 8b 7c 24 28                        	mov rdi, qword ptr [rsp + 0x28]
0xc9b5:     89 54 24 04                           	mov dword ptr [rsp + 4], edx
0xc9b9:     e8 b2 74 ff ff                        	call 0x3e70 <free>
0xc9be:     48 89 ef                              	mov rdi, rbp
0xc9c1:     e8 aa 74 ff ff                        	call 0x3e70 <free>
0xc9c6:     8b 54 24 04                           	mov edx, dword ptr [rsp + 4]
0xc9ca:     48 8b 7c 24 10                        	mov rdi, qword ptr [rsp + 0x10]
0xc9cf:     89 54 24 04                           	mov dword ptr [rsp + 4], edx
0xc9d3:     e8 78 19 00 00                        	call 0xe350 <function_e350>
0xc9d8:     8b 54 24 04                           	mov edx, dword ptr [rsp + 4]
0xc9dc:     41 89 14 24                           	mov dword ptr [r12], edx
0xc9e0:     31 ed                                 	xor ebp, ebp
0xc9e2:     e9 79 fe ff ff                        	jmp 0xc860 <function_c640+0x220>
; data inside code section at 0xc9e7 -- 0xc9f0
0xc9e7:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xc9f0:     4d 89 f5                              	mov r13, r14
0xc9f3:     e9 52 fd ff ff                        	jmp 0xc74a <function_c640+0x10a>
; data inside code section at 0xc9f8 -- 0xca00
0xc9f8:     0f 1f 84 00 00 00 00 00                            |........        |
0xca00:     41 80 7e 01 2e                        	cmp byte ptr [r14 + 1], 0x2e
0xca05:     0f 85 66 fd ff ff                     	jne 0xc771 <function_c640+0x131>
0xca0b:     48 8d 45 01                           	lea rax, [rbp + 1]
0xca0f:     4d 89 ee                              	mov r14, r13
0xca12:     49 39 c7                              	cmp r15, rax
0xca15:     0f 86 e0 fc ff ff                     	jbe 0xc6fb <function_c640+0xbb>
0xca1b:     49 8d 47 ff                           	lea rax, [r15 - 1]
0xca1f:     48 39 c5                              	cmp rbp, rax
0xca22:     0f 83 41 02 00 00                     	jae 0xcc69 <function_c640+0x629>
0xca28:     41 80 7f fe 2f                        	cmp byte ptr [r15 - 2], 0x2f
0xca2d:     49 89 c7                              	mov r15, rax
0xca30:     0f 84 c5 fc ff ff                     	je 0xc6fb <function_c640+0xbb>
0xca36:     49 83 ef 01                           	sub r15, 1
0xca3a:     4c 39 fd                              	cmp rbp, r15
0xca3d:     0f 84 bd fd ff ff                     	je 0xc800 <function_c640+0x1c0>
0xca43:     41 80 7f ff 2f                        	cmp byte ptr [r15 - 1], 0x2f
0xca48:     0f 84 b2 fd ff ff                     	je 0xc800 <function_c640+0x1c0>
0xca4e:     eb e6                                 	jmp 0xca36 <function_c640+0x3f6>
0xca50:     48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0xca55:     48 8b 74 24 20                        	mov rsi, qword ptr [rsp + 0x20]
0xca5a:     48 8b 7c 24 10                        	mov rdi, qword ptr [rsp + 0x10]
0xca5f:     e8 0c 05 00 00                        	call 0xcf70 <function_cf70>
0xca64:     48 8b 74 24 70                        	mov rsi, qword ptr [rsp + 0x70]
0xca69:     48 89 ef                              	mov rdi, rbp
0xca6c:     e8 4f f7 ff ff                        	call 0xc1c0 <function_c1c0>
0xca71:     48 85 c0                              	test rax, rax
0xca74:     49 89 c6                              	mov r14, rax
0xca77:     0f 84 65 01 00 00                     	je 0xcbe2 <function_c640+0x5a2>
0xca7d:     48 89 c7                              	mov rdi, rax
0xca80:     e8 cb 6e ff ff                        	call 0x3950 <strlen>
0xca85:     4c 89 ef                              	mov rdi, r13
0xca88:     49 89 c4                              	mov r12, rax
0xca8b:     48 89 44 24 20                        	mov qword ptr [rsp + 0x20], rax
0xca90:     e8 bb 6e ff ff                        	call 0x3950 <strlen>
0xca95:     48 83 7c 24 30 00                     	cmp qword ptr [rsp + 0x30], 0
0xca9b:     48 89 c2                              	mov rdx, rax
0xca9e:     49 8d 4c 14 01                        	lea rcx, [r12 + rdx + 1]
0xcaa3:     0f 84 f6 00 00 00                     	je 0xcb9f <function_c640+0x55f>
0xcaa9:     48 39 4c 24 30                        	cmp qword ptr [rsp + 0x30], rcx
0xcaae:     73 21                                 	jae 0xcad1 <function_c640+0x491>
0xcab0:     48 8b 7c 24 28                        	mov rdi, qword ptr [rsp + 0x28]
0xcab5:     48 89 ce                              	mov rsi, rcx
0xcab8:     48 89 54 24 38                        	mov qword ptr [rsp + 0x38], rdx
0xcabd:     48 89 4c 24 30                        	mov qword ptr [rsp + 0x30], rcx
0xcac2:     e8 19 7a 00 00                        	call 0x144e0 <function_144e0>
0xcac7:     48 8b 54 24 38                        	mov rdx, qword ptr [rsp + 0x38]
0xcacc:     48 89 44 24 28                        	mov qword ptr [rsp + 0x28], rax
0xcad1:     4c 8b 64 24 28                        	mov r12, qword ptr [rsp + 0x28]
0xcad6:     48 8b 7c 24 20                        	mov rdi, qword ptr [rsp + 0x20]
0xcadb:     48 83 c2 01                           	add rdx, 1
0xcadf:     4c 89 ee                              	mov rsi, r13
0xcae2:     4c 01 e7                              	add rdi, r12
0xcae5:     4d 89 e5                              	mov r13, r12
0xcae8:     e8 23 72 ff ff                        	call 0x3d10 <memmove>
0xcaed:     48 8b 54 24 20                        	mov rdx, qword ptr [rsp + 0x20]
0xcaf2:     4c 89 f6                              	mov rsi, r14
0xcaf5:     4c 89 e7                              	mov rdi, r12
0xcaf8:     e8 83 70 ff ff                        	call 0x3b80 <memcpy>
0xcafd:     41 80 3e 2f                           	cmp byte ptr [r14], 0x2f
0xcb01:     4c 89 64 24 20                        	mov qword ptr [rsp + 0x20], r12
0xcb06:     48 8d 45 01                           	lea rax, [rbp + 1]
0xcb0a:     0f 84 f4 00 00 00                     	je 0xcc04 <function_c640+0x5c4>
0xcb10:     49 39 c7                              	cmp r15, rax
0xcb13:     0f 87 09 01 00 00                     	ja 0xcc22 <function_c640+0x5e2>
0xcb19:     4c 89 f7                              	mov rdi, r14
0xcb1c:     e8 4f 73 ff ff                        	call 0x3e70 <free>
0xcb21:     e9 da fc ff ff                        	jmp 0xc800 <function_c640+0x1c0>
0xcb26:     4c 8d 05 f3 20 00 00                  	lea r8, [rip + 0x20f3]
0xcb2d:     48 8d 0d ac 20 00 00                  	lea rcx, [rip + 0x20ac]
0xcb34:     31 f6                                 	xor esi, esi
0xcb36:     48 8d 15 33 20 00 00                  	lea rdx, [rip + 0x2033]
0xcb3d:     bf 07 00 00 00                        	mov edi, 7
0xcb42:     e8 b9 15 00 00                        	call 0xe100 <function_e100>
0xcb47:     48 85 c0                              	test rax, rax
0xcb4a:     48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0xcb4f:     0f 85 27 fe ff ff                     	jne 0xc97c <function_c640+0x33c>
0xcb55:     e8 76 7b 00 00                        	call 0x146d0 <function_146d0>
; data inside code section at 0xcb5a -- 0xcb60
0xcb5a:     66 0f 1f 44 00 00                                  |f..D..          |
0xcb60:     bf 00 10 00 00                        	mov edi, 0x1000
0xcb65:     e8 16 79 00 00                        	call 0x14480 <function_14480>
0xcb6a:     48 89 c5                              	mov rbp, rax
0xcb6d:     48 8d 98 00 10 00 00                  	lea rbx, [rax + 0x1000]
0xcb74:     4c 8d 78 01                           	lea r15, [rax + 1]
0xcb78:     c6 00 2f                              	mov byte ptr [rax], 0x2f
0xcb7b:     e9 51 fb ff ff                        	jmp 0xc6d1 <function_c640+0x91>
0xcb80:     48 89 ef                              	mov rdi, rbp
0xcb83:     be 00 10 00 00                        	mov esi, 0x1000
0xcb88:     e8 53 79 00 00                        	call 0x144e0 <function_144e0>
0xcb8d:     48 89 c5                              	mov rbp, rax
0xcb90:     49 01 c7                              	add r15, rax
0xcb93:     48 8d 98 00 10 00 00                  	lea rbx, [rax + 0x1000]
0xcb9a:     e9 32 fb ff ff                        	jmp 0xc6d1 <function_c640+0x91>
0xcb9f:     48 81 f9 00 10 00 00                  	cmp rcx, 0x1000
0xcba6:     b8 00 10 00 00                        	mov eax, 0x1000
0xcbab:     48 89 54 24 38                        	mov qword ptr [rsp + 0x38], rdx
0xcbb0:     48 0f 43 c1                           	cmovae rax, rcx
0xcbb4:     48 89 c7                              	mov rdi, rax
0xcbb7:     48 89 44 24 30                        	mov qword ptr [rsp + 0x30], rax
0xcbbc:     e8 bf 78 00 00                        	call 0x14480 <function_14480>
0xcbc1:     48 8b 54 24 38                        	mov rdx, qword ptr [rsp + 0x38]
0xcbc6:     48 89 44 24 28                        	mov qword ptr [rsp + 0x28], rax
0xcbcb:     e9 01 ff ff ff                        	jmp 0xcad1 <function_c640+0x491>
0xcbd0:     e8 1b 6c ff ff                        	call 0x37f0 <__errno_location>
0xcbd5:     31 ed                                 	xor ebp, ebp
0xcbd7:     c7 00 16 00 00 00                     	mov dword ptr [rax], 0x16
0xcbdd:     e9 7e fc ff ff                        	jmp 0xc860 <function_c640+0x220>
0xcbe2:     e8 09 6c ff ff                        	call 0x37f0 <__errno_location>
0xcbe7:     83 7c 24 04 02                        	cmp dword ptr [rsp + 4], 2
0xcbec:     49 89 c6                              	mov r14, rax
0xcbef:     8b 10                                 	mov edx, dword ptr [rax]
0xcbf1:     75 09                                 	jne 0xcbfc <function_c640+0x5bc>
0xcbf3:     83 fa 0c                              	cmp edx, 0xc
0xcbf6:     0f 85 04 fc ff ff                     	jne 0xc800 <function_c640+0x1c0>
0xcbfc:     4d 89 f4                              	mov r12, r14
0xcbff:     e9 ac fd ff ff                        	jmp 0xc9b0 <function_c640+0x370>
0xcc04:     c6 45 00 2f                           	mov byte ptr [rbp], 0x2f
0xcc08:     49 89 c7                              	mov r15, rax
0xcc0b:     e9 09 ff ff ff                        	jmp 0xcb19 <function_c640+0x4d9>
0xcc10:     e8 db 6b ff ff                        	call 0x37f0 <__errno_location>
0xcc15:     31 ed                                 	xor ebp, ebp
0xcc17:     c7 00 02 00 00 00                     	mov dword ptr [rax], 2
0xcc1d:     e9 3e fc ff ff                        	jmp 0xc860 <function_c640+0x220>
0xcc22:     49 8d 47 ff                           	lea rax, [r15 - 1]
0xcc26:     48 39 c5                              	cmp rbp, rax
0xcc29:     73 07                                 	jae 0xcc32 <function_c640+0x5f2>
0xcc2b:     41 80 7f fe 2f                        	cmp byte ptr [r15 - 2], 0x2f
0xcc30:     75 0b                                 	jne 0xcc3d <function_c640+0x5fd>
0xcc32:     49 89 c7                              	mov r15, rax
0xcc35:     e9 df fe ff ff                        	jmp 0xcb19 <function_c640+0x4d9>
0xcc3a:     4c 89 f8                              	mov rax, r15
0xcc3d:     4c 8d 78 ff                           	lea r15, [rax - 1]
0xcc41:     4c 39 fd                              	cmp rbp, r15
0xcc44:     0f 84 cf fe ff ff                     	je 0xcb19 <function_c640+0x4d9>
0xcc4a:     41 80 7f ff 2f                        	cmp byte ptr [r15 - 1], 0x2f
0xcc4f:     0f 84 c4 fe ff ff                     	je 0xcb19 <function_c640+0x4d9>
0xcc55:     eb e3                                 	jmp 0xcc3a <function_c640+0x5fa>
0xcc57:     e8 94 6b ff ff                        	call 0x37f0 <__errno_location>
0xcc5c:     ba 14 00 00 00                        	mov edx, 0x14
0xcc61:     49 89 c4                              	mov r12, rax
0xcc64:     e9 98 fc ff ff                        	jmp 0xc901 <function_c640+0x2c1>
0xcc69:     49 89 c7                              	mov r15, rax
0xcc6c:     e9 8a fa ff ff                        	jmp 0xc6fb <function_c640+0xbb>
0xcc71:     e8 fa 6c ff ff                        	call 0x3970 <__stack_chk_fail>
0xcc76:     66 2e 0f 1f 84 00 00 00 00 00         	nop word ptr cs:[rax + rax]
0xcc80:     48 89 3d 51 47 21 00                  	mov qword ptr [rip + 0x214751], rdi
0xcc87:     c3                                    	ret 
; data inside code section at 0xcc88 -- 0xcc90
0xcc88:     0f 1f 84 00 00 00 00 00                            |........        |
; function: function_cc90 at 0xcc90 -- 0xcc98
0xcc90:     40 88 3d 39 47 21 00                  	mov byte ptr [rip + 0x214739], dil
0xcc97:     c3                                    	ret 
; data inside code section at 0xcc98 -- 0xcca0
0xcc98:     0f 1f 84 00 00 00 00 00                            |........        |
; function: function_cca0 at 0xcca0 -- 0xcd44
0xcca0:     55                                    	push rbp
0xcca1:     53                                    	push rbx
0xcca2:     48 83 ec 08                           	sub rsp, 8
0xcca6:     48 8b 3d db 35 21 00                  	mov rdi, qword ptr [rip + 0x2135db]
0xccad:     e8 be 8f 00 00                        	call 0x15c70 <function_15c70>
0xccb2:     85 c0                                 	test eax, eax
0xccb4:     74 16                                 	je 0xcccc <function_cca0+0x2c>
0xccb6:     e8 35 6b ff ff                        	call 0x37f0 <__errno_location>
0xccbb:     80 3d 0e 47 21 00 00                  	cmp byte ptr [rip + 0x21470e], 0
0xccc2:     48 89 c3                              	mov rbx, rax
0xccc5:     74 1c                                 	je 0xcce3 <function_cca0+0x43>
0xccc7:     83 38 20                              	cmp dword ptr [rax], 0x20
0xccca:     75 17                                 	jne 0xcce3 <function_cca0+0x43>
0xcccc:     48 8b 3d ed 35 21 00                  	mov rdi, qword ptr [rip + 0x2135ed]
0xccd3:     e8 98 8f 00 00                        	call 0x15c70 <function_15c70>
0xccd8:     85 c0                                 	test eax, eax
0xccda:     75 46                                 	jne 0xcd22 <function_cca0+0x82>
0xccdc:     48 83 c4 08                           	add rsp, 8
0xcce0:     5b                                    	pop rbx
0xcce1:     5d                                    	pop rbp
0xcce2:     c3                                    	ret 
0xcce3:     48 8d 35 15 d6 00 00                  	lea rsi, [rip + 0xd615]
0xccea:     31 ff                                 	xor edi, edi
0xccec:     ba 05 00 00 00                        	mov edx, 5
0xccf1:     e8 3a 6c ff ff                        	call 0x3930 <dcgettext>
0xccf6:     48 8b 3d db 46 21 00                  	mov rdi, qword ptr [rip + 0x2146db]
0xccfd:     48 89 c5                              	mov rbp, rax
0xcd00:     48 85 ff                              	test rdi, rdi
0xcd03:     74 28                                 	je 0xcd2d <function_cca0+0x8d>
0xcd05:     e8 d6 6d 00 00                        	call 0x13ae0 <function_13ae0>
0xcd0a:     8b 33                                 	mov esi, dword ptr [rbx]
0xcd0c:     48 8d 15 c5 b0 00 00                  	lea rdx, [rip + 0xb0c5]
0xcd13:     48 89 c1                              	mov rcx, rax
0xcd16:     49 89 e8                              	mov r8, rbp
0xcd19:     31 ff                                 	xor edi, edi
0xcd1b:     31 c0                                 	xor eax, eax
0xcd1d:     e8 fe 6f ff ff                        	call 0x3d20 <error>
0xcd22:     8b 3d d0 34 21 00                     	mov edi, dword ptr [rip + 0x2134d0]
0xcd28:     e8 f3 6a ff ff                        	call 0x3820 <_exit>
0xcd2d:     8b 33                                 	mov esi, dword ptr [rbx]
0xcd2f:     48 8d 15 c6 d5 00 00                  	lea rdx, [rip + 0xd5c6]
0xcd36:     48 89 c1                              	mov rcx, rax
0xcd39:     31 ff                                 	xor edi, edi
0xcd3b:     31 c0                                 	xor eax, eax
0xcd3d:     e8 de 6f ff ff                        	call 0x3d20 <error>
0xcd42:     eb de                                 	jmp 0xcd22 <function_cca0+0x82>
; data inside code section at 0xcd44 -- 0xcd50
0xcd44:     66 2e 0f 1f 84 00 00 00  00 00 66 90               |f.........f.    |
; function: function_cd50 at 0xcd50 -- 0xcdad
0xcd50:     55                                    	push rbp
0xcd51:     53                                    	push rbx
0xcd52:     31 ed                                 	xor ebp, ebp
0xcd54:     48 89 fb                              	mov rbx, rdi
0xcd57:     48 83 ec 08                           	sub rsp, 8
0xcd5b:     80 3f 2f                              	cmp byte ptr [rdi], 0x2f
0xcd5e:     40 0f 94 c5                           	sete bpl
0xcd62:     e8 a9 00 00 00                        	call 0xce10 <function_ce10>
0xcd67:     48 89 c1                              	mov rcx, rax
0xcd6a:     48 29 d9                              	sub rcx, rbx
0xcd6d:     48 39 e9                              	cmp rcx, rbp
0xcd70:     76 2e                                 	jbe 0xcda0 <function_cd50+0x50>
0xcd72:     80 78 ff 2f                           	cmp byte ptr [rax - 1], 0x2f
0xcd76:     48 8d 51 ff                           	lea rdx, [rcx - 1]
0xcd7a:     74 12                                 	je 0xcd8e <function_cd50+0x3e>
0xcd7c:     eb 22                                 	jmp 0xcda0 <function_cd50+0x50>
; data inside code section at 0xcd7e -- 0xcd80
0xcd7e:     66 90                                              |f.              |
0xcd80:     80 7c 13 ff 2f                        	cmp byte ptr [rbx + rdx - 1], 0x2f
0xcd85:     48 8d 42 ff                           	lea rax, [rdx - 1]
0xcd89:     75 08                                 	jne 0xcd93 <function_cd50+0x43>
0xcd8b:     48 89 c2                              	mov rdx, rax
0xcd8e:     48 39 d5                              	cmp rbp, rdx
0xcd91:     75 ed                                 	jne 0xcd80 <function_cd50+0x30>
0xcd93:     48 83 c4 08                           	add rsp, 8
0xcd97:     48 89 d0                              	mov rax, rdx
0xcd9a:     5b                                    	pop rbx
0xcd9b:     5d                                    	pop rbp
0xcd9c:     c3                                    	ret 
; data inside code section at 0xcd9d -- 0xcda0
0xcd9d:     0f 1f 00                                           |...             |
0xcda0:     48 83 c4 08                           	add rsp, 8
0xcda4:     48 89 ca                              	mov rdx, rcx
0xcda7:     48 89 d0                              	mov rax, rdx
0xcdaa:     5b                                    	pop rbx
0xcdab:     5d                                    	pop rbp
0xcdac:     c3                                    	ret 
; data inside code section at 0xcdad -- 0xcdb0
0xcdad:     0f 1f 00                                           |...             |
; function: function_cdb0 at 0xcdb0 -- 0xce0a
0xcdb0:     55                                    	push rbp
0xcdb1:     53                                    	push rbx
0xcdb2:     48 89 fd                              	mov rbp, rdi
0xcdb5:     48 83 ec 08                           	sub rsp, 8
0xcdb9:     e8 92 ff ff ff                        	call 0xcd50 <function_cd50>
0xcdbe:     48 85 c0                              	test rax, rax
0xcdc1:     48 89 c3                              	mov rbx, rax
0xcdc4:     0f 94 c0                              	sete al
0xcdc7:     0f b6 c0                              	movzx eax, al
0xcdca:     48 8d 7c 03 01                        	lea rdi, [rbx + rax + 1]
0xcdcf:     e8 a4 70 ff ff                        	call 0x3e78 <malloc>
0xcdd4:     48 85 c0                              	test rax, rax
0xcdd7:     48 89 c1                              	mov rcx, rax
0xcdda:     74 1a                                 	je 0xcdf6 <function_cdb0+0x46>
0xcddc:     48 89 da                              	mov rdx, rbx
0xcddf:     48 89 ee                              	mov rsi, rbp
0xcde2:     48 89 c7                              	mov rdi, rax
0xcde5:     e8 96 6d ff ff                        	call 0x3b80 <memcpy>
0xcdea:     48 85 db                              	test rbx, rbx
0xcded:     48 89 c1                              	mov rcx, rax
0xcdf0:     74 0e                                 	je 0xce00 <function_cdb0+0x50>
0xcdf2:     c6 04 19 00                           	mov byte ptr [rcx + rbx], 0
0xcdf6:     48 83 c4 08                           	add rsp, 8
0xcdfa:     48 89 c8                              	mov rax, rcx
0xcdfd:     5b                                    	pop rbx
0xcdfe:     5d                                    	pop rbp
0xcdff:     c3                                    	ret 
0xce00:     c6 00 2e                              	mov byte ptr [rax], 0x2e
0xce03:     bb 01 00 00 00                        	mov ebx, 1
0xce08:     eb e8                                 	jmp 0xcdf2 <function_cdb0+0x42>
; data inside code section at 0xce0a -- 0xce10
0xce0a:     66 0f 1f 44 00 00                                  |f..D..          |
; function: function_ce10 at 0xce10 -- 0xce6c
0xce10:     0f b6 17                              	movzx edx, byte ptr [rdi]
0xce13:     48 89 f8                              	mov rax, rdi
0xce16:     80 fa 2f                              	cmp dl, 0x2f
0xce19:     75 11                                 	jne 0xce2c <function_ce10+0x1c>
0xce1b:     0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0xce20:     48 83 c0 01                           	add rax, 1
0xce24:     0f b6 10                              	movzx edx, byte ptr [rax]
0xce27:     80 fa 2f                              	cmp dl, 0x2f
0xce2a:     74 f4                                 	je 0xce20 <function_ce10+0x10>
0xce2c:     84 d2                                 	test dl, dl
0xce2e:     74 3a                                 	je 0xce6a <function_ce10+0x5a>
0xce30:     48 89 c1                              	mov rcx, rax
0xce33:     31 f6                                 	xor esi, esi
0xce35:     eb 1e                                 	jmp 0xce55 <function_ce10+0x45>
; data inside code section at 0xce37 -- 0xce40
0xce37:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xce40:     40 84 f6                              	test sil, sil
0xce43:     74 05                                 	je 0xce4a <function_ce10+0x3a>
0xce45:     48 89 c8                              	mov rax, rcx
0xce48:     31 f6                                 	xor esi, esi
0xce4a:     48 83 c1 01                           	add rcx, 1
0xce4e:     0f b6 11                              	movzx edx, byte ptr [rcx]
0xce51:     84 d2                                 	test dl, dl
0xce53:     74 15                                 	je 0xce6a <function_ce10+0x5a>
0xce55:     80 fa 2f                              	cmp dl, 0x2f
0xce58:     75 e6                                 	jne 0xce40 <function_ce10+0x30>
0xce5a:     48 83 c1 01                           	add rcx, 1
0xce5e:     0f b6 11                              	movzx edx, byte ptr [rcx]
0xce61:     be 01 00 00 00                        	mov esi, 1
0xce66:     84 d2                                 	test dl, dl
0xce68:     75 eb                                 	jne 0xce55 <function_ce10+0x45>
0xce6a:     f3 c3                                 	ret 
; data inside code section at 0xce6c -- 0xce70
0xce6c:     0f 1f 40 00                                        |..@.            |
; function: function_ce70 at 0xce70 -- 0xceb7
0xce70:     53                                    	push rbx
0xce71:     48 89 fb                              	mov rbx, rdi
0xce74:     e8 d7 6a ff ff                        	call 0x3950 <strlen>
0xce79:     48 83 f8 01                           	cmp rax, 1
0xce7d:     76 0b                                 	jbe 0xce8a <function_ce70+0x1a>
0xce7f:     80 7c 03 ff 2f                        	cmp byte ptr [rbx + rax - 1], 0x2f
0xce84:     48 8d 50 ff                           	lea rdx, [rax - 1]
0xce88:     74 0e                                 	je 0xce98 <function_ce70+0x28>
0xce8a:     5b                                    	pop rbx
0xce8b:     c3                                    	ret 
; data inside code section at 0xce8c -- 0xce90
0xce8c:     0f 1f 40 00                                        |..@.            |
0xce90:     48 89 c2                              	mov rdx, rax
0xce93:     0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0xce98:     48 83 fa 01                           	cmp rdx, 1
0xce9c:     74 12                                 	je 0xceb0 <function_ce70+0x40>
0xce9e:     80 7c 13 ff 2f                        	cmp byte ptr [rbx + rdx - 1], 0x2f
0xcea3:     48 8d 42 ff                           	lea rax, [rdx - 1]
0xcea7:     74 e7                                 	je 0xce90 <function_ce70+0x20>
0xcea9:     48 89 d0                              	mov rax, rdx
0xceac:     5b                                    	pop rbx
0xcead:     c3                                    	ret 
; data inside code section at 0xceae -- 0xceb0
0xceae:     66 90                                              |f.              |
0xceb0:     b8 01 00 00 00                        	mov eax, 1
0xceb5:     5b                                    	pop rbx
0xceb6:     c3                                    	ret 
; data inside code section at 0xceb7 -- 0xcec0
0xceb7:     66 0f 1f 84 00 00 00 00  00                        |f........       |
; function: function_cec0 at 0xcec0 -- 0xcf70
0xcec0:     8b 46 18                              	mov eax, dword ptr [rsi + 0x18]
0xcec3:     25 00 f0 00 00                        	and eax, 0xf000
0xcec8:     3d 00 a0 00 00                        	cmp eax, 0xa000
0xcecd:     74 31                                 	je 0xcf00 <function_cec0+0x40>
0xcecf:     55                                    	push rbp
0xced0:     53                                    	push rbx
0xced1:     48 89 f3                              	mov rbx, rsi
0xced4:     48 8d 35 30 d4 00 00                  	lea rsi, [rip + 0xd430]
0xcedb:     31 c9                                 	xor ecx, ecx
0xcedd:     31 d2                                 	xor edx, edx
0xcedf:     48 83 ec 08                           	sub rsp, 8
0xcee3:     48 89 fd                              	mov rbp, rdi
0xcee6:     e8 a5 6e ff ff                        	call 0x3d90 <getxattr>
0xceeb:     48 85 c0                              	test rax, rax
0xceee:     78 18                                 	js 0xcf08 <function_cec0+0x48>
0xcef0:     74 36                                 	je 0xcf28 <function_cec0+0x68>
0xcef2:     b8 01 00 00 00                        	mov eax, 1
0xcef7:     48 83 c4 08                           	add rsp, 8
0xcefb:     5b                                    	pop rbx
0xcefc:     5d                                    	pop rbp
0xcefd:     c3                                    	ret 
; data inside code section at 0xcefe -- 0xcf00
0xcefe:     66 90                                              |f.              |
0xcf00:     31 c0                                 	xor eax, eax
0xcf02:     c3                                    	ret 
; data inside code section at 0xcf03 -- 0xcf08
0xcf03:     0f 1f 44 00 00                                     |..D..           |
0xcf08:     e8 e3 68 ff ff                        	call 0x37f0 <__errno_location>
0xcf0d:     83 38 3d                              	cmp dword ptr [rax], 0x3d
0xcf10:     74 16                                 	je 0xcf28 <function_cec0+0x68>
0xcf12:     e8 d9 68 ff ff                        	call 0x37f0 <__errno_location>
0xcf17:     8b 38                                 	mov edi, dword ptr [rax]
0xcf19:     e8 22 8d 00 00                        	call 0x15c40 <function_15c40>
0xcf1e:     0f b6 c0                              	movzx eax, al
0xcf21:     f7 d8                                 	neg eax
0xcf23:     eb d2                                 	jmp 0xcef7 <function_cec0+0x37>
; data inside code section at 0xcf25 -- 0xcf28
0xcf25:     0f 1f 00                                           |...             |
0xcf28:     8b 43 18                              	mov eax, dword ptr [rbx + 0x18]
0xcf2b:     25 00 f0 00 00                        	and eax, 0xf000
0xcf30:     3d 00 40 00 00                        	cmp eax, 0x4000
0xcf35:     75 1a                                 	jne 0xcf51 <function_cec0+0x91>
0xcf37:     48 8d 35 e5 d3 00 00                  	lea rsi, [rip + 0xd3e5]
0xcf3e:     31 c9                                 	xor ecx, ecx
0xcf40:     31 d2                                 	xor edx, edx
0xcf42:     48 89 ef                              	mov rdi, rbp
0xcf45:     e8 46 6e ff ff                        	call 0x3d90 <getxattr>
0xcf4a:     48 85 c0                              	test rax, rax
0xcf4d:     78 11                                 	js 0xcf60 <function_cec0+0xa0>
0xcf4f:     75 a1                                 	jne 0xcef2 <function_cec0+0x32>
0xcf51:     31 c0                                 	xor eax, eax
0xcf53:     48 83 c4 08                           	add rsp, 8
0xcf57:     5b                                    	pop rbx
0xcf58:     5d                                    	pop rbp
0xcf59:     c3                                    	ret 
; data inside code section at 0xcf5a -- 0xcf60
0xcf5a:     66 0f 1f 44 00 00                                  |f..D..          |
0xcf60:     e8 8b 68 ff ff                        	call 0x37f0 <__errno_location>
0xcf65:     8b 38                                 	mov edi, dword ptr [rax]
0xcf67:     83 ff 3d                              	cmp edi, 0x3d
0xcf6a:     75 ad                                 	jne 0xcf19 <function_cec0+0x59>
0xcf6c:     31 c0                                 	xor eax, eax
0xcf6e:     eb e3                                 	jmp 0xcf53 <function_cec0+0x93>
; function: function_cf70 at 0xcf70 -- 0xcff7
0xcf70:     48 85 ff                              	test rdi, rdi
0xcf73:     74 7b                                 	je 0xcff0 <function_cf70+0x80>
0xcf75:     41 55                                 	push r13
0xcf77:     41 54                                 	push r12
0xcf79:     49 89 fd                              	mov r13, rdi
0xcf7c:     55                                    	push rbp
0xcf7d:     53                                    	push rbx
0xcf7e:     49 89 f4                              	mov r12, rsi
0xcf81:     bf 18 00 00 00                        	mov edi, 0x18
0xcf86:     48 89 d5                              	mov rbp, rdx
0xcf89:     48 83 ec 08                           	sub rsp, 8
0xcf8d:     e8 ee 74 00 00                        	call 0x14480 <function_14480>
0xcf92:     4c 89 e7                              	mov rdi, r12
0xcf95:     48 89 c3                              	mov rbx, rax
0xcf98:     e8 13 77 00 00                        	call 0x146b0 <function_146b0>
0xcf9d:     48 89 03                              	mov qword ptr [rbx], rax
0xcfa0:     48 8b 45 08                           	mov rax, qword ptr [rbp + 8]
0xcfa4:     48 89 de                              	mov rsi, rbx
0xcfa7:     4c 89 ef                              	mov rdi, r13
0xcfaa:     48 89 43 08                           	mov qword ptr [rbx + 8], rax
0xcfae:     48 8b 45 00                           	mov rax, qword ptr [rbp]
0xcfb2:     48 89 43 10                           	mov qword ptr [rbx + 0x10], rax
0xcfb6:     e8 45 19 00 00                        	call 0xe900 <function_e900>
0xcfbb:     48 85 c0                              	test rax, rax
0xcfbe:     74 32                                 	je 0xcff2 <function_cf70+0x82>
0xcfc0:     48 39 c3                              	cmp rbx, rax
0xcfc3:     74 1b                                 	je 0xcfe0 <function_cf70+0x70>
0xcfc5:     48 83 c4 08                           	add rsp, 8
0xcfc9:     48 89 df                              	mov rdi, rbx
0xcfcc:     5b                                    	pop rbx
0xcfcd:     5d                                    	pop rbp
0xcfce:     41 5c                                 	pop r12
0xcfd0:     41 5d                                 	pop r13
0xcfd2:     e9 49 1c 00 00                        	jmp 0xec20 <function_ec20>
; data inside code section at 0xcfd7 -- 0xcfe0
0xcfd7:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xcfe0:     48 83 c4 08                           	add rsp, 8
0xcfe4:     5b                                    	pop rbx
0xcfe5:     5d                                    	pop rbp
0xcfe6:     41 5c                                 	pop r12
0xcfe8:     41 5d                                 	pop r13
0xcfea:     c3                                    	ret 
; data inside code section at 0xcfeb -- 0xcff0
0xcfeb:     0f 1f 44 00 00                                     |..D..           |
0xcff0:     f3 c3                                 	ret 
0xcff2:     e8 d9 76 00 00                        	call 0x146d0 <function_146d0>
; data inside code section at 0xcff7 -- 0xd000
0xcff7:     66 0f 1f 84 00 00 00 00  00                        |f........       |
; function: function_d000 at 0xd000 -- 0xd1e3
0xd000:     48 83 ec 28                           	sub rsp, 0x28
0xd004:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0xd00d:     48 89 44 24 18                        	mov qword ptr [rsp + 0x18], rax
0xd012:     31 c0                                 	xor eax, eax
0xd014:     48 85 ff                              	test rdi, rdi
0xd017:     74 23                                 	je 0xd03c <function_d000+0x3c>
0xd019:     48 8b 42 08                           	mov rax, qword ptr [rdx + 8]
0xd01d:     48 89 34 24                           	mov qword ptr [rsp], rsi
0xd021:     48 89 e6                              	mov rsi, rsp
0xd024:     48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0xd029:     48 8b 02                              	mov rax, qword ptr [rdx]
0xd02c:     48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0xd031:     e8 5a 0e 00 00                        	call 0xde90 <function_de90>
0xd036:     48 85 c0                              	test rax, rax
0xd039:     0f 95 c0                              	setne al
0xd03c:     48 8b 4c 24 18                        	mov rcx, qword ptr [rsp + 0x18]
0xd041:     64 48 33 0c 25 28 00 00 00            	xor rcx, qword ptr fs:[0x28]
0xd04a:     75 05                                 	jne 0xd051 <function_d000+0x51>
0xd04c:     48 83 c4 28                           	add rsp, 0x28
0xd050:     c3                                    	ret 
0xd051:     e8 1a 69 ff ff                        	call 0x3970 <__stack_chk_fail>
0xd056:     66 2e 0f 1f 84 00 00 00 00 00         	nop word ptr cs:[rax + rax]
0xd060:     89 fa                                 	mov edx, edi
0xd062:     b8 2d 00 00 00                        	mov eax, 0x2d
0xd067:     81 e2 00 f0 00 00                     	and edx, 0xf000
0xd06d:     81 fa 00 80 00 00                     	cmp edx, 0x8000
0xd073:     74 5b                                 	je 0xd0d0 <function_d000+0xd0>
0xd075:     81 fa 00 40 00 00                     	cmp edx, 0x4000
0xd07b:     b8 64 00 00 00                        	mov eax, 0x64
0xd080:     74 4e                                 	je 0xd0d0 <function_d000+0xd0>
0xd082:     81 fa 00 60 00 00                     	cmp edx, 0x6000
0xd088:     b8 62 00 00 00                        	mov eax, 0x62
0xd08d:     74 41                                 	je 0xd0d0 <function_d000+0xd0>
0xd08f:     81 fa 00 20 00 00                     	cmp edx, 0x2000
0xd095:     b8 63 00 00 00                        	mov eax, 0x63
0xd09a:     74 34                                 	je 0xd0d0 <function_d000+0xd0>
0xd09c:     81 fa 00 a0 00 00                     	cmp edx, 0xa000
0xd0a2:     b8 6c 00 00 00                        	mov eax, 0x6c
0xd0a7:     74 27                                 	je 0xd0d0 <function_d000+0xd0>
0xd0a9:     81 fa 00 10 00 00                     	cmp edx, 0x1000
0xd0af:     b8 70 00 00 00                        	mov eax, 0x70
0xd0b4:     74 1a                                 	je 0xd0d0 <function_d000+0xd0>
0xd0b6:     81 fa 00 c0 00 00                     	cmp edx, 0xc000
0xd0bc:     b8 73 00 00 00                        	mov eax, 0x73
0xd0c1:     ba 3f 00 00 00                        	mov edx, 0x3f
0xd0c6:     0f 45 c2                              	cmovne eax, edx
0xd0c9:     0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0xd0d0:     88 06                                 	mov byte ptr [rsi], al
0xd0d2:     89 f8                                 	mov eax, edi
0xd0d4:     25 00 01 00 00                        	and eax, 0x100
0xd0d9:     83 f8 01                              	cmp eax, 1
0xd0dc:     19 c0                                 	sbb eax, eax
0xd0de:     83 e0 bb                              	and eax, 0xffffffbb
0xd0e1:     83 c0 72                              	add eax, 0x72
0xd0e4:     88 46 01                              	mov byte ptr [rsi + 1], al
0xd0e7:     89 f8                                 	mov eax, edi
0xd0e9:     25 80 00 00 00                        	and eax, 0x80
0xd0ee:     83 f8 01                              	cmp eax, 1
0xd0f1:     19 c0                                 	sbb eax, eax
0xd0f3:     83 e0 b6                              	and eax, 0xffffffb6
0xd0f6:     83 c0 77                              	add eax, 0x77
0xd0f9:     88 46 02                              	mov byte ptr [rsi + 2], al
0xd0fc:     89 f8                                 	mov eax, edi
0xd0fe:     83 e0 40                              	and eax, 0x40
0xd101:     83 f8 01                              	cmp eax, 1
0xd104:     19 c0                                 	sbb eax, eax
0xd106:     f7 c7 00 08 00 00                     	test edi, 0x800
0xd10c:     0f 84 9e 00 00 00                     	je 0xd1b0 <function_d000+0x1b0>
0xd112:     83 e0 e0                              	and eax, 0xffffffe0
0xd115:     83 c0 73                              	add eax, 0x73
0xd118:     88 46 03                              	mov byte ptr [rsi + 3], al
0xd11b:     89 f8                                 	mov eax, edi
0xd11d:     83 e0 20                              	and eax, 0x20
0xd120:     83 f8 01                              	cmp eax, 1
0xd123:     19 c0                                 	sbb eax, eax
0xd125:     83 e0 bb                              	and eax, 0xffffffbb
0xd128:     83 c0 72                              	add eax, 0x72
0xd12b:     88 46 04                              	mov byte ptr [rsi + 4], al
0xd12e:     89 f8                                 	mov eax, edi
0xd130:     83 e0 10                              	and eax, 0x10
0xd133:     83 f8 01                              	cmp eax, 1
0xd136:     19 c0                                 	sbb eax, eax
0xd138:     83 e0 b6                              	and eax, 0xffffffb6
0xd13b:     83 c0 77                              	add eax, 0x77
0xd13e:     88 46 05                              	mov byte ptr [rsi + 5], al
0xd141:     89 f8                                 	mov eax, edi
0xd143:     83 e0 08                              	and eax, 8
0xd146:     83 f8 01                              	cmp eax, 1
0xd149:     19 c0                                 	sbb eax, eax
0xd14b:     f7 c7 00 04 00 00                     	test edi, 0x400
0xd151:     0f 84 81 00 00 00                     	je 0xd1d8 <function_d000+0x1d8>
0xd157:     83 e0 e0                              	and eax, 0xffffffe0
0xd15a:     83 c0 73                              	add eax, 0x73
0xd15d:     88 46 06                              	mov byte ptr [rsi + 6], al
0xd160:     89 f8                                 	mov eax, edi
0xd162:     83 e0 04                              	and eax, 4
0xd165:     83 f8 01                              	cmp eax, 1
0xd168:     19 c0                                 	sbb eax, eax
0xd16a:     83 e0 bb                              	and eax, 0xffffffbb
0xd16d:     83 c0 72                              	add eax, 0x72
0xd170:     88 46 07                              	mov byte ptr [rsi + 7], al
0xd173:     89 f8                                 	mov eax, edi
0xd175:     83 e0 02                              	and eax, 2
0xd178:     83 f8 01                              	cmp eax, 1
0xd17b:     19 c0                                 	sbb eax, eax
0xd17d:     83 e0 b6                              	and eax, 0xffffffb6
0xd180:     83 c0 77                              	add eax, 0x77
0xd183:     88 46 08                              	mov byte ptr [rsi + 8], al
0xd186:     89 f8                                 	mov eax, edi
0xd188:     83 e0 01                              	and eax, 1
0xd18b:     83 f8 01                              	cmp eax, 1
0xd18e:     19 c0                                 	sbb eax, eax
0xd190:     81 e7 00 02 00 00                     	and edi, 0x200
0xd196:     74 28                                 	je 0xd1c0 <function_d000+0x1c0>
0xd198:     83 e0 e0                              	and eax, 0xffffffe0
0xd19b:     83 c0 74                              	add eax, 0x74
0xd19e:     88 46 09                              	mov byte ptr [rsi + 9], al
0xd1a1:     b8 20 00 00 00                        	mov eax, 0x20
0xd1a6:     66 89 46 0a                           	mov word ptr [rsi + 0xa], ax
0xd1aa:     c3                                    	ret 
; data inside code section at 0xd1ab -- 0xd1b0
0xd1ab:     0f 1f 44 00 00                                     |..D..           |
0xd1b0:     83 e0 b5                              	and eax, 0xffffffb5
0xd1b3:     83 c0 78                              	add eax, 0x78
0xd1b6:     e9 5d ff ff ff                        	jmp 0xd118 <function_d000+0x118>
; data inside code section at 0xd1bb -- 0xd1c0
0xd1bb:     0f 1f 44 00 00                                     |..D..           |
0xd1c0:     83 e0 b5                              	and eax, 0xffffffb5
0xd1c3:     83 c0 78                              	add eax, 0x78
0xd1c6:     88 46 09                              	mov byte ptr [rsi + 9], al
0xd1c9:     b8 20 00 00 00                        	mov eax, 0x20
0xd1ce:     66 89 46 0a                           	mov word ptr [rsi + 0xa], ax
0xd1d2:     c3                                    	ret 
; data inside code section at 0xd1d3 -- 0xd1d8
0xd1d3:     0f 1f 44 00 00                                     |..D..           |
0xd1d8:     83 e0 b5                              	and eax, 0xffffffb5
0xd1db:     83 c0 78                              	add eax, 0x78
0xd1de:     e9 7a ff ff ff                        	jmp 0xd15d <function_d000+0x15d>
; data inside code section at 0xd1e3 -- 0xd1f0
0xd1e3:     0f 1f 00 66 2e 0f 1f 84  00 00 00 00 00            |...f.........   |
; function: function_d1f0 at 0xd1f0 -- 0xd1f8
0xd1f0:     8b 7f 18                              	mov edi, dword ptr [rdi + 0x18]
0xd1f3:     e9 68 fe ff ff                        	jmp 0xd060
; data inside code section at 0xd1f8 -- 0xd200
0xd1f8:     0f 1f 84 00 00 00 00 00                            |........        |
; function: function_d200 at 0xd200 -- 0xd218
0xd200:     48 83 ec 08                           	sub rsp, 8
0xd204:     e8 17 00 00 00                        	call 0xd220 <function_d220>
0xd209:     48 85 c0                              	test rax, rax
0xd20c:     74 05                                 	je 0xd213 <function_d200+0x13>
0xd20e:     48 83 c4 08                           	add rsp, 8
0xd212:     c3                                    	ret 
0xd213:     e8 b8 74 00 00                        	call 0x146d0 <function_146d0>
; data inside code section at 0xd218 -- 0xd220
0xd218:     0f 1f 84 00 00 00 00 00                            |........        |
; function: function_d220 at 0xd220 -- 0xd2ed
0xd220:     41 57                                 	push r15
0xd222:     41 56                                 	push r14
0xd224:     49 89 d7                              	mov r15, rdx
0xd227:     41 55                                 	push r13
0xd229:     41 54                                 	push r12
0xd22b:     49 89 fe                              	mov r14, rdi
0xd22e:     55                                    	push rbp
0xd22f:     53                                    	push rbx
0xd230:     49 89 f4                              	mov r12, rsi
0xd233:     48 83 ec 18                           	sub rsp, 0x18
0xd237:     e8 d4 fb ff ff                        	call 0xce10 <function_ce10>
0xd23c:     49 89 c5                              	mov r13, rax
0xd23f:     48 89 c7                              	mov rdi, rax
0xd242:     4c 89 ed                              	mov rbp, r13
0xd245:     4c 29 f5                              	sub rbp, r14
0xd248:     e8 23 fc ff ff                        	call 0xce70 <function_ce70>
0xd24d:     48 01 c5                              	add rbp, rax
0xd250:     48 85 c0                              	test rax, rax
0xd253:     48 89 c3                              	mov rbx, rax
0xd256:     74 0c                                 	je 0xd264 <function_d220+0x44>
0xd258:     41 80 7c 05 ff 2f                     	cmp byte ptr [r13 + rax - 1], 0x2f
0xd25e:     0f 95 c3                              	setne bl
0xd261:     0f b6 db                              	movzx ebx, bl
0xd264:     41 0f b6 04 24                        	movzx eax, byte ptr [r12]
0xd269:     3c 2f                                 	cmp al, 0x2f
0xd26b:     88 44 24 0f                           	mov byte ptr [rsp + 0xf], al
0xd26f:     74 6f                                 	je 0xd2e0 <function_d220+0xc0>
0xd271:     4c 89 e7                              	mov rdi, r12
0xd274:     e8 d7 66 ff ff                        	call 0x3950 <strlen>
0xd279:     48 8d 7c 2b 01                        	lea rdi, [rbx + rbp + 1]
0xd27e:     48 89 04 24                           	mov qword ptr [rsp], rax
0xd282:     48 01 c7                              	add rdi, rax
0xd285:     e8 ee 6b ff ff                        	call 0x3e78 <malloc>
0xd28a:     48 85 c0                              	test rax, rax
0xd28d:     49 89 c5                              	mov r13, rax
0xd290:     74 3c                                 	je 0xd2ce <function_d220+0xae>
0xd292:     48 89 c7                              	mov rdi, rax
0xd295:     48 89 ea                              	mov rdx, rbp
0xd298:     4c 89 f6                              	mov rsi, r14
0xd29b:     e8 60 6a ff ff                        	call 0x3d00 <mempcpy>
0xd2a0:     4d 85 ff                              	test r15, r15
0xd2a3:     c6 00 2f                              	mov byte ptr [rax], 0x2f
0xd2a6:     48 8d 3c 18                           	lea rdi, [rax + rbx]
0xd2aa:     74 13                                 	je 0xd2bf <function_d220+0x9f>
0xd2ac:     31 c0                                 	xor eax, eax
0xd2ae:     80 7c 24 0f 2f                        	cmp byte ptr [rsp + 0xf], 0x2f
0xd2b3:     48 89 f9                              	mov rcx, rdi
0xd2b6:     0f 94 c0                              	sete al
0xd2b9:     48 29 c1                              	sub rcx, rax
0xd2bc:     49 89 0f                              	mov qword ptr [r15], rcx
0xd2bf:     48 8b 14 24                           	mov rdx, qword ptr [rsp]
0xd2c3:     4c 89 e6                              	mov rsi, r12
0xd2c6:     e8 35 6a ff ff                        	call 0x3d00 <mempcpy>
0xd2cb:     c6 00 00                              	mov byte ptr [rax], 0
0xd2ce:     48 83 c4 18                           	add rsp, 0x18
0xd2d2:     4c 89 e8                              	mov rax, r13
0xd2d5:     5b                                    	pop rbx
0xd2d6:     5d                                    	pop rbp
0xd2d7:     41 5c                                 	pop r12
0xd2d9:     41 5d                                 	pop r13
0xd2db:     41 5e                                 	pop r14
0xd2dd:     41 5f                                 	pop r15
0xd2df:     c3                                    	ret 
0xd2e0:     49 83 c4 01                           	add r12, 1
0xd2e4:     41 80 3c 24 2f                        	cmp byte ptr [r12], 0x2f
0xd2e9:     75 86                                 	jne 0xd271 <function_d220+0x51>
0xd2eb:     eb f3                                 	jmp 0xd2e0 <function_d220+0xc0>
; data inside code section at 0xd2ed -- 0xd2f0
0xd2ed:     0f 1f 00                                           |...             |
; function: function_d2f0 at 0xd2f0 -- 0xd3b3
0xd2f0:     48 8b 37                              	mov rsi, qword ptr [rdi]
0xd2f3:     0f b6 16                              	movzx edx, byte ptr [rsi]
0xd2f6:     84 d2                                 	test dl, dl
0xd2f8:     0f 84 b2 00 00 00                     	je 0xd3b0 <function_d2f0+0xc0>
0xd2fe:     31 c9                                 	xor ecx, ecx
0xd300:     31 c0                                 	xor eax, eax
0xd302:     45 31 c0                              	xor r8d, r8d
0xd305:     41 bb 01 00 00 00                     	mov r11d, 1
0xd30b:     49 ba ff ff ff 03 ff ff ff 03         	movabs r10, 0x3ffffff03ffffff
0xd315:     eb 38                                 	jmp 0xd34f <function_d2f0+0x5f>
; data inside code section at 0xd317 -- 0xd320
0xd317:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xd320:     0f be ca                              	movsx ecx, dl
0xd323:     83 e9 41                              	sub ecx, 0x41
0xd326:     83 f9 39                              	cmp ecx, 0x39
0xd329:     77 0d                                 	ja 0xd338 <function_d2f0+0x48>
0xd32b:     4d 89 d9                              	mov r9, r11
0xd32e:     49 d3 e1                              	shl r9, cl
0xd331:     31 c9                                 	xor ecx, ecx
0xd333:     4d 85 d1                              	test r9, r10
0xd336:     75 09                                 	jne 0xd341 <function_d2f0+0x51>
0xd338:     31 c9                                 	xor ecx, ecx
0xd33a:     80 fa 7e                              	cmp dl, 0x7e
0xd33d:     49 0f 45 c0                           	cmovne rax, r8
0xd341:     48 83 c6 01                           	add rsi, 1
0xd345:     48 89 37                              	mov qword ptr [rdi], rsi
0xd348:     0f b6 16                              	movzx edx, byte ptr [rsi]
0xd34b:     84 d2                                 	test dl, dl
0xd34d:     74 32                                 	je 0xd381 <function_d2f0+0x91>
0xd34f:     84 c9                                 	test cl, cl
0xd351:     75 cd                                 	jne 0xd320 <function_d2f0+0x30>
0xd353:     80 fa 2e                              	cmp dl, 0x2e
0xd356:     74 30                                 	je 0xd388 <function_d2f0+0x98>
0xd358:     80 fa 5a                              	cmp dl, 0x5a
0xd35b:     7f 43                                 	jg 0xd3a0 <function_d2f0+0xb0>
0xd35d:     80 fa 41                              	cmp dl, 0x41
0xd360:     7d df                                 	jge 0xd341 <function_d2f0+0x51>
0xd362:     44 8d 4a d0                           	lea r9d, [rdx - 0x30]
0xd366:     41 80 f9 09                           	cmp r9b, 9
0xd36a:     76 d5                                 	jbe 0xd341 <function_d2f0+0x51>
0xd36c:     80 fa 7e                              	cmp dl, 0x7e
0xd36f:     49 0f 45 c0                           	cmovne rax, r8
0xd373:     48 83 c6 01                           	add rsi, 1
0xd377:     48 89 37                              	mov qword ptr [rdi], rsi
0xd37a:     0f b6 16                              	movzx edx, byte ptr [rsi]
0xd37d:     84 d2                                 	test dl, dl
0xd37f:     75 ce                                 	jne 0xd34f <function_d2f0+0x5f>
0xd381:     f3 c3                                 	ret 
; data inside code section at 0xd383 -- 0xd388
0xd383:     0f 1f 44 00 00                                     |..D..           |
0xd388:     48 85 c0                              	test rax, rax
0xd38b:     b9 01 00 00 00                        	mov ecx, 1
0xd390:     48 0f 44 c6                           	cmove rax, rsi
0xd394:     eb ab                                 	jmp 0xd341 <function_d2f0+0x51>
; data inside code section at 0xd396 -- 0xd3a0
0xd396:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0xd3a0:     44 8d 4a 9f                           	lea r9d, [rdx - 0x61]
0xd3a4:     41 80 f9 19                           	cmp r9b, 0x19
0xd3a8:     77 c2                                 	ja 0xd36c <function_d2f0+0x7c>
0xd3aa:     eb 95                                 	jmp 0xd341 <function_d2f0+0x51>
; data inside code section at 0xd3ac -- 0xd3b0
0xd3ac:     0f 1f 40 00                                        |..@.            |
0xd3b0:     31 c0                                 	xor eax, eax
0xd3b2:     c3                                    	ret 
; data inside code section at 0xd3b3 -- 0xd3c0
0xd3b3:     0f 1f 00 66 2e 0f 1f 84  00 00 00 00 00            |...f.........   |
; function: function_d3c0 at 0xd3c0 -- 0xd7d0
0xd3c0:     41 57                                 	push r15
0xd3c2:     41 56                                 	push r14
0xd3c4:     41 55                                 	push r13
0xd3c6:     41 54                                 	push r12
0xd3c8:     55                                    	push rbp
0xd3c9:     53                                    	push rbx
0xd3ca:     48 89 f5                              	mov rbp, rsi
0xd3cd:     48 89 fb                              	mov rbx, rdi
0xd3d0:     48 83 ec 38                           	sub rsp, 0x38
0xd3d4:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0xd3dd:     48 89 44 24 28                        	mov qword ptr [rsp + 0x28], rax
0xd3e2:     31 c0                                 	xor eax, eax
0xd3e4:     e8 37 67 ff ff                        	call 0x3b20 <strcmp>
0xd3e9:     85 c0                                 	test eax, eax
0xd3eb:     41 89 c4                              	mov r12d, eax
0xd3ee:     0f 84 24 02 00 00                     	je 0xd618 <function_d3c0+0x258>
0xd3f4:     0f b6 03                              	movzx eax, byte ptr [rbx]
0xd3f7:     84 c0                                 	test al, al
0xd3f9:     0f 84 59 03 00 00                     	je 0xd758 <function_d3c0+0x398>
0xd3ff:     0f b6 55 00                           	movzx edx, byte ptr [rbp]
0xd403:     84 d2                                 	test dl, dl
0xd405:     0f 84 35 02 00 00                     	je 0xd640 <function_d3c0+0x280>
0xd40b:     4c 8d 05 2b cf 00 00                  	lea r8, [rip + 0xcf2b]
0xd412:     b9 02 00 00 00                        	mov ecx, 2
0xd417:     48 89 df                              	mov rdi, rbx
0xd41a:     4c 89 c6                              	mov rsi, r8
0xd41d:     f3 a6                                 	repe cmpsb byte ptr [rsi], byte ptr [rdi]
0xd41f:     0f 84 33 03 00 00                     	je 0xd758 <function_d3c0+0x398>
0xd425:     b9 02 00 00 00                        	mov ecx, 2
0xd42a:     4c 89 c6                              	mov rsi, r8
0xd42d:     48 89 ef                              	mov rdi, rbp
0xd430:     f3 a6                                 	repe cmpsb byte ptr [rsi], byte ptr [rdi]
0xd432:     0f 84 08 02 00 00                     	je 0xd640 <function_d3c0+0x280>
0xd438:     4c 8d 05 fd ce 00 00                  	lea r8, [rip + 0xcefd]
0xd43f:     b9 03 00 00 00                        	mov ecx, 3
0xd444:     48 89 df                              	mov rdi, rbx
0xd447:     4c 89 c6                              	mov rsi, r8
0xd44a:     f3 a6                                 	repe cmpsb byte ptr [rsi], byte ptr [rdi]
0xd44c:     0f 84 06 03 00 00                     	je 0xd758 <function_d3c0+0x398>
0xd452:     b9 03 00 00 00                        	mov ecx, 3
0xd457:     4c 89 c6                              	mov rsi, r8
0xd45a:     48 89 ef                              	mov rdi, rbp
0xd45d:     f3 a6                                 	repe cmpsb byte ptr [rsi], byte ptr [rdi]
0xd45f:     0f 84 db 01 00 00                     	je 0xd640 <function_d3c0+0x280>
0xd465:     3c 2e                                 	cmp al, 0x2e
0xd467:     0f 84 d3 02 00 00                     	je 0xd740 <function_d3c0+0x380>
0xd46d:     80 fa 2e                              	cmp dl, 0x2e
0xd470:     0f 84 ca 01 00 00                     	je 0xd640 <function_d3c0+0x280>
0xd476:     48 8d 7c 24 18                        	lea rdi, [rsp + 0x18]
0xd47b:     48 89 5c 24 18                        	mov qword ptr [rsp + 0x18], rbx
0xd480:     48 89 6c 24 20                        	mov qword ptr [rsp + 0x20], rbp
0xd485:     e8 66 fe ff ff                        	call 0xd2f0 <function_d2f0>
0xd48a:     48 8d 7c 24 20                        	lea rdi, [rsp + 0x20]
0xd48f:     49 89 c5                              	mov r13, rax
0xd492:     e8 59 fe ff ff                        	call 0xd2f0 <function_d2f0>
0xd497:     4d 85 ed                              	test r13, r13
0xd49a:     0f 84 10 02 00 00                     	je 0xd6b0 <function_d3c0+0x2f0>
0xd4a0:     49 29 dd                              	sub r13, rbx
0xd4a3:     48 85 c0                              	test rax, rax
0xd4a6:     0f 84 17 03 00 00                     	je 0xd7c3 <function_d3c0+0x403>
0xd4ac:     48 29 e8                              	sub rax, rbp
0xd4af:     49 89 c6                              	mov r14, rax
0xd4b2:     4d 39 f5                              	cmp r13, r14
0xd4b5:     0f 84 d5 02 00 00                     	je 0xd790 <function_d3c0+0x3d0>
0xd4bb:     31 f6                                 	xor esi, esi
0xd4bd:     31 d2                                 	xor edx, edx
0xd4bf:     41 ba 01 00 00 00                     	mov r10d, 1
0xd4c5:     49 bf ff ff ff 03 ff ff ff 03         	movabs r15, 0x3ffffff03ffffff
0xd4cf:     49 39 d5                              	cmp r13, rdx
0xd4d2:     77 09                                 	ja 0xd4dd <function_d3c0+0x11d>
0xd4d4:     49 39 f6                              	cmp r14, rsi
0xd4d7:     0f 86 3b 01 00 00                     	jbe 0xd618 <function_d3c0+0x258>
0xd4dd:     49 89 f3                              	mov r11, rsi
0xd4e0:     48 89 2c 24                           	mov qword ptr [rsp], rbp
0xd4e4:     49 29 d3                              	sub r11, rdx
0xd4e7:     4b 8d 44 1d 00                        	lea rax, [r13 + r11]
0xd4ec:     4e 8d 4c 1d 00                        	lea r9, [rbp + r11]
0xd4f1:     48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0xd4f6:     66 2e 0f 1f 84 00 00 00 00 00         	nop word ptr cs:[rax + rax]
0xd500:     49 39 d5                              	cmp r13, rdx
0xd503:     76 0b                                 	jbe 0xd510 <function_d3c0+0x150>
0xd505:     0f b6 04 13                           	movzx eax, byte ptr [rbx + rdx]
0xd509:     83 e8 30                              	sub eax, 0x30
0xd50c:     3c 09                                 	cmp al, 9
0xd50e:     77 1a                                 	ja 0xd52a <function_d3c0+0x16a>
0xd510:     49 39 f6                              	cmp r14, rsi
0xd513:     41 0f be 04 11                        	movsx eax, byte ptr [r9 + rdx]
0xd518:     0f 86 c2 01 00 00                     	jbe 0xd6e0 <function_d3c0+0x320>
0xd51e:     8d 48 d0                              	lea ecx, [rax - 0x30]
0xd521:     80 f9 09                              	cmp cl, 9
0xd524:     0f 86 b6 01 00 00                     	jbe 0xd6e0 <function_d3c0+0x320>
0xd52a:     49 39 d5                              	cmp r13, rdx
0xd52d:     0f 84 30 02 00 00                     	je 0xd763 <function_d3c0+0x3a3>
0xd533:     0f b6 04 13                           	movzx eax, byte ptr [rbx + rdx]
0xd537:     8d 48 d0                              	lea ecx, [rax - 0x30]
0xd53a:     80 f9 09                              	cmp cl, 9
0xd53d:     0f 86 8d 01 00 00                     	jbe 0xd6d0 <function_d3c0+0x310>
0xd543:     44 0f b6 c0                           	movzx r8d, al
0xd547:     41 8d 48 bf                           	lea ecx, [r8 - 0x41]
0xd54b:     83 f9 39                              	cmp ecx, 0x39
0xd54e:     77 0b                                 	ja 0xd55b <function_d3c0+0x19b>
0xd550:     4c 89 d7                              	mov rdi, r10
0xd553:     48 d3 e7                              	shl rdi, cl
0xd556:     4c 85 ff                              	test rdi, r15
0xd559:     75 0f                                 	jne 0xd56a <function_d3c0+0x1aa>
0xd55b:     41 81 c0 00 01 00 00                  	add r8d, 0x100
0xd562:     3c 7e                                 	cmp al, 0x7e
0xd564:     0f 84 e6 00 00 00                     	je 0xd650 <function_d3c0+0x290>
0xd56a:     49 39 f6                              	cmp r14, rsi
0xd56d:     74 11                                 	je 0xd580 <function_d3c0+0x1c0>
0xd56f:     41 0f b6 04 11                        	movzx eax, byte ptr [r9 + rdx]
0xd574:     8d 48 d0                              	lea ecx, [rax - 0x30]
0xd577:     80 f9 09                              	cmp cl, 9
0xd57a:     0f 87 f8 00 00 00                     	ja 0xd678 <function_d3c0+0x2b8>
0xd580:     31 ff                                 	xor edi, edi
0xd582:     44 39 c7                              	cmp edi, r8d
0xd585:     0f 85 8d 01 00 00                     	jne 0xd718 <function_d3c0+0x358>
0xd58b:     48 83 c2 01                           	add rdx, 1
0xd58f:     48 83 c6 01                           	add rsi, 1
0xd593:     e9 68 ff ff ff                        	jmp 0xd500 <function_d3c0+0x140>
; data inside code section at 0xd598 -- 0xd5a0
0xd598:     0f 1f 84 00 00 00 00 00                            |........        |
0xd5a0:     48 83 c6 01                           	add rsi, 1
0xd5a4:     0f be 44 35 00                        	movsx eax, byte ptr [rbp + rsi]
0xd5a9:     3c 30                                 	cmp al, 0x30
0xd5ab:     74 f3                                 	je 0xd5a0 <function_d3c0+0x1e0>
0xd5ad:     48 29 d6                              	sub rsi, rdx
0xd5b0:     45 31 c0                              	xor r8d, r8d
0xd5b3:     49 89 f1                              	mov r9, rsi
0xd5b6:     4c 8d 5c 35 00                        	lea r11, [rbp + rsi]
0xd5bb:     eb 29                                 	jmp 0xd5e6 <function_d3c0+0x226>
; data inside code section at 0xd5bd -- 0xd5c0
0xd5bd:     0f 1f 00                                           |...             |
0xd5c0:     8d 70 d0                              	lea esi, [rax - 0x30]
0xd5c3:     40 80 fe 09                           	cmp sil, 9
0xd5c7:     0f 87 63 01 00 00                     	ja 0xd730 <function_d3c0+0x370>
0xd5cd:     45 85 c0                              	test r8d, r8d
0xd5d0:     75 07                                 	jne 0xd5d9 <function_d3c0+0x219>
0xd5d2:     44 0f be c1                           	movsx r8d, cl
0xd5d6:     41 29 c0                              	sub r8d, eax
0xd5d9:     48 83 c2 01                           	add rdx, 1
0xd5dd:     0f b6 0c 13                           	movzx ecx, byte ptr [rbx + rdx]
0xd5e1:     41 0f be 04 13                        	movsx eax, byte ptr [r11 + rdx]
0xd5e6:     8d 79 d0                              	lea edi, [rcx - 0x30]
0xd5e9:     4a 8d 34 0a                           	lea rsi, [rdx + r9]
0xd5ed:     40 80 ff 09                           	cmp dil, 9
0xd5f1:     76 cd                                 	jbe 0xd5c0 <function_d3c0+0x200>
0xd5f3:     83 e8 30                              	sub eax, 0x30
0xd5f6:     3c 09                                 	cmp al, 9
0xd5f8:     0f 86 b5 01 00 00                     	jbe 0xd7b3 <function_d3c0+0x3f3>
0xd5fe:     45 85 c0                              	test r8d, r8d
0xd601:     0f 84 c8 fe ff ff                     	je 0xd4cf <function_d3c0+0x10f>
0xd607:     66 0f 1f 84 00 00 00 00 00            	nop word ptr [rax + rax]
0xd610:     45 89 c4                              	mov r12d, r8d
0xd613:     0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0xd618:     48 8b 5c 24 28                        	mov rbx, qword ptr [rsp + 0x28]
0xd61d:     64 48 33 1c 25 28 00 00 00            	xor rbx, qword ptr fs:[0x28]
0xd626:     44 89 e0                              	mov eax, r12d
0xd629:     0f 85 8f 01 00 00                     	jne 0xd7be <function_d3c0+0x3fe>
0xd62f:     48 83 c4 38                           	add rsp, 0x38
0xd633:     5b                                    	pop rbx
0xd634:     5d                                    	pop rbp
0xd635:     41 5c                                 	pop r12
0xd637:     41 5d                                 	pop r13
0xd639:     41 5e                                 	pop r14
0xd63b:     41 5f                                 	pop r15
0xd63d:     c3                                    	ret 
; data inside code section at 0xd63e -- 0xd640
0xd63e:     66 90                                              |f.              |
0xd640:     41 bc 01 00 00 00                     	mov r12d, 1
0xd646:     eb d0                                 	jmp 0xd618 <function_d3c0+0x258>
; data inside code section at 0xd648 -- 0xd650
0xd648:     0f 1f 84 00 00 00 00 00                            |........        |
0xd650:     49 8d 04 13                           	lea rax, [r11 + rdx]
0xd654:     49 39 c6                              	cmp r14, rax
0xd657:     0f 84 b3 00 00 00                     	je 0xd710 <function_d3c0+0x350>
0xd65d:     41 0f b6 04 11                        	movzx eax, byte ptr [r9 + rdx]
0xd662:     8d 48 d0                              	lea ecx, [rax - 0x30]
0xd665:     80 f9 09                              	cmp cl, 9
0xd668:     0f 86 a2 00 00 00                     	jbe 0xd710 <function_d3c0+0x350>
0xd66e:     41 b8 ff ff ff ff                     	mov r8d, 0xffffffff
0xd674:     0f 1f 40 00                           	nop dword ptr [rax]
0xd678:     0f b6 f8                              	movzx edi, al
0xd67b:     8d 4f bf                              	lea ecx, [rdi - 0x41]
0xd67e:     83 f9 39                              	cmp ecx, 0x39
0xd681:     77 0f                                 	ja 0xd692 <function_d3c0+0x2d2>
0xd683:     4c 89 d5                              	mov rbp, r10
0xd686:     48 d3 e5                              	shl rbp, cl
0xd689:     4c 85 fd                              	test rbp, r15
0xd68c:     0f 85 f0 fe ff ff                     	jne 0xd582 <function_d3c0+0x1c2>
0xd692:     81 c7 00 01 00 00                     	add edi, 0x100
0xd698:     3c 7e                                 	cmp al, 0x7e
0xd69a:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xd69f:     0f 44 f8                              	cmove edi, eax
0xd6a2:     e9 db fe ff ff                        	jmp 0xd582 <function_d3c0+0x1c2>
; data inside code section at 0xd6a7 -- 0xd6b0
0xd6a7:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xd6b0:     4c 8b 6c 24 18                        	mov r13, qword ptr [rsp + 0x18]
0xd6b5:     49 29 dd                              	sub r13, rbx
0xd6b8:     48 85 c0                              	test rax, rax
0xd6bb:     0f 85 eb fd ff ff                     	jne 0xd4ac <function_d3c0+0xec>
0xd6c1:     4c 8b 74 24 20                        	mov r14, qword ptr [rsp + 0x20]
0xd6c6:     49 29 ee                              	sub r14, rbp
0xd6c9:     e9 ed fd ff ff                        	jmp 0xd4bb <function_d3c0+0xfb>
; data inside code section at 0xd6ce -- 0xd6d0
0xd6ce:     66 90                                              |f.              |
0xd6d0:     45 31 c0                              	xor r8d, r8d
0xd6d3:     e9 92 fe ff ff                        	jmp 0xd56a <function_d3c0+0x1aa>
; data inside code section at 0xd6d8 -- 0xd6e0
0xd6d8:     0f 1f 84 00 00 00 00 00                            |........        |
0xd6e0:     0f b6 0c 13                           	movzx ecx, byte ptr [rbx + rdx]
0xd6e4:     48 8b 2c 24                           	mov rbp, qword ptr [rsp]
0xd6e8:     80 f9 30                              	cmp cl, 0x30
0xd6eb:     0f 85 b8 fe ff ff                     	jne 0xd5a9 <function_d3c0+0x1e9>
0xd6f1:     0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0xd6f8:     48 83 c2 01                           	add rdx, 1
0xd6fc:     0f b6 0c 13                           	movzx ecx, byte ptr [rbx + rdx]
0xd700:     80 f9 30                              	cmp cl, 0x30
0xd703:     74 f3                                 	je 0xd6f8 <function_d3c0+0x338>
0xd705:     e9 9f fe ff ff                        	jmp 0xd5a9 <function_d3c0+0x1e9>
; data inside code section at 0xd70a -- 0xd710
0xd70a:     66 0f 1f 44 00 00                                  |f..D..          |
0xd710:     31 ff                                 	xor edi, edi
0xd712:     41 b8 ff ff ff ff                     	mov r8d, 0xffffffff
0xd718:     41 29 f8                              	sub r8d, edi
0xd71b:     0f 85 ef fe ff ff                     	jne 0xd610 <function_d3c0+0x250>
0xd721:     e9 f2 fe ff ff                        	jmp 0xd618 <function_d3c0+0x258>
; data inside code section at 0xd726 -- 0xd730
0xd726:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0xd730:     41 b8 01 00 00 00                     	mov r8d, 1
0xd736:     e9 d5 fe ff ff                        	jmp 0xd610 <function_d3c0+0x250>
; data inside code section at 0xd73b -- 0xd740
0xd73b:     0f 1f 44 00 00                                     |..D..           |
0xd740:     48 83 c3 01                           	add rbx, 1
0xd744:     48 83 c5 01                           	add rbp, 1
0xd748:     80 fa 2e                              	cmp dl, 0x2e
0xd74b:     0f 84 25 fd ff ff                     	je 0xd476 <function_d3c0+0xb6>
0xd751:     0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0xd758:     41 bc ff ff ff ff                     	mov r12d, 0xffffffff
0xd75e:     e9 b5 fe ff ff                        	jmp 0xd618 <function_d3c0+0x258>
0xd763:     4c 3b 74 24 08                        	cmp r14, qword ptr [rsp + 8]
0xd768:     0f 84 1d fe ff ff                     	je 0xd58b <function_d3c0+0x1cb>
0xd76e:     43 0f b6 04 29                        	movzx eax, byte ptr [r9 + r13]
0xd773:     8d 48 d0                              	lea ecx, [rax - 0x30]
0xd776:     80 f9 09                              	cmp cl, 9
0xd779:     0f 86 0c fe ff ff                     	jbe 0xd58b <function_d3c0+0x1cb>
0xd77f:     45 31 c0                              	xor r8d, r8d
0xd782:     e9 f1 fe ff ff                        	jmp 0xd678 <function_d3c0+0x2b8>
; data inside code section at 0xd787 -- 0xd790
0xd787:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xd790:     4c 89 ea                              	mov rdx, r13
0xd793:     48 89 ee                              	mov rsi, rbp
0xd796:     48 89 df                              	mov rdi, rbx
0xd799:     e8 62 60 ff ff                        	call 0x3800 <strncmp>
0xd79e:     85 c0                                 	test eax, eax
0xd7a0:     0f 85 15 fd ff ff                     	jne 0xd4bb <function_d3c0+0xfb>
0xd7a6:     4c 8b 6c 24 18                        	mov r13, qword ptr [rsp + 0x18]
0xd7ab:     49 29 dd                              	sub r13, rbx
0xd7ae:     e9 0e ff ff ff                        	jmp 0xd6c1 <function_d3c0+0x301>
0xd7b3:     41 b8 ff ff ff ff                     	mov r8d, 0xffffffff
0xd7b9:     e9 52 fe ff ff                        	jmp 0xd610 <function_d3c0+0x250>
0xd7be:     e8 ad 61 ff ff                        	call 0x3970 <__stack_chk_fail>
0xd7c3:     4c 8b 74 24 20                        	mov r14, qword ptr [rsp + 0x20]
0xd7c8:     49 29 ee                              	sub r14, rbp
0xd7cb:     e9 e2 fc ff ff                        	jmp 0xd4b2 <function_d3c0+0xf2>
; function: function_d7d0 at 0xd7d0 -- 0xd830
0xd7d0:     53                                    	push rbx
0xd7d1:     48 89 fe                              	mov rsi, rdi
0xd7d4:     48 89 fb                              	mov rbx, rdi
0xd7d7:     31 ff                                 	xor edi, edi
0xd7d9:     48 83 ec 20                           	sub rsp, 0x20
0xd7dd:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0xd7e6:     48 89 44 24 18                        	mov qword ptr [rsp + 0x18], rax
0xd7eb:     31 c0                                 	xor eax, eax
0xd7ed:     e8 ce 60 ff ff                        	call 0x38c0 <clock_gettime>
0xd7f2:     85 c0                                 	test eax, eax
0xd7f4:     74 1e                                 	je 0xd814 <function_d7d0+0x44>
0xd7f6:     48 89 e7                              	mov rdi, rsp
0xd7f9:     31 f6                                 	xor esi, esi
0xd7fb:     e8 20 62 ff ff                        	call 0x3a20 <gettimeofday>
0xd800:     48 8b 04 24                           	mov rax, qword ptr [rsp]
0xd804:     48 89 03                              	mov qword ptr [rbx], rax
0xd807:     48 69 44 24 08 e8 03 00 00            	imul rax, qword ptr [rsp + 8], 0x3e8
0xd810:     48 89 43 08                           	mov qword ptr [rbx + 8], rax
0xd814:     48 8b 44 24 18                        	mov rax, qword ptr [rsp + 0x18]
0xd819:     64 48 33 04 25 28 00 00 00            	xor rax, qword ptr fs:[0x28]
0xd822:     75 06                                 	jne 0xd82a <function_d7d0+0x5a>
0xd824:     48 83 c4 20                           	add rsp, 0x20
0xd828:     5b                                    	pop rbx
0xd829:     c3                                    	ret 
0xd82a:     e8 41 61 ff ff                        	call 0x3970 <__stack_chk_fail>
0xd82f:     90                                    	nop 
; function: function_d830 at 0xd830 -- 0xd889
0xd830:     48 83 ec 08                           	sub rsp, 8
0xd834:     31 f6                                 	xor esi, esi
0xd836:     e8 85 64 ff ff                        	call 0x3cc0 <setlocale>
0xd83b:     48 89 c2                              	mov rdx, rax
0xd83e:     b8 01 00 00 00                        	mov eax, 1
0xd843:     48 85 d2                              	test rdx, rdx
0xd846:     74 1f                                 	je 0xd867 <function_d830+0x37>
0xd848:     48 8d 3d f0 ca 00 00                  	lea rdi, [rip + 0xcaf0]
0xd84f:     b9 02 00 00 00                        	mov ecx, 2
0xd854:     48 89 d6                              	mov rsi, rdx
0xd857:     f3 a6                                 	repe cmpsb byte ptr [rsi], byte ptr [rdi]
0xd859:     40 0f 97 c6                           	seta sil
0xd85d:     0f 92 c1                              	setb cl
0xd860:     31 c0                                 	xor eax, eax
0xd862:     40 38 ce                              	cmp sil, cl
0xd865:     75 09                                 	jne 0xd870 <function_d830+0x40>
0xd867:     48 83 c4 08                           	add rsp, 8
0xd86b:     c3                                    	ret 
; data inside code section at 0xd86c -- 0xd870
0xd86c:     0f 1f 40 00                                        |..@.            |
0xd870:     48 8d 3d ca ca 00 00                  	lea rdi, [rip + 0xcaca]
0xd877:     b9 06 00 00 00                        	mov ecx, 6
0xd87c:     48 89 d6                              	mov rsi, rdx
0xd87f:     f3 a6                                 	repe cmpsb byte ptr [rsi], byte ptr [rdi]
0xd881:     0f 95 c0                              	setne al
0xd884:     48 83 c4 08                           	add rsp, 8
0xd888:     c3                                    	ret 
; data inside code section at 0xd889 -- 0xd890
0xd889:     0f 1f 80 00 00 00 00                               |.......         |
; function: function_d890 at 0xd890 -- 0xd923
0xd890:     48 83 ff 0a                           	cmp rdi, 0xa
0xd894:     b8 0a 00 00 00                        	mov eax, 0xa
0xd899:     49 b9 ab aa aa aa aa aa aa aa         	movabs r9, 0xaaaaaaaaaaaaaaab
0xd8a3:     48 0f 42 f8                           	cmovb rdi, rax
0xd8a7:     48 83 cf 01                           	or rdi, 1
0xd8ab:     48 83 ff ff                           	cmp rdi, -1
0xd8af:     74 6e                                 	je 0xd91f <function_d890+0x8f>
0xd8b1:     0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0xd8b8:     48 89 f8                              	mov rax, rdi
0xd8bb:     48 89 f9                              	mov rcx, rdi
0xd8be:     49 f7 e1                              	mul r9
0xd8c1:     48 89 d0                              	mov rax, rdx
0xd8c4:     48 d1 e8                              	shr rax, 1
0xd8c7:     48 8d 04 40                           	lea rax, [rax + rax*2]
0xd8cb:     48 29 c1                              	sub rcx, rax
0xd8ce:     48 83 ff 09                           	cmp rdi, 9
0xd8d2:     48 89 c8                              	mov rax, rcx
0xd8d5:     76 39                                 	jbe 0xd910 <function_d890+0x80>
0xd8d7:     48 85 c9                              	test rcx, rcx
0xd8da:     74 39                                 	je 0xd915 <function_d890+0x85>
0xd8dc:     41 b8 10 00 00 00                     	mov r8d, 0x10
0xd8e2:     be 09 00 00 00                        	mov esi, 9
0xd8e7:     b9 03 00 00 00                        	mov ecx, 3
0xd8ec:     eb 0b                                 	jmp 0xd8f9 <function_d890+0x69>
; data inside code section at 0xd8ee -- 0xd8f0
0xd8ee:     66 90                                              |f.              |
0xd8f0:     49 83 c0 08                           	add r8, 8
0xd8f4:     48 85 d2                              	test rdx, rdx
0xd8f7:     74 1c                                 	je 0xd915 <function_d890+0x85>
0xd8f9:     48 83 c1 02                           	add rcx, 2
0xd8fd:     31 d2                                 	xor edx, edx
0xd8ff:     48 89 f8                              	mov rax, rdi
0xd902:     48 f7 f1                              	div rcx
0xd905:     4c 01 c6                              	add rsi, r8
0xd908:     48 39 fe                              	cmp rsi, rdi
0xd90b:     48 89 d0                              	mov rax, rdx
0xd90e:     72 e0                                 	jb 0xd8f0 <function_d890+0x60>
0xd910:     48 85 c0                              	test rax, rax
0xd913:     75 0a                                 	jne 0xd91f <function_d890+0x8f>
0xd915:     48 83 c7 02                           	add rdi, 2
0xd919:     48 83 ff ff                           	cmp rdi, -1
0xd91d:     75 99                                 	jne 0xd8b8 <function_d890+0x28>
0xd91f:     48 89 f8                              	mov rax, rdi
0xd922:     c3                                    	ret 
; data inside code section at 0xd923 -- 0xd930
0xd923:     0f 1f 00 66 2e 0f 1f 84  00 00 00 00 00            |...f.........   |
; function: function_d930 at 0xd930 -- 0xd940
0xd930:     48 89 f8                              	mov rax, rdi
0xd933:     31 d2                                 	xor edx, edx
0xd935:     48 c1 c8 03                           	ror rax, 3
0xd939:     48 f7 f6                              	div rsi
0xd93c:     48 89 d0                              	mov rax, rdx
0xd93f:     c3                                    	ret 
; function: function_d940 at 0xd940 -- 0xd947
0xd940:     48 39 f7                              	cmp rdi, rsi
0xd943:     0f 94 c0                              	sete al
0xd946:     c3                                    	ret 
; data inside code section at 0xd947 -- 0xd950
0xd947:     66 0f 1f 84 00 00 00 00  00                        |f........       |
; function: function_d950 at 0xd950 -- 0xd972
0xd950:     53                                    	push rbx
0xd951:     48 89 fb                              	mov rbx, rdi
0xd954:     48 89 f7                              	mov rdi, rsi
0xd957:     48 8b 73 10                           	mov rsi, qword ptr [rbx + 0x10]
0xd95b:     ff 53 30                              	call qword ptr [rbx + 0x30]
0xd95e:     48 39 43 10                           	cmp qword ptr [rbx + 0x10], rax
0xd962:     76 09                                 	jbe 0xd96d <function_d950+0x1d>
0xd964:     48 c1 e0 04                           	shl rax, 4
0xd968:     48 03 03                              	add rax, qword ptr [rbx]
0xd96b:     5b                                    	pop rbx
0xd96c:     c3                                    	ret 
0xd96d:     e8 6e 5e ff ff                        	call 0x37e0 <abort>
; data inside code section at 0xd972 -- 0xd980
0xd972:     0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: function_d980 at 0xd980 -- 0xda9e
0xd980:     41 56                                 	push r14
0xd982:     41 55                                 	push r13
0xd984:     49 89 d6                              	mov r14, rdx
0xd987:     41 54                                 	push r12
0xd989:     55                                    	push rbp
0xd98a:     49 89 fc                              	mov r12, rdi
0xd98d:     53                                    	push rbx
0xd98e:     48 89 f5                              	mov rbp, rsi
0xd991:     41 89 cd                              	mov r13d, ecx
0xd994:     e8 b7 ff ff ff                        	call 0xd950 <function_d950>
0xd999:     49 89 06                              	mov qword ptr [r14], rax
0xd99c:     48 8b 30                              	mov rsi, qword ptr [rax]
0xd99f:     48 85 f6                              	test rsi, rsi
0xd9a2:     0f 84 e8 00 00 00                     	je 0xda90 <function_d980+0x110>
0xd9a8:     48 39 ee                              	cmp rsi, rbp
0xd9ab:     48 89 c3                              	mov rbx, rax
0xd9ae:     0f 84 8f 00 00 00                     	je 0xda43 <function_d980+0xc3>
0xd9b4:     48 89 ef                              	mov rdi, rbp
0xd9b7:     41 ff 54 24 38                        	call qword ptr [r12 + 0x38]
0xd9bc:     84 c0                                 	test al, al
0xd9be:     0f 85 7c 00 00 00                     	jne 0xda40 <function_d980+0xc0>
0xd9c4:     48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0xd9c8:     48 85 c0                              	test rax, rax
0xd9cb:     0f 84 bf 00 00 00                     	je 0xda90 <function_d980+0x110>
0xd9d1:     48 8b 30                              	mov rsi, qword ptr [rax]
0xd9d4:     48 39 f5                              	cmp rbp, rsi
0xd9d7:     75 20                                 	jne 0xd9f9 <function_d980+0x79>
0xd9d9:     eb 31                                 	jmp 0xda0c <function_d980+0x8c>
; data inside code section at 0xd9db -- 0xd9e0
0xd9db:     0f 1f 44 00 00                                     |..D..           |
0xd9e0:     48 8b 5b 08                           	mov rbx, qword ptr [rbx + 8]
0xd9e4:     48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0xd9e8:     48 85 c0                              	test rax, rax
0xd9eb:     0f 84 9f 00 00 00                     	je 0xda90 <function_d980+0x110>
0xd9f1:     48 8b 30                              	mov rsi, qword ptr [rax]
0xd9f4:     48 39 ee                              	cmp rsi, rbp
0xd9f7:     74 13                                 	je 0xda0c <function_d980+0x8c>
0xd9f9:     48 89 ef                              	mov rdi, rbp
0xd9fc:     41 ff 54 24 38                        	call qword ptr [r12 + 0x38]
0xda01:     84 c0                                 	test al, al
0xda03:     74 db                                 	je 0xd9e0 <function_d980+0x60>
0xda05:     48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0xda09:     48 8b 30                              	mov rsi, qword ptr [rax]
0xda0c:     45 84 ed                              	test r13b, r13b
0xda0f:     74 1d                                 	je 0xda2e <function_d980+0xae>
0xda11:     48 8b 50 08                           	mov rdx, qword ptr [rax + 8]
0xda15:     48 89 53 08                           	mov qword ptr [rbx + 8], rdx
0xda19:     48 c7 00 00 00 00 00                  	mov qword ptr [rax], 0
0xda20:     49 8b 54 24 48                        	mov rdx, qword ptr [r12 + 0x48]
0xda25:     48 89 50 08                           	mov qword ptr [rax + 8], rdx
0xda29:     49 89 44 24 48                        	mov qword ptr [r12 + 0x48], rax
0xda2e:     5b                                    	pop rbx
0xda2f:     48 89 f0                              	mov rax, rsi
0xda32:     5d                                    	pop rbp
0xda33:     41 5c                                 	pop r12
0xda35:     41 5d                                 	pop r13
0xda37:     41 5e                                 	pop r14
0xda39:     c3                                    	ret 
; data inside code section at 0xda3a -- 0xda40
0xda3a:     66 0f 1f 44 00 00                                  |f..D..          |
0xda40:     48 8b 33                              	mov rsi, qword ptr [rbx]
0xda43:     45 84 ed                              	test r13b, r13b
0xda46:     74 e6                                 	je 0xda2e <function_d980+0xae>
0xda48:     48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0xda4c:     48 85 c0                              	test rax, rax
0xda4f:     74 2f                                 	je 0xda80 <function_d980+0x100>
0xda51:     f3 0f 6f 00                           	movdqu xmm0, xmmword ptr [rax]
0xda55:     0f 11 03                              	movups xmmword ptr [rbx], xmm0
0xda58:     48 c7 00 00 00 00 00                  	mov qword ptr [rax], 0
0xda5f:     49 8b 54 24 48                        	mov rdx, qword ptr [r12 + 0x48]
0xda64:     48 89 50 08                           	mov qword ptr [rax + 8], rdx
0xda68:     49 89 44 24 48                        	mov qword ptr [r12 + 0x48], rax
0xda6d:     48 89 f0                              	mov rax, rsi
0xda70:     5b                                    	pop rbx
0xda71:     5d                                    	pop rbp
0xda72:     41 5c                                 	pop r12
0xda74:     41 5d                                 	pop r13
0xda76:     41 5e                                 	pop r14
0xda78:     c3                                    	ret 
; data inside code section at 0xda79 -- 0xda80
0xda79:     0f 1f 80 00 00 00 00                               |.......         |
0xda80:     48 c7 03 00 00 00 00                  	mov qword ptr [rbx], 0
0xda87:     eb a5                                 	jmp 0xda2e <function_d980+0xae>
; data inside code section at 0xda89 -- 0xda90
0xda89:     0f 1f 80 00 00 00 00                               |.......         |
0xda90:     31 f6                                 	xor esi, esi
0xda92:     5b                                    	pop rbx
0xda93:     48 89 f0                              	mov rax, rsi
0xda96:     5d                                    	pop rbp
0xda97:     41 5c                                 	pop r12
0xda99:     41 5d                                 	pop r13
0xda9b:     41 5e                                 	pop r14
0xda9d:     c3                                    	ret 
; data inside code section at 0xda9e -- 0xdaa0
0xda9e:     66 90                                              |f.              |
; function: function_daa0 at 0xdaa0 -- 0xdb17
0xdaa0:     48 8b 17                              	mov rdx, qword ptr [rdi]
0xdaa3:     48 8d 0d 16 c9 00 00                  	lea rcx, [rip + 0xc916]
0xdaaa:     b8 01 00 00 00                        	mov eax, 1
0xdaaf:     48 39 ca                              	cmp rdx, rcx
0xdab2:     74 61                                 	je 0xdb15 <function_daa0+0x75>
0xdab4:     f3 0f 10 42 08                        	movss xmm0, dword ptr [rdx + 8]
0xdab9:     0f 2e 05 14 c9 00 00                  	ucomiss xmm0, dword ptr [rip + 0xc914]
0xdac0:     76 4e                                 	jbe 0xdb10 <function_daa0+0x70>
0xdac2:     f3 0f 10 0d 0e c9 00 00               	movss xmm1, dword ptr [rip + 0xc90e]
0xdaca:     0f 2e c8                              	ucomiss xmm1, xmm0
0xdacd:     76 41                                 	jbe 0xdb10 <function_daa0+0x70>
0xdacf:     f3 0f 10 4a 0c                        	movss xmm1, dword ptr [rdx + 0xc]
0xdad4:     0f 2e 0d 01 c9 00 00                  	ucomiss xmm1, dword ptr [rip + 0xc901]
0xdadb:     76 33                                 	jbe 0xdb10 <function_daa0+0x70>
0xdadd:     f3 0f 10 0a                           	movss xmm1, dword ptr [rdx]
0xdae1:     0f 2e 0d f8 c8 00 00                  	ucomiss xmm1, dword ptr [rip + 0xc8f8]
0xdae8:     72 26                                 	jb 0xdb10 <function_daa0+0x70>
0xdaea:     f3 0f 58 0d e2 c8 00 00               	addss xmm1, dword ptr [rip + 0xc8e2]
0xdaf2:     f3 0f 10 52 04                        	movss xmm2, dword ptr [rdx + 4]
0xdaf7:     0f 2e d1                              	ucomiss xmm2, xmm1
0xdafa:     76 14                                 	jbe 0xdb10 <function_daa0+0x70>
0xdafc:     f3 0f 10 1d e0 c8 00 00               	movss xmm3, dword ptr [rip + 0xc8e0]
0xdb04:     0f 2e da                              	ucomiss xmm3, xmm2
0xdb07:     72 07                                 	jb 0xdb10 <function_daa0+0x70>
0xdb09:     0f 2e c1                              	ucomiss xmm0, xmm1
0xdb0c:     77 07                                 	ja 0xdb15 <function_daa0+0x75>
0xdb0e:     66 90                                 	nop 
0xdb10:     48 89 0f                              	mov qword ptr [rdi], rcx
0xdb13:     31 c0                                 	xor eax, eax
0xdb15:     f3 c3                                 	ret 
; data inside code section at 0xdb17 -- 0xdb20
0xdb17:     66 0f 1f 84 00 00 00 00  00                        |f........       |
; function: function_db20 at 0xdb20 -- 0xdc60
0xdb20:     41 57                                 	push r15
0xdb22:     41 56                                 	push r14
0xdb24:     41 55                                 	push r13
0xdb26:     41 54                                 	push r12
0xdb28:     55                                    	push rbp
0xdb29:     53                                    	push rbx
0xdb2a:     48 83 ec 08                           	sub rsp, 8
0xdb2e:     4c 8b 26                              	mov r12, qword ptr [rsi]
0xdb31:     4c 3b 66 08                           	cmp r12, qword ptr [rsi + 8]
0xdb35:     0f 83 dd 00 00 00                     	jae 0xdc18 <function_db20+0xf8>
0xdb3b:     48 89 fd                              	mov rbp, rdi
0xdb3e:     49 89 f5                              	mov r13, rsi
0xdb41:     41 89 d6                              	mov r14d, edx
0xdb44:     0f 1f 40 00                           	nop dword ptr [rax]
0xdb48:     4d 8b 3c 24                           	mov r15, qword ptr [r12]
0xdb4c:     4d 85 ff                              	test r15, r15
0xdb4f:     0f 84 b5 00 00 00                     	je 0xdc0a <function_db20+0xea>
0xdb55:     49 8b 5c 24 08                        	mov rbx, qword ptr [r12 + 8]
0xdb5a:     48 85 db                              	test rbx, rbx
0xdb5d:     75 1d                                 	jne 0xdb7c <function_db20+0x5c>
0xdb5f:     eb 5a                                 	jmp 0xdbbb <function_db20+0x9b>
; data inside code section at 0xdb61 -- 0xdb68
0xdb61:     0f 1f 80 00 00 00 00                               |.......         |
0xdb68:     48 8b 48 08                           	mov rcx, qword ptr [rax + 8]
0xdb6c:     48 85 d2                              	test rdx, rdx
0xdb6f:     48 89 4b 08                           	mov qword ptr [rbx + 8], rcx
0xdb73:     48 89 58 08                           	mov qword ptr [rax + 8], rbx
0xdb77:     48 89 d3                              	mov rbx, rdx
0xdb7a:     74 3b                                 	je 0xdbb7 <function_db20+0x97>
0xdb7c:     4c 8b 3b                              	mov r15, qword ptr [rbx]
0xdb7f:     48 89 ef                              	mov rdi, rbp
0xdb82:     4c 89 fe                              	mov rsi, r15
0xdb85:     e8 c6 fd ff ff                        	call 0xd950 <function_d950>
0xdb8a:     48 83 38 00                           	cmp qword ptr [rax], 0
0xdb8e:     48 8b 53 08                           	mov rdx, qword ptr [rbx + 8]
0xdb92:     75 d4                                 	jne 0xdb68 <function_db20+0x48>
0xdb94:     4c 89 38                              	mov qword ptr [rax], r15
0xdb97:     48 83 45 18 01                        	add qword ptr [rbp + 0x18], 1
0xdb9c:     48 85 d2                              	test rdx, rdx
0xdb9f:     48 c7 03 00 00 00 00                  	mov qword ptr [rbx], 0
0xdba6:     48 8b 45 48                           	mov rax, qword ptr [rbp + 0x48]
0xdbaa:     48 89 43 08                           	mov qword ptr [rbx + 8], rax
0xdbae:     48 89 5d 48                           	mov qword ptr [rbp + 0x48], rbx
0xdbb2:     48 89 d3                              	mov rbx, rdx
0xdbb5:     75 c5                                 	jne 0xdb7c <function_db20+0x5c>
0xdbb7:     4d 8b 3c 24                           	mov r15, qword ptr [r12]
0xdbbb:     45 84 f6                              	test r14b, r14b
0xdbbe:     49 c7 44 24 08 00 00 00 00            	mov qword ptr [r12 + 8], 0
0xdbc7:     75 41                                 	jne 0xdc0a <function_db20+0xea>
0xdbc9:     4c 89 fe                              	mov rsi, r15
0xdbcc:     48 89 ef                              	mov rdi, rbp
0xdbcf:     e8 7c fd ff ff                        	call 0xd950 <function_d950>
0xdbd4:     48 83 38 00                           	cmp qword ptr [rax], 0
0xdbd8:     48 89 c3                              	mov rbx, rax
0xdbdb:     74 53                                 	je 0xdc30 <function_db20+0x110>
0xdbdd:     48 8b 45 48                           	mov rax, qword ptr [rbp + 0x48]
0xdbe1:     48 85 c0                              	test rax, rax
0xdbe4:     74 5a                                 	je 0xdc40 <function_db20+0x120>
0xdbe6:     48 8b 50 08                           	mov rdx, qword ptr [rax + 8]
0xdbea:     48 89 55 48                           	mov qword ptr [rbp + 0x48], rdx
0xdbee:     48 8b 53 08                           	mov rdx, qword ptr [rbx + 8]
0xdbf2:     4c 89 38                              	mov qword ptr [rax], r15
0xdbf5:     48 89 50 08                           	mov qword ptr [rax + 8], rdx
0xdbf9:     48 89 43 08                           	mov qword ptr [rbx + 8], rax
0xdbfd:     49 c7 04 24 00 00 00 00               	mov qword ptr [r12], 0
0xdc05:     49 83 6d 18 01                        	sub qword ptr [r13 + 0x18], 1
0xdc0a:     49 83 c4 10                           	add r12, 0x10
0xdc0e:     4d 39 65 08                           	cmp qword ptr [r13 + 8], r12
0xdc12:     0f 87 30 ff ff ff                     	ja 0xdb48 <function_db20+0x28>
0xdc18:     48 83 c4 08                           	add rsp, 8
0xdc1c:     b8 01 00 00 00                        	mov eax, 1
0xdc21:     5b                                    	pop rbx
0xdc22:     5d                                    	pop rbp
0xdc23:     41 5c                                 	pop r12
0xdc25:     41 5d                                 	pop r13
0xdc27:     41 5e                                 	pop r14
0xdc29:     41 5f                                 	pop r15
0xdc2b:     c3                                    	ret 
; data inside code section at 0xdc2c -- 0xdc30
0xdc2c:     0f 1f 40 00                                        |..@.            |
0xdc30:     4c 89 38                              	mov qword ptr [rax], r15
0xdc33:     48 83 45 18 01                        	add qword ptr [rbp + 0x18], 1
0xdc38:     eb c3                                 	jmp 0xdbfd <function_db20+0xdd>
; data inside code section at 0xdc3a -- 0xdc40
0xdc3a:     66 0f 1f 44 00 00                                  |f..D..          |
0xdc40:     bf 10 00 00 00                        	mov edi, 0x10
0xdc45:     e8 2e 62 ff ff                        	call 0x3e78 <malloc>
0xdc4a:     48 85 c0                              	test rax, rax
0xdc4d:     75 9f                                 	jne 0xdbee <function_db20+0xce>
0xdc4f:     48 83 c4 08                           	add rsp, 8
0xdc53:     31 c0                                 	xor eax, eax
0xdc55:     5b                                    	pop rbx
0xdc56:     5d                                    	pop rbp
0xdc57:     41 5c                                 	pop r12
0xdc59:     41 5d                                 	pop r13
0xdc5b:     41 5e                                 	pop r14
0xdc5d:     41 5f                                 	pop r15
0xdc5f:     c3                                    	ret 
; function: function_dc60 at 0xdc60 -- 0xdc65
0xdc60:     48 8b 47 10                           	mov rax, qword ptr [rdi + 0x10]
0xdc64:     c3                                    	ret 
; data inside code section at 0xdc65 -- 0xdc70
0xdc65:     90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: function_dc70 at 0xdc70 -- 0xdc75
0xdc70:     48 8b 47 18                           	mov rax, qword ptr [rdi + 0x18]
0xdc74:     c3                                    	ret 
; data inside code section at 0xdc75 -- 0xdc80
0xdc75:     90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: function_dc80 at 0xdc80 -- 0xdc85
0xdc80:     48 8b 47 20                           	mov rax, qword ptr [rdi + 0x20]
0xdc84:     c3                                    	ret 
; data inside code section at 0xdc85 -- 0xdc90
0xdc85:     90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: function_dc90 at 0xdc90 -- 0xdcd9
0xdc90:     48 8b 37                              	mov rsi, qword ptr [rdi]
0xdc93:     48 8b 7f 08                           	mov rdi, qword ptr [rdi + 8]
0xdc97:     31 c0                                 	xor eax, eax
0xdc99:     48 39 fe                              	cmp rsi, rdi
0xdc9c:     73 39                                 	jae 0xdcd7 <function_dc90+0x47>
0xdc9e:     66 90                                 	nop 
0xdca0:     48 83 3e 00                           	cmp qword ptr [rsi], 0
0xdca4:     74 26                                 	je 0xdccc <function_dc90+0x3c>
0xdca6:     48 8b 56 08                           	mov rdx, qword ptr [rsi + 8]
0xdcaa:     b9 01 00 00 00                        	mov ecx, 1
0xdcaf:     48 85 d2                              	test rdx, rdx
0xdcb2:     74 11                                 	je 0xdcc5 <function_dc90+0x35>
0xdcb4:     0f 1f 40 00                           	nop dword ptr [rax]
0xdcb8:     48 8b 52 08                           	mov rdx, qword ptr [rdx + 8]
0xdcbc:     48 83 c1 01                           	add rcx, 1
0xdcc0:     48 85 d2                              	test rdx, rdx
0xdcc3:     75 f3                                 	jne 0xdcb8 <function_dc90+0x28>
0xdcc5:     48 39 c8                              	cmp rax, rcx
0xdcc8:     48 0f 42 c1                           	cmovb rax, rcx
0xdccc:     48 83 c6 10                           	add rsi, 0x10
0xdcd0:     48 39 fe                              	cmp rsi, rdi
0xdcd3:     72 cb                                 	jb 0xdca0 <function_dc90+0x10>
0xdcd5:     f3 c3                                 	ret 
0xdcd7:     f3 c3                                 	ret 
; data inside code section at 0xdcd9 -- 0xdce0
0xdcd9:     0f 1f 80 00 00 00 00                               |.......         |
; function: function_dce0 at 0xdce0 -- 0xdd38
0xdce0:     48 8b 0f                              	mov rcx, qword ptr [rdi]
0xdce3:     4c 8b 47 08                           	mov r8, qword ptr [rdi + 8]
0xdce7:     31 d2                                 	xor edx, edx
0xdce9:     31 f6                                 	xor esi, esi
0xdceb:     4c 39 c1                              	cmp rcx, r8
0xdcee:     73 36                                 	jae 0xdd26 <function_dce0+0x46>
0xdcf0:     48 83 39 00                           	cmp qword ptr [rcx], 0
0xdcf4:     74 27                                 	je 0xdd1d <function_dce0+0x3d>
0xdcf6:     48 8b 41 08                           	mov rax, qword ptr [rcx + 8]
0xdcfa:     48 83 c6 01                           	add rsi, 1
0xdcfe:     48 83 c2 01                           	add rdx, 1
0xdd02:     48 85 c0                              	test rax, rax
0xdd05:     74 16                                 	je 0xdd1d <function_dce0+0x3d>
0xdd07:     66 0f 1f 84 00 00 00 00 00            	nop word ptr [rax + rax]
0xdd10:     48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0xdd14:     48 83 c2 01                           	add rdx, 1
0xdd18:     48 85 c0                              	test rax, rax
0xdd1b:     75 f3                                 	jne 0xdd10 <function_dce0+0x30>
0xdd1d:     48 83 c1 10                           	add rcx, 0x10
0xdd21:     4c 39 c1                              	cmp rcx, r8
0xdd24:     72 ca                                 	jb 0xdcf0 <function_dce0+0x10>
0xdd26:     31 c0                                 	xor eax, eax
0xdd28:     48 39 77 18                           	cmp qword ptr [rdi + 0x18], rsi
0xdd2c:     74 02                                 	je 0xdd30 <function_dce0+0x50>
0xdd2e:     f3 c3                                 	ret 
0xdd30:     48 39 57 20                           	cmp qword ptr [rdi + 0x20], rdx
0xdd34:     0f 94 c0                              	sete al
0xdd37:     c3                                    	ret 
; data inside code section at 0xdd38 -- 0xdd40
0xdd38:     0f 1f 84 00 00 00 00 00                            |........        |
; function: function_dd40 at 0xdd40 -- 0xde87
0xdd40:     41 55                                 	push r13
0xdd42:     41 54                                 	push r12
0xdd44:     49 89 f4                              	mov r12, rsi
0xdd47:     55                                    	push rbp
0xdd48:     53                                    	push rbx
0xdd49:     31 db                                 	xor ebx, ebx
0xdd4b:     48 83 ec 08                           	sub rsp, 8
0xdd4f:     48 8b 37                              	mov rsi, qword ptr [rdi]
0xdd52:     48 8b 4f 20                           	mov rcx, qword ptr [rdi + 0x20]
0xdd56:     48 8b 6f 10                           	mov rbp, qword ptr [rdi + 0x10]
0xdd5a:     4c 8b 6f 18                           	mov r13, qword ptr [rdi + 0x18]
0xdd5e:     48 8b 7f 08                           	mov rdi, qword ptr [rdi + 8]
0xdd62:     48 39 fe                              	cmp rsi, rdi
0xdd65:     73 3e                                 	jae 0xdda5 <function_dd40+0x65>
0xdd67:     66 0f 1f 84 00 00 00 00 00            	nop word ptr [rax + rax]
0xdd70:     48 83 3e 00                           	cmp qword ptr [rsi], 0
0xdd74:     74 26                                 	je 0xdd9c <function_dd40+0x5c>
0xdd76:     48 8b 46 08                           	mov rax, qword ptr [rsi + 8]
0xdd7a:     ba 01 00 00 00                        	mov edx, 1
0xdd7f:     48 85 c0                              	test rax, rax
0xdd82:     74 11                                 	je 0xdd95 <function_dd40+0x55>
0xdd84:     0f 1f 40 00                           	nop dword ptr [rax]
0xdd88:     48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0xdd8c:     48 83 c2 01                           	add rdx, 1
0xdd90:     48 85 c0                              	test rax, rax
0xdd93:     75 f3                                 	jne 0xdd88 <function_dd40+0x48>
0xdd95:     48 39 d3                              	cmp rbx, rdx
0xdd98:     48 0f 42 da                           	cmovb rbx, rdx
0xdd9c:     48 83 c6 10                           	add rsi, 0x10
0xdda0:     48 39 fe                              	cmp rsi, rdi
0xdda3:     72 cb                                 	jb 0xdd70 <function_dd40+0x30>
0xdda5:     48 8d 15 9b c5 00 00                  	lea rdx, [rip + 0xc59b]
0xddac:     be 01 00 00 00                        	mov esi, 1
0xddb1:     4c 89 e7                              	mov rdi, r12
0xddb4:     31 c0                                 	xor eax, eax
0xddb6:     e8 35 60 ff ff                        	call 0x3df0 <__fprintf_chk>
0xddbb:     48 8d 15 9d c5 00 00                  	lea rdx, [rip + 0xc59d]
0xddc2:     31 c0                                 	xor eax, eax
0xddc4:     48 89 e9                              	mov rcx, rbp
0xddc7:     be 01 00 00 00                        	mov esi, 1
0xddcc:     4c 89 e7                              	mov rdi, r12
0xddcf:     e8 1c 60 ff ff                        	call 0x3df0 <__fprintf_chk>
0xddd4:     4d 85 ed                              	test r13, r13
0xddd7:     78 67                                 	js 0xde40 <function_dd40+0x100>
0xddd9:     66 0f ef c0                           	pxor xmm0, xmm0
0xdddd:     48 85 ed                              	test rbp, rbp
0xdde0:     f2 49 0f 2a c5                        	cvtsi2sd xmm0, r13
0xdde5:     f2 0f 59 05 0b c6 00 00               	mulsd xmm0, qword ptr [rip + 0xc60b]
0xdded:     78 7a                                 	js 0xde69 <function_dd40+0x129>
0xddef:     66 0f ef c9                           	pxor xmm1, xmm1
0xddf3:     f2 48 0f 2a cd                        	cvtsi2sd xmm1, rbp
0xddf8:     f2 0f 5e c1                           	divsd xmm0, xmm1
0xddfc:     48 8d 15 8d c5 00 00                  	lea rdx, [rip + 0xc58d]
0xde03:     4c 89 e9                              	mov rcx, r13
0xde06:     4c 89 e7                              	mov rdi, r12
0xde09:     be 01 00 00 00                        	mov esi, 1
0xde0e:     b8 01 00 00 00                        	mov eax, 1
0xde13:     e8 d8 5f ff ff                        	call 0x3df0 <__fprintf_chk>
0xde18:     48 83 c4 08                           	add rsp, 8
0xde1c:     48 89 d9                              	mov rcx, rbx
0xde1f:     4c 89 e7                              	mov rdi, r12
0xde22:     5b                                    	pop rbx
0xde23:     5d                                    	pop rbp
0xde24:     41 5c                                 	pop r12
0xde26:     41 5d                                 	pop r13
0xde28:     48 8d 15 48 c5 00 00                  	lea rdx, [rip + 0xc548]
0xde2f:     be 01 00 00 00                        	mov esi, 1
0xde34:     31 c0                                 	xor eax, eax
0xde36:     e9 b5 5f ff ff                        	jmp 0x3df0 <__fprintf_chk>
; data inside code section at 0xde3b -- 0xde40
0xde3b:     0f 1f 44 00 00                                     |..D..           |
0xde40:     4c 89 e8                              	mov rax, r13
0xde43:     4c 89 ea                              	mov rdx, r13
0xde46:     66 0f ef c0                           	pxor xmm0, xmm0
0xde4a:     48 d1 e8                              	shr rax, 1
0xde4d:     83 e2 01                              	and edx, 1
0xde50:     48 09 d0                              	or rax, rdx
0xde53:     48 85 ed                              	test rbp, rbp
0xde56:     f2 48 0f 2a c0                        	cvtsi2sd xmm0, rax
0xde5b:     f2 0f 58 c0                           	addsd xmm0, xmm0
0xde5f:     f2 0f 59 05 91 c5 00 00               	mulsd xmm0, qword ptr [rip + 0xc591]
0xde67:     79 86                                 	jns 0xddef <function_dd40+0xaf>
0xde69:     48 89 e8                              	mov rax, rbp
0xde6c:     66 0f ef c9                           	pxor xmm1, xmm1
0xde70:     48 d1 e8                              	shr rax, 1
0xde73:     83 e5 01                              	and ebp, 1
0xde76:     48 09 e8                              	or rax, rbp
0xde79:     f2 48 0f 2a c8                        	cvtsi2sd xmm1, rax
0xde7e:     f2 0f 58 c9                           	addsd xmm1, xmm1
0xde82:     e9 71 ff ff ff                        	jmp 0xddf8 <function_dd40+0xb8>
; data inside code section at 0xde87 -- 0xde90
0xde87:     66 0f 1f 84 00 00 00 00  00                        |f........       |
; function: function_de90 at 0xde90 -- 0xdeeb
0xde90:     41 54                                 	push r12
0xde92:     55                                    	push rbp
0xde93:     49 89 fc                              	mov r12, rdi
0xde96:     53                                    	push rbx
0xde97:     48 89 f5                              	mov rbp, rsi
0xde9a:     e8 b1 fa ff ff                        	call 0xd950 <function_d950>
0xde9f:     48 8b 30                              	mov rsi, qword ptr [rax]
0xdea2:     48 85 f6                              	test rsi, rsi
0xdea5:     74 26                                 	je 0xdecd <function_de90+0x3d>
0xdea7:     48 89 c3                              	mov rbx, rax
0xdeaa:     eb 07                                 	jmp 0xdeb3 <function_de90+0x23>
; data inside code section at 0xdeac -- 0xdeb0
0xdeac:     0f 1f 40 00                                        |..@.            |
0xdeb0:     48 8b 33                              	mov rsi, qword ptr [rbx]
0xdeb3:     48 39 ee                              	cmp rsi, rbp
0xdeb6:     74 17                                 	je 0xdecf <function_de90+0x3f>
0xdeb8:     48 89 ef                              	mov rdi, rbp
0xdebb:     41 ff 54 24 38                        	call qword ptr [r12 + 0x38]
0xdec0:     84 c0                                 	test al, al
0xdec2:     75 1c                                 	jne 0xdee0 <function_de90+0x50>
0xdec4:     48 8b 5b 08                           	mov rbx, qword ptr [rbx + 8]
0xdec8:     48 85 db                              	test rbx, rbx
0xdecb:     75 e3                                 	jne 0xdeb0 <function_de90+0x20>
0xdecd:     31 f6                                 	xor esi, esi
0xdecf:     5b                                    	pop rbx
0xded0:     48 89 f0                              	mov rax, rsi
0xded3:     5d                                    	pop rbp
0xded4:     41 5c                                 	pop r12
0xded6:     c3                                    	ret 
; data inside code section at 0xded7 -- 0xdee0
0xded7:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xdee0:     48 8b 33                              	mov rsi, qword ptr [rbx]
0xdee3:     5b                                    	pop rbx
0xdee4:     5d                                    	pop rbp
0xdee5:     48 89 f0                              	mov rax, rsi
0xdee8:     41 5c                                 	pop r12
0xdeea:     c3                                    	ret 
; data inside code section at 0xdeeb -- 0xdef0
0xdeeb:     0f 1f 44 00 00                                     |..D..           |
; function: function_def0 at 0xdef0 -- 0xdf31
0xdef0:     48 83 7f 20 00                        	cmp qword ptr [rdi + 0x20], 0
0xdef5:     74 2c                                 	je 0xdf23 <function_def0+0x33>
0xdef7:     48 8b 17                              	mov rdx, qword ptr [rdi]
0xdefa:     48 8b 4f 08                           	mov rcx, qword ptr [rdi + 8]
0xdefe:     48 39 ca                              	cmp rdx, rcx
0xdf01:     73 25                                 	jae 0xdf28 <function_def0+0x38>
0xdf03:     48 8b 02                              	mov rax, qword ptr [rdx]
0xdf06:     48 85 c0                              	test rax, rax
0xdf09:     75 1b                                 	jne 0xdf26 <function_def0+0x36>
0xdf0b:     0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0xdf10:     48 83 c2 10                           	add rdx, 0x10
0xdf14:     48 39 ca                              	cmp rdx, rcx
0xdf17:     73 0f                                 	jae 0xdf28 <function_def0+0x38>
0xdf19:     48 8b 02                              	mov rax, qword ptr [rdx]
0xdf1c:     48 85 c0                              	test rax, rax
0xdf1f:     74 ef                                 	je 0xdf10 <function_def0+0x20>
0xdf21:     f3 c3                                 	ret 
0xdf23:     31 c0                                 	xor eax, eax
0xdf25:     c3                                    	ret 
0xdf26:     f3 c3                                 	ret 
0xdf28:     48 83 ec 08                           	sub rsp, 8
0xdf2c:     e8 af 58 ff ff                        	call 0x37e0 <abort>
; data inside code section at 0xdf31 -- 0xdf40
0xdf31:     0f 1f 44 00 00 66 2e 0f  1f 84 00 00 00 00 00      |..D..f......... |
; function: function_df40 at 0xdf40 -- 0xdfb2
0xdf40:     55                                    	push rbp
0xdf41:     53                                    	push rbx
0xdf42:     48 89 fd                              	mov rbp, rdi
0xdf45:     48 89 f3                              	mov rbx, rsi
0xdf48:     48 83 ec 08                           	sub rsp, 8
0xdf4c:     e8 ff f9 ff ff                        	call 0xd950 <function_d950>
0xdf51:     48 89 c2                              	mov rdx, rax
0xdf54:     48 89 c1                              	mov rcx, rax
0xdf57:     48 8b 02                              	mov rax, qword ptr [rdx]
0xdf5a:     48 8b 52 08                           	mov rdx, qword ptr [rdx + 8]
0xdf5e:     48 39 d8                              	cmp rax, rbx
0xdf61:     74 16                                 	je 0xdf79 <function_df40+0x39>
0xdf63:     0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0xdf68:     48 85 d2                              	test rdx, rdx
0xdf6b:     74 11                                 	je 0xdf7e <function_df40+0x3e>
0xdf6d:     48 8b 02                              	mov rax, qword ptr [rdx]
0xdf70:     48 8b 52 08                           	mov rdx, qword ptr [rdx + 8]
0xdf74:     48 39 d8                              	cmp rax, rbx
0xdf77:     75 ef                                 	jne 0xdf68 <function_df40+0x28>
0xdf79:     48 85 d2                              	test rdx, rdx
0xdf7c:     75 2a                                 	jne 0xdfa8 <function_df40+0x68>
0xdf7e:     48 8b 55 08                           	mov rdx, qword ptr [rbp + 8]
0xdf82:     eb 0c                                 	jmp 0xdf90 <function_df40+0x50>
; data inside code section at 0xdf84 -- 0xdf88
0xdf84:     0f 1f 40 00                                        |..@.            |
0xdf88:     48 8b 01                              	mov rax, qword ptr [rcx]
0xdf8b:     48 85 c0                              	test rax, rax
0xdf8e:     75 0b                                 	jne 0xdf9b <function_df40+0x5b>
0xdf90:     48 83 c1 10                           	add rcx, 0x10
0xdf94:     48 39 ca                              	cmp rdx, rcx
0xdf97:     77 ef                                 	ja 0xdf88 <function_df40+0x48>
0xdf99:     31 c0                                 	xor eax, eax
0xdf9b:     48 83 c4 08                           	add rsp, 8
0xdf9f:     5b                                    	pop rbx
0xdfa0:     5d                                    	pop rbp
0xdfa1:     c3                                    	ret 
; data inside code section at 0xdfa2 -- 0xdfa8
0xdfa2:     66 0f 1f 44 00 00                                  |f..D..          |
0xdfa8:     48 8b 02                              	mov rax, qword ptr [rdx]
0xdfab:     48 83 c4 08                           	add rsp, 8
0xdfaf:     5b                                    	pop rbx
0xdfb0:     5d                                    	pop rbp
0xdfb1:     c3                                    	ret 
; data inside code section at 0xdfb2 -- 0xdfc0
0xdfb2:     0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: function_dfc0 at 0xdfc0 -- 0xe025
0xdfc0:     4c 8b 0f                              	mov r9, qword ptr [rdi]
0xdfc3:     4c 39 4f 08                           	cmp qword ptr [rdi + 8], r9
0xdfc7:     76 59                                 	jbe 0xe022 <function_dfc0+0x62>
0xdfc9:     45 31 c0                              	xor r8d, r8d
0xdfcc:     49 8b 09                              	mov rcx, qword ptr [r9]
0xdfcf:     48 85 c9                              	test rcx, rcx
0xdfd2:     74 39                                 	je 0xe00d <function_dfc0+0x4d>
0xdfd4:     4c 39 c2                              	cmp rdx, r8
0xdfd7:     76 3e                                 	jbe 0xe017 <function_dfc0+0x57>
0xdfd9:     4a 89 0c c6                           	mov qword ptr [rsi + r8*8], rcx
0xdfdd:     49 8b 49 08                           	mov rcx, qword ptr [r9 + 8]
0xdfe1:     49 8d 40 01                           	lea rax, [r8 + 1]
0xdfe5:     48 85 c9                              	test rcx, rcx
0xdfe8:     74 20                                 	je 0xe00a <function_dfc0+0x4a>
0xdfea:     66 0f 1f 44 00 00                     	nop word ptr [rax + rax]
0xdff0:     48 39 c2                              	cmp rdx, rax
0xdff3:     74 2b                                 	je 0xe020 <function_dfc0+0x60>
0xdff5:     4c 8b 01                              	mov r8, qword ptr [rcx]
0xdff8:     48 83 c0 01                           	add rax, 1
0xdffc:     4c 89 44 c6 f8                        	mov qword ptr [rsi + rax*8 - 8], r8
0xe001:     48 8b 49 08                           	mov rcx, qword ptr [rcx + 8]
0xe005:     48 85 c9                              	test rcx, rcx
0xe008:     75 e6                                 	jne 0xdff0 <function_dfc0+0x30>
0xe00a:     49 89 c0                              	mov r8, rax
0xe00d:     49 83 c1 10                           	add r9, 0x10
0xe011:     4c 39 4f 08                           	cmp qword ptr [rdi + 8], r9
0xe015:     77 b5                                 	ja 0xdfcc <function_dfc0+0xc>
0xe017:     4c 89 c0                              	mov rax, r8
0xe01a:     c3                                    	ret 
; data inside code section at 0xe01b -- 0xe020
0xe01b:     0f 1f 44 00 00                                     |..D..           |
0xe020:     f3 c3                                 	ret 
0xe022:     31 c0                                 	xor eax, eax
0xe024:     c3                                    	ret 
; data inside code section at 0xe025 -- 0xe030
0xe025:     90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: function_e030 at 0xe030 -- 0xe09a
0xe030:     41 57                                 	push r15
0xe032:     41 56                                 	push r14
0xe034:     41 55                                 	push r13
0xe036:     41 54                                 	push r12
0xe038:     55                                    	push rbp
0xe039:     53                                    	push rbx
0xe03a:     48 83 ec 08                           	sub rsp, 8
0xe03e:     4c 8b 37                              	mov r14, qword ptr [rdi]
0xe041:     4c 39 77 08                           	cmp qword ptr [rdi + 8], r14
0xe045:     76 4f                                 	jbe 0xe096 <function_e030+0x66>
0xe047:     49 89 d5                              	mov r13, rdx
0xe04a:     49 89 f4                              	mov r12, rsi
0xe04d:     49 89 ff                              	mov r15, rdi
0xe050:     31 ed                                 	xor ebp, ebp
0xe052:     49 8b 3e                              	mov rdi, qword ptr [r14]
0xe055:     48 85 ff                              	test rdi, rdi
0xe058:     74 20                                 	je 0xe07a <function_e030+0x4a>
0xe05a:     4c 89 f3                              	mov rbx, r14
0xe05d:     eb 04                                 	jmp 0xe063 <function_e030+0x33>
; data inside code section at 0xe05f -- 0xe060
0xe05f:     90                                                 |.               |
0xe060:     48 8b 3b                              	mov rdi, qword ptr [rbx]
0xe063:     4c 89 ee                              	mov rsi, r13
0xe066:     41 ff d4                              	call r12
0xe069:     84 c0                                 	test al, al
0xe06b:     74 17                                 	je 0xe084 <function_e030+0x54>
0xe06d:     48 8b 5b 08                           	mov rbx, qword ptr [rbx + 8]
0xe071:     48 83 c5 01                           	add rbp, 1
0xe075:     48 85 db                              	test rbx, rbx
0xe078:     75 e6                                 	jne 0xe060 <function_e030+0x30>
0xe07a:     49 83 c6 10                           	add r14, 0x10
0xe07e:     4d 39 77 08                           	cmp qword ptr [r15 + 8], r14
0xe082:     77 ce                                 	ja 0xe052 <function_e030+0x22>
0xe084:     48 83 c4 08                           	add rsp, 8
0xe088:     48 89 e8                              	mov rax, rbp
0xe08b:     5b                                    	pop rbx
0xe08c:     5d                                    	pop rbp
0xe08d:     41 5c                                 	pop r12
0xe08f:     41 5d                                 	pop r13
0xe091:     41 5e                                 	pop r14
0xe093:     41 5f                                 	pop r15
0xe095:     c3                                    	ret 
0xe096:     31 ed                                 	xor ebp, ebp
0xe098:     eb ea                                 	jmp 0xe084 <function_e030+0x54>
; data inside code section at 0xe09a -- 0xe0a0
0xe09a:     66 0f 1f 44 00 00                                  |f..D..          |
; function: function_e0a0 at 0xe0a0 -- 0xe0d1
0xe0a0:     0f b6 0f                              	movzx ecx, byte ptr [rdi]
0xe0a3:     31 d2                                 	xor edx, edx
0xe0a5:     84 c9                                 	test cl, cl
0xe0a7:     74 24                                 	je 0xe0cd <function_e0a0+0x2d>
0xe0a9:     0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0xe0b0:     48 89 d0                              	mov rax, rdx
0xe0b3:     48 83 c7 01                           	add rdi, 1
0xe0b7:     48 c1 e0 05                           	shl rax, 5
0xe0bb:     48 29 d0                              	sub rax, rdx
0xe0be:     31 d2                                 	xor edx, edx
0xe0c0:     48 01 c8                              	add rax, rcx
0xe0c3:     0f b6 0f                              	movzx ecx, byte ptr [rdi]
0xe0c6:     48 f7 f6                              	div rsi
0xe0c9:     84 c9                                 	test cl, cl
0xe0cb:     75 e3                                 	jne 0xe0b0 <function_e0a0+0x10>
0xe0cd:     48 89 d0                              	mov rax, rdx
0xe0d0:     c3                                    	ret 
; data inside code section at 0xe0d1 -- 0xe0e0
0xe0d1:     0f 1f 44 00 00 66 2e 0f  1f 84 00 00 00 00 00      |..D..f......... |
; function: function_e0e0 at 0xe0e0 -- 0xe100
0xe0e0:     48 b8 00 00 00 00 00 00 80 3f         	movabs rax, 0x3f80000000000000
0xe0ea:     c6 47 10 00                           	mov byte ptr [rdi + 0x10], 0
0xe0ee:     48 89 07                              	mov qword ptr [rdi], rax
0xe0f1:     48 b8 cd cc 4c 3f f4 fd b4 3f         	movabs rax, 0x3fb4fdf43f4ccccd
0xe0fb:     48 89 47 08                           	mov qword ptr [rdi + 8], rax
0xe0ff:     c3                                    	ret 
; function: function_e100 at 0xe100 -- 0xe2b4
0xe100:     41 57                                 	push r15
0xe102:     41 56                                 	push r14
0xe104:     48 8d 05 25 f8 ff ff                  	lea rax, [rip - 0x7db]
0xe10b:     41 55                                 	push r13
0xe10d:     41 54                                 	push r12
0xe10f:     49 89 d4                              	mov r12, rdx
0xe112:     55                                    	push rbp
0xe113:     53                                    	push rbx
0xe114:     49 89 cd                              	mov r13, rcx
0xe117:     48 89 fd                              	mov rbp, rdi
0xe11a:     bf 50 00 00 00                        	mov edi, 0x50
0xe11f:     49 89 f7                              	mov r15, rsi
0xe122:     48 83 ec 08                           	sub rsp, 8
0xe126:     48 85 d2                              	test rdx, rdx
0xe129:     4d 89 c6                              	mov r14, r8
0xe12c:     4c 0f 44 e0                           	cmove r12, rax
0xe130:     48 8d 05 09 f8 ff ff                  	lea rax, [rip - 0x7f7]
0xe137:     48 85 c9                              	test rcx, rcx
0xe13a:     4c 0f 44 e8                           	cmove r13, rax
0xe13e:     e8 35 5d ff ff                        	call 0x3e78 <malloc>
0xe143:     48 85 c0                              	test rax, rax
0xe146:     48 89 c3                              	mov rbx, rax
0xe149:     0f 84 ab 00 00 00                     	je 0xe1fa <function_e100+0xfa>
0xe14f:     4d 85 ff                              	test r15, r15
0xe152:     48 8d 78 28                           	lea rdi, [rax + 0x28]
0xe156:     0f 84 b4 00 00 00                     	je 0xe210 <function_e100+0x110>
0xe15c:     4c 89 78 28                           	mov qword ptr [rax + 0x28], r15
0xe160:     e8 3b f9 ff ff                        	call 0xdaa0 <function_daa0>
0xe165:     84 c0                                 	test al, al
0xe167:     0f 84 83 00 00 00                     	je 0xe1f0 <function_e100+0xf0>
0xe16d:     41 80 7f 10 00                        	cmp byte ptr [r15 + 0x10], 0
0xe172:     0f 84 f8 00 00 00                     	je 0xe270 <function_e100+0x170>
0xe178:     48 89 ef                              	mov rdi, rbp
0xe17b:     e8 10 f7 ff ff                        	call 0xd890 <function_d890>
0xe180:     ba 08 00 00 00                        	mov edx, 8
0xe185:     48 89 c5                              	mov rbp, rax
0xe188:     31 c9                                 	xor ecx, ecx
0xe18a:     48 89 d0                              	mov rax, rdx
0xe18d:     48 f7 e5                              	mul rbp
0xe190:     0f 80 14 01 00 00                     	jo 0xe2aa <function_e100+0x1aa>
0xe196:     48 85 c0                              	test rax, rax
0xe199:     78 55                                 	js 0xe1f0 <function_e100+0xf0>
0xe19b:     48 85 c9                              	test rcx, rcx
0xe19e:     75 50                                 	jne 0xe1f0 <function_e100+0xf0>
0xe1a0:     48 85 ed                              	test rbp, rbp
0xe1a3:     48 89 6b 10                           	mov qword ptr [rbx + 0x10], rbp
0xe1a7:     74 47                                 	je 0xe1f0 <function_e100+0xf0>
0xe1a9:     be 10 00 00 00                        	mov esi, 0x10
0xe1ae:     48 89 ef                              	mov rdi, rbp
0xe1b1:     e8 4a 59 ff ff                        	call 0x3b00 <calloc>
0xe1b6:     48 85 c0                              	test rax, rax
0xe1b9:     48 89 03                              	mov qword ptr [rbx], rax
0xe1bc:     74 32                                 	je 0xe1f0 <function_e100+0xf0>
0xe1be:     48 c1 e5 04                           	shl rbp, 4
0xe1c2:     48 c7 43 18 00 00 00 00               	mov qword ptr [rbx + 0x18], 0
0xe1ca:     48 c7 43 20 00 00 00 00               	mov qword ptr [rbx + 0x20], 0
0xe1d2:     48 01 c5                              	add rbp, rax
0xe1d5:     4c 89 63 30                           	mov qword ptr [rbx + 0x30], r12
0xe1d9:     4c 89 6b 38                           	mov qword ptr [rbx + 0x38], r13
0xe1dd:     48 89 6b 08                           	mov qword ptr [rbx + 8], rbp
0xe1e1:     4c 89 73 40                           	mov qword ptr [rbx + 0x40], r14
0xe1e5:     48 c7 43 48 00 00 00 00               	mov qword ptr [rbx + 0x48], 0
0xe1ed:     eb 0b                                 	jmp 0xe1fa <function_e100+0xfa>
; data inside code section at 0xe1ef -- 0xe1f0
0xe1ef:     90                                                 |.               |
0xe1f0:     48 89 df                              	mov rdi, rbx
0xe1f3:     31 db                                 	xor ebx, ebx
0xe1f5:     e8 76 5c ff ff                        	call 0x3e70 <free>
0xe1fa:     48 83 c4 08                           	add rsp, 8
0xe1fe:     48 89 d8                              	mov rax, rbx
0xe201:     5b                                    	pop rbx
0xe202:     5d                                    	pop rbp
0xe203:     41 5c                                 	pop r12
0xe205:     41 5d                                 	pop r13
0xe207:     41 5e                                 	pop r14
0xe209:     41 5f                                 	pop r15
0xe20b:     c3                                    	ret 
; data inside code section at 0xe20c -- 0xe210
0xe20c:     0f 1f 40 00                                        |..@.            |
0xe210:     48 8d 05 a9 c1 00 00                  	lea rax, [rip + 0xc1a9]
0xe217:     48 89 43 28                           	mov qword ptr [rbx + 0x28], rax
0xe21b:     e8 80 f8 ff ff                        	call 0xdaa0 <function_daa0>
0xe220:     84 c0                                 	test al, al
0xe222:     f3 0f 10 0d be c1 00 00               	movss xmm1, dword ptr [rip + 0xc1be]
0xe22a:     74 c4                                 	je 0xe1f0 <function_e100+0xf0>
0xe22c:     48 85 ed                              	test rbp, rbp
0xe22f:     78 4a                                 	js 0xe27b <function_e100+0x17b>
0xe231:     66 0f ef c0                           	pxor xmm0, xmm0
0xe235:     f3 48 0f 2a c5                        	cvtsi2ss xmm0, rbp
0xe23a:     f3 0f 5e c1                           	divss xmm0, xmm1
0xe23e:     0f 2e 05 a7 c1 00 00                  	ucomiss xmm0, dword ptr [rip + 0xc1a7]
0xe245:     73 a9                                 	jae 0xe1f0 <function_e100+0xf0>
0xe247:     0f 2e 05 a2 c1 00 00                  	ucomiss xmm0, dword ptr [rip + 0xc1a2]
0xe24e:     72 50                                 	jb 0xe2a0 <function_e100+0x1a0>
0xe250:     f3 0f 5c 05 98 c1 00 00               	subss xmm0, dword ptr [rip + 0xc198]
0xe258:     48 b8 00 00 00 00 00 00 00 80         	movabs rax, 0x8000000000000000
0xe262:     f3 48 0f 2c e8                        	cvttss2si rbp, xmm0
0xe267:     48 31 c5                              	xor rbp, rax
0xe26a:     e9 09 ff ff ff                        	jmp 0xe178 <function_e100+0x78>
; data inside code section at 0xe26f -- 0xe270
0xe26f:     90                                                 |.               |
0xe270:     48 85 ed                              	test rbp, rbp
0xe273:     f3 41 0f 10 4f 08                     	movss xmm1, dword ptr [r15 + 8]
0xe279:     79 b6                                 	jns 0xe231 <function_e100+0x131>
0xe27b:     48 89 e8                              	mov rax, rbp
0xe27e:     66 0f ef c0                           	pxor xmm0, xmm0
0xe282:     48 d1 e8                              	shr rax, 1
0xe285:     83 e5 01                              	and ebp, 1
0xe288:     48 09 e8                              	or rax, rbp
0xe28b:     f3 48 0f 2a c0                        	cvtsi2ss xmm0, rax
0xe290:     f3 0f 58 c0                           	addss xmm0, xmm0
0xe294:     eb a4                                 	jmp 0xe23a <function_e100+0x13a>
; data inside code section at 0xe296 -- 0xe2a0
0xe296:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0xe2a0:     f3 48 0f 2c e8                        	cvttss2si rbp, xmm0
0xe2a5:     e9 ce fe ff ff                        	jmp 0xe178 <function_e100+0x78>
0xe2aa:     b9 01 00 00 00                        	mov ecx, 1
0xe2af:     e9 e2 fe ff ff                        	jmp 0xe196 <function_e100+0x96>
; data inside code section at 0xe2b4 -- 0xe2c0
0xe2b4:     66 90 66 2e 0f 1f 84 00  00 00 00 00               |f.f.........    |
; function: function_e2c0 at 0xe2c0 -- 0xe350
0xe2c0:     41 54                                 	push r12
0xe2c2:     55                                    	push rbp
0xe2c3:     48 89 fd                              	mov rbp, rdi
0xe2c6:     53                                    	push rbx
0xe2c7:     4c 8b 27                              	mov r12, qword ptr [rdi]
0xe2ca:     4c 3b 67 08                           	cmp r12, qword ptr [rdi + 8]
0xe2ce:     73 6b                                 	jae 0xe33b <function_e2c0+0x7b>
0xe2d0:     49 83 3c 24 00                        	cmp qword ptr [r12], 0
0xe2d5:     74 5a                                 	je 0xe331 <function_e2c0+0x71>
0xe2d7:     49 8b 5c 24 08                        	mov rbx, qword ptr [r12 + 8]
0xe2dc:     48 8b 45 40                           	mov rax, qword ptr [rbp + 0x40]
0xe2e0:     48 85 db                              	test rbx, rbx
0xe2e3:     74 30                                 	je 0xe315 <function_e2c0+0x55>
0xe2e5:     0f 1f 00                              	nop dword ptr [rax]
0xe2e8:     48 85 c0                              	test rax, rax
0xe2eb:     74 09                                 	je 0xe2f6 <function_e2c0+0x36>
0xe2ed:     48 8b 3b                              	mov rdi, qword ptr [rbx]
0xe2f0:     ff d0                                 	call rax
0xe2f2:     48 8b 45 40                           	mov rax, qword ptr [rbp + 0x40]
0xe2f6:     48 8b 53 08                           	mov rdx, qword ptr [rbx + 8]
0xe2fa:     48 8b 4d 48                           	mov rcx, qword ptr [rbp + 0x48]
0xe2fe:     48 c7 03 00 00 00 00                  	mov qword ptr [rbx], 0
0xe305:     48 85 d2                              	test rdx, rdx
0xe308:     48 89 4b 08                           	mov qword ptr [rbx + 8], rcx
0xe30c:     48 89 5d 48                           	mov qword ptr [rbp + 0x48], rbx
0xe310:     48 89 d3                              	mov rbx, rdx
0xe313:     75 d3                                 	jne 0xe2e8 <function_e2c0+0x28>
0xe315:     48 85 c0                              	test rax, rax
0xe318:     74 06                                 	je 0xe320 <function_e2c0+0x60>
0xe31a:     49 8b 3c 24                           	mov rdi, qword ptr [r12]
0xe31e:     ff d0                                 	call rax
0xe320:     49 c7 04 24 00 00 00 00               	mov qword ptr [r12], 0
0xe328:     49 c7 44 24 08 00 00 00 00            	mov qword ptr [r12 + 8], 0
0xe331:     49 83 c4 10                           	add r12, 0x10
0xe335:     4c 39 65 08                           	cmp qword ptr [rbp + 8], r12
0xe339:     77 95                                 	ja 0xe2d0 <function_e2c0+0x10>
0xe33b:     48 c7 45 18 00 00 00 00               	mov qword ptr [rbp + 0x18], 0
0xe343:     48 c7 45 20 00 00 00 00               	mov qword ptr [rbp + 0x20], 0
0xe34b:     5b                                    	pop rbx
0xe34c:     5d                                    	pop rbp
0xe34d:     41 5c                                 	pop r12
0xe34f:     c3                                    	ret 
; function: function_e350 at 0xe350 -- 0xe426
0xe350:     41 54                                 	push r12
0xe352:     55                                    	push rbp
0xe353:     49 89 fc                              	mov r12, rdi
0xe356:     53                                    	push rbx
0xe357:     48 83 7f 40 00                        	cmp qword ptr [rdi + 0x40], 0
0xe35c:     48 8b 2f                              	mov rbp, qword ptr [rdi]
0xe35f:     48 8b 47 08                           	mov rax, qword ptr [rdi + 8]
0xe363:     74 4e                                 	je 0xe3b3 <function_e350+0x63>
0xe365:     48 83 7f 20 00                        	cmp qword ptr [rdi + 0x20], 0
0xe36a:     74 47                                 	je 0xe3b3 <function_e350+0x63>
0xe36c:     48 39 c5                              	cmp rbp, rax
0xe36f:     73 7b                                 	jae 0xe3ec <function_e350+0x9c>
0xe371:     0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0xe378:     48 8b 7d 00                           	mov rdi, qword ptr [rbp]
0xe37c:     48 85 ff                              	test rdi, rdi
0xe37f:     74 25                                 	je 0xe3a6 <function_e350+0x56>
0xe381:     48 89 eb                              	mov rbx, rbp
0xe384:     eb 0d                                 	jmp 0xe393 <function_e350+0x43>
; data inside code section at 0xe386 -- 0xe390
0xe386:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0xe390:     48 8b 3b                              	mov rdi, qword ptr [rbx]
0xe393:     41 ff 54 24 40                        	call qword ptr [r12 + 0x40]
0xe398:     48 8b 5b 08                           	mov rbx, qword ptr [rbx + 8]
0xe39c:     48 85 db                              	test rbx, rbx
0xe39f:     75 ef                                 	jne 0xe390 <function_e350+0x40>
0xe3a1:     49 8b 44 24 08                        	mov rax, qword ptr [r12 + 8]
0xe3a6:     48 83 c5 10                           	add rbp, 0x10
0xe3aa:     48 39 e8                              	cmp rax, rbp
0xe3ad:     77 c9                                 	ja 0xe378 <function_e350+0x28>
0xe3af:     49 8b 2c 24                           	mov rbp, qword ptr [r12]
0xe3b3:     48 39 c5                              	cmp rbp, rax
0xe3b6:     73 34                                 	jae 0xe3ec <function_e350+0x9c>
0xe3b8:     0f 1f 84 00 00 00 00 00               	nop dword ptr [rax + rax]
0xe3c0:     48 8b 7d 08                           	mov rdi, qword ptr [rbp + 8]
0xe3c4:     48 85 ff                              	test rdi, rdi
0xe3c7:     74 18                                 	je 0xe3e1 <function_e350+0x91>
0xe3c9:     0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0xe3d0:     48 8b 5f 08                           	mov rbx, qword ptr [rdi + 8]
0xe3d4:     e8 97 5a ff ff                        	call 0x3e70 <free>
0xe3d9:     48 85 db                              	test rbx, rbx
0xe3dc:     48 89 df                              	mov rdi, rbx
0xe3df:     75 ef                                 	jne 0xe3d0 <function_e350+0x80>
0xe3e1:     48 83 c5 10                           	add rbp, 0x10
0xe3e5:     49 39 6c 24 08                        	cmp qword ptr [r12 + 8], rbp
0xe3ea:     77 d4                                 	ja 0xe3c0 <function_e350+0x70>
0xe3ec:     49 8b 7c 24 48                        	mov rdi, qword ptr [r12 + 0x48]
0xe3f1:     48 85 ff                              	test rdi, rdi
0xe3f4:     74 1b                                 	je 0xe411 <function_e350+0xc1>
0xe3f6:     66 2e 0f 1f 84 00 00 00 00 00         	nop word ptr cs:[rax + rax]
0xe400:     48 8b 5f 08                           	mov rbx, qword ptr [rdi + 8]
0xe404:     e8 67 5a ff ff                        	call 0x3e70 <free>
0xe409:     48 85 db                              	test rbx, rbx
0xe40c:     48 89 df                              	mov rdi, rbx
0xe40f:     75 ef                                 	jne 0xe400 <function_e350+0xb0>
0xe411:     49 8b 3c 24                           	mov rdi, qword ptr [r12]
0xe415:     e8 56 5a ff ff                        	call 0x3e70 <free>
0xe41a:     5b                                    	pop rbx
0xe41b:     4c 89 e7                              	mov rdi, r12
0xe41e:     5d                                    	pop rbp
0xe41f:     41 5c                                 	pop r12
0xe421:     e9 4a 5a ff ff                        	jmp 0x3e70 <free>
; data inside code section at 0xe426 -- 0xe430
0xe426:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_e430 at 0xe430 -- 0xe66e
0xe430:     41 54                                 	push r12
0xe432:     55                                    	push rbp
0xe433:     48 89 fd                              	mov rbp, rdi
0xe436:     53                                    	push rbx
0xe437:     48 83 ec 60                           	sub rsp, 0x60
0xe43b:     4c 8b 67 28                           	mov r12, qword ptr [rdi + 0x28]
0xe43f:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0xe448:     48 89 44 24 58                        	mov qword ptr [rsp + 0x58], rax
0xe44d:     31 c0                                 	xor eax, eax
0xe44f:     41 80 7c 24 10 00                     	cmp byte ptr [r12 + 0x10], 0
0xe455:     75 51                                 	jne 0xe4a8 <function_e430+0x78>
0xe457:     48 85 f6                              	test rsi, rsi
0xe45a:     0f 88 78 01 00 00                     	js 0xe5d8 <function_e430+0x1a8>
0xe460:     66 0f ef c0                           	pxor xmm0, xmm0
0xe464:     f3 48 0f 2a c6                        	cvtsi2ss xmm0, rsi
0xe469:     f3 41 0f 5e 44 24 08                  	divss xmm0, dword ptr [r12 + 8]
0xe470:     0f 2e 05 75 bf 00 00                  	ucomiss xmm0, dword ptr [rip + 0xbf75]
0xe477:     0f 83 33 01 00 00                     	jae 0xe5b0 <function_e430+0x180>
0xe47d:     0f 2e 05 6c bf 00 00                  	ucomiss xmm0, dword ptr [rip + 0xbf6c]
0xe484:     0f 82 76 01 00 00                     	jb 0xe600 <function_e430+0x1d0>
0xe48a:     f3 0f 5c 05 5e bf 00 00               	subss xmm0, dword ptr [rip + 0xbf5e]
0xe492:     48 b8 00 00 00 00 00 00 00 80         	movabs rax, 0x8000000000000000
0xe49c:     f3 48 0f 2c f0                        	cvttss2si rsi, xmm0
0xe4a1:     48 31 c6                              	xor rsi, rax
0xe4a4:     0f 1f 40 00                           	nop dword ptr [rax]
0xe4a8:     48 89 f7                              	mov rdi, rsi
0xe4ab:     e8 e0 f3 ff ff                        	call 0xd890 <function_d890>
0xe4b0:     ba 08 00 00 00                        	mov edx, 8
0xe4b5:     48 89 c3                              	mov rbx, rax
0xe4b8:     31 c9                                 	xor ecx, ecx
0xe4ba:     48 89 d0                              	mov rax, rdx
0xe4bd:     48 f7 e3                              	mul rbx
0xe4c0:     0f 80 99 01 00 00                     	jo 0xe65f <function_e430+0x22f>
0xe4c6:     48 85 c0                              	test rax, rax
0xe4c9:     b8 01 00 00 00                        	mov eax, 1
0xe4ce:     48 0f 48 c8                           	cmovs rcx, rax
0xe4d2:     48 85 db                              	test rbx, rbx
0xe4d5:     0f 84 d5 00 00 00                     	je 0xe5b0 <function_e430+0x180>
0xe4db:     83 e1 01                              	and ecx, 1
0xe4de:     0f 85 cc 00 00 00                     	jne 0xe5b0 <function_e430+0x180>
0xe4e4:     48 39 5d 10                           	cmp qword ptr [rbp + 0x10], rbx
0xe4e8:     0f 84 22 01 00 00                     	je 0xe610 <function_e430+0x1e0>
0xe4ee:     be 10 00 00 00                        	mov esi, 0x10
0xe4f3:     48 89 df                              	mov rdi, rbx
0xe4f6:     e8 05 56 ff ff                        	call 0x3b00 <calloc>
0xe4fb:     48 85 c0                              	test rax, rax
0xe4fe:     48 89 04 24                           	mov qword ptr [rsp], rax
0xe502:     0f 84 a8 00 00 00                     	je 0xe5b0 <function_e430+0x180>
0xe508:     48 89 5c 24 10                        	mov qword ptr [rsp + 0x10], rbx
0xe50d:     48 c1 e3 04                           	shl rbx, 4
0xe511:     4c 89 64 24 28                        	mov qword ptr [rsp + 0x28], r12
0xe516:     48 01 c3                              	add rbx, rax
0xe519:     48 8b 45 30                           	mov rax, qword ptr [rbp + 0x30]
0xe51d:     49 89 e4                              	mov r12, rsp
0xe520:     31 d2                                 	xor edx, edx
0xe522:     48 89 ee                              	mov rsi, rbp
0xe525:     4c 89 e7                              	mov rdi, r12
0xe528:     48 89 5c 24 08                        	mov qword ptr [rsp + 8], rbx
0xe52d:     48 c7 44 24 18 00 00 00 00            	mov qword ptr [rsp + 0x18], 0
0xe536:     48 89 44 24 30                        	mov qword ptr [rsp + 0x30], rax
0xe53b:     48 8b 45 38                           	mov rax, qword ptr [rbp + 0x38]
0xe53f:     48 c7 44 24 20 00 00 00 00            	mov qword ptr [rsp + 0x20], 0
0xe548:     48 89 44 24 38                        	mov qword ptr [rsp + 0x38], rax
0xe54d:     48 8b 45 40                           	mov rax, qword ptr [rbp + 0x40]
0xe551:     48 89 44 24 40                        	mov qword ptr [rsp + 0x40], rax
0xe556:     48 8b 45 48                           	mov rax, qword ptr [rbp + 0x48]
0xe55a:     48 89 44 24 48                        	mov qword ptr [rsp + 0x48], rax
0xe55f:     e8 bc f5 ff ff                        	call 0xdb20 <function_db20>
0xe564:     84 c0                                 	test al, al
0xe566:     89 c3                                 	mov ebx, eax
0xe568:     0f 85 b2 00 00 00                     	jne 0xe620 <function_e430+0x1f0>
0xe56e:     48 8b 44 24 48                        	mov rax, qword ptr [rsp + 0x48]
0xe573:     ba 01 00 00 00                        	mov edx, 1
0xe578:     4c 89 e6                              	mov rsi, r12
0xe57b:     48 89 ef                              	mov rdi, rbp
0xe57e:     48 89 45 48                           	mov qword ptr [rbp + 0x48], rax
0xe582:     e8 99 f5 ff ff                        	call 0xdb20 <function_db20>
0xe587:     84 c0                                 	test al, al
0xe589:     0f 84 da 00 00 00                     	je 0xe669 <function_e430+0x239>
0xe58f:     31 d2                                 	xor edx, edx
0xe591:     4c 89 e6                              	mov rsi, r12
0xe594:     48 89 ef                              	mov rdi, rbp
0xe597:     e8 84 f5 ff ff                        	call 0xdb20 <function_db20>
0xe59c:     84 c0                                 	test al, al
0xe59e:     0f 84 c5 00 00 00                     	je 0xe669 <function_e430+0x239>
0xe5a4:     48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0xe5a8:     e8 c3 58 ff ff                        	call 0x3e70 <free>
0xe5ad:     eb 03                                 	jmp 0xe5b2 <function_e430+0x182>
; data inside code section at 0xe5af -- 0xe5b0
0xe5af:     90                                                 |.               |
0xe5b0:     31 db                                 	xor ebx, ebx
0xe5b2:     48 8b 4c 24 58                        	mov rcx, qword ptr [rsp + 0x58]
0xe5b7:     64 48 33 0c 25 28 00 00 00            	xor rcx, qword ptr fs:[0x28]
0xe5c0:     89 d8                                 	mov eax, ebx
0xe5c2:     0f 85 92 00 00 00                     	jne 0xe65a <function_e430+0x22a>
0xe5c8:     48 83 c4 60                           	add rsp, 0x60
0xe5cc:     5b                                    	pop rbx
0xe5cd:     5d                                    	pop rbp
0xe5ce:     41 5c                                 	pop r12
0xe5d0:     c3                                    	ret 
; data inside code section at 0xe5d1 -- 0xe5d8
0xe5d1:     0f 1f 80 00 00 00 00                               |.......         |
0xe5d8:     48 89 f0                              	mov rax, rsi
0xe5db:     66 0f ef c0                           	pxor xmm0, xmm0
0xe5df:     48 d1 e8                              	shr rax, 1
0xe5e2:     83 e6 01                              	and esi, 1
0xe5e5:     48 09 f0                              	or rax, rsi
0xe5e8:     f3 48 0f 2a c0                        	cvtsi2ss xmm0, rax
0xe5ed:     f3 0f 58 c0                           	addss xmm0, xmm0
0xe5f1:     e9 73 fe ff ff                        	jmp 0xe469 <function_e430+0x39>
; data inside code section at 0xe5f6 -- 0xe600
0xe5f6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0xe600:     f3 48 0f 2c f0                        	cvttss2si rsi, xmm0
0xe605:     e9 9e fe ff ff                        	jmp 0xe4a8 <function_e430+0x78>
; data inside code section at 0xe60a -- 0xe610
0xe60a:     66 0f 1f 44 00 00                                  |f..D..          |
0xe610:     bb 01 00 00 00                        	mov ebx, 1
0xe615:     eb 9b                                 	jmp 0xe5b2 <function_e430+0x182>
; data inside code section at 0xe617 -- 0xe620
0xe617:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xe620:     48 8b 7d 00                           	mov rdi, qword ptr [rbp]
0xe624:     e8 47 58 ff ff                        	call 0x3e70 <free>
0xe629:     48 8b 04 24                           	mov rax, qword ptr [rsp]
0xe62d:     48 89 45 00                           	mov qword ptr [rbp], rax
0xe631:     48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0xe636:     48 89 45 08                           	mov qword ptr [rbp + 8], rax
0xe63a:     48 8b 44 24 10                        	mov rax, qword ptr [rsp + 0x10]
0xe63f:     48 89 45 10                           	mov qword ptr [rbp + 0x10], rax
0xe643:     48 8b 44 24 18                        	mov rax, qword ptr [rsp + 0x18]
0xe648:     48 89 45 18                           	mov qword ptr [rbp + 0x18], rax
0xe64c:     48 8b 44 24 48                        	mov rax, qword ptr [rsp + 0x48]
0xe651:     48 89 45 48                           	mov qword ptr [rbp + 0x48], rax
0xe655:     e9 58 ff ff ff                        	jmp 0xe5b2 <function_e430+0x182>
0xe65a:     e8 11 53 ff ff                        	call 0x3970 <__stack_chk_fail>
0xe65f:     b9 01 00 00 00                        	mov ecx, 1
0xe664:     e9 5d fe ff ff                        	jmp 0xe4c6 <function_e430+0x96>
0xe669:     e8 72 51 ff ff                        	call 0x37e0 <abort>
; data inside code section at 0xe66e -- 0xe670
0xe66e:     66 90                                              |f.              |
; function: function_e670 at 0xe670 -- 0xe900
0xe670:     41 55                                 	push r13
0xe672:     41 54                                 	push r12
0xe674:     55                                    	push rbp
0xe675:     53                                    	push rbx
0xe676:     48 83 ec 18                           	sub rsp, 0x18
0xe67a:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0xe683:     48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0xe688:     31 c0                                 	xor eax, eax
0xe68a:     48 85 f6                              	test rsi, rsi
0xe68d:     0f 84 ba 01 00 00                     	je 0xe84d <function_e670+0x1dd>
0xe693:     49 89 e4                              	mov r12, rsp
0xe696:     31 c9                                 	xor ecx, ecx
0xe698:     49 89 d5                              	mov r13, rdx
0xe69b:     4c 89 e2                              	mov rdx, r12
0xe69e:     48 89 fb                              	mov rbx, rdi
0xe6a1:     48 89 f5                              	mov rbp, rsi
0xe6a4:     e8 d7 f2 ff ff                        	call 0xd980
0xe6a9:     48 85 c0                              	test rax, rax
0xe6ac:     48 89 c2                              	mov rdx, rax
0xe6af:     74 2f                                 	je 0xe6e0 <function_e670+0x70>
0xe6b1:     31 c0                                 	xor eax, eax
0xe6b3:     4d 85 ed                              	test r13, r13
0xe6b6:     74 04                                 	je 0xe6bc <function_e670+0x4c>
0xe6b8:     49 89 55 00                           	mov qword ptr [r13], rdx
0xe6bc:     48 8b 4c 24 08                        	mov rcx, qword ptr [rsp + 8]
0xe6c1:     64 48 33 0c 25 28 00 00 00            	xor rcx, qword ptr fs:[0x28]
0xe6ca:     0f 85 1f 02 00 00                     	jne 0xe8ef <function_e670+0x27f>
0xe6d0:     48 83 c4 18                           	add rsp, 0x18
0xe6d4:     5b                                    	pop rbx
0xe6d5:     5d                                    	pop rbp
0xe6d6:     41 5c                                 	pop r12
0xe6d8:     41 5d                                 	pop r13
0xe6da:     c3                                    	ret 
; data inside code section at 0xe6db -- 0xe6e0
0xe6db:     0f 1f 44 00 00                                     |..D..           |
0xe6e0:     48 8b 43 18                           	mov rax, qword ptr [rbx + 0x18]
0xe6e4:     48 85 c0                              	test rax, rax
0xe6e7:     78 77                                 	js 0xe760 <function_e670+0xf0>
0xe6e9:     66 0f ef c9                           	pxor xmm1, xmm1
0xe6ed:     48 8b 53 28                           	mov rdx, qword ptr [rbx + 0x28]
0xe6f1:     f3 48 0f 2a c8                        	cvtsi2ss xmm1, rax
0xe6f6:     48 8b 43 10                           	mov rax, qword ptr [rbx + 0x10]
0xe6fa:     48 85 c0                              	test rax, rax
0xe6fd:     0f 88 87 00 00 00                     	js 0xe78a <function_e670+0x11a>
0xe703:     66 0f ef c0                           	pxor xmm0, xmm0
0xe707:     f3 48 0f 2a c0                        	cvtsi2ss xmm0, rax
0xe70c:     f3 0f 59 42 08                        	mulss xmm0, dword ptr [rdx + 8]
0xe711:     0f 2e c8                              	ucomiss xmm1, xmm0
0xe714:     0f 87 96 00 00 00                     	ja 0xe7b0 <function_e670+0x140>
0xe71a:     4c 8b 24 24                           	mov r12, qword ptr [rsp]
0xe71e:     49 83 3c 24 00                        	cmp qword ptr [r12], 0
0xe723:     0f 84 2f 01 00 00                     	je 0xe858 <function_e670+0x1e8>
0xe729:     48 8b 43 48                           	mov rax, qword ptr [rbx + 0x48]
0xe72d:     48 85 c0                              	test rax, rax
0xe730:     0f 84 3a 01 00 00                     	je 0xe870 <function_e670+0x200>
0xe736:     48 8b 50 08                           	mov rdx, qword ptr [rax + 8]
0xe73a:     48 89 53 48                           	mov qword ptr [rbx + 0x48], rdx
0xe73e:     49 8b 54 24 08                        	mov rdx, qword ptr [r12 + 8]
0xe743:     48 89 28                              	mov qword ptr [rax], rbp
0xe746:     48 89 50 08                           	mov qword ptr [rax + 8], rdx
0xe74a:     49 89 44 24 08                        	mov qword ptr [r12 + 8], rax
0xe74f:     b8 01 00 00 00                        	mov eax, 1
0xe754:     48 83 43 20 01                        	add qword ptr [rbx + 0x20], 1
0xe759:     e9 5e ff ff ff                        	jmp 0xe6bc <function_e670+0x4c>
; data inside code section at 0xe75e -- 0xe760
0xe75e:     66 90                                              |f.              |
0xe760:     48 89 c2                              	mov rdx, rax
0xe763:     66 0f ef c9                           	pxor xmm1, xmm1
0xe767:     83 e0 01                              	and eax, 1
0xe76a:     48 d1 ea                              	shr rdx, 1
0xe76d:     48 09 c2                              	or rdx, rax
0xe770:     48 8b 43 10                           	mov rax, qword ptr [rbx + 0x10]
0xe774:     f3 48 0f 2a ca                        	cvtsi2ss xmm1, rdx
0xe779:     48 8b 53 28                           	mov rdx, qword ptr [rbx + 0x28]
0xe77d:     48 85 c0                              	test rax, rax
0xe780:     f3 0f 58 c9                           	addss xmm1, xmm1
0xe784:     0f 89 79 ff ff ff                     	jns 0xe703 <function_e670+0x93>
0xe78a:     48 89 c1                              	mov rcx, rax
0xe78d:     66 0f ef c0                           	pxor xmm0, xmm0
0xe791:     48 d1 e9                              	shr rcx, 1
0xe794:     83 e0 01                              	and eax, 1
0xe797:     48 09 c1                              	or rcx, rax
0xe79a:     f3 48 0f 2a c1                        	cvtsi2ss xmm0, rcx
0xe79f:     f3 0f 58 c0                           	addss xmm0, xmm0
0xe7a3:     e9 64 ff ff ff                        	jmp 0xe70c <function_e670+0x9c>
; data inside code section at 0xe7a8 -- 0xe7b0
0xe7a8:     0f 1f 84 00 00 00 00 00                            |........        |
0xe7b0:     48 8d 7b 28                           	lea rdi, [rbx + 0x28]
0xe7b4:     e8 e7 f2 ff ff                        	call 0xdaa0 <function_daa0>
0xe7b9:     48 8b 43 10                           	mov rax, qword ptr [rbx + 0x10]
0xe7bd:     48 8b 53 28                           	mov rdx, qword ptr [rbx + 0x28]
0xe7c1:     48 85 c0                              	test rax, rax
0xe7c4:     f3 0f 10 52 08                        	movss xmm2, dword ptr [rdx + 8]
0xe7c9:     0f 88 c1 00 00 00                     	js 0xe890 <function_e670+0x220>
0xe7cf:     66 0f ef c0                           	pxor xmm0, xmm0
0xe7d3:     f3 48 0f 2a c0                        	cvtsi2ss xmm0, rax
0xe7d8:     48 8b 43 18                           	mov rax, qword ptr [rbx + 0x18]
0xe7dc:     48 85 c0                              	test rax, rax
0xe7df:     0f 88 cb 00 00 00                     	js 0xe8b0 <function_e670+0x240>
0xe7e5:     66 0f ef c9                           	pxor xmm1, xmm1
0xe7e9:     f3 48 0f 2a c8                        	cvtsi2ss xmm1, rax
0xe7ee:     0f 28 da                              	movaps xmm3, xmm2
0xe7f1:     f3 0f 59 d8                           	mulss xmm3, xmm0
0xe7f5:     0f 2e cb                              	ucomiss xmm1, xmm3
0xe7f8:     0f 86 1c ff ff ff                     	jbe 0xe71a <function_e670+0xaa>
0xe7fe:     80 7a 10 00                           	cmp byte ptr [rdx + 0x10], 0
0xe802:     f3 0f 59 42 0c                        	mulss xmm0, dword ptr [rdx + 0xc]
0xe807:     75 04                                 	jne 0xe80d <function_e670+0x19d>
0xe809:     f3 0f 59 c2                           	mulss xmm0, xmm2
0xe80d:     0f 2e 05 d8 bb 00 00                  	ucomiss xmm0, dword ptr [rip + 0xbbd8]
0xe814:     73 6d                                 	jae 0xe883 <function_e670+0x213>
0xe816:     0f 2e 05 d3 bb 00 00                  	ucomiss xmm0, dword ptr [rip + 0xbbd3]
0xe81d:     0f 83 ad 00 00 00                     	jae 0xe8d0 <function_e670+0x260>
0xe823:     f3 48 0f 2c f0                        	cvttss2si rsi, xmm0
0xe828:     48 89 df                              	mov rdi, rbx
0xe82b:     e8 00 fc ff ff                        	call 0xe430 <function_e430>
0xe830:     84 c0                                 	test al, al
0xe832:     74 4f                                 	je 0xe883 <function_e670+0x213>
0xe834:     31 c9                                 	xor ecx, ecx
0xe836:     4c 89 e2                              	mov rdx, r12
0xe839:     48 89 ee                              	mov rsi, rbp
0xe83c:     48 89 df                              	mov rdi, rbx
0xe83f:     e8 3c f1 ff ff                        	call 0xd980
0xe844:     48 85 c0                              	test rax, rax
0xe847:     0f 84 cd fe ff ff                     	je 0xe71a <function_e670+0xaa>
0xe84d:     e8 8e 4f ff ff                        	call 0x37e0 <abort>
; data inside code section at 0xe852 -- 0xe858
0xe852:     66 0f 1f 44 00 00                                  |f..D..          |
0xe858:     49 89 2c 24                           	mov qword ptr [r12], rbp
0xe85c:     b8 01 00 00 00                        	mov eax, 1
0xe861:     48 83 43 20 01                        	add qword ptr [rbx + 0x20], 1
0xe866:     48 83 43 18 01                        	add qword ptr [rbx + 0x18], 1
0xe86b:     e9 4c fe ff ff                        	jmp 0xe6bc <function_e670+0x4c>
0xe870:     bf 10 00 00 00                        	mov edi, 0x10
0xe875:     e8 fe 55 ff ff                        	call 0x3e78 <malloc>
0xe87a:     48 85 c0                              	test rax, rax
0xe87d:     0f 85 bb fe ff ff                     	jne 0xe73e <function_e670+0xce>
0xe883:     b8 ff ff ff ff                        	mov eax, 0xffffffff
0xe888:     e9 2f fe ff ff                        	jmp 0xe6bc <function_e670+0x4c>
; data inside code section at 0xe88d -- 0xe890
0xe88d:     0f 1f 00                                           |...             |
0xe890:     48 89 c1                              	mov rcx, rax
0xe893:     66 0f ef c0                           	pxor xmm0, xmm0
0xe897:     48 d1 e9                              	shr rcx, 1
0xe89a:     83 e0 01                              	and eax, 1
0xe89d:     48 09 c1                              	or rcx, rax
0xe8a0:     f3 48 0f 2a c1                        	cvtsi2ss xmm0, rcx
0xe8a5:     f3 0f 58 c0                           	addss xmm0, xmm0
0xe8a9:     e9 2a ff ff ff                        	jmp 0xe7d8 <function_e670+0x168>
; data inside code section at 0xe8ae -- 0xe8b0
0xe8ae:     66 90                                              |f.              |
0xe8b0:     48 89 c1                              	mov rcx, rax
0xe8b3:     66 0f ef c9                           	pxor xmm1, xmm1
0xe8b7:     48 d1 e9                              	shr rcx, 1
0xe8ba:     83 e0 01                              	and eax, 1
0xe8bd:     48 09 c1                              	or rcx, rax
0xe8c0:     f3 48 0f 2a c9                        	cvtsi2ss xmm1, rcx
0xe8c5:     f3 0f 58 c9                           	addss xmm1, xmm1
0xe8c9:     e9 20 ff ff ff                        	jmp 0xe7ee <function_e670+0x17e>
; data inside code section at 0xe8ce -- 0xe8d0
0xe8ce:     66 90                                              |f.              |
0xe8d0:     f3 0f 5c 05 18 bb 00 00               	subss xmm0, dword ptr [rip + 0xbb18]
0xe8d8:     48 b8 00 00 00 00 00 00 00 80         	movabs rax, 0x8000000000000000
0xe8e2:     f3 48 0f 2c f0                        	cvttss2si rsi, xmm0
0xe8e7:     48 31 c6                              	xor rsi, rax
0xe8ea:     e9 39 ff ff ff                        	jmp 0xe828 <function_e670+0x1b8>
0xe8ef:     e8 7c 50 ff ff                        	call 0x3970 <__stack_chk_fail>
0xe8f4:     66 90                                 	nop 
0xe8f6:     66 2e 0f 1f 84 00 00 00 00 00         	nop word ptr cs:[rax + rax]
; function: function_e900 at 0xe900 -- 0xe960
0xe900:     53                                    	push rbx
0xe901:     48 89 f3                              	mov rbx, rsi
0xe904:     48 83 ec 10                           	sub rsp, 0x10
0xe908:     48 89 e2                              	mov rdx, rsp
0xe90b:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0xe914:     48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0xe919:     31 c0                                 	xor eax, eax
0xe91b:     e8 50 fd ff ff                        	call 0xe670 <function_e670>
0xe920:     83 f8 ff                              	cmp eax, -1
0xe923:     74 2b                                 	je 0xe950 <function_e900+0x50>
0xe925:     85 c0                                 	test eax, eax
0xe927:     75 04                                 	jne 0xe92d <function_e900+0x2d>
0xe929:     48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0xe92d:     48 8b 4c 24 08                        	mov rcx, qword ptr [rsp + 8]
0xe932:     64 48 33 0c 25 28 00 00 00            	xor rcx, qword ptr fs:[0x28]
0xe93b:     48 89 d8                              	mov rax, rbx
0xe93e:     75 14                                 	jne 0xe954 <function_e900+0x54>
0xe940:     48 83 c4 10                           	add rsp, 0x10
0xe944:     5b                                    	pop rbx
0xe945:     c3                                    	ret 
; data inside code section at 0xe946 -- 0xe950
0xe946:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0xe950:     31 db                                 	xor ebx, ebx
0xe952:     eb d9                                 	jmp 0xe92d <function_e900+0x2d>
0xe954:     e8 17 50 ff ff                        	call 0x3970 <__stack_chk_fail>
0xe959:     0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
; function: function_e960 at 0xe960 -- 0xeb97
0xe960:     41 54                                 	push r12
0xe962:     55                                    	push rbp
0xe963:     b9 01 00 00 00                        	mov ecx, 1
0xe968:     53                                    	push rbx
0xe969:     48 89 fb                              	mov rbx, rdi
0xe96c:     48 83 ec 10                           	sub rsp, 0x10
0xe970:     48 89 e2                              	mov rdx, rsp
0xe973:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0xe97c:     48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0xe981:     31 c0                                 	xor eax, eax
0xe983:     e8 f8 ef ff ff                        	call 0xd980
0xe988:     48 85 c0                              	test rax, rax
0xe98b:     48 89 c5                              	mov rbp, rax
0xe98e:     74 0f                                 	je 0xe99f <function_e960+0x3f>
0xe990:     48 8b 04 24                           	mov rax, qword ptr [rsp]
0xe994:     48 83 6b 20 01                        	sub qword ptr [rbx + 0x20], 1
0xe999:     48 83 38 00                           	cmp qword ptr [rax], 0
0xe99d:     74 21                                 	je 0xe9c0 <function_e960+0x60>
0xe99f:     48 8b 4c 24 08                        	mov rcx, qword ptr [rsp + 8]
0xe9a4:     64 48 33 0c 25 28 00 00 00            	xor rcx, qword ptr fs:[0x28]
0xe9ad:     48 89 e8                              	mov rax, rbp
0xe9b0:     0f 85 a8 01 00 00                     	jne 0xeb5e <function_e960+0x1fe>
0xe9b6:     48 83 c4 10                           	add rsp, 0x10
0xe9ba:     5b                                    	pop rbx
0xe9bb:     5d                                    	pop rbp
0xe9bc:     41 5c                                 	pop r12
0xe9be:     c3                                    	ret 
; data inside code section at 0xe9bf -- 0xe9c0
0xe9bf:     90                                                 |.               |
0xe9c0:     48 8b 43 18                           	mov rax, qword ptr [rbx + 0x18]
0xe9c4:     48 83 e8 01                           	sub rax, 1
0xe9c8:     48 85 c0                              	test rax, rax
0xe9cb:     48 89 43 18                           	mov qword ptr [rbx + 0x18], rax
0xe9cf:     0f 88 fb 00 00 00                     	js 0xead0 <function_e960+0x170>
0xe9d5:     66 0f ef c0                           	pxor xmm0, xmm0
0xe9d9:     f3 48 0f 2a c0                        	cvtsi2ss xmm0, rax
0xe9de:     48 8b 43 10                           	mov rax, qword ptr [rbx + 0x10]
0xe9e2:     48 8b 53 28                           	mov rdx, qword ptr [rbx + 0x28]
0xe9e6:     48 85 c0                              	test rax, rax
0xe9e9:     0f 88 c1 00 00 00                     	js 0xeab0 <function_e960+0x150>
0xe9ef:     66 0f ef c9                           	pxor xmm1, xmm1
0xe9f3:     f3 48 0f 2a c8                        	cvtsi2ss xmm1, rax
0xe9f8:     f3 0f 59 0a                           	mulss xmm1, dword ptr [rdx]
0xe9fc:     0f 2e c8                              	ucomiss xmm1, xmm0
0xe9ff:     76 9e                                 	jbe 0xe99f <function_e960+0x3f>
0xea01:     48 8d 7b 28                           	lea rdi, [rbx + 0x28]
0xea05:     e8 96 f0 ff ff                        	call 0xdaa0 <function_daa0>
0xea0a:     48 8b 43 10                           	mov rax, qword ptr [rbx + 0x10]
0xea0e:     48 8b 53 28                           	mov rdx, qword ptr [rbx + 0x28]
0xea12:     48 85 c0                              	test rax, rax
0xea15:     0f 88 25 01 00 00                     	js 0xeb40 <function_e960+0x1e0>
0xea1b:     66 0f ef c0                           	pxor xmm0, xmm0
0xea1f:     f3 48 0f 2a c0                        	cvtsi2ss xmm0, rax
0xea24:     48 8b 43 18                           	mov rax, qword ptr [rbx + 0x18]
0xea28:     48 85 c0                              	test rax, rax
0xea2b:     0f 88 ef 00 00 00                     	js 0xeb20 <function_e960+0x1c0>
0xea31:     66 0f ef c9                           	pxor xmm1, xmm1
0xea35:     f3 48 0f 2a c8                        	cvtsi2ss xmm1, rax
0xea3a:     f3 0f 10 12                           	movss xmm2, dword ptr [rdx]
0xea3e:     f3 0f 59 d0                           	mulss xmm2, xmm0
0xea42:     0f 2e d1                              	ucomiss xmm2, xmm1
0xea45:     0f 86 54 ff ff ff                     	jbe 0xe99f <function_e960+0x3f>
0xea4b:     80 7a 10 00                           	cmp byte ptr [rdx + 0x10], 0
0xea4f:     f3 0f 59 42 04                        	mulss xmm0, dword ptr [rdx + 4]
0xea54:     0f 84 b6 00 00 00                     	je 0xeb10 <function_e960+0x1b0>
0xea5a:     0f 2e 05 8f b9 00 00                  	ucomiss xmm0, dword ptr [rip + 0xb98f]
0xea61:     0f 83 89 00 00 00                     	jae 0xeaf0 <function_e960+0x190>
0xea67:     f3 48 0f 2c f0                        	cvttss2si rsi, xmm0
0xea6c:     48 89 df                              	mov rdi, rbx
0xea6f:     e8 bc f9 ff ff                        	call 0xe430 <function_e430>
0xea74:     84 c0                                 	test al, al
0xea76:     0f 85 23 ff ff ff                     	jne 0xe99f <function_e960+0x3f>
0xea7c:     48 8b 7b 48                           	mov rdi, qword ptr [rbx + 0x48]
0xea80:     48 85 ff                              	test rdi, rdi
0xea83:     74 14                                 	je 0xea99 <function_e960+0x139>
0xea85:     0f 1f 00                              	nop dword ptr [rax]
0xea88:     4c 8b 67 08                           	mov r12, qword ptr [rdi + 8]
0xea8c:     e8 df 53 ff ff                        	call 0x3e70 <free>
0xea91:     4d 85 e4                              	test r12, r12
0xea94:     4c 89 e7                              	mov rdi, r12
0xea97:     75 ef                                 	jne 0xea88 <function_e960+0x128>
0xea99:     48 c7 43 48 00 00 00 00               	mov qword ptr [rbx + 0x48], 0
0xeaa1:     e9 f9 fe ff ff                        	jmp 0xe99f <function_e960+0x3f>
; data inside code section at 0xeaa6 -- 0xeab0
0xeaa6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0xeab0:     48 89 c1                              	mov rcx, rax
0xeab3:     66 0f ef c9                           	pxor xmm1, xmm1
0xeab7:     48 d1 e9                              	shr rcx, 1
0xeaba:     83 e0 01                              	and eax, 1
0xeabd:     48 09 c1                              	or rcx, rax
0xeac0:     f3 48 0f 2a c9                        	cvtsi2ss xmm1, rcx
0xeac5:     f3 0f 58 c9                           	addss xmm1, xmm1
0xeac9:     e9 2a ff ff ff                        	jmp 0xe9f8 <function_e960+0x98>
; data inside code section at 0xeace -- 0xead0
0xeace:     66 90                                              |f.              |
0xead0:     48 89 c2                              	mov rdx, rax
0xead3:     66 0f ef c0                           	pxor xmm0, xmm0
0xead7:     48 d1 ea                              	shr rdx, 1
0xeada:     83 e0 01                              	and eax, 1
0xeadd:     48 09 c2                              	or rdx, rax
0xeae0:     f3 48 0f 2a c2                        	cvtsi2ss xmm0, rdx
0xeae5:     f3 0f 58 c0                           	addss xmm0, xmm0
0xeae9:     e9 f0 fe ff ff                        	jmp 0xe9de <function_e960+0x7e>
; data inside code section at 0xeaee -- 0xeaf0
0xeaee:     66 90                                              |f.              |
0xeaf0:     f3 0f 5c 05 f8 b8 00 00               	subss xmm0, dword ptr [rip + 0xb8f8]
0xeaf8:     48 b8 00 00 00 00 00 00 00 80         	movabs rax, 0x8000000000000000
0xeb02:     f3 48 0f 2c f0                        	cvttss2si rsi, xmm0
0xeb07:     48 31 c6                              	xor rsi, rax
0xeb0a:     e9 5d ff ff ff                        	jmp 0xea6c <function_e960+0x10c>
; data inside code section at 0xeb0f -- 0xeb10
0xeb0f:     90                                                 |.               |
0xeb10:     f3 0f 59 42 08                        	mulss xmm0, dword ptr [rdx + 8]
0xeb15:     e9 40 ff ff ff                        	jmp 0xea5a <function_e960+0xfa>
; data inside code section at 0xeb1a -- 0xeb20
0xeb1a:     66 0f 1f 44 00 00                                  |f..D..          |
0xeb20:     48 89 c1                              	mov rcx, rax
0xeb23:     66 0f ef c9                           	pxor xmm1, xmm1
0xeb27:     48 d1 e9                              	shr rcx, 1
0xeb2a:     83 e0 01                              	and eax, 1
0xeb2d:     48 09 c1                              	or rcx, rax
0xeb30:     f3 48 0f 2a c9                        	cvtsi2ss xmm1, rcx
0xeb35:     f3 0f 58 c9                           	addss xmm1, xmm1
0xeb39:     e9 fc fe ff ff                        	jmp 0xea3a <function_e960+0xda>
; data inside code section at 0xeb3e -- 0xeb40
0xeb3e:     66 90                                              |f.              |
0xeb40:     48 89 c1                              	mov rcx, rax
0xeb43:     66 0f ef c0                           	pxor xmm0, xmm0
0xeb47:     48 d1 e9                              	shr rcx, 1
0xeb4a:     83 e0 01                              	and eax, 1
0xeb4d:     48 09 c1                              	or rcx, rax
0xeb50:     f3 48 0f 2a c1                        	cvtsi2ss xmm0, rcx
0xeb55:     f3 0f 58 c0                           	addss xmm0, xmm0
0xeb59:     e9 c6 fe ff ff                        	jmp 0xea24 <function_e960+0xc4>
0xeb5e:     e8 0d 4e ff ff                        	call 0x3970 <__stack_chk_fail>
0xeb63:     66 2e 0f 1f 84 00 00 00 00 00         	nop word ptr cs:[rax + rax]
0xeb6d:     0f 1f 00                              	nop dword ptr [rax]
0xeb70:     55                                    	push rbp
0xeb71:     53                                    	push rbx
0xeb72:     48 89 fd                              	mov rbp, rdi
0xeb75:     48 89 f3                              	mov rbx, rsi
0xeb78:     48 83 ec 08                           	sub rsp, 8
0xeb7c:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0xeb7f:     e8 8c 71 00 00                        	call 0x15d10 <function_15d10>
0xeb84:     48 33 45 08                           	xor rax, qword ptr [rbp + 8]
0xeb88:     31 d2                                 	xor edx, edx
0xeb8a:     48 83 c4 08                           	add rsp, 8
0xeb8e:     48 f7 f3                              	div rbx
0xeb91:     5b                                    	pop rbx
0xeb92:     5d                                    	pop rbp
0xeb93:     48 89 d0                              	mov rax, rdx
0xeb96:     c3                                    	ret 
; data inside code section at 0xeb97 -- 0xeba0
0xeb97:     66 0f 1f 84 00 00 00 00  00                        |f........       |
; function: function_eba0 at 0xeba0 -- 0xebad
0xeba0:     48 8b 47 08                           	mov rax, qword ptr [rdi + 8]
0xeba4:     31 d2                                 	xor edx, edx
0xeba6:     48 f7 f6                              	div rsi
0xeba9:     48 89 d0                              	mov rax, rdx
0xebac:     c3                                    	ret 
; data inside code section at 0xebad -- 0xebb0
0xebad:     0f 1f 00                                           |...             |
; function: function_ebb0 at 0xebb0 -- 0xebde
0xebb0:     31 c0                                 	xor eax, eax
0xebb2:     48 8b 56 08                           	mov rdx, qword ptr [rsi + 8]
0xebb6:     48 39 57 08                           	cmp qword ptr [rdi + 8], rdx
0xebba:     74 04                                 	je 0xebc0 <function_ebb0+0x10>
0xebbc:     f3 c3                                 	ret 
; data inside code section at 0xebbe -- 0xebc0
0xebbe:     66 90                                              |f.              |
0xebc0:     48 8b 4e 10                           	mov rcx, qword ptr [rsi + 0x10]
0xebc4:     48 39 4f 10                           	cmp qword ptr [rdi + 0x10], rcx
0xebc8:     75 f2                                 	jne 0xebbc <function_ebb0+0xc>
0xebca:     48 83 ec 08                           	sub rsp, 8
0xebce:     48 8b 36                              	mov rsi, qword ptr [rsi]
0xebd1:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0xebd4:     e8 27 51 00 00                        	call 0x13d00 <function_13d00>
0xebd9:     48 83 c4 08                           	add rsp, 8
0xebdd:     c3                                    	ret 
; data inside code section at 0xebde -- 0xebe0
0xebde:     66 90                                              |f.              |
; function: function_ebe0 at 0xebe0 -- 0xec13
0xebe0:     31 c0                                 	xor eax, eax
0xebe2:     48 8b 56 08                           	mov rdx, qword ptr [rsi + 8]
0xebe6:     48 39 57 08                           	cmp qword ptr [rdi + 8], rdx
0xebea:     74 04                                 	je 0xebf0 <function_ebe0+0x10>
0xebec:     f3 c3                                 	ret 
; data inside code section at 0xebee -- 0xebf0
0xebee:     66 90                                              |f.              |
0xebf0:     48 8b 4e 10                           	mov rcx, qword ptr [rsi + 0x10]
0xebf4:     48 39 4f 10                           	cmp qword ptr [rdi + 0x10], rcx
0xebf8:     75 f2                                 	jne 0xebec <function_ebe0+0xc>
0xebfa:     48 83 ec 08                           	sub rsp, 8
0xebfe:     48 8b 36                              	mov rsi, qword ptr [rsi]
0xec01:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0xec04:     e8 17 4f ff ff                        	call 0x3b20 <strcmp>
0xec09:     85 c0                                 	test eax, eax
0xec0b:     0f 94 c0                              	sete al
0xec0e:     48 83 c4 08                           	add rsp, 8
0xec12:     c3                                    	ret 
; data inside code section at 0xec13 -- 0xec20
0xec13:     0f 1f 00 66 2e 0f 1f 84  00 00 00 00 00            |...f.........   |
; function: function_ec20 at 0xec20 -- 0xec35
0xec20:     53                                    	push rbx
0xec21:     48 89 fb                              	mov rbx, rdi
0xec24:     48 8b 3f                              	mov rdi, qword ptr [rdi]
0xec27:     e8 44 52 ff ff                        	call 0x3e70 <free>
0xec2c:     48 89 df                              	mov rdi, rbx
0xec2f:     5b                                    	pop rbx
0xec30:     e9 3b 52 ff ff                        	jmp 0x3e70 <free>
; data inside code section at 0xec35 -- 0xec40
0xec35:     66 2e 0f 1f 84 00 00 00  00 00 90                  |f..........     |
; function: function_ec40 at 0xec40 -- 0xed07
0xec40:     d9 05 aa b7 00 00                     	fld dword ptr [rip + 0xb7aa]
0xec46:     db 6c 24 08                           	fld xword ptr [rsp + 8]
0xec4a:     db e9                                 	fucomi st(1)
0xec4c:     73 72                                 	jae 0xecc0 <function_ec40+0x80>
0xec4e:     dd d9                                 	fstp st(1)
0xec50:     d9 7c 24 f6                           	fnstcw word ptr [rsp - 0xa]
0xec54:     0f b7 44 24 f6                        	movzx eax, word ptr [rsp - 0xa]
0xec59:     80 cc 0c                              	or ah, 0xc
0xec5c:     66 89 44 24 f4                        	mov word ptr [rsp - 0xc], ax
0xec61:     d9 c0                                 	fld st(0)
0xec63:     d9 6c 24 f4                           	fldcw word ptr [rsp - 0xc]
0xec67:     df 7c 24 e8                           	fistp qword ptr [rsp - 0x18]
0xec6b:     d9 6c 24 f6                           	fldcw word ptr [rsp - 0xa]
0xec6f:     48 8b 44 24 e8                        	mov rax, qword ptr [rsp - 0x18]
0xec74:     48 89 44 24 e0                        	mov qword ptr [rsp - 0x20], rax
0xec79:     48 85 c0                              	test rax, rax
0xec7c:     df 6c 24 e0                           	fild qword ptr [rsp - 0x20]
0xec80:     79 06                                 	jns 0xec88 <function_ec40+0x48>
0xec82:     d8 05 64 b7 00 00                     	fadd dword ptr [rip + 0xb764]
0xec88:     85 ff                                 	test edi, edi
0xec8a:     75 2c                                 	jne 0xecb8 <function_ec40+0x78>
0xec8c:     d9 c9                                 	fxch st(1)
0xec8e:     df e9                                 	fucomip st(1)
0xec90:     7a 06                                 	jp 0xec98 <function_ec40+0x58>
0xec92:     74 26                                 	je 0xecba <function_ec40+0x7a>
0xec94:     dd d8                                 	fstp st(0)
0xec96:     eb 08                                 	jmp 0xeca0 <function_ec40+0x60>
0xec98:     dd d8                                 	fstp st(0)
0xec9a:     66 0f 1f 44 00 00                     	nop word ptr [rax + rax]
0xeca0:     48 83 c0 01                           	add rax, 1
0xeca4:     48 89 44 24 e0                        	mov qword ptr [rsp - 0x20], rax
0xeca9:     48 85 c0                              	test rax, rax
0xecac:     df 6c 24 e0                           	fild qword ptr [rsp - 0x20]
0xecb0:     78 4e                                 	js 0xed00 <function_ec40+0xc0>
0xecb2:     eb 06                                 	jmp 0xecba <function_ec40+0x7a>
; data inside code section at 0xecb4 -- 0xecb8
0xecb4:     0f 1f 40 00                                        |..@.            |
0xecb8:     dd d9                                 	fstp st(1)
0xecba:     f3 c3                                 	ret 
; data inside code section at 0xecbc -- 0xecc0
0xecbc:     0f 1f 40 00                                        |..@.            |
0xecc0:     d9 7c 24 f6                           	fnstcw word ptr [rsp - 0xa]
0xecc4:     0f b7 44 24 f6                        	movzx eax, word ptr [rsp - 0xa]
0xecc9:     dc e1                                 	fsubr st(1), st(0)
0xeccb:     d9 c9                                 	fxch st(1)
0xeccd:     48 ba 00 00 00 00 00 00 00 80         	movabs rdx, 0x8000000000000000
0xecd7:     80 cc 0c                              	or ah, 0xc
0xecda:     66 89 44 24 f4                        	mov word ptr [rsp - 0xc], ax
0xecdf:     d9 6c 24 f4                           	fldcw word ptr [rsp - 0xc]
0xece3:     df 7c 24 e8                           	fistp qword ptr [rsp - 0x18]
0xece7:     d9 6c 24 f6                           	fldcw word ptr [rsp - 0xa]
0xeceb:     48 8b 44 24 e8                        	mov rax, qword ptr [rsp - 0x18]
0xecf0:     48 31 d0                              	xor rax, rdx
0xecf3:     e9 7c ff ff ff                        	jmp 0xec74 <function_ec40+0x34>
; data inside code section at 0xecf8 -- 0xed00
0xecf8:     0f 1f 84 00 00 00 00 00                            |........        |
0xed00:     d8 05 e6 b6 00 00                     	fadd dword ptr [rip + 0xb6e6]
0xed06:     c3                                    	ret 
; data inside code section at 0xed07 -- 0xed10
0xed07:     66 0f 1f 84 00 00 00 00  00                        |f........       |
; function: function_ed10 at 0xed10 -- 0xf717
0xed10:     41 57                                 	push r15
0xed12:     41 56                                 	push r14
0xed14:     89 d0                                 	mov eax, edx
0xed16:     41 55                                 	push r13
0xed18:     41 54                                 	push r12
0xed1a:     41 89 d7                              	mov r15d, edx
0xed1d:     55                                    	push rbp
0xed1e:     53                                    	push rbx
0xed1f:     83 e0 20                              	and eax, 0x20
0xed22:     41 83 e7 03                           	and r15d, 3
0xed26:     41 89 d4                              	mov r12d, edx
0xed29:     48 89 fb                              	mov rbx, rdi
0xed2c:     48 81 ec 98 00 00 00                  	sub rsp, 0x98
0xed33:     48 89 4c 24 18                        	mov qword ptr [rsp + 0x18], rcx
0xed38:     89 44 24 30                           	mov dword ptr [rsp + 0x30], eax
0xed3c:     64 48 8b 0c 25 28 00 00 00            	mov rcx, qword ptr fs:[0x28]
0xed45:     48 89 8c 24 88 00 00 00               	mov qword ptr [rsp + 0x88], rcx
0xed4d:     31 c9                                 	xor ecx, ecx
0xed4f:     83 f8 01                              	cmp eax, 1
0xed52:     48 89 34 24                           	mov qword ptr [rsp], rsi
0xed56:     4c 89 44 24 10                        	mov qword ptr [rsp + 0x10], r8
0xed5b:     19 c0                                 	sbb eax, eax
0xed5d:     83 e0 e8                              	and eax, 0xffffffe8
0xed60:     05 00 04 00 00                        	add eax, 0x400
0xed65:     89 44 24 34                           	mov dword ptr [rsp + 0x34], eax
0xed69:     e8 22 4b ff ff                        	call 0x3890 <localeconv>
0xed6e:     4c 8b 30                              	mov r14, qword ptr [rax]
0xed71:     49 89 c5                              	mov r13, rax
0xed74:     4c 89 f7                              	mov rdi, r14
0xed77:     e8 d4 4b ff ff                        	call 0x3950 <strlen>
0xed7c:     49 8b 4d 10                           	mov rcx, qword ptr [r13 + 0x10]
0xed80:     4d 8b 6d 08                           	mov r13, qword ptr [r13 + 8]
0xed84:     48 89 c5                              	mov rbp, rax
0xed87:     48 83 e8 01                           	sub rax, 1
0xed8b:     ba 01 00 00 00                        	mov edx, 1
0xed90:     48 83 f8 10                           	cmp rax, 0x10
0xed94:     48 8d 05 a2 b5 00 00                  	lea rax, [rip + 0xb5a2]
0xed9b:     4c 89 ef                              	mov rdi, r13
0xed9e:     48 0f 43 ea                           	cmovae rbp, rdx
0xeda2:     48 89 4c 24 38                        	mov qword ptr [rsp + 0x38], rcx
0xeda7:     4c 0f 43 f0                           	cmovae r14, rax
0xedab:     e8 a0 4b ff ff                        	call 0x3950 <strlen>
0xedb0:     48 83 f8 11                           	cmp rax, 0x11
0xedb4:     48 8d 05 8f 8e 00 00                  	lea rax, [rip + 0x8e8f]
0xedbb:     48 8b 7c 24 10                        	mov rdi, qword ptr [rsp + 0x10]
0xedc0:     48 8b 4c 24 18                        	mov rcx, qword ptr [rsp + 0x18]
0xedc5:     4c 0f 43 e8                           	cmovae r13, rax
0xedc9:     48 8b 04 24                           	mov rax, qword ptr [rsp]
0xedcd:     48 05 87 02 00 00                     	add rax, 0x287
0xedd3:     48 39 cf                              	cmp rdi, rcx
0xedd6:     48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0xeddb:     0f 87 47 01 00 00                     	ja 0xef28 <function_ed10+0x218>
0xede1:     31 d2                                 	xor edx, edx
0xede3:     48 89 c8                              	mov rax, rcx
0xede6:     48 f7 f7                              	div rdi
0xede9:     48 85 d2                              	test rdx, rdx
0xedec:     48 89 c7                              	mov rdi, rax
0xedef:     0f 84 5b 03 00 00                     	je 0xf150 <function_ed10+0x440>
0xedf5:     48 89 4c 24 18                        	mov qword ptr [rsp + 0x18], rcx
0xedfa:     48 85 c9                              	test rcx, rcx
0xedfd:     df 6c 24 18                           	fild qword ptr [rsp + 0x18]
0xee01:     79 06                                 	jns 0xee09 <function_ed10+0xf9>
0xee03:     d8 05 e3 b5 00 00                     	fadd dword ptr [rip + 0xb5e3]
0xee09:     48 8b 44 24 10                        	mov rax, qword ptr [rsp + 0x10]
0xee0e:     48 89 44 24 18                        	mov qword ptr [rsp + 0x18], rax
0xee13:     48 85 c0                              	test rax, rax
0xee16:     df 6c 24 18                           	fild qword ptr [rsp + 0x18]
0xee1a:     79 06                                 	jns 0xee22 <function_ed10+0x112>
0xee1c:     d8 05 ca b5 00 00                     	fadd dword ptr [rip + 0xb5ca]
0xee22:     de f9                                 	fdivp st(1)
0xee24:     48 89 5c 24 18                        	mov qword ptr [rsp + 0x18], rbx
0xee29:     48 85 db                              	test rbx, rbx
0xee2c:     df 6c 24 18                           	fild qword ptr [rsp + 0x18]
0xee30:     79 06                                 	jns 0xee38 <function_ed10+0x128>
0xee32:     d8 05 b4 b5 00 00                     	fadd dword ptr [rip + 0xb5b4]
0xee38:     41 f6 c4 10                           	test r12b, 0x10
0xee3c:     de c9                                 	fmulp st(1)
0xee3e:     0f 84 c4 01 00 00                     	je 0xf008 <function_ed10+0x2f8>
0xee44:     db 44 24 34                           	fild dword ptr [rsp + 0x34]
0xee48:     31 db                                 	xor ebx, ebx
0xee4a:     d9 c0                                 	fld st(0)
0xee4c:     eb 06                                 	jmp 0xee54 <function_ed10+0x144>
; data inside code section at 0xee4e -- 0xee50
0xee4e:     66 90                                              |f.              |
0xee50:     dd d9                                 	fstp st(1)
0xee52:     d9 ca                                 	fxch st(2)
0xee54:     d9 c0                                 	fld st(0)
0xee56:     83 c3 01                              	add ebx, 1
0xee59:     d8 ca                                 	fmul st(2)
0xee5b:     d9 cb                                 	fxch st(3)
0xee5d:     db eb                                 	fucomi st(3)
0xee5f:     72 0f                                 	jb 0xee70 <function_ed10+0x160>
0xee61:     83 fb 08                              	cmp ebx, 8
0xee64:     75 ea                                 	jne 0xee50 <function_ed10+0x140>
0xee66:     dd da                                 	fstp st(2)
0xee68:     dd da                                 	fstp st(2)
0xee6a:     eb 08                                 	jmp 0xee74 <function_ed10+0x164>
; data inside code section at 0xee6c -- 0xee70
0xee6c:     0f 1f 40 00                                        |..@.            |
0xee70:     dd da                                 	fstp st(2)
0xee72:     dd da                                 	fstp st(2)
0xee74:     8b 4c 24 30                           	mov ecx, dword ptr [rsp + 0x30]
0xee78:     48 83 c5 01                           	add rbp, 1
0xee7c:     31 c0                                 	xor eax, eax
0xee7e:     de f1                                 	fdivrp st(1)
0xee80:     85 c9                                 	test ecx, ecx
0xee82:     0f 94 c0                              	sete al
0xee85:     41 83 ff 01                           	cmp r15d, 1
0xee89:     48 8d 44 05 01                        	lea rax, [rbp + rax + 1]
0xee8e:     48 89 44 24 18                        	mov qword ptr [rsp + 0x18], rax
0xee93:     0f 84 67 05 00 00                     	je 0xf400 <function_ed10+0x6f0>
0xee99:     db 2d b1 b5 00 00                     	fld xword ptr [rip + 0xb5b1]
0xee9f:     df e9                                 	fucomip st(1)
0xeea1:     0f 87 d1 03 00 00                     	ja 0xf278 <function_ed10+0x568>
0xeea7:     d9 c0                                 	fld st(0)
0xeea9:     db 7c 24 20                           	fstp xword ptr [rsp + 0x20]
0xeead:     48 83 ec 10                           	sub rsp, 0x10
0xeeb1:     48 8d 0d 4e b5 00 00                  	lea rcx, [rip + 0xb54e]
0xeeb8:     be 01 00 00 00                        	mov esi, 1
0xeebd:     48 c7 c2 ff ff ff ff                  	mov rdx, -1
0xeec4:     31 c0                                 	xor eax, eax
0xeec6:     4c 8b 74 24 10                        	mov r14, qword ptr [rsp + 0x10]
0xeecb:     4c 89 f7                              	mov rdi, r14
0xeece:     db 3c 24                              	fstp xword ptr [rsp]
0xeed1:     e8 8a 4f ff ff                        	call 0x3e60 <__sprintf_chk>
0xeed6:     4c 89 f7                              	mov rdi, r14
0xeed9:     e8 72 4a ff ff                        	call 0x3950 <strlen>
0xeede:     59                                    	pop rcx
0xeedf:     5e                                    	pop rsi
0xeee0:     48 3b 44 24 18                        	cmp rax, qword ptr [rsp + 0x18]
0xeee5:     49 89 c6                              	mov r14, rax
0xeee8:     db 6c 24 20                           	fld xword ptr [rsp + 0x20]
0xeeec:     0f 87 a6 05 00 00                     	ja 0xf498 <function_ed10+0x788>
0xeef2:     41 f6 c4 08                           	test r12b, 8
0xeef6:     0f 84 64 01 00 00                     	je 0xf060 <function_ed10+0x350>
0xeefc:     48 8b 04 24                           	mov rax, qword ptr [rsp]
0xef00:     42 80 7c 30 ff 30                     	cmp byte ptr [rax + r14 - 1], 0x30
0xef06:     0f 85 5c 01 00 00                     	jne 0xf068 <function_ed10+0x358>
0xef0c:     d9 05 3a b5 00 00                     	fld dword ptr [rip + 0xb53a]
0xef12:     41 83 ff 01                           	cmp r15d, 1
0xef16:     dc c9                                 	fmul st(1), st(0)
0xef18:     0f 85 82 05 00 00                     	jne 0xf4a0 <function_ed10+0x790>
0xef1e:     e9 30 05 00 00                        	jmp 0xf453 <function_ed10+0x743>
; data inside code section at 0xef23 -- 0xef28
0xef23:     0f 1f 44 00 00                                     |..D..           |
0xef28:     48 85 c9                              	test rcx, rcx
0xef2b:     0f 84 c4 fe ff ff                     	je 0xedf5 <function_ed10+0xe5>
0xef31:     48 8b 44 24 10                        	mov rax, qword ptr [rsp + 0x10]
0xef36:     31 d2                                 	xor edx, edx
0xef38:     48 f7 f1                              	div rcx
0xef3b:     48 85 d2                              	test rdx, rdx
0xef3e:     49 89 c0                              	mov r8, rax
0xef41:     0f 85 ae fe ff ff                     	jne 0xedf5 <function_ed10+0xe5>
0xef47:     48 89 d8                              	mov rax, rbx
0xef4a:     31 d2                                 	xor edx, edx
0xef4c:     49 f7 f0                              	div r8
0xef4f:     48 89 c3                              	mov rbx, rax
0xef52:     48 8d 04 92                           	lea rax, [rdx + rdx*4]
0xef56:     31 d2                                 	xor edx, edx
0xef58:     48 89 de                              	mov rsi, rbx
0xef5b:     48 01 c0                              	add rax, rax
0xef5e:     49 f7 f0                              	div r8
0xef61:     48 01 d2                              	add rdx, rdx
0xef64:     41 89 c1                              	mov r9d, eax
0xef67:     49 39 d0                              	cmp r8, rdx
0xef6a:     0f 86 88 05 00 00                     	jbe 0xf4f8 <function_ed10+0x7e8>
0xef70:     31 ff                                 	xor edi, edi
0xef72:     48 85 d2                              	test rdx, rdx
0xef75:     40 0f 95 c7                           	setne dil
0xef79:     44 89 e1                              	mov ecx, r12d
0xef7c:     4c 8b 44 24 08                        	mov r8, qword ptr [rsp + 8]
0xef81:     bb ff ff ff ff                        	mov ebx, 0xffffffff
0xef86:     83 e1 10                              	and ecx, 0x10
0xef89:     0f 84 c1 03 00 00                     	je 0xf350 <function_ed10+0x640>
0xef8f:     44 8b 44 24 34                        	mov r8d, dword ptr [rsp + 0x34]
0xef94:     49 39 f0                              	cmp r8, rsi
0xef97:     4d 89 c3                              	mov r11, r8
0xef9a:     0f 87 70 05 00 00                     	ja 0xf510 <function_ed10+0x800>
0xefa0:     31 db                                 	xor ebx, ebx
0xefa2:     eb 23                                 	jmp 0xefc7 <function_ed10+0x2b7>
; data inside code section at 0xefa4 -- 0xefa8
0xefa4:     0f 1f 40 00                                        |..@.            |
0xefa8:     85 ff                                 	test edi, edi
0xefaa:     40 0f 95 c7                           	setne dil
0xefae:     40 0f b6 ff                           	movzx edi, dil
0xefb2:     83 c3 01                              	add ebx, 1
0xefb5:     4d 39 d0                              	cmp r8, r10
0xefb8:     0f 87 0f 03 00 00                     	ja 0xf2cd <function_ed10+0x5bd>
0xefbe:     83 fb 08                              	cmp ebx, 8
0xefc1:     0f 84 a1 05 00 00                     	je 0xf568 <function_ed10+0x858>
0xefc7:     48 89 f0                              	mov rax, rsi
0xefca:     31 d2                                 	xor edx, edx
0xefcc:     89 fe                                 	mov esi, edi
0xefce:     49 f7 f0                              	div r8
0xefd1:     d1 fe                                 	sar esi, 1
0xefd3:     49 89 c2                              	mov r10, rax
0xefd6:     8d 04 92                              	lea eax, [rdx + rdx*4]
0xefd9:     31 d2                                 	xor edx, edx
0xefdb:     41 8d 04 41                           	lea eax, [r9 + rax*2]
0xefdf:     41 f7 f3                              	div r11d
0xefe2:     8d 14 56                              	lea edx, [rsi + rdx*2]
0xefe5:     41 89 c1                              	mov r9d, eax
0xefe8:     4c 89 d6                              	mov rsi, r10
0xefeb:     01 d7                                 	add edi, edx
0xefed:     41 39 d3                              	cmp r11d, edx
0xeff0:     77 b6                                 	ja 0xefa8 <function_ed10+0x298>
0xeff2:     41 39 fb                              	cmp r11d, edi
0xeff5:     40 0f 92 c7                           	setb dil
0xeff9:     40 0f b6 ff                           	movzx edi, dil
0xeffd:     83 c7 02                              	add edi, 2
0xf000:     eb b0                                 	jmp 0xefb2 <function_ed10+0x2a2>
; data inside code section at 0xf002 -- 0xf008
0xf002:     66 0f 1f 44 00 00                                  |f..D..          |
0xf008:     41 83 ff 01                           	cmp r15d, 1
0xf00c:     74 0e                                 	je 0xf01c <function_ed10+0x30c>
0xf00e:     db 2d 3c b4 00 00                     	fld xword ptr [rip + 0xb43c]
0xf014:     df e9                                 	fucomip st(1)
0xf016:     0f 87 84 02 00 00                     	ja 0xf2a0 <function_ed10+0x590>
0xf01c:     48 83 ec 10                           	sub rsp, 0x10
0xf020:     48 8d 0d d9 b3 00 00                  	lea rcx, [rip + 0xb3d9]
0xf027:     be 01 00 00 00                        	mov esi, 1
0xf02c:     48 8b 5c 24 10                        	mov rbx, qword ptr [rsp + 0x10]
0xf031:     48 c7 c2 ff ff ff ff                  	mov rdx, -1
0xf038:     31 c0                                 	xor eax, eax
0xf03a:     db 3c 24                              	fstp xword ptr [rsp]
0xf03d:     31 ed                                 	xor ebp, ebp
0xf03f:     48 89 df                              	mov rdi, rbx
0xf042:     e8 19 4e ff ff                        	call 0x3e60 <__sprintf_chk>
0xf047:     48 89 df                              	mov rdi, rbx
0xf04a:     bb ff ff ff ff                        	mov ebx, 0xffffffff
0xf04f:     e8 fc 48 ff ff                        	call 0x3950 <strlen>
0xf054:     5e                                    	pop rsi
0xf055:     5f                                    	pop rdi
0xf056:     49 89 c6                              	mov r14, rax
0xf059:     eb 15                                 	jmp 0xf070 <function_ed10+0x360>
; data inside code section at 0xf05b -- 0xf060
0xf05b:     0f 1f 44 00 00                                     |..D..           |
0xf060:     dd d8                                 	fstp st(0)
0xf062:     eb 0c                                 	jmp 0xf070 <function_ed10+0x360>
; data inside code section at 0xf064 -- 0xf068
0xf064:     0f 1f 40 00                                        |..@.            |
0xf068:     dd d8                                 	fstp st(0)
0xf06a:     66 0f 1f 44 00 00                     	nop word ptr [rax + rax]
0xf070:     4c 8b 7c 24 08                        	mov r15, qword ptr [rsp + 8]
0xf075:     48 8b 34 24                           	mov rsi, qword ptr [rsp]
0xf079:     4c 89 f2                              	mov rdx, r14
0xf07c:     4d 29 f7                              	sub r15, r14
0xf07f:     49 29 ee                              	sub r14, rbp
0xf082:     4c 89 ff                              	mov rdi, r15
0xf085:     e8 86 4c ff ff                        	call 0x3d10 <memmove>
0xf08a:     4d 89 f0                              	mov r8, r14
0xf08d:     4d 01 f8                              	add r8, r15
0xf090:     41 f6 c4 04                           	test r12b, 4
0xf094:     0f 85 de 00 00 00                     	jne 0xf178 <function_ed10+0x468>
0xf09a:     41 f6 c4 80                           	test r12b, 0x80
0xf09e:     74 77                                 	je 0xf117 <function_ed10+0x407>
0xf0a0:     83 fb ff                              	cmp ebx, -1
0xf0a3:     0f 84 17 03 00 00                     	je 0xf3c0 <function_ed10+0x6b0>
0xf0a9:     44 89 e0                              	mov eax, r12d
0xf0ac:     25 00 01 00 00                        	and eax, 0x100
0xf0b1:     89 c1                                 	mov ecx, eax
0xf0b3:     09 d9                                 	or ecx, ebx
0xf0b5:     74 60                                 	je 0xf117 <function_ed10+0x407>
0xf0b7:     41 83 e4 40                           	and r12d, 0x40
0xf0bb:     0f 85 97 01 00 00                     	jne 0xf258 <function_ed10+0x548>
0xf0c1:     85 db                                 	test ebx, ebx
0xf0c3:     0f 84 2d 06 00 00                     	je 0xf6f6 <function_ed10+0x9e6>
0xf0c9:     83 fb 01                              	cmp ebx, 1
0xf0cc:     75 0e                                 	jne 0xf0dc <function_ed10+0x3cc>
0xf0ce:     44 8b 4c 24 30                        	mov r9d, dword ptr [rsp + 0x30]
0xf0d3:     45 85 c9                              	test r9d, r9d
0xf0d6:     0f 84 44 04 00 00                     	je 0xf520 <function_ed10+0x810>
0xf0dc:     48 8d 0d 5d b3 00 00                  	lea rcx, [rip + 0xb35d]
0xf0e3:     48 63 db                              	movsxd rbx, ebx
0xf0e6:     48 8b 7c 24 08                        	mov rdi, qword ptr [rsp + 8]
0xf0eb:     85 c0                                 	test eax, eax
0xf0ed:     0f b6 0c 19                           	movzx ecx, byte ptr [rcx + rbx]
0xf0f1:     48 8d 57 01                           	lea rdx, [rdi + 1]
0xf0f5:     88 0f                                 	mov byte ptr [rdi], cl
0xf0f7:     0f 84 37 04 00 00                     	je 0xf534 <function_ed10+0x824>
0xf0fd:     44 8b 44 24 30                        	mov r8d, dword ptr [rsp + 0x30]
0xf102:     45 85 c0                              	test r8d, r8d
0xf105:     0f 85 b5 01 00 00                     	jne 0xf2c0 <function_ed10+0x5b0>
0xf10b:     48 8d 42 01                           	lea rax, [rdx + 1]
0xf10f:     c6 02 42                              	mov byte ptr [rdx], 0x42
0xf112:     48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0xf117:     48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0xf11c:     48 8b 8c 24 88 00 00 00               	mov rcx, qword ptr [rsp + 0x88]
0xf124:     64 48 33 0c 25 28 00 00 00            	xor rcx, qword ptr fs:[0x28]
0xf12d:     c6 00 00                              	mov byte ptr [rax], 0
0xf130:     4c 89 f8                              	mov rax, r15
0xf133:     0f 85 92 05 00 00                     	jne 0xf6cb <function_ed10+0x9bb>
0xf139:     48 81 c4 98 00 00 00                  	add rsp, 0x98
0xf140:     5b                                    	pop rbx
0xf141:     5d                                    	pop rbp
0xf142:     41 5c                                 	pop r12
0xf144:     41 5d                                 	pop r13
0xf146:     41 5e                                 	pop r14
0xf148:     41 5f                                 	pop r15
0xf14a:     c3                                    	ret 
; data inside code section at 0xf14b -- 0xf150
0xf14b:     0f 1f 44 00 00                                     |..D..           |
0xf150:     48 89 de                              	mov rsi, rbx
0xf153:     31 d2                                 	xor edx, edx
0xf155:     48 0f af f0                           	imul rsi, rax
0xf159:     48 89 f0                              	mov rax, rsi
0xf15c:     48 f7 f7                              	div rdi
0xf15f:     48 39 d8                              	cmp rax, rbx
0xf162:     0f 85 8d fc ff ff                     	jne 0xedf5 <function_ed10+0xe5>
0xf168:     31 ff                                 	xor edi, edi
0xf16a:     45 31 c9                              	xor r9d, r9d
0xf16d:     e9 07 fe ff ff                        	jmp 0xef79 <function_ed10+0x269>
; data inside code section at 0xf172 -- 0xf178
0xf172:     66 0f 1f 44 00 00                                  |f..D..          |
0xf178:     4d 89 c6                              	mov r14, r8
0xf17b:     4c 89 ef                              	mov rdi, r13
0xf17e:     4c 89 44 24 48                        	mov qword ptr [rsp + 0x48], r8
0xf183:     4d 29 fe                              	sub r14, r15
0xf186:     48 c7 c5 ff ff ff ff                  	mov rbp, -1
0xf18d:     e8 be 47 ff ff                        	call 0x3950 <strlen>
0xf192:     48 8d 7c 24 50                        	lea rdi, [rsp + 0x50]
0xf197:     b9 29 00 00 00                        	mov ecx, 0x29
0xf19c:     4c 89 f2                              	mov rdx, r14
0xf19f:     4c 89 fe                              	mov rsi, r15
0xf1a2:     48 89 44 24 40                        	mov qword ptr [rsp + 0x40], rax
0xf1a7:     48 89 7c 24 18                        	mov qword ptr [rsp + 0x18], rdi
0xf1ac:     e8 af 49 ff ff                        	call 0x3b60 <__memcpy_chk>
0xf1b1:     44 89 e1                              	mov ecx, r12d
0xf1b4:     89 5c 24 20                           	mov dword ptr [rsp + 0x20], ebx
0xf1b8:     4d 89 f4                              	mov r12, r14
0xf1bb:     4c 89 eb                              	mov rbx, r13
0xf1be:     4c 8b 44 24 48                        	mov r8, qword ptr [rsp + 0x48]
0xf1c3:     4c 8b 7c 24 38                        	mov r15, qword ptr [rsp + 0x38]
0xf1c8:     4c 8b 6c 24 40                        	mov r13, qword ptr [rsp + 0x40]
0xf1cd:     41 89 ce                              	mov r14d, ecx
0xf1d0:     eb 40                                 	jmp 0xf212 <function_ed10+0x502>
; data inside code section at 0xf1d2 -- 0xf1d8
0xf1d2:     66 0f 1f 44 00 00                                  |f..D..          |
0xf1d8:     48 8b 44 24 18                        	mov rax, qword ptr [rsp + 0x18]
0xf1dd:     49 29 ec                              	sub r12, rbp
0xf1e0:     49 29 e8                              	sub r8, rbp
0xf1e3:     4c 89 c7                              	mov rdi, r8
0xf1e6:     48 89 ea                              	mov rdx, rbp
0xf1e9:     4a 8d 34 20                           	lea rsi, [rax + r12]
0xf1ed:     e8 8e 49 ff ff                        	call 0x3b80 <memcpy>
0xf1f2:     4d 85 e4                              	test r12, r12
0xf1f5:     49 89 c0                              	mov r8, rax
0xf1f8:     0f 84 0a 05 00 00                     	je 0xf708 <function_ed10+0x9f8>
0xf1fe:     4d 29 e8                              	sub r8, r13
0xf201:     4c 89 ea                              	mov rdx, r13
0xf204:     48 89 de                              	mov rsi, rbx
0xf207:     4c 89 c7                              	mov rdi, r8
0xf20a:     e8 71 49 ff ff                        	call 0x3b80 <memcpy>
0xf20f:     49 89 c0                              	mov r8, rax
0xf212:     41 0f b6 07                           	movzx eax, byte ptr [r15]
0xf216:     84 c0                                 	test al, al
0xf218:     74 0d                                 	je 0xf227 <function_ed10+0x517>
0xf21a:     3c 7f                                 	cmp al, 0x7f
0xf21c:     0f b6 e8                              	movzx ebp, al
0xf21f:     49 0f 43 ec                           	cmovae rbp, r12
0xf223:     49 83 c7 01                           	add r15, 1
0xf227:     4c 39 e5                              	cmp rbp, r12
0xf22a:     76 ac                                 	jbe 0xf1d8 <function_ed10+0x4c8>
0xf22c:     44 89 f0                              	mov eax, r14d
0xf22f:     4d 89 c7                              	mov r15, r8
0xf232:     4d 89 e6                              	mov r14, r12
0xf235:     48 8b 74 24 18                        	mov rsi, qword ptr [rsp + 0x18]
0xf23a:     4d 29 f7                              	sub r15, r14
0xf23d:     4c 89 f2                              	mov rdx, r14
0xf240:     4c 89 ff                              	mov rdi, r15
0xf243:     8b 5c 24 20                           	mov ebx, dword ptr [rsp + 0x20]
0xf247:     41 89 c4                              	mov r12d, eax
0xf24a:     e8 31 49 ff ff                        	call 0x3b80 <memcpy>
0xf24f:     e9 46 fe ff ff                        	jmp 0xf09a <function_ed10+0x38a>
; data inside code section at 0xf254 -- 0xf258
0xf254:     0f 1f 40 00                                        |..@.            |
0xf258:     48 8b 0c 24                           	mov rcx, qword ptr [rsp]
0xf25c:     48 8d b9 88 02 00 00                  	lea rdi, [rcx + 0x288]
0xf263:     c6 81 87 02 00 00 20                  	mov byte ptr [rcx + 0x287], 0x20
0xf26a:     48 89 7c 24 08                        	mov qword ptr [rsp + 8], rdi
0xf26f:     e9 4d fe ff ff                        	jmp 0xf0c1 <function_ed10+0x3b1>
; data inside code section at 0xf274 -- 0xf278
0xf274:     0f 1f 40 00                                        |..@.            |
0xf278:     48 83 ec 10                           	sub rsp, 0x10
0xf27c:     44 89 ff                              	mov edi, r15d
0xf27f:     d9 c0                                 	fld st(0)
0xf281:     db 3c 24                              	fstp xword ptr [rsp]
0xf284:     db 7c 24 30                           	fstp xword ptr [rsp + 0x30]
0xf288:     e8 b3 f9 ff ff                        	call 0xec40 <function_ec40>
0xf28d:     58                                    	pop rax
0xf28e:     5a                                    	pop rdx
0xf28f:     db 6c 24 20                           	fld xword ptr [rsp + 0x20]
0xf293:     e9 11 fc ff ff                        	jmp 0xeea9 <function_ed10+0x199>
; data inside code section at 0xf298 -- 0xf2a0
0xf298:     0f 1f 84 00 00 00 00 00                            |........        |
0xf2a0:     48 83 ec 10                           	sub rsp, 0x10
0xf2a4:     44 89 ff                              	mov edi, r15d
0xf2a7:     db 3c 24                              	fstp xword ptr [rsp]
0xf2aa:     e8 91 f9 ff ff                        	call 0xec40 <function_ec40>
0xf2af:     41 58                                 	pop r8
0xf2b1:     41 59                                 	pop r9
0xf2b3:     e9 64 fd ff ff                        	jmp 0xf01c <function_ed10+0x30c>
; data inside code section at 0xf2b8 -- 0xf2c0
0xf2b8:     0f 1f 84 00 00 00 00 00                            |........        |
0xf2c0:     48 8d 57 02                           	lea rdx, [rdi + 2]
0xf2c4:     c6 47 01 69                           	mov byte ptr [rdi + 1], 0x69
0xf2c8:     e9 3e fe ff ff                        	jmp 0xf10b <function_ed10+0x3fb>
0xf2cd:     49 83 fa 09                           	cmp r10, 9
0xf2d1:     0f 87 91 02 00 00                     	ja 0xf568 <function_ed10+0x858>
0xf2d7:     41 83 ff 01                           	cmp r15d, 1
0xf2db:     0f 84 b1 02 00 00                     	je 0xf592 <function_ed10+0x882>
0xf2e1:     45 85 ff                              	test r15d, r15d
0xf2e4:     0f 94 c2                              	sete dl
0xf2e7:     85 ff                                 	test edi, edi
0xf2e9:     41 0f 9f c0                           	setg r8b
0xf2ed:     44 21 c2                              	and edx, r8d
0xf2f0:     84 d2                                 	test dl, dl
0xf2f2:     0f 84 81 02 00 00                     	je 0xf579 <function_ed10+0x869>
0xf2f8:     44 8d 48 01                           	lea r9d, [rax + 1]
0xf2fc:     41 83 f9 0a                           	cmp r9d, 0xa
0xf300:     0f 84 fb 02 00 00                     	je 0xf601 <function_ed10+0x8f1>
0xf306:     41 83 c1 30                           	add r9d, 0x30
0xf30a:     48 8b 04 24                           	mov rax, qword ptr [rsp]
0xf30e:     4c 8d 80 86 02 00 00                  	lea r8, [rax + 0x286]
0xf315:     44 88 88 86 02 00 00                  	mov byte ptr [rax + 0x286], r9b
0xf31c:     89 e8                                 	mov eax, ebp
0xf31e:     49 29 e8                              	sub r8, rbp
0xf321:     83 fd 08                              	cmp ebp, 8
0xf324:     0f 83 87 02 00 00                     	jae 0xf5b1 <function_ed10+0x8a1>
0xf32a:     40 f6 c5 04                           	test bpl, 4
0xf32e:     0f 85 82 03 00 00                     	jne 0xf6b6 <function_ed10+0x9a6>
0xf334:     85 c0                                 	test eax, eax
0xf336:     74 0f                                 	je 0xf347 <function_ed10+0x637>
0xf338:     41 0f b6 16                           	movzx edx, byte ptr [r14]
0xf33c:     a8 02                                 	test al, 2
0xf33e:     41 88 10                              	mov byte ptr [r8], dl
0xf341:     0f 85 89 03 00 00                     	jne 0xf6d0 <function_ed10+0x9c0>
0xf347:     31 ff                                 	xor edi, edi
0xf349:     45 31 c9                              	xor r9d, r9d
0xf34c:     0f 1f 40 00                           	nop dword ptr [rax]
0xf350:     41 83 ff 01                           	cmp r15d, 1
0xf354:     0f 84 76 01 00 00                     	je 0xf4d0 <function_ed10+0x7c0>
0xf35a:     45 85 ff                              	test r15d, r15d
0xf35d:     75 21                                 	jne 0xf380 <function_ed10+0x670>
0xf35f:     44 01 cf                              	add edi, r9d
0xf362:     85 ff                                 	test edi, edi
0xf364:     7e 1a                                 	jle 0xf380 <function_ed10+0x670>
0xf366:     48 83 c6 01                           	add rsi, 1
0xf36a:     85 c9                                 	test ecx, ecx
0xf36c:     74 12                                 	je 0xf380 <function_ed10+0x670>
0xf36e:     8b 44 24 34                           	mov eax, dword ptr [rsp + 0x34]
0xf372:     48 39 f0                              	cmp rax, rsi
0xf375:     0f 84 c5 01 00 00                     	je 0xf540 <function_ed10+0x830>
0xf37b:     0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0xf380:     4d 89 c7                              	mov r15, r8
0xf383:     48 b9 cd cc cc cc cc cc cc cc         	movabs rcx, 0xcccccccccccccccd
0xf38d:     0f 1f 00                              	nop dword ptr [rax]
0xf390:     48 89 f0                              	mov rax, rsi
0xf393:     49 83 ef 01                           	sub r15, 1
0xf397:     48 f7 e1                              	mul rcx
0xf39a:     48 c1 ea 03                           	shr rdx, 3
0xf39e:     48 8d 04 92                           	lea rax, [rdx + rdx*4]
0xf3a2:     48 01 c0                              	add rax, rax
0xf3a5:     48 29 c6                              	sub rsi, rax
0xf3a8:     83 c6 30                              	add esi, 0x30
0xf3ab:     48 85 d2                              	test rdx, rdx
0xf3ae:     41 88 37                              	mov byte ptr [r15], sil
0xf3b1:     48 89 d6                              	mov rsi, rdx
0xf3b4:     75 da                                 	jne 0xf390 <function_ed10+0x680>
0xf3b6:     e9 d5 fc ff ff                        	jmp 0xf090 <function_ed10+0x380>
; data inside code section at 0xf3bb -- 0xf3c0
0xf3bb:     0f 1f 44 00 00                                     |..D..           |
0xf3c0:     48 8b 4c 24 10                        	mov rcx, qword ptr [rsp + 0x10]
0xf3c5:     48 83 f9 01                           	cmp rcx, 1
0xf3c9:     0f 86 a3 01 00 00                     	jbe 0xf572 <function_ed10+0x862>
0xf3cf:     8b 54 24 34                           	mov edx, dword ptr [rsp + 0x34]
0xf3d3:     bb 01 00 00 00                        	mov ebx, 1
0xf3d8:     b8 01 00 00 00                        	mov eax, 1
0xf3dd:     48 0f af c2                           	imul rax, rdx
0xf3e1:     48 39 c1                              	cmp rcx, rax
0xf3e4:     0f 86 bf fc ff ff                     	jbe 0xf0a9 <function_ed10+0x399>
0xf3ea:     83 c3 01                              	add ebx, 1
0xf3ed:     83 fb 08                              	cmp ebx, 8
0xf3f0:     75 eb                                 	jne 0xf3dd <function_ed10+0x6cd>
0xf3f2:     e9 b2 fc ff ff                        	jmp 0xf0a9 <function_ed10+0x399>
; data inside code section at 0xf3f7 -- 0xf400
0xf3f7:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xf400:     48 83 ec 10                           	sub rsp, 0x10
0xf404:     48 8d 0d fb af 00 00                  	lea rcx, [rip + 0xaffb]
0xf40b:     48 c7 c2 ff ff ff ff                  	mov rdx, -1
0xf412:     d9 c0                                 	fld st(0)
0xf414:     db 3c 24                              	fstp xword ptr [rsp]
0xf417:     4c 8b 74 24 10                        	mov r14, qword ptr [rsp + 0x10]
0xf41c:     be 01 00 00 00                        	mov esi, 1
0xf421:     31 c0                                 	xor eax, eax
0xf423:     4c 89 f7                              	mov rdi, r14
0xf426:     db 7c 24 30                           	fstp xword ptr [rsp + 0x30]
0xf42a:     e8 31 4a ff ff                        	call 0x3e60 <__sprintf_chk>
0xf42f:     4c 89 f7                              	mov rdi, r14
0xf432:     e8 19 45 ff ff                        	call 0x3950 <strlen>
0xf437:     49 89 c6                              	mov r14, rax
0xf43a:     58                                    	pop rax
0xf43b:     5a                                    	pop rdx
0xf43c:     4c 3b 74 24 18                        	cmp r14, qword ptr [rsp + 0x18]
0xf441:     db 6c 24 20                           	fld xword ptr [rsp + 0x20]
0xf445:     0f 86 a7 fa ff ff                     	jbe 0xeef2 <function_ed10+0x1e2>
0xf44b:     d9 05 fb af 00 00                     	fld dword ptr [rip + 0xaffb]
0xf451:     dc c9                                 	fmul st(1), st(0)
0xf453:     de f9                                 	fdivp st(1)
0xf455:     48 83 ec 10                           	sub rsp, 0x10
0xf459:     48 8d 0d a0 af 00 00                  	lea rcx, [rip + 0xafa0]
0xf460:     4c 8b 74 24 10                        	mov r14, qword ptr [rsp + 0x10]
0xf465:     48 c7 c2 ff ff ff ff                  	mov rdx, -1
0xf46c:     be 01 00 00 00                        	mov esi, 1
0xf471:     31 c0                                 	xor eax, eax
0xf473:     31 ed                                 	xor ebp, ebp
0xf475:     4c 89 f7                              	mov rdi, r14
0xf478:     db 3c 24                              	fstp xword ptr [rsp]
0xf47b:     e8 e0 49 ff ff                        	call 0x3e60 <__sprintf_chk>
0xf480:     4c 89 f7                              	mov rdi, r14
0xf483:     e8 c8 44 ff ff                        	call 0x3950 <strlen>
0xf488:     41 5a                                 	pop r10
0xf48a:     49 89 c6                              	mov r14, rax
0xf48d:     41 5b                                 	pop r11
0xf48f:     e9 dc fb ff ff                        	jmp 0xf070 <function_ed10+0x360>
; data inside code section at 0xf494 -- 0xf498
0xf494:     0f 1f 40 00                                        |..@.            |
0xf498:     d9 05 ae af 00 00                     	fld dword ptr [rip + 0xafae]
0xf49e:     dc c9                                 	fmul st(1), st(0)
0xf4a0:     db 2d aa af 00 00                     	fld xword ptr [rip + 0xafaa]
0xf4a6:     df ea                                 	fucomip st(2)
0xf4a8:     76 a9                                 	jbe 0xf453 <function_ed10+0x743>
0xf4aa:     d9 5c 24 18                           	fstp dword ptr [rsp + 0x18]
0xf4ae:     48 83 ec 10                           	sub rsp, 0x10
0xf4b2:     44 89 ff                              	mov edi, r15d
0xf4b5:     db 3c 24                              	fstp xword ptr [rsp]
0xf4b8:     e8 83 f7 ff ff                        	call 0xec40 <function_ec40>
0xf4bd:     5d                                    	pop rbp
0xf4be:     41 5e                                 	pop r14
0xf4c0:     d9 44 24 18                           	fld dword ptr [rsp + 0x18]
0xf4c4:     eb 8d                                 	jmp 0xf453 <function_ed10+0x743>
; data inside code section at 0xf4c6 -- 0xf4d0
0xf4c6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0xf4d0:     48 89 f0                              	mov rax, rsi
0xf4d3:     48 63 ff                              	movsxd rdi, edi
0xf4d6:     83 e0 01                              	and eax, 1
0xf4d9:     48 01 f8                              	add rax, rdi
0xf4dc:     0f 95 c0                              	setne al
0xf4df:     0f b6 c0                              	movzx eax, al
0xf4e2:     41 01 c1                              	add r9d, eax
0xf4e5:     41 83 f9 05                           	cmp r9d, 5
0xf4e9:     0f 8f 77 fe ff ff                     	jg 0xf366 <function_ed10+0x656>
0xf4ef:     e9 8c fe ff ff                        	jmp 0xf380 <function_ed10+0x670>
; data inside code section at 0xf4f4 -- 0xf4f8
0xf4f4:     0f 1f 40 00                                        |..@.            |
0xf4f8:     40 0f 92 c7                           	setb dil
0xf4fc:     40 0f b6 ff                           	movzx edi, dil
0xf500:     83 c7 02                              	add edi, 2
0xf503:     e9 71 fa ff ff                        	jmp 0xef79 <function_ed10+0x269>
; data inside code section at 0xf508 -- 0xf510
0xf508:     0f 1f 84 00 00 00 00 00                            |........        |
0xf510:     4c 8b 44 24 08                        	mov r8, qword ptr [rsp + 8]
0xf515:     31 db                                 	xor ebx, ebx
0xf517:     e9 34 fe ff ff                        	jmp 0xf350 <function_ed10+0x640>
; data inside code section at 0xf51c -- 0xf520
0xf51c:     0f 1f 40 00                                        |..@.            |
0xf520:     48 8b 5c 24 08                        	mov rbx, qword ptr [rsp + 8]
0xf525:     85 c0                                 	test eax, eax
0xf527:     48 8d 53 01                           	lea rdx, [rbx + 1]
0xf52b:     c6 03 6b                              	mov byte ptr [rbx], 0x6b
0xf52e:     0f 85 d7 fb ff ff                     	jne 0xf10b <function_ed10+0x3fb>
0xf534:     48 89 54 24 08                        	mov qword ptr [rsp + 8], rdx
0xf539:     e9 d9 fb ff ff                        	jmp 0xf117 <function_ed10+0x407>
; data inside code section at 0xf53e -- 0xf540
0xf53e:     66 90                                              |f.              |
0xf540:     83 fb 08                              	cmp ebx, 8
0xf543:     0f 84 37 fe ff ff                     	je 0xf380 <function_ed10+0x670>
0xf549:     83 c3 01                              	add ebx, 1
0xf54c:     41 f6 c4 08                           	test r12b, 8
0xf550:     0f 84 bc 00 00 00                     	je 0xf612 <function_ed10+0x902>
0xf556:     4d 8d 78 ff                           	lea r15, [r8 - 1]
0xf55a:     41 c6 40 ff 31                        	mov byte ptr [r8 - 1], 0x31
0xf55f:     e9 2c fb ff ff                        	jmp 0xf090 <function_ed10+0x380>
; data inside code section at 0xf564 -- 0xf568
0xf564:     0f 1f 40 00                                        |..@.            |
0xf568:     4c 8b 44 24 08                        	mov r8, qword ptr [rsp + 8]
0xf56d:     e9 de fd ff ff                        	jmp 0xf350 <function_ed10+0x640>
0xf572:     31 db                                 	xor ebx, ebx
0xf574:     e9 30 fb ff ff                        	jmp 0xf0a9 <function_ed10+0x399>
0xf579:     85 c0                                 	test eax, eax
0xf57b:     0f 85 85 fd ff ff                     	jne 0xf306 <function_ed10+0x5f6>
0xf581:     41 f6 c4 08                           	test r12b, 8
0xf585:     75 1d                                 	jne 0xf5a4 <function_ed10+0x894>
0xf587:     41 b9 30 00 00 00                     	mov r9d, 0x30
0xf58d:     e9 78 fd ff ff                        	jmp 0xf30a <function_ed10+0x5fa>
0xf592:     89 c2                                 	mov edx, eax
0xf594:     83 e2 01                              	and edx, 1
0xf597:     01 fa                                 	add edx, edi
0xf599:     83 fa 02                              	cmp edx, 2
0xf59c:     0f 9f c2                              	setg dl
0xf59f:     e9 4c fd ff ff                        	jmp 0xf2f0 <function_ed10+0x5e0>
0xf5a4:     4c 8b 44 24 08                        	mov r8, qword ptr [rsp + 8]
0xf5a9:     45 31 c9                              	xor r9d, r9d
0xf5ac:     e9 9f fd ff ff                        	jmp 0xf350 <function_ed10+0x640>
0xf5b1:     49 8b 06                              	mov rax, qword ptr [r14]
0xf5b4:     4d 89 f1                              	mov r9, r14
0xf5b7:     49 89 00                              	mov qword ptr [r8], rax
0xf5ba:     89 e8                                 	mov eax, ebp
0xf5bc:     49 8b 54 06 f8                        	mov rdx, qword ptr [r14 + rax - 8]
0xf5c1:     49 89 54 00 f8                        	mov qword ptr [r8 + rax - 8], rdx
0xf5c6:     49 8d 50 08                           	lea rdx, [r8 + 8]
0xf5ca:     4c 89 c0                              	mov rax, r8
0xf5cd:     48 83 e2 f8                           	and rdx, 0xfffffffffffffff8
0xf5d1:     48 29 d0                              	sub rax, rdx
0xf5d4:     49 29 c1                              	sub r9, rax
0xf5d7:     01 e8                                 	add eax, ebp
0xf5d9:     83 e0 f8                              	and eax, 0xfffffff8
0xf5dc:     83 f8 08                              	cmp eax, 8
0xf5df:     0f 82 62 fd ff ff                     	jb 0xf347 <function_ed10+0x637>
0xf5e5:     83 e0 f8                              	and eax, 0xfffffff8
0xf5e8:     31 ff                                 	xor edi, edi
0xf5ea:     41 89 fa                              	mov r10d, edi
0xf5ed:     83 c7 08                              	add edi, 8
0xf5f0:     4f 8b 1c 11                           	mov r11, qword ptr [r9 + r10]
0xf5f4:     39 c7                                 	cmp edi, eax
0xf5f6:     4e 89 1c 12                           	mov qword ptr [rdx + r10], r11
0xf5fa:     72 ee                                 	jb 0xf5ea <function_ed10+0x8da>
0xf5fc:     e9 46 fd ff ff                        	jmp 0xf347 <function_ed10+0x637>
0xf601:     49 8d 72 01                           	lea rsi, [r10 + 1]
0xf605:     48 83 fe 0a                           	cmp rsi, 0xa
0xf609:     74 55                                 	je 0xf660 <function_ed10+0x950>
0xf60b:     31 ff                                 	xor edi, edi
0xf60d:     e9 6f ff ff ff                        	jmp 0xf581 <function_ed10+0x871>
0xf612:     48 89 e8                              	mov rax, rbp
0xf615:     41 c6 40 ff 30                        	mov byte ptr [r8 - 1], 0x30
0xf61a:     48 f7 d0                              	not rax
0xf61d:     49 01 c0                              	add r8, rax
0xf620:     83 fd 08                              	cmp ebp, 8
0xf623:     89 e8                                 	mov eax, ebp
0xf625:     73 43                                 	jae 0xf66a <function_ed10+0x95a>
0xf627:     83 e5 04                              	and ebp, 4
0xf62a:     0f 85 b1 00 00 00                     	jne 0xf6e1 <function_ed10+0x9d1>
0xf630:     85 c0                                 	test eax, eax
0xf632:     0f 84 1e ff ff ff                     	je 0xf556 <function_ed10+0x846>
0xf638:     41 0f b6 16                           	movzx edx, byte ptr [r14]
0xf63c:     a8 02                                 	test al, 2
0xf63e:     41 88 10                              	mov byte ptr [r8], dl
0xf641:     0f 84 0f ff ff ff                     	je 0xf556 <function_ed10+0x846>
0xf647:     41 0f b7 54 06 fe                     	movzx edx, word ptr [r14 + rax - 2]
0xf64d:     66 41 89 54 00 fe                     	mov word ptr [r8 + rax - 2], dx
0xf653:     e9 fe fe ff ff                        	jmp 0xf556 <function_ed10+0x846>
; data inside code section at 0xf658 -- 0xf660
0xf658:     0f 1f 84 00 00 00 00 00                            |........        |
0xf660:     4c 8b 44 24 08                        	mov r8, qword ptr [rsp + 8]
0xf665:     e9 dd fc ff ff                        	jmp 0xf347 <function_ed10+0x637>
0xf66a:     49 8b 06                              	mov rax, qword ptr [r14]
0xf66d:     49 8d 48 08                           	lea rcx, [r8 + 8]
0xf671:     48 83 e1 f8                           	and rcx, 0xfffffffffffffff8
0xf675:     49 89 00                              	mov qword ptr [r8], rax
0xf678:     89 e8                                 	mov eax, ebp
0xf67a:     49 8b 54 06 f8                        	mov rdx, qword ptr [r14 + rax - 8]
0xf67f:     49 89 54 00 f8                        	mov qword ptr [r8 + rax - 8], rdx
0xf684:     4c 89 c0                              	mov rax, r8
0xf687:     48 29 c8                              	sub rax, rcx
0xf68a:     49 29 c6                              	sub r14, rax
0xf68d:     01 e8                                 	add eax, ebp
0xf68f:     83 e0 f8                              	and eax, 0xfffffff8
0xf692:     83 f8 08                              	cmp eax, 8
0xf695:     0f 82 bb fe ff ff                     	jb 0xf556 <function_ed10+0x846>
0xf69b:     83 e0 f8                              	and eax, 0xfffffff8
0xf69e:     31 d2                                 	xor edx, edx
0xf6a0:     89 d6                                 	mov esi, edx
0xf6a2:     83 c2 08                              	add edx, 8
0xf6a5:     49 8b 3c 36                           	mov rdi, qword ptr [r14 + rsi]
0xf6a9:     39 c2                                 	cmp edx, eax
0xf6ab:     48 89 3c 31                           	mov qword ptr [rcx + rsi], rdi
0xf6af:     72 ef                                 	jb 0xf6a0 <function_ed10+0x990>
0xf6b1:     e9 a0 fe ff ff                        	jmp 0xf556 <function_ed10+0x846>
0xf6b6:     41 8b 16                              	mov edx, dword ptr [r14]
0xf6b9:     41 89 10                              	mov dword ptr [r8], edx
0xf6bc:     41 8b 54 06 fc                        	mov edx, dword ptr [r14 + rax - 4]
0xf6c1:     41 89 54 00 fc                        	mov dword ptr [r8 + rax - 4], edx
0xf6c6:     e9 7c fc ff ff                        	jmp 0xf347 <function_ed10+0x637>
0xf6cb:     e8 a0 42 ff ff                        	call 0x3970 <__stack_chk_fail>
0xf6d0:     41 0f b7 54 06 fe                     	movzx edx, word ptr [r14 + rax - 2]
0xf6d6:     66 41 89 54 00 fe                     	mov word ptr [r8 + rax - 2], dx
0xf6dc:     e9 66 fc ff ff                        	jmp 0xf347 <function_ed10+0x637>
0xf6e1:     41 8b 16                              	mov edx, dword ptr [r14]
0xf6e4:     41 89 10                              	mov dword ptr [r8], edx
0xf6e7:     41 8b 54 06 fc                        	mov edx, dword ptr [r14 + rax - 4]
0xf6ec:     41 89 54 00 fc                        	mov dword ptr [r8 + rax - 4], edx
0xf6f1:     e9 60 fe ff ff                        	jmp 0xf556 <function_ed10+0x846>
0xf6f6:     85 c0                                 	test eax, eax
0xf6f8:     48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0xf6fd:     0f 85 08 fa ff ff                     	jne 0xf10b <function_ed10+0x3fb>
0xf703:     e9 0f fa ff ff                        	jmp 0xf117 <function_ed10+0x407>
0xf708:     8b 5c 24 20                           	mov ebx, dword ptr [rsp + 0x20]
0xf70c:     49 89 c7                              	mov r15, rax
0xf70f:     45 89 f4                              	mov r12d, r14d
0xf712:     e9 83 f9 ff ff                        	jmp 0xf09a <function_ed10+0x38a>
; data inside code section at 0xf717 -- 0xf720
0xf717:     66 0f 1f 84 00 00 00 00  00                        |f........       |
; function: function_f720 at 0xf720 -- 0xf910
0xf720:     41 55                                 	push r13
0xf722:     41 54                                 	push r12
0xf724:     49 89 f5                              	mov r13, rsi
0xf727:     55                                    	push rbp
0xf728:     53                                    	push rbx
0xf729:     49 89 d4                              	mov r12, rdx
0xf72c:     48 89 fb                              	mov rbx, rdi
0xf72f:     48 83 ec 18                           	sub rsp, 0x18
0xf733:     64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0xf73c:     48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0xf741:     31 c0                                 	xor eax, eax
0xf743:     48 85 ff                              	test rdi, rdi
0xf746:     0f 84 14 01 00 00                     	je 0xf860 <function_f720+0x140>
0xf74c:     31 ed                                 	xor ebp, ebp
0xf74e:     80 3b 27                              	cmp byte ptr [rbx], 0x27
0xf751:     75 09                                 	jne 0xf75c <function_f720+0x3c>
0xf753:     48 83 c3 01                           	add rbx, 1
0xf757:     bd 04 00 00 00                        	mov ebp, 4
0xf75c:     48 8d 15 d5 ac 00 00                  	lea rdx, [rip + 0xacd5]
0xf763:     48 8d 35 46 02 21 00                  	lea rsi, [rip + 0x210246]
0xf76a:     b9 04 00 00 00                        	mov ecx, 4
0xf76f:     48 89 df                              	mov rdi, rbx
0xf772:     e8 49 cb ff ff                        	call 0xc2c0 <function_c2c0>
0xf777:     85 c0                                 	test eax, eax
0xf779:     78 3d                                 	js 0xf7b8 <function_f720+0x98>
0xf77b:     48 8d 15 b6 ac 00 00                  	lea rdx, [rip + 0xacb6]
0xf782:     48 98                                 	cdqe 
0xf784:     49 c7 04 24 01 00 00 00               	mov qword ptr [r12], 1
0xf78c:     0b 2c 82                              	or ebp, dword ptr [rdx + rax*4]
0xf78f:     31 c0                                 	xor eax, eax
0xf791:     41 89 6d 00                           	mov dword ptr [r13], ebp
0xf795:     48 8b 4c 24 08                        	mov rcx, qword ptr [rsp + 8]
0xf79a:     64 48 33 0c 25 28 00 00 00            	xor rcx, qword ptr fs:[0x28]
0xf7a3:     0f 85 58 01 00 00                     	jne 0xf901 <function_f720+0x1e1>
0xf7a9:     48 83 c4 18                           	add rsp, 0x18
0xf7ad:     5b                                    	pop rbx
0xf7ae:     5d                                    	pop rbp
0xf7af:     41 5c                                 	pop r12
0xf7b1:     41 5d                                 	pop r13
0xf7b3:     c3                                    	ret 
; data inside code section at 0xf7b4 -- 0xf7b8
0xf7b4:     0f 1f 40 00                                        |..@.            |
0xf7b8:     4c 8d 05 67 ac 00 00                  	lea r8, [rip + 0xac67]
0xf7bf:     31 d2                                 	xor edx, edx
0xf7c1:     48 89 e6                              	mov rsi, rsp
0xf7c4:     4c 89 e1                              	mov rcx, r12
0xf7c7:     48 89 df                              	mov rdi, rbx
0xf7ca:     e8 51 56 00 00                        	call 0x14e20 <function_14e20>
0xf7cf:     85 c0                                 	test eax, eax
0xf7d1:     75 45                                 	jne 0xf818 <function_f720+0xf8>
0xf7d3:     0f b6 33                              	movzx esi, byte ptr [rbx]
0xf7d6:     8d 56 d0                              	lea edx, [rsi - 0x30]
0xf7d9:     80 fa 09                              	cmp dl, 9
0xf7dc:     76 2a                                 	jbe 0xf808 <function_f720+0xe8>
0xf7de:     48 8b 0c 24                           	mov rcx, qword ptr [rsp]
0xf7e2:     48 39 cb                              	cmp rbx, rcx
0xf7e5:     75 12                                 	jne 0xf7f9 <function_f720+0xd9>
0xf7e7:     e9 d4 00 00 00                        	jmp 0xf8c0 <function_f720+0x1a0>
; data inside code section at 0xf7ec -- 0xf7f0
0xf7ec:     0f 1f 40 00                                        |..@.            |
0xf7f0:     48 39 cb                              	cmp rbx, rcx
0xf7f3:     0f 84 c7 00 00 00                     	je 0xf8c0 <function_f720+0x1a0>
0xf7f9:     48 83 c3 01                           	add rbx, 1
0xf7fd:     0f b6 3b                              	movzx edi, byte ptr [rbx]
0xf800:     8d 57 d0                              	lea edx, [rdi - 0x30]
0xf803:     80 fa 09                              	cmp dl, 9
0xf806:     77 e8                                 	ja 0xf7f0 <function_f720+0xd0>
0xf808:     49 8b 14 24                           	mov rdx, qword ptr [r12]
0xf80c:     41 89 6d 00                           	mov dword ptr [r13], ebp
0xf810:     eb 12                                 	jmp 0xf824 <function_f720+0x104>
; data inside code section at 0xf812 -- 0xf818
0xf812:     66 0f 1f 44 00 00                                  |f..D..          |
0xf818:     49 8b 14 24                           	mov rdx, qword ptr [r12]
0xf81c:     41 c7 45 00 00 00 00 00               	mov dword ptr [r13], 0
0xf824:     48 85 d2                              	test rdx, rdx
0xf827:     0f 85 68 ff ff ff                     	jne 0xf795 <function_f720+0x75>
0xf82d:     48 8d 3d e2 ab 00 00                  	lea rdi, [rip + 0xabe2]
0xf834:     e8 67 3f ff ff                        	call 0x37a0 <getenv>
0xf839:     48 83 f8 01                           	cmp rax, 1
0xf83d:     48 19 c0                              	sbb rax, rax
0xf840:     25 00 02 00 00                        	and eax, 0x200
0xf845:     48 05 00 02 00 00                     	add rax, 0x200
0xf84b:     49 89 04 24                           	mov qword ptr [r12], rax
0xf84f:     b8 04 00 00 00                        	mov eax, 4
0xf854:     e9 3c ff ff ff                        	jmp 0xf795 <function_f720+0x75>
; data inside code section at 0xf859 -- 0xf860
0xf859:     0f 1f 80 00 00 00 00                               |.......         |
0xf860:     48 8d 3d 01 86 00 00                  	lea rdi, [rip + 0x8601]
0xf867:     e8 34 3f ff ff                        	call 0x37a0 <getenv>
0xf86c:     48 85 c0                              	test rax, rax
0xf86f:     48 89 c3                              	mov rbx, rax
0xf872:     0f 85 d4 fe ff ff                     	jne 0xf74c <function_f720+0x2c>
0xf878:     48 8d 3d 8d ab 00 00                  	lea rdi, [rip + 0xab8d]
0xf87f:     e8 1c 3f ff ff                        	call 0x37a0 <getenv>
0xf884:     48 85 c0                              	test rax, rax
0xf887:     48 89 c3                              	mov rbx, rax
0xf88a:     0f 85 bc fe ff ff                     	jne 0xf74c <function_f720+0x2c>
0xf890:     48 8d 3d 7f ab 00 00                  	lea rdi, [rip + 0xab7f]
0xf897:     e8 04 3f ff ff                        	call 0x37a0 <getenv>
0xf89c:     48 85 c0                              	test rax, rax
0xf89f:     74 49                                 	je 0xf8ea <function_f720+0x1ca>
0xf8a1:     49 c7 04 24 00 02 00 00               	mov qword ptr [r12], 0x200
0xf8a9:     31 c0                                 	xor eax, eax
0xf8ab:     41 c7 45 00 00 00 00 00               	mov dword ptr [r13], 0
0xf8b3:     e9 dd fe ff ff                        	jmp 0xf795 <function_f720+0x75>
; data inside code section at 0xf8b8 -- 0xf8c0
0xf8b8:     0f 1f 84 00 00 00 00 00                            |........        |
0xf8c0:     80 79 ff 42                           	cmp byte ptr [rcx - 1], 0x42
0xf8c4:     74 12                                 	je 0xf8d8 <function_f720+0x1b8>
0xf8c6:     40 80 cd 80                           	or bpl, 0x80
0xf8ca:     83 cd 20                              	or ebp, 0x20
0xf8cd:     e9 36 ff ff ff                        	jmp 0xf808 <function_f720+0xe8>
; data inside code section at 0xf8d2 -- 0xf8d8
0xf8d2:     66 0f 1f 44 00 00                                  |f..D..          |
0xf8d8:     81 cd 80 01 00 00                     	or ebp, 0x180
0xf8de:     80 79 fe 69                           	cmp byte ptr [rcx - 2], 0x69
0xf8e2:     0f 85 20 ff ff ff                     	jne 0xf808 <function_f720+0xe8>
0xf8e8:     eb e0                                 	jmp 0xf8ca <function_f720+0x1aa>
0xf8ea:     49 c7 04 24 00 04 00 00               	mov qword ptr [r12], 0x400
0xf8f2:     31 c0                                 	xor eax, eax
0xf8f4:     41 c7 45 00 00 00 00 00               	mov dword ptr [r13], 0
0xf8fc:     e9 94 fe ff ff                        	jmp 0xf795 <function_f720+0x75>
0xf901:     e8 6a 40 ff ff                        	call 0x3970 <__stack_chk_fail>
0xf906:     66 2e 0f 1f 84 00 00 00 00 00         	nop word ptr cs:[rax + rax]
; function: function_f910 at 0xf910 -- 0xf9a4
0xf910:     41 54                                 	push r12
0xf912:     55                                    	push rbp
0xf913:     53                                    	push rbx
0xf914:     48 8b 1d dd 1a 21 00                  	mov rbx, qword ptr [rip + 0x211add]
0xf91b:     48 85 db                              	test rbx, rbx
0xf91e:     74 1d                                 	je 0xf93d <function_f910+0x2d>
0xf920:     3b 3b                                 	cmp edi, dword ptr [rbx]
0xf922:     75 10                                 	jne 0xf934 <function_f910+0x24>
0xf924:     eb 6a                                 	jmp 0xf990 <function_f910+0x80>
; data inside code section at 0xf926 -- 0xf930
0xf926:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0xf930:     39 3b                                 	cmp dword ptr [rbx], edi
0xf932:     74 5c                                 	je 0xf990 <function_f910+0x80>
0xf934:     48 8b 5b 08                           	mov rbx, qword ptr [rbx + 8]
0xf938:     48 85 db                              	test rbx, rbx
0xf93b:     75 f3                                 	jne 0xf930 <function_f910+0x20>
0xf93d:     89 fd                                 	mov ebp, edi
0xf93f:     4c 8d 25 04 83 00 00                  	lea r12, [rip + 0x8304]
0xf946:     e8 c5 3f ff ff                        	call 0x3910 <getpwuid>
0xf94b:     48 85 c0                              	test rax, rax
0xf94e:     bf 18 00 00 00                        	mov edi, 0x18
0xf953:     74 13                                 	je 0xf968 <function_f910+0x58>
0xf955:     4c 8b 20                              	mov r12, qword ptr [rax]
0xf958:     4c 89 e7                              	mov rdi, r12
0xf95b:     e8 f0 3f ff ff                        	call 0x3950 <strlen>
0xf960:     48 8d 78 18                           	lea rdi, [rax + 0x18]
0xf964:     48 83 e7 f8                           	and rdi, 0xfffffffffffffff8
0xf968:     e8 13 4b 00 00                        	call 0x14480 <function_14480>
0xf96d:     48 8d 78 10                           	lea rdi, [rax + 0x10]
0xf971:     89 28                                 	mov dword ptr [rax], ebp
0xf973:     4c 89 e6                              	mov rsi, r12
0xf976:     48 89 c3                              	mov rbx, rax
0xf979:     e8 b2 3e ff ff                        	call 0x3830 <strcpy>
0xf97e:     48 8b 05 73 1a 21 00                  	mov rax, qword ptr [rip + 0x211a73]
0xf985:     48 89 1d 6c 1a 21 00                  	mov qword ptr [rip + 0x211a6c], rbx
0xf98c:     48 89 43 08                           	mov qword ptr [rbx + 8], rax
0xf990:     80 7b 10 00                           	cmp byte ptr [rbx + 0x10], 0
0xf994:     74 0a                                 	je 0xf9a0 <function_f910+0x90>
0xf996:     48 8d 43 10                           	lea rax, [rbx + 0x10]
0xf99a:     5b                                    	pop rbx
0xf99b:     5d                                    	pop rbp
0xf99c:     41 5c                                 	pop r12
0xf99e:     c3                                    	ret 
; data inside code section at 0xf99f -- 0xf9a0
0xf99f:     90                                                 |.               |
0xf9a0:     31 c0                                 	xor eax, eax
0xf9a2:     eb f6                                 	jmp 0xf99a <function_f910+0x8a>
; data inside code section at 0xf9a4 -- 0xf9b0
0xf9a4:     66 90 66 2e 0f 1f 84 00  00 00 00 00               |f.f.........    |
; function: function_f9b0 at 0xf9b0 -- 0xfaa9
0xf9b0:     41 54                                 	push r12
0xf9b2:     55                                    	push rbp
0xf9b3:     49 89 fc                              	mov r12, rdi
0xf9b6:     53                                    	push rbx
0xf9b7:     48 8b 1d 3a 1a 21 00                  	mov rbx, qword ptr [rip + 0x211a3a]
0xf9be:     48 85 db                              	test rbx, rbx
0xf9c1:     74 3d                                 	je 0xfa00 <function_f9b0+0x50>
0xf9c3:     0f b6 2f                              	movzx ebp, byte ptr [rdi]
0xf9c6:     eb 11                                 	jmp 0xf9d9 <function_f9b0+0x29>
; data inside code section at 0xf9c8 -- 0xf9d0
0xf9c8:     0f 1f 84 00 00 00 00 00                            |........        |
0xf9d0:     48 8b 5b 08                           	mov rbx, qword ptr [rbx + 8]
0xf9d4:     48 85 db                              	test rbx, rbx
0xf9d7:     74 27                                 	je 0xfa00 <function_f9b0+0x50>
0xf9d9:     40 38 6b 10                           	cmp byte ptr [rbx + 0x10], bpl
0xf9dd:     75 f1                                 	jne 0xf9d0 <function_f9b0+0x20>
0xf9df:     48 8d 7b 10                           	lea rdi, [rbx + 0x10]
0xf9e3:     4c 89 e6                              	mov rsi, r12
0xf9e6:     e8 35 41 ff ff                        	call 0x3b20 <strcmp>
0xf9eb:     85 c0                                 	test eax, eax
0xf9ed:     75 e1                                 	jne 0xf9d0 <function_f9b0+0x20>
0xf9ef:     48 89 d8                              	mov rax, rbx
0xf9f2:     5b                                    	pop rbx
0xf9f3:     5d                                    	pop rbp
0xf9f4:     41 5c                                 	pop r12
0xf9f6:     c3                                    	ret 
; data inside code section at 0xf9f7 -- 0xfa00
0xf9f7:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xfa00:     48 8b 1d e9 19 21 00                  	mov rbx, qword ptr [rip + 0x2119e9]
0xfa07:     48 85 db                              	test rbx, rbx
0xfa0a:     74 34                                 	je 0xfa40 <function_f9b0+0x90>
0xfa0c:     41 0f b6 2c 24                        	movzx ebp, byte ptr [r12]
0xfa11:     eb 0e                                 	jmp 0xfa21 <function_f9b0+0x71>
; data inside code section at 0xfa13 -- 0xfa18
0xfa13:     0f 1f 44 00 00                                     |..D..           |
0xfa18:     48 8b 5b 08                           	mov rbx, qword ptr [rbx + 8]
0xfa1c:     48 85 db                              	test rbx, rbx
0xfa1f:     74 1f                                 	je 0xfa40 <function_f9b0+0x90>
0xfa21:     40 38 6b 10                           	cmp byte ptr [rbx + 0x10], bpl
0xfa25:     75 f1                                 	jne 0xfa18 <function_f9b0+0x68>
0xfa27:     48 8d 7b 10                           	lea rdi, [rbx + 0x10]
0xfa2b:     4c 89 e6                              	mov rsi, r12
0xfa2e:     e8 ed 40 ff ff                        	call 0x3b20 <strcmp>
0xfa33:     85 c0                                 	test eax, eax
0xfa35:     75 e1                                 	jne 0xfa18 <function_f9b0+0x68>
0xfa37:     5b                                    	pop rbx
0xfa38:     31 c0                                 	xor eax, eax
0xfa3a:     5d                                    	pop rbp
0xfa3b:     41 5c                                 	pop r12
0xfa3d:     c3                                    	ret 
; data inside code section at 0xfa3e -- 0xfa40
0xfa3e:     66 90                                              |f.              |
0xfa40:     4c 89 e7                              	mov rdi, r12
0xfa43:     e8 08 41 ff ff                        	call 0x3b50 <getpwnam>
0xfa48:     4c 89 e7                              	mov rdi, r12
0xfa4b:     48 89 c5                              	mov rbp, rax
0xfa4e:     e8 fd 3e ff ff                        	call 0x3950 <strlen>
0xfa53:     48 8d 78 18                           	lea rdi, [rax + 0x18]
0xfa57:     48 83 e7 f8                           	and rdi, 0xfffffffffffffff8
0xfa5b:     e8 20 4a 00 00                        	call 0x14480 <function_14480>
0xfa60:     48 8d 78 10                           	lea rdi, [rax + 0x10]
0xfa64:     4c 89 e6                              	mov rsi, r12
0xfa67:     48 89 c3                              	mov rbx, rax
0xfa6a:     e8 c1 3d ff ff                        	call 0x3830 <strcpy>
0xfa6f:     48 85 ed                              	test rbp, rbp
0xfa72:     74 1c                                 	je 0xfa90 <function_f9b0+0xe0>
0xfa74:     8b 45 10                              	mov eax, dword ptr [rbp + 0x10]
0xfa77:     89 03                                 	mov dword ptr [rbx], eax
0xfa79:     48 8b 05 78 19 21 00                  	mov rax, qword ptr [rip + 0x211978]
0xfa80:     48 89 1d 71 19 21 00                  	mov qword ptr [rip + 0x211971], rbx
0xfa87:     48 89 43 08                           	mov qword ptr [rbx + 8], rax
0xfa8b:     e9 5f ff ff ff                        	jmp 0xf9ef <function_f9b0+0x3f>
0xfa90:     48 8b 05 59 19 21 00                  	mov rax, qword ptr [rip + 0x211959]
0xfa97:     48 89 1d 52 19 21 00                  	mov qword ptr [rip + 0x211952], rbx
0xfa9e:     48 89 43 08                           	mov qword ptr [rbx + 8], rax
0xfaa2:     31 c0                                 	xor eax, eax
0xfaa4:     e9 49 ff ff ff                        	jmp 0xf9f2 <function_f9b0+0x42>
; data inside code section at 0xfaa9 -- 0xfab0
0xfaa9:     0f 1f 80 00 00 00 00                               |.......         |
; function: function_fab0 at 0xfab0 -- 0xfb44
0xfab0:     41 54                                 	push r12
0xfab2:     55                                    	push rbp
0xfab3:     53                                    	push rbx
0xfab4:     48 8b 1d 2d 19 21 00                  	mov rbx, qword ptr [rip + 0x21192d]
0xfabb:     48 85 db                              	test rbx, rbx
0xfabe:     74 1d                                 	je 0xfadd <function_fab0+0x2d>
0xfac0:     3b 3b                                 	cmp edi, dword ptr [rbx]
0xfac2:     75 10                                 	jne 0xfad4 <function_fab0+0x24>
0xfac4:     eb 6a                                 	jmp 0xfb30 <function_fab0+0x80>
; data inside code section at 0xfac6 -- 0xfad0
0xfac6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0xfad0:     39 3b                                 	cmp dword ptr [rbx], edi
0xfad2:     74 5c                                 	je 0xfb30 <function_fab0+0x80>
0xfad4:     48 8b 5b 08                           	mov rbx, qword ptr [rbx + 8]
0xfad8:     48 85 db                              	test rbx, rbx
0xfadb:     75 f3                                 	jne 0xfad0 <function_fab0+0x20>
0xfadd:     89 fd                                 	mov ebp, edi
0xfadf:     4c 8d 25 64 81 00 00                  	lea r12, [rip + 0x8164]
0xfae6:     e8 c5 3e ff ff                        	call 0x39b0 <getgrgid>
0xfaeb:     48 85 c0                              	test rax, rax
0xfaee:     bf 18 00 00 00                        	mov edi, 0x18
0xfaf3:     74 13                                 	je 0xfb08 <function_fab0+0x58>
0xfaf5:     4c 8b 20                              	mov r12, qword ptr [rax]
0xfaf8:     4c 89 e7                              	mov rdi, r12
0xfafb:     e8 50 3e ff ff                        	call 0x3950 <strlen>
0xfb00:     48 8d 78 18                           	lea rdi, [rax + 0x18]
0xfb04:     48 83 e7 f8                           	and rdi, 0xfffffffffffffff8
0xfb08:     e8 73 49 00 00                        	call 0x14480 <function_14480>
0xfb0d:     48 8d 78 10                           	lea rdi, [rax + 0x10]
0xfb11:     89 28                                 	mov dword ptr [rax], ebp
0xfb13:     4c 89 e6                              	mov rsi, r12
0xfb16:     48 89 c3                              	mov rbx, rax
0xfb19:     e8 12 3d ff ff                        	call 0x3830 <strcpy>
0xfb1e:     48 8b 05 c3 18 21 00                  	mov rax, qword ptr [rip + 0x2118c3]
0xfb25:     48 89 1d bc 18 21 00                  	mov qword ptr [rip + 0x2118bc], rbx
0xfb2c:     48 89 43 08                           	mov qword ptr [rbx + 8], rax
0xfb30:     80 7b 10 00                           	cmp byte ptr [rbx + 0x10], 0
0xfb34:     74 0a                                 	je 0xfb40 <function_fab0+0x90>
0xfb36:     48 8d 43 10                           	lea rax, [rbx + 0x10]
0xfb3a:     5b                                    	pop rbx
0xfb3b:     5d                                    	pop rbp
0xfb3c:     41 5c                                 	pop r12
0xfb3e:     c3                                    	ret 
; data inside code section at 0xfb3f -- 0xfb40
0xfb3f:     90                                                 |.               |
0xfb40:     31 c0                                 	xor eax, eax
0xfb42:     eb f6                                 	jmp 0xfb3a <function_fab0+0x8a>
; data inside code section at 0xfb44 -- 0xfb50
0xfb44:     66 90 66 2e 0f 1f 84 00  00 00 00 00               |f.f.........    |
; function: function_fb50 at 0xfb50 -- 0xfc49
0xfb50:     41 54                                 	push r12
0xfb52:     55                                    	push rbp
0xfb53:     49 89 fc                              	mov r12, rdi
0xfb56:     53                                    	push rbx
0xfb57:     48 8b 1d 8a 18 21 00                  	mov rbx, qword ptr [rip + 0x21188a]
0xfb5e:     48 85 db                              	test rbx, rbx
0xfb61:     74 3d                                 	je 0xfba0 <function_fb50+0x50>
0xfb63:     0f b6 2f                              	movzx ebp, byte ptr [rdi]
0xfb66:     eb 11                                 	jmp 0xfb79 <function_fb50+0x29>
; data inside code section at 0xfb68 -- 0xfb70
0xfb68:     0f 1f 84 00 00 00 00 00                            |........        |
0xfb70:     48 8b 5b 08                           	mov rbx, qword ptr [rbx + 8]
0xfb74:     48 85 db                              	test rbx, rbx
0xfb77:     74 27                                 	je 0xfba0 <function_fb50+0x50>
0xfb79:     40 38 6b 10                           	cmp byte ptr [rbx + 0x10], bpl
0xfb7d:     75 f1                                 	jne 0xfb70 <function_fb50+0x20>
0xfb7f:     48 8d 7b 10                           	lea rdi, [rbx + 0x10]
0xfb83:     4c 89 e6                              	mov rsi, r12
0xfb86:     e8 95 3f ff ff                        	call 0x3b20 <strcmp>
0xfb8b:     85 c0                                 	test eax, eax
0xfb8d:     75 e1                                 	jne 0xfb70 <function_fb50+0x20>
0xfb8f:     48 89 d8                              	mov rax, rbx
0xfb92:     5b                                    	pop rbx
0xfb93:     5d                                    	pop rbp
0xfb94:     41 5c                                 	pop r12
0xfb96:     c3                                    	ret 
; data inside code section at 0xfb97 -- 0xfba0
0xfb97:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xfba0:     48 8b 1d 39 18 21 00                  	mov rbx, qword ptr [rip + 0x211839]
0xfba7:     48 85 db                              	test rbx, rbx
0xfbaa:     74 34                                 	je 0xfbe0 <function_fb50+0x90>
0xfbac:     41 0f b6 2c 24                        	movzx ebp, byte ptr [r12]
0xfbb1:     eb 0e                                 	jmp 0xfbc1 <function_fb50+0x71>
; data inside code section at 0xfbb3 -- 0xfbb8
0xfbb3:     0f 1f 44 00 00                                     |..D..           |
0xfbb8:     48 8b 5b 08                           	mov rbx, qword ptr [rbx + 8]
0xfbbc:     48 85 db                              	test rbx, rbx
0xfbbf:     74 1f                                 	je 0xfbe0 <function_fb50+0x90>
0xfbc1:     40 38 6b 10                           	cmp byte ptr [rbx + 0x10], bpl
0xfbc5:     75 f1                                 	jne 0xfbb8 <function_fb50+0x68>
0xfbc7:     48 8d 7b 10                           	lea rdi, [rbx + 0x10]
0xfbcb:     4c 89 e6                              	mov rsi, r12
0xfbce:     e8 4d 3f ff ff                        	call 0x3b20 <strcmp>
0xfbd3:     85 c0                                 	test eax, eax
0xfbd5:     75 e1                                 	jne 0xfbb8 <function_fb50+0x68>
0xfbd7:     5b                                    	pop rbx
0xfbd8:     31 c0                                 	xor eax, eax
0xfbda:     5d                                    	pop rbp
0xfbdb:     41 5c                                 	pop r12
0xfbdd:     c3                                    	ret 
; data inside code section at 0xfbde -- 0xfbe0
0xfbde:     66 90                                              |f.              |
0xfbe0:     4c 89 e7                              	mov rdi, r12
0xfbe3:     e8 a8 3f ff ff                        	call 0x3b90 <getgrnam>
0xfbe8:     4c 89 e7                              	mov rdi, r12
0xfbeb:     48 89 c5                              	mov rbp, rax
0xfbee:     e8 5d 3d ff ff                        	call 0x3950 <strlen>
0xfbf3:     48 8d 78 18                           	lea rdi, [rax + 0x18]
0xfbf7:     48 83 e7 f8                           	and rdi, 0xfffffffffffffff8
0xfbfb:     e8 80 48 00 00                        	call 0x14480 <function_14480>
0xfc00:     48 8d 78 10                           	lea rdi, [rax + 0x10]
0xfc04:     4c 89 e6                              	mov rsi, r12
0xfc07:     48 89 c3                              	mov rbx, rax
0xfc0a:     e8 21 3c ff ff                        	call 0x3830 <strcpy>
0xfc0f:     48 85 ed                              	test rbp, rbp
0xfc12:     74 1c                                 	je 0xfc30 <function_fb50+0xe0>
0xfc14:     8b 45 10                              	mov eax, dword ptr [rbp + 0x10]
0xfc17:     89 03                                 	mov dword ptr [rbx], eax
0xfc19:     48 8b 05 c8 17 21 00                  	mov rax, qword ptr [rip + 0x2117c8]
0xfc20:     48 89 1d c1 17 21 00                  	mov qword ptr [rip + 0x2117c1], rbx
0xfc27:     48 89 43 08                           	mov qword ptr [rbx + 8], rax
0xfc2b:     e9 5f ff ff ff                        	jmp 0xfb8f <function_fb50+0x3f>
0xfc30:     48 8b 05 a9 17 21 00                  	mov rax, qword ptr [rip + 0x2117a9]
0xfc37:     48 89 1d a2 17 21 00                  	mov qword ptr [rip + 0x2117a2], rbx
0xfc3e:     48 89 43 08                           	mov qword ptr [rbx + 8], rax
0xfc42:     31 c0                                 	xor eax, eax
0xfc44:     e9 49 ff ff ff                        	jmp 0xfb92 <function_fb50+0x42>
; data inside code section at 0xfc49 -- 0xfc50
0xfc49:     0f 1f 80 00 00 00 00                               |.......         |
; function: function_fc50 at 0xfc50 -- 0xfcec
0xfc50:     48 85 ff                              	test rdi, rdi
0xfc53:     48 8d 4e 14                           	lea rcx, [rsi + 0x14]
0xfc57:     c6 46 14 00                           	mov byte ptr [rsi + 0x14], 0
0xfc5b:     49 b9 67 66 66 66 66 66 66 66         	movabs r9, 0x6666666666666667
0xfc65:     48 be cd cc cc cc cc cc cc cc         	movabs rsi, 0xcccccccccccccccd
0xfc6f:     41 b8 30 00 00 00                     	mov r8d, 0x30
0xfc75:     78 3c                                 	js 0xfcb3 <function_fc50+0x63>
0xfc77:     66 0f 1f 84 00 00 00 00 00            	nop word ptr [rax + rax]
0xfc80:     48 89 f8                              	mov rax, rdi
0xfc83:     48 83 e9 01                           	sub rcx, 1
0xfc87:     48 f7 e6                              	mul rsi
0xfc8a:     48 c1 ea 03                           	shr rdx, 3
0xfc8e:     48 8d 04 92                           	lea rax, [rdx + rdx*4]
0xfc92:     48 01 c0                              	add rax, rax
0xfc95:     48 29 c7                              	sub rdi, rax
0xfc98:     83 c7 30                              	add edi, 0x30
0xfc9b:     48 85 d2                              	test rdx, rdx
0xfc9e:     40 88 39                              	mov byte ptr [rcx], dil
0xfca1:     48 89 d7                              	mov rdi, rdx
0xfca4:     75 da                                 	jne 0xfc80 <function_fc50+0x30>
0xfca6:     48 89 c8                              	mov rax, rcx
0xfca9:     c3                                    	ret 
; data inside code section at 0xfcaa -- 0xfcb0
0xfcaa:     66 0f 1f 44 00 00                                  |f..D..          |
0xfcb0:     48 89 f1                              	mov rcx, rsi
0xfcb3:     48 89 f8                              	mov rax, rdi
0xfcb6:     48 8d 71 ff                           	lea rsi, [rcx - 1]
0xfcba:     49 f7 e9                              	imul r9
0xfcbd:     48 89 f8                              	mov rax, rdi
0xfcc0:     48 c1 f8 3f                           	sar rax, 0x3f
0xfcc4:     48 c1 fa 02                           	sar rdx, 2
0xfcc8:     48 29 c2                              	sub rdx, rax
0xfccb:     48 8d 04 92                           	lea rax, [rdx + rdx*4]
0xfccf:     41 8d 04 40                           	lea eax, [r8 + rax*2]
0xfcd3:     29 f8                                 	sub eax, edi
0xfcd5:     48 85 d2                              	test rdx, rdx
0xfcd8:     48 89 d7                              	mov rdi, rdx
0xfcdb:     88 41 ff                              	mov byte ptr [rcx - 1], al
0xfcde:     75 d0                                 	jne 0xfcb0 <function_fc50+0x60>
0xfce0:     48 83 e9 02                           	sub rcx, 2
0xfce4:     c6 46 ff 2d                           	mov byte ptr [rsi - 1], 0x2d
0xfce8:     48 89 c8                              	mov rax, rcx
0xfceb:     c3                                    	ret 
; data inside code section at 0xfcec -- 0xfcf0
0xfcec:     0f 1f 40 00                                        |..@.            |
; function: function_fcf0 at 0xfcf0 -- 0xfd32
0xfcf0:     48 8d 4e 14                           	lea rcx, [rsi + 0x14]
0xfcf4:     c6 46 14 00                           	mov byte ptr [rsi + 0x14], 0
0xfcf8:     48 be cd cc cc cc cc cc cc cc         	movabs rsi, 0xcccccccccccccccd
0xfd02:     66 0f 1f 44 00 00                     	nop word ptr [rax + rax]
0xfd08:     48 89 f8                              	mov rax, rdi
0xfd0b:     48 83 e9 01                           	sub rcx, 1
0xfd0f:     48 f7 e6                              	mul rsi
0xfd12:     48 c1 ea 03                           	shr rdx, 3
0xfd16:     48 8d 04 92                           	lea rax, [rdx + rdx*4]
0xfd1a:     48 01 c0                              	add rax, rax
0xfd1d:     48 29 c7                              	sub rdi, rax
0xfd20:     83 c7 30                              	add edi, 0x30
0xfd23:     48 85 d2                              	test rdx, rdx
0xfd26:     40 88 39                              	mov byte ptr [rcx], dil
0xfd29:     48 89 d7                              	mov rdi, rdx
0xfd2c:     75 da                                 	jne 0xfd08 <function_fcf0+0x18>
0xfd2e:     48 89 c8                              	mov rax, rcx
0xfd31:     c3                                    	ret 
; data inside code section at 0xfd32 -- 0xfd40
0xfd32:     66 2e 0f 1f 84 00 00 00  00 00 0f 1f 40 00         |f...........@.  |
; function: function_fd40 at 0xfd40 -- 0x10104
0xfd40:     41 57                                 	push r15
0xfd42:     41 56                                 	push r14
0xfd44:     49 89 fe                              	mov r14, rdi
0xfd47:     41 55                                 	push r13
0xfd49:     41 54                                 	push r12
0xfd4b:     49 89 f5                              	mov r13, rsi
0xfd4e:     55                                    	push rbp
0xfd4f:     53                                    	push rbx
0xfd50:     44 89 cb                              	mov ebx, r9d
0xfd53:     49 89 cc                              	mov r12, rcx
0xfd56:     48 83 ec 38                           	sub rsp, 0x38
0xfd5a:     48 89 54 24 10                        	mov qword ptr [rsp + 0x10], rdx
0xfd5f:     44 89 44 24 1c                        	mov dword ptr [rsp + 0x1c], r8d
0xfd64:     e8 e7 3b ff ff                        	call 0x3950 <strlen>
0xfd69:     f6 c3 02                              	test bl, 2
0xfd6c:     49 89 c7                              	mov r15, rax
0xfd6f:     48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0xfd74:     0f 84 66 01 00 00                     	je 0xfee0 <function_fd40+0x1a0>
0xfd7a:     4c 89 fd                              	mov rbp, r15
0xfd7d:     48 c7 04 24 00 00 00 00               	mov qword ptr [rsp], 0
0xfd85:     48 c7 44 24 08 00 00 00 00            	mov qword ptr [rsp + 8], 0
0xfd8e:     49 8b 04 24                           	mov rax, qword ptr [r12]
0xfd92:     48 39 e8                              	cmp rax, rbp
0xfd95:     0f 83 0e 01 00 00                     	jae 0xfea9 <function_fd40+0x169>
0xfd9b:     49 89 c7                              	mov r15, rax
0xfd9e:     31 d2                                 	xor edx, edx
0xfda0:     49 89 04 24                           	mov qword ptr [r12], rax
0xfda4:     8b 44 24 1c                           	mov eax, dword ptr [rsp + 0x1c]
0xfda8:     85 c0                                 	test eax, eax
0xfdaa:     0f 84 1b 01 00 00                     	je 0xfecb <function_fd40+0x18b>
0xfdb0:     31 ed                                 	xor ebp, ebp
0xfdb2:     83 f8 01                              	cmp eax, 1
0xfdb5:     74 0c                                 	je 0xfdc3 <function_fd40+0x83>
0xfdb7:     48 89 d5                              	mov rbp, rdx
0xfdba:     83 e2 01                              	and edx, 1
0xfdbd:     48 d1 ed                              	shr rbp, 1
0xfdc0:     48 01 ea                              	add rdx, rbp
0xfdc3:     f6 c3 04                              	test bl, 4
0xfdc6:     4e 8d 24 3a                           	lea r12, [rdx + r15]
0xfdca:     74 05                                 	je 0xfdd1 <function_fd40+0x91>
0xfdcc:     4d 89 fc                              	mov r12, r15
0xfdcf:     31 d2                                 	xor edx, edx
0xfdd1:     83 e3 08                              	and ebx, 8
0xfdd4:     0f 85 fe 00 00 00                     	jne 0xfed8 <function_fd40+0x198>
0xfdda:     49 01 ec                              	add r12, rbp
0xfddd:     48 8b 44 24 10                        	mov rax, qword ptr [rsp + 0x10]
0xfde2:     48 85 c0                              	test rax, rax
0xfde5:     0f 84 86 00 00 00                     	je 0xfe71 <function_fd40+0x131>
0xfdeb:     49 8d 5c 05 ff                        	lea rbx, [r13 + rax - 1]
0xfdf0:     48 8d 42 ff                           	lea rax, [rdx - 1]
0xfdf4:     49 39 dd                              	cmp r13, rbx
0xfdf7:     73 26                                 	jae 0xfe1f <function_fd40+0xdf>
0xfdf9:     48 85 d2                              	test rdx, rdx
0xfdfc:     74 21                                 	je 0xfe1f <function_fd40+0xdf>
0xfdfe:     66 90                                 	nop 
0xfe00:     49 83 c5 01                           	add r13, 1
0xfe04:     41 c6 45 ff 20                        	mov byte ptr [r13 - 1], 0x20
0xfe09:     4c 39 eb                              	cmp rbx, r13
0xfe0c:     40 0f 97 c6                           	seta sil
0xfe10:     48 85 c0                              	test rax, rax
0xfe13:     0f 95 c2                              	setne dl
0xfe16:     48 83 e8 01                           	sub rax, 1
0xfe1a:     40 84 d6                              	test sil, dl
0xfe1d:     75 e1                                 	jne 0xfe00 <function_fd40+0xc0>
0xfe1f:     48 89 da                              	mov rdx, rbx
0xfe22:     41 c6 45 00 00                        	mov byte ptr [r13], 0
0xfe27:     4c 89 f6                              	mov rsi, r14
0xfe2a:     4c 29 ea                              	sub rdx, r13
0xfe2d:     4c 89 ef                              	mov rdi, r13
0xfe30:     4c 39 fa                              	cmp rdx, r15
0xfe33:     49 0f 47 d7                           	cmova rdx, r15
0xfe37:     e8 c4 3e ff ff                        	call 0x3d00 <mempcpy>
0xfe3c:     48 39 c3                              	cmp rbx, rax
0xfe3f:     48 8d 55 ff                           	lea rdx, [rbp - 1]
0xfe43:     76 29                                 	jbe 0xfe6e <function_fd40+0x12e>
0xfe45:     48 85 ed                              	test rbp, rbp
0xfe48:     74 24                                 	je 0xfe6e <function_fd40+0x12e>
0xfe4a:     66 0f 1f 44 00 00                     	nop word ptr [rax + rax]
0xfe50:     48 83 c0 01                           	add rax, 1
0xfe54:     48 85 d2                              	test rdx, rdx
0xfe57:     c6 40 ff 20                           	mov byte ptr [rax - 1], 0x20
0xfe5b:     40 0f 95 c6                           	setne sil
0xfe5f:     48 39 c3                              	cmp rbx, rax
0xfe62:     0f 97 c1                              	seta cl
0xfe65:     48 83 ea 01                           	sub rdx, 1
0xfe69:     40 84 ce                              	test sil, cl
0xfe6c:     75 e2                                 	jne 0xfe50 <function_fd40+0x110>
0xfe6e:     c6 00 00                              	mov byte ptr [rax], 0
0xfe71:     48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0xfe75:     e8 f6 3f ff ff                        	call 0x3e70 <free>
0xfe7a:     48 8b 7c 24 08                        	mov rdi, qword ptr [rsp + 8]
0xfe7f:     e8 ec 3f ff ff                        	call 0x3e70 <free>
0xfe84:     48 83 c4 38                           	add rsp, 0x38
0xfe88:     4c 89 e0                              	mov rax, r12
0xfe8b:     5b                                    	pop rbx
0xfe8c:     5d                                    	pop rbp
0xfe8d:     41 5c                                 	pop r12
0xfe8f:     41 5d                                 	pop r13
0xfe91:     41 5e                                 	pop r14
0xfe93:     41 5f                                 	pop r15
0xfe95:     c3                                    	ret 
; data inside code section at 0xfe96 -- 0xfea0
0xfe96:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0xfea0:     48 c7 44 24 08 00 00 00 00            	mov qword ptr [rsp + 8], 0
0xfea9:     48 39 c5                              	cmp rbp, rax
0xfeac:     0f 83 48 02 00 00                     	jae 0x100fa <function_fd40+0x3ba>
0xfeb2:     48 29 e8                              	sub rax, rbp
0xfeb5:     48 89 c2                              	mov rdx, rax
0xfeb8:     48 89 e8                              	mov rax, rbp
0xfebb:     49 89 04 24                           	mov qword ptr [r12], rax
0xfebf:     8b 44 24 1c                           	mov eax, dword ptr [rsp + 0x1c]
0xfec3:     85 c0                                 	test eax, eax
0xfec5:     0f 85 e5 fe ff ff                     	jne 0xfdb0 <function_fd40+0x70>
0xfecb:     48 89 d5                              	mov rbp, rdx
0xfece:     31 d2                                 	xor edx, edx
0xfed0:     e9 ee fe ff ff                        	jmp 0xfdc3 <function_fd40+0x83>
; data inside code section at 0xfed5 -- 0xfed8
0xfed5:     0f 1f 00                                           |...             |
0xfed8:     31 ed                                 	xor ebp, ebp
0xfeda:     e9 fe fe ff ff                        	jmp 0xfddd <function_fd40+0x9d>
; data inside code section at 0xfedf -- 0xfee0
0xfedf:     90                                                 |.               |
0xfee0:     e8 5b 3a ff ff                        	call 0x3940 <__ctype_get_mb_cur_max>
0xfee5:     48 83 f8 01                           	cmp rax, 1
0xfee9:     0f 86 8b fe ff ff                     	jbe 0xfd7a <function_fd40+0x3a>
0xfeef:     31 d2                                 	xor edx, edx
0xfef1:     31 ff                                 	xor edi, edi
0xfef3:     4c 89 f6                              	mov rsi, r14
0xfef6:     e8 a5 39 ff ff                        	call 0x38a0 <mbstowcs>
0xfefb:     48 83 f8 ff                           	cmp rax, -1
0xfeff:     75 2f                                 	jne 0xff30 <function_fd40+0x1f0>
0xff01:     f6 c3 01                              	test bl, 1
0xff04:     0f 85 70 fe ff ff                     	jne 0xfd7a <function_fd40+0x3a>
0xff0a:     48 c7 04 24 00 00 00 00               	mov qword ptr [rsp], 0
0xff12:     48 c7 44 24 08 00 00 00 00            	mov qword ptr [rsp + 8], 0
0xff1b:     49 c7 c4 ff ff ff ff                  	mov r12, -1
0xff22:     e9 4a ff ff ff                        	jmp 0xfe71 <function_fd40+0x131>
; data inside code section at 0xff27 -- 0xff30
0xff27:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0xff30:     48 8d 68 01                           	lea rbp, [rax + 1]
0xff34:     48 8d 04 ad 00 00 00 00               	lea rax, [rbp*4]
0xff3c:     48 89 c7                              	mov rdi, rax
0xff3f:     48 89 44 24 20                        	mov qword ptr [rsp + 0x20], rax
0xff44:     e8 2f 3f ff ff                        	call 0x3e78 <malloc>
0xff49:     48 85 c0                              	test rax, rax
0xff4c:     48 89 04 24                           	mov qword ptr [rsp], rax
0xff50:     0f 84 7f 01 00 00                     	je 0x100d5 <function_fd40+0x395>
0xff56:     48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0xff5a:     48 89 ea                              	mov rdx, rbp
0xff5d:     4c 89 f6                              	mov rsi, r14
0xff60:     e8 3b 39 ff ff                        	call 0x38a0 <mbstowcs>
0xff65:     48 85 c0                              	test rax, rax
0xff68:     0f 84 06 01 00 00                     	je 0x10074 <function_fd40+0x334>
0xff6e:     48 8b 04 24                           	mov rax, qword ptr [rsp]
0xff72:     48 8b 4c 24 20                        	mov rcx, qword ptr [rsp + 0x20]
0xff77:     c7 44 08 fc 00 00 00 00               	mov dword ptr [rax + rcx - 4], 0
0xff7f:     8b 38                                 	mov edi, dword ptr [rax]
0xff81:     48 89 c2                              	mov rdx, rax
0xff84:     85 ff                                 	test edi, edi
0xff86:     0f 84 f9 00 00 00                     	je 0x10085 <function_fd40+0x345>
0xff8c:     c6 44 24 20 00                        	mov byte ptr [rsp + 0x20], 0
0xff91:     0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0xff98:     48 89 54 24 28                        	mov qword ptr [rsp + 0x28], rdx
0xff9d:     e8 7e 3e ff ff                        	call 0x3e20 <iswprint>
0xffa2:     85 c0                                 	test eax, eax
0xffa4:     48 8b 54 24 28                        	mov rdx, qword ptr [rsp + 0x28]
0xffa9:     75 0b                                 	jne 0xffb6 <function_fd40+0x276>
0xffab:     c7 02 fd ff 00 00                     	mov dword ptr [rdx], 0xfffd
0xffb1:     c6 44 24 20 01                        	mov byte ptr [rsp + 0x20], 1
0xffb6:     48 83 c2 04                           	add rdx, 4
0xffba:     8b 3a                                 	mov edi, dword ptr [rdx]
0xffbc:     85 ff                                 	test edi, edi
0xffbe:     75 d8                                 	jne 0xff98 <function_fd40+0x258>
0xffc0:     48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0xffc4:     48 89 ee                              	mov rsi, rbp
0xffc7:     e8 b4 38 ff ff                        	call 0x3880 <wcswidth>
0xffcc:     80 7c 24 20 00                        	cmp byte ptr [rsp + 0x20], 0
0xffd1:     48 63 e8                              	movsxd rbp, eax
0xffd4:     0f 84 be 00 00 00                     	je 0x10098 <function_fd40+0x358>
0xffda:     48 8b 34 24                           	mov rsi, qword ptr [rsp]
0xffde:     31 d2                                 	xor edx, edx
0xffe0:     31 ff                                 	xor edi, edi
0xffe2:     e8 99 3d ff ff                        	call 0x3d80 <wcstombs>
0xffe7:     48 83 c0 01                           	add rax, 1
0xffeb:     48 89 44 24 20                        	mov qword ptr [rsp + 0x20], rax
0xfff0:     48 8b 7c 24 20                        	mov rdi, qword ptr [rsp + 0x20]
0xfff5:     e8 7e 3e ff ff                        	call 0x3e78 <malloc>
0xfffa:     48 85 c0                              	test rax, rax
0xfffd:     48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x10002:    0f 84 b8 00 00 00                     	je 0x100c0 <function_fd40+0x380>
0x10008:    4c 8b 3c 24                           	mov r15, qword ptr [rsp]
0x1000c:    4d 8b 34 24                           	mov r14, qword ptr [r12]
0x10010:    41 8b 3f                              	mov edi, dword ptr [r15]
0x10013:    85 ff                                 	test edi, edi
0x10015:    0f 84 d4 00 00 00                     	je 0x100ef <function_fd40+0x3af>
0x1001b:    31 ed                                 	xor ebp, ebp
0x1001d:    eb 0f                                 	jmp 0x1002e <function_fd40+0x2ee>
; data inside code section at 0x1001f -- 0x10020
0x1001f:    90                                                 |.               |
0x10020:    49 83 c7 04                           	add r15, 4
0x10024:    41 8b 3f                              	mov edi, dword ptr [r15]
0x10027:    48 89 d5                              	mov rbp, rdx
0x1002a:    85 ff                                 	test edi, edi
0x1002c:    74 21                                 	je 0x1004f <function_fd40+0x30f>
0x1002e:    e8 cd 3b ff ff                        	call 0x3c00 <wcwidth>
0x10033:    83 f8 ff                              	cmp eax, -1
0x10036:    48 63 d0                              	movsxd rdx, eax
0x10039:    75 0c                                 	jne 0x10047 <function_fd40+0x307>
0x1003b:    41 c7 07 fd ff 00 00                  	mov dword ptr [r15], 0xfffd
0x10042:    ba 01 00 00 00                        	mov edx, 1
0x10047:    48 01 ea                              	add rdx, rbp
0x1004a:    49 39 d6                              	cmp r14, rdx
0x1004d:    73 d1                                 	jae 0x10020 <function_fd40+0x2e0>
0x1004f:    4c 8b 74 24 08                        	mov r14, qword ptr [rsp + 8]
0x10054:    48 8b 54 24 20                        	mov rdx, qword ptr [rsp + 0x20]
0x10059:    48 8b 34 24                           	mov rsi, qword ptr [rsp]
0x1005d:    41 c7 07 00 00 00 00                  	mov dword ptr [r15], 0
0x10064:    4c 89 f7                              	mov rdi, r14
0x10067:    e8 14 3d ff ff                        	call 0x3d80 <wcstombs>
0x1006c:    49 89 c7                              	mov r15, rax
0x1006f:    e9 1a fd ff ff                        	jmp 0xfd8e <function_fd40+0x4e>
0x10074:    4c 89 fd                              	mov rbp, r15
0x10077:    48 c7 44 24 08 00 00 00 00            	mov qword ptr [rsp + 8], 0
0x10080:    e9 09 fd ff ff                        	jmp 0xfd8e <function_fd40+0x4e>
0x10085:    48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0x10089:    48 89 ee                              	mov rsi, rbp
0x1008c:    e8 ef 37 ff ff                        	call 0x3880 <wcswidth>
0x10091:    48 63 e8                              	movsxd rbp, eax
0x10094:    0f 1f 40 00                           	nop dword ptr [rax]
0x10098:    49 8b 04 24                           	mov rax, qword ptr [r12]
0x1009c:    48 39 e8                              	cmp rax, rbp
0x1009f:    0f 83 fb fd ff ff                     	jae 0xfea0 <function_fd40+0x160>
0x100a5:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x100aa:    48 83 c0 01                           	add rax, 1
0x100ae:    48 89 44 24 20                        	mov qword ptr [rsp + 0x20], rax
0x100b3:    e9 38 ff ff ff                        	jmp 0xfff0 <function_fd40+0x2b0>
; data inside code section at 0x100b8 -- 0x100c0
0x100b8:    0f 1f 84 00 00 00 00 00                            |........        |
0x100c0:    f6 c3 01                              	test bl, 1
0x100c3:    0f 85 c5 fc ff ff                     	jne 0xfd8e <function_fd40+0x4e>
0x100c9:    49 c7 c4 ff ff ff ff                  	mov r12, -1
0x100d0:    e9 9c fd ff ff                        	jmp 0xfe71 <function_fd40+0x131>
0x100d5:    f6 c3 01                              	test bl, 1
0x100d8:    4c 89 fd                              	mov rbp, r15
0x100db:    48 c7 44 24 08 00 00 00 00            	mov qword ptr [rsp + 8], 0
0x100e4:    0f 85 a4 fc ff ff                     	jne 0xfd8e <function_fd40+0x4e>
0x100ea:    e9 1b fe ff ff                        	jmp 0xff0a <function_fd40+0x1ca>
0x100ef:    4c 8b 3c 24                           	mov r15, qword ptr [rsp]
0x100f3:    31 ed                                 	xor ebp, ebp
0x100f5:    e9 55 ff ff ff                        	jmp 0x1004f <function_fd40+0x30f>
0x100fa:    48 89 e8                              	mov rax, rbp
0x100fd:    31 d2                                 	xor edx, edx
0x100ff:    e9 9c fc ff ff                        	jmp 0xfda0 <function_fd40+0x60>
; data inside code section at 0x10104 -- 0x10110
0x10104:    66 90 66 2e 0f 1f 84 00  00 00 00 00               |f.f.........    |
; function: function_10110 at 0x10110 -- 0x101ad
0x10110:    41 57                                 	push r15
0x10112:    41 56                                 	push r14
0x10114:    49 89 ff                              	mov r15, rdi
0x10117:    41 55                                 	push r13
0x10119:    41 54                                 	push r12
0x1011b:    45 31 e4                              	xor r12d, r12d
0x1011e:    55                                    	push rbp
0x1011f:    53                                    	push rbx
0x10120:    48 89 f5                              	mov rbp, rsi
0x10123:    48 83 ec 18                           	sub rsp, 0x18
0x10127:    4c 8b 2e                              	mov r13, qword ptr [rsi]
0x1012a:    89 54 24 08                           	mov dword ptr [rsp + 8], edx
0x1012e:    89 4c 24 0c                           	mov dword ptr [rsp + 0xc], ecx
0x10132:    4c 89 e8                              	mov rax, r13
0x10135:    0f 1f 00                              	nop dword ptr [rax]
0x10138:    48 8d 58 01                           	lea rbx, [rax + 1]
0x1013c:    4c 89 e7                              	mov rdi, r12
0x1013f:    48 89 de                              	mov rsi, rbx
0x10142:    e8 49 3b ff ff                        	call 0x3c90 <realloc>
0x10147:    48 85 c0                              	test rax, rax
0x1014a:    49 89 c6                              	mov r14, rax
0x1014d:    74 41                                 	je 0x10190 <function_10110+0x80>
0x1014f:    44 8b 4c 24 0c                        	mov r9d, dword ptr [rsp + 0xc]
0x10154:    44 8b 44 24 08                        	mov r8d, dword ptr [rsp + 8]
0x10159:    48 89 e9                              	mov rcx, rbp
0x1015c:    4c 89 6d 00                           	mov qword ptr [rbp], r13
0x10160:    48 89 da                              	mov rdx, rbx
0x10163:    48 89 c6                              	mov rsi, rax
0x10166:    4c 89 ff                              	mov rdi, r15
0x10169:    e8 d2 fb ff ff                        	call 0xfd40 <function_fd40>
0x1016e:    48 83 f8 ff                           	cmp rax, -1
0x10172:    74 2c                                 	je 0x101a0 <function_10110+0x90>
0x10174:    48 39 c3                              	cmp rbx, rax
0x10177:    4d 89 f4                              	mov r12, r14
0x1017a:    76 bc                                 	jbe 0x10138 <function_10110+0x28>
0x1017c:    48 83 c4 18                           	add rsp, 0x18
0x10180:    4c 89 f0                              	mov rax, r14
0x10183:    5b                                    	pop rbx
0x10184:    5d                                    	pop rbp
0x10185:    41 5c                                 	pop r12
0x10187:    41 5d                                 	pop r13
0x10189:    41 5e                                 	pop r14
0x1018b:    41 5f                                 	pop r15
0x1018d:    c3                                    	ret 
; data inside code section at 0x1018e -- 0x10190
0x1018e:    66 90                                              |f.              |
0x10190:    4c 89 e7                              	mov rdi, r12
0x10193:    e8 d8 3c ff ff                        	call 0x3e70 <free>
0x10198:    eb e2                                 	jmp 0x1017c <function_10110+0x6c>
; data inside code section at 0x1019a -- 0x101a0
0x1019a:    66 0f 1f 44 00 00                                  |f..D..          |
0x101a0:    4c 89 f7                              	mov rdi, r14
0x101a3:    45 31 f6                              	xor r14d, r14d
0x101a6:    e8 c5 3c ff ff                        	call 0x3e70 <free>
0x101ab:    eb cf                                 	jmp 0x1017c <function_10110+0x6c>
; data inside code section at 0x101ad -- 0x101b0
0x101ad:    0f 1f 00                                           |...             |
; function: function_101b0 at 0x101b0 -- 0x10370
0x101b0:    41 57                                 	push r15
0x101b2:    41 56                                 	push r14
0x101b4:    41 55                                 	push r13
0x101b6:    41 54                                 	push r12
0x101b8:    4c 8d 2c 37                           	lea r13, [rdi + rsi]
0x101bc:    55                                    	push rbp
0x101bd:    53                                    	push rbx
0x101be:    48 89 fb                              	mov rbx, rdi
0x101c1:    48 83 ec 38                           	sub rsp, 0x38
0x101c5:    64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x101ce:    48 89 44 24 28                        	mov qword ptr [rsp + 0x28], rax
0x101d3:    31 c0                                 	xor eax, eax
0x101d5:    89 54 24 0c                           	mov dword ptr [rsp + 0xc], edx
0x101d9:    e8 62 37 ff ff                        	call 0x3940 <__ctype_get_mb_cur_max>
0x101de:    48 83 f8 01                           	cmp rax, 1
0x101e2:    0f 86 30 01 00 00                     	jbe 0x10318 <function_101b0+0x168>
0x101e8:    31 ed                                 	xor ebp, ebp
0x101ea:    4c 39 eb                              	cmp rbx, r13
0x101ed:    0f 83 ea 00 00 00                     	jae 0x102dd <function_101b0+0x12d>
0x101f3:    4c 8d 64 24 20                        	lea r12, [rsp + 0x20]
0x101f8:    4c 8d 74 24 1c                        	lea r14, [rsp + 0x1c]
0x101fd:    eb 1c                                 	jmp 0x1021b <function_101b0+0x6b>
; data inside code section at 0x101ff -- 0x10200
0x101ff:    90                                                 |.               |
0x10200:    3c 25                                 	cmp al, 0x25
0x10202:    7d 07                                 	jge 0x1020b <function_101b0+0x5b>
0x10204:    83 e8 20                              	sub eax, 0x20
0x10207:    3c 03                                 	cmp al, 3
0x10209:    77 26                                 	ja 0x10231 <function_101b0+0x81>
0x1020b:    48 83 c3 01                           	add rbx, 1
0x1020f:    83 c5 01                              	add ebp, 1
0x10212:    4c 39 eb                              	cmp rbx, r13
0x10215:    0f 83 c2 00 00 00                     	jae 0x102dd <function_101b0+0x12d>
0x1021b:    0f b6 03                              	movzx eax, byte ptr [rbx]
0x1021e:    3c 3f                                 	cmp al, 0x3f
0x10220:    7e de                                 	jle 0x10200 <function_101b0+0x50>
0x10222:    3c 41                                 	cmp al, 0x41
0x10224:    7c 0b                                 	jl 0x10231 <function_101b0+0x81>
0x10226:    3c 5f                                 	cmp al, 0x5f
0x10228:    7e e1                                 	jle 0x1020b <function_101b0+0x5b>
0x1022a:    83 e8 61                              	sub eax, 0x61
0x1022d:    3c 1d                                 	cmp al, 0x1d
0x1022f:    76 da                                 	jbe 0x1020b <function_101b0+0x5b>
0x10231:    49 c7 04 24 00 00 00 00               	mov qword ptr [r12], 0
0x10239:    eb 25                                 	jmp 0x10260 <function_101b0+0xb0>
; data inside code section at 0x1023b -- 0x10240
0x1023b:    0f 1f 44 00 00                                     |..D..           |
0x10240:    b9 ff ff ff 7f                        	mov ecx, 0x7fffffff
0x10245:    29 e9                                 	sub ecx, ebp
0x10247:    39 c1                                 	cmp ecx, eax
0x10249:    0f 8c 11 01 00 00                     	jl 0x10360 <function_101b0+0x1b0>
0x1024f:    01 c5                                 	add ebp, eax
0x10251:    4c 89 e7                              	mov rdi, r12
0x10254:    4c 01 fb                              	add rbx, r15
0x10257:    e8 b4 3b ff ff                        	call 0x3e10 <mbsinit>
0x1025c:    85 c0                                 	test eax, eax
0x1025e:    75 b2                                 	jne 0x10212 <function_101b0+0x62>
0x10260:    4c 89 ea                              	mov rdx, r13
0x10263:    4c 89 e1                              	mov rcx, r12
0x10266:    48 89 de                              	mov rsi, rbx
0x10269:    48 29 da                              	sub rdx, rbx
0x1026c:    4c 89 f7                              	mov rdi, r14
0x1026f:    e8 9c 50 00 00                        	call 0x15310 <function_15310>
0x10274:    48 83 f8 ff                           	cmp rax, -1
0x10278:    49 89 c7                              	mov r15, rax
0x1027b:    74 4b                                 	je 0x102c8 <function_101b0+0x118>
0x1027d:    48 83 f8 fe                           	cmp rax, -2
0x10281:    74 7d                                 	je 0x10300 <function_101b0+0x150>
0x10283:    8b 7c 24 1c                           	mov edi, dword ptr [rsp + 0x1c]
0x10287:    48 85 c0                              	test rax, rax
0x1028a:    b8 01 00 00 00                        	mov eax, 1
0x1028f:    4c 0f 44 f8                           	cmove r15, rax
0x10293:    e8 68 39 ff ff                        	call 0x3c00 <wcwidth>
0x10298:    85 c0                                 	test eax, eax
0x1029a:    79 a4                                 	jns 0x10240 <function_101b0+0x90>
0x1029c:    f6 44 24 0c 02                        	test byte ptr [rsp + 0xc], 2
0x102a1:    75 35                                 	jne 0x102d8 <function_101b0+0x128>
0x102a3:    8b 7c 24 1c                           	mov edi, dword ptr [rsp + 0x1c]
0x102a7:    e8 c4 35 ff ff                        	call 0x3870 <iswcntrl>
0x102ac:    85 c0                                 	test eax, eax
0x102ae:    75 a1                                 	jne 0x10251 <function_101b0+0xa1>
0x102b0:    81 fd ff ff ff 7f                     	cmp ebp, 0x7fffffff
0x102b6:    0f 84 a4 00 00 00                     	je 0x10360 <function_101b0+0x1b0>
0x102bc:    83 c5 01                              	add ebp, 1
0x102bf:    eb 90                                 	jmp 0x10251 <function_101b0+0xa1>
; data inside code section at 0x102c1 -- 0x102c8
0x102c1:    0f 1f 80 00 00 00 00                               |.......         |
0x102c8:    f6 44 24 0c 01                        	test byte ptr [rsp + 0xc], 1
0x102cd:    0f 84 38 ff ff ff                     	je 0x1020b <function_101b0+0x5b>
0x102d3:    0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0x102d8:    bd ff ff ff ff                        	mov ebp, 0xffffffff
0x102dd:    48 8b 74 24 28                        	mov rsi, qword ptr [rsp + 0x28]
0x102e2:    64 48 33 34 25 28 00 00 00            	xor rsi, qword ptr fs:[0x28]
0x102eb:    89 e8                                 	mov eax, ebp
0x102ed:    75 7b                                 	jne 0x1036a <function_101b0+0x1ba>
0x102ef:    48 83 c4 38                           	add rsp, 0x38
0x102f3:    5b                                    	pop rbx
0x102f4:    5d                                    	pop rbp
0x102f5:    41 5c                                 	pop r12
0x102f7:    41 5d                                 	pop r13
0x102f9:    41 5e                                 	pop r14
0x102fb:    41 5f                                 	pop r15
0x102fd:    c3                                    	ret 
; data inside code section at 0x102fe -- 0x10300
0x102fe:    66 90                                              |f.              |
0x10300:    f6 44 24 0c 01                        	test byte ptr [rsp + 0xc], 1
0x10305:    75 d1                                 	jne 0x102d8 <function_101b0+0x128>
0x10307:    83 c5 01                              	add ebp, 1
0x1030a:    4c 89 eb                              	mov rbx, r13
0x1030d:    e9 00 ff ff ff                        	jmp 0x10212 <function_101b0+0x62>
; data inside code section at 0x10312 -- 0x10318
0x10312:    66 0f 1f 44 00 00                                  |f..D..          |
0x10318:    31 ed                                 	xor ebp, ebp
0x1031a:    4c 39 eb                              	cmp rbx, r13
0x1031d:    73 be                                 	jae 0x102dd <function_101b0+0x12d>
0x1031f:    e8 2c 3b ff ff                        	call 0x3e50 <__ctype_b_loc>
0x10324:    8b 54 24 0c                           	mov edx, dword ptr [rsp + 0xc]
0x10328:    48 8b 08                              	mov rcx, qword ptr [rax]
0x1032b:    31 ed                                 	xor ebp, ebp
0x1032d:    83 e2 02                              	and edx, 2
0x10330:    48 83 c3 01                           	add rbx, 1
0x10334:    0f b6 43 ff                           	movzx eax, byte ptr [rbx - 1]
0x10338:    0f b7 04 41                           	movzx eax, word ptr [rcx + rax*2]
0x1033c:    f6 c4 40                              	test ah, 0x40
0x1033f:    75 08                                 	jne 0x10349 <function_101b0+0x199>
0x10341:    85 d2                                 	test edx, edx
0x10343:    75 93                                 	jne 0x102d8 <function_101b0+0x128>
0x10345:    a8 02                                 	test al, 2
0x10347:    75 0b                                 	jne 0x10354 <function_101b0+0x1a4>
0x10349:    81 fd ff ff ff 7f                     	cmp ebp, 0x7fffffff
0x1034f:    74 8c                                 	je 0x102dd <function_101b0+0x12d>
0x10351:    83 c5 01                              	add ebp, 1
0x10354:    49 39 dd                              	cmp r13, rbx
0x10357:    75 d7                                 	jne 0x10330 <function_101b0+0x180>
0x10359:    eb 82                                 	jmp 0x102dd <function_101b0+0x12d>
; data inside code section at 0x1035b -- 0x10360
0x1035b:    0f 1f 44 00 00                                     |..D..           |
0x10360:    bd ff ff ff 7f                        	mov ebp, 0x7fffffff
0x10365:    e9 73 ff ff ff                        	jmp 0x102dd <function_101b0+0x12d>
0x1036a:    e8 01 36 ff ff                        	call 0x3970 <__stack_chk_fail>
0x1036f:    90                                    	nop 
; function: function_10370 at 0x10370 -- 0x10393
0x10370:    55                                    	push rbp
0x10371:    53                                    	push rbx
0x10372:    89 f5                                 	mov ebp, esi
0x10374:    48 89 fb                              	mov rbx, rdi
0x10377:    48 83 ec 08                           	sub rsp, 8
0x1037b:    e8 d0 35 ff ff                        	call 0x3950 <strlen>
0x10380:    48 83 c4 08                           	add rsp, 8
0x10384:    89 ea                                 	mov edx, ebp
0x10386:    48 89 df                              	mov rdi, rbx
0x10389:    5b                                    	pop rbx
0x1038a:    5d                                    	pop rbp
0x1038b:    48 89 c6                              	mov rsi, rax
0x1038e:    e9 1d fe ff ff                        	jmp 0x101b0 <function_101b0>
; data inside code section at 0x10393 -- 0x103a0
0x10393:    66 2e 0f 1f 84 00 00 00  00 00 0f 1f 00            |f............   |
; function: function_103a0 at 0x103a0 -- 0x105da
0x103a0:    41 57                                 	push r15
0x103a2:    41 56                                 	push r14
0x103a4:    41 55                                 	push r13
0x103a6:    41 54                                 	push r12
0x103a8:    49 89 fd                              	mov r13, rdi
0x103ab:    55                                    	push rbp
0x103ac:    53                                    	push rbx
0x103ad:    48 89 cb                              	mov rbx, rcx
0x103b0:    48 83 ec 38                           	sub rsp, 0x38
0x103b4:    48 83 fe 02                           	cmp rsi, 2
0x103b8:    48 89 34 24                           	mov qword ptr [rsp], rsi
0x103bc:    48 89 54 24 10                        	mov qword ptr [rsp + 0x10], rdx
0x103c1:    77 2d                                 	ja 0x103f0 <function_103a0+0x50>
0x103c3:    75 1b                                 	jne 0x103e0 <function_103a0+0x40>
0x103c5:    4c 8b 67 08                           	mov r12, qword ptr [rdi + 8]
0x103c9:    48 8b 2f                              	mov rbp, qword ptr [rdi]
0x103cc:    4c 89 e6                              	mov rsi, r12
0x103cf:    48 89 ef                              	mov rdi, rbp
0x103d2:    ff d1                                 	call rcx
0x103d4:    85 c0                                 	test eax, eax
0x103d6:    7e 08                                 	jle 0x103e0 <function_103a0+0x40>
0x103d8:    4d 89 65 00                           	mov qword ptr [r13], r12
0x103dc:    49 89 6d 08                           	mov qword ptr [r13 + 8], rbp
0x103e0:    48 83 c4 38                           	add rsp, 0x38
0x103e4:    5b                                    	pop rbx
0x103e5:    5d                                    	pop rbp
0x103e6:    41 5c                                 	pop r12
0x103e8:    41 5d                                 	pop r13
0x103ea:    41 5e                                 	pop r14
0x103ec:    41 5f                                 	pop r15
0x103ee:    c3                                    	ret 
; data inside code section at 0x103ef -- 0x103f0
0x103ef:    90                                                 |.               |
0x103f0:    48 8b 04 24                           	mov rax, qword ptr [rsp]
0x103f4:    4c 8b 7c 24 10                        	mov r15, qword ptr [rsp + 0x10]
0x103f9:    48 89 c1                              	mov rcx, rax
0x103fc:    48 89 c6                              	mov rsi, rax
0x103ff:    4c 89 fa                              	mov rdx, r15
0x10402:    48 d1 e9                              	shr rcx, 1
0x10405:    48 8d 3c cf                           	lea rdi, [rdi + rcx*8]
0x10409:    48 29 ce                              	sub rsi, rcx
0x1040c:    49 89 ce                              	mov r14, rcx
0x1040f:    48 89 4c 24 18                        	mov qword ptr [rsp + 0x18], rcx
0x10414:    48 89 d9                              	mov rcx, rbx
0x10417:    48 89 7c 24 28                        	mov qword ptr [rsp + 0x28], rdi
0x1041c:    e8 7f ff ff ff                        	call 0x103a0 <function_103a0>
0x10421:    49 83 fe 01                           	cmp r14, 1
0x10425:    0f 85 c5 00 00 00                     	jne 0x104f0 <function_103a0+0x150>
0x1042b:    4d 8b 75 00                           	mov r14, qword ptr [r13]
0x1042f:    4d 89 37                              	mov qword ptr [r15], r14
0x10432:    48 8b 44 24 28                        	mov rax, qword ptr [rsp + 0x28]
0x10437:    4c 8b 7c 24 18                        	mov r15, qword ptr [rsp + 0x18]
0x1043c:    45 31 e4                              	xor r12d, r12d
0x1043f:    48 c7 44 24 08 00 00 00 00            	mov qword ptr [rsp + 8], 0
0x10448:    48 8b 28                              	mov rbp, qword ptr [rax]
0x1044b:    0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0x10450:    48 89 ee                              	mov rsi, rbp
0x10453:    4c 89 f7                              	mov rdi, r14
0x10456:    49 83 c4 01                           	add r12, 1
0x1045a:    ff d3                                 	call rbx
0x1045c:    85 c0                                 	test eax, eax
0x1045e:    7e 24                                 	jle 0x10484 <function_103a0+0xe4>
0x10460:    49 83 c7 01                           	add r15, 1
0x10464:    4c 39 3c 24                           	cmp qword ptr [rsp], r15
0x10468:    4b 89 6c e5 f8                        	mov qword ptr [r13 + r12*8 - 8], rbp
0x1046d:    74 41                                 	je 0x104b0 <function_103a0+0x110>
0x1046f:    4b 8b 6c fd 00                        	mov rbp, qword ptr [r13 + r15*8]
0x10474:    4c 89 f7                              	mov rdi, r14
0x10477:    49 83 c4 01                           	add r12, 1
0x1047b:    48 89 ee                              	mov rsi, rbp
0x1047e:    ff d3                                 	call rbx
0x10480:    85 c0                                 	test eax, eax
0x10482:    7f dc                                 	jg 0x10460 <function_103a0+0xc0>
0x10484:    48 83 44 24 08 01                     	add qword ptr [rsp + 8], 1
0x1048a:    4f 89 74 e5 f8                        	mov qword ptr [r13 + r12*8 - 8], r14
0x1048f:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x10494:    48 39 44 24 18                        	cmp qword ptr [rsp + 0x18], rax
0x10499:    0f 84 41 ff ff ff                     	je 0x103e0 <function_103a0+0x40>
0x1049f:    48 8b 54 24 10                        	mov rdx, qword ptr [rsp + 0x10]
0x104a4:    4c 8b 34 c2                           	mov r14, qword ptr [rdx + rax*8]
0x104a8:    eb a6                                 	jmp 0x10450 <function_103a0+0xb0>
; data inside code section at 0x104aa -- 0x104b0
0x104aa:    66 0f 1f 44 00 00                                  |f..D..          |
0x104b0:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x104b5:    4b 8d 7c e5 00                        	lea rdi, [r13 + r12*8]
0x104ba:    4c 8b 64 24 18                        	mov r12, qword ptr [rsp + 0x18]
0x104bf:    48 8b 4c 24 10                        	mov rcx, qword ptr [rsp + 0x10]
0x104c4:    48 83 c4 38                           	add rsp, 0x38
0x104c8:    5b                                    	pop rbx
0x104c9:    49 29 c4                              	sub r12, rax
0x104cc:    5d                                    	pop rbp
0x104cd:    4a 8d 14 e5 00 00 00 00               	lea rdx, [r12*8]
0x104d5:    48 8d 34 c1                           	lea rsi, [rcx + rax*8]
0x104d9:    41 5c                                 	pop r12
0x104db:    41 5d                                 	pop r13
0x104dd:    41 5e                                 	pop r14
0x104df:    41 5f                                 	pop r15
0x104e1:    e9 9a 36 ff ff                        	jmp 0x3b80 <memcpy>
; data inside code section at 0x104e6 -- 0x104f0
0x104e6:    66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x104f0:    4c 8b 34 24                           	mov r14, qword ptr [rsp]
0x104f4:    4c 8b 64 24 10                        	mov r12, qword ptr [rsp + 0x10]
0x104f9:    48 89 d9                              	mov rcx, rbx
0x104fc:    48 8b 74 24 18                        	mov rsi, qword ptr [rsp + 0x18]
0x10501:    49 c1 ee 02                           	shr r14, 2
0x10505:    4c 89 e2                              	mov rdx, r12
0x10508:    4f 8d 7c f5 00                        	lea r15, [r13 + r14*8]
0x1050d:    4c 29 f6                              	sub rsi, r14
0x10510:    4c 89 74 24 20                        	mov qword ptr [rsp + 0x20], r14
0x10515:    4c 89 f5                              	mov rbp, r14
0x10518:    4c 89 ff                              	mov rdi, r15
0x1051b:    e8 80 fe ff ff                        	call 0x103a0 <function_103a0>
0x10520:    4c 89 f6                              	mov rsi, r14
0x10523:    48 89 d9                              	mov rcx, rbx
0x10526:    4c 89 e2                              	mov rdx, r12
0x10529:    4c 89 ef                              	mov rdi, r13
0x1052c:    e8 6f fe ff ff                        	call 0x103a0 <function_103a0>
0x10531:    4d 8b 75 00                           	mov r14, qword ptr [r13]
0x10535:    4d 8b 3f                              	mov r15, qword ptr [r15]
0x10538:    48 c7 44 24 08 00 00 00 00            	mov qword ptr [rsp + 8], 0
0x10541:    0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0x10548:    4c 89 fe                              	mov rsi, r15
0x1054b:    4c 89 f7                              	mov rdi, r14
0x1054e:    49 83 c4 08                           	add r12, 8
0x10552:    ff d3                                 	call rbx
0x10554:    85 c0                                 	test eax, eax
0x10556:    7e 25                                 	jle 0x1057d <function_103a0+0x1dd>
0x10558:    48 83 c5 01                           	add rbp, 1
0x1055c:    48 39 6c 24 18                        	cmp qword ptr [rsp + 0x18], rbp
0x10561:    4d 89 7c 24 f8                        	mov qword ptr [r12 - 8], r15
0x10566:    74 47                                 	je 0x105af <function_103a0+0x20f>
0x10568:    4d 8b 7c ed 00                        	mov r15, qword ptr [r13 + rbp*8]
0x1056d:    4c 89 f7                              	mov rdi, r14
0x10570:    49 83 c4 08                           	add r12, 8
0x10574:    4c 89 fe                              	mov rsi, r15
0x10577:    ff d3                                 	call rbx
0x10579:    85 c0                                 	test eax, eax
0x1057b:    7f db                                 	jg 0x10558 <function_103a0+0x1b8>
0x1057d:    48 83 44 24 08 01                     	add qword ptr [rsp + 8], 1
0x10583:    4d 89 74 24 f8                        	mov qword ptr [r12 - 8], r14
0x10588:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x1058d:    48 39 44 24 20                        	cmp qword ptr [rsp + 0x20], rax
0x10592:    74 0c                                 	je 0x105a0 <function_103a0+0x200>
0x10594:    4d 8b 74 c5 00                        	mov r14, qword ptr [r13 + rax*8]
0x10599:    eb ad                                 	jmp 0x10548 <function_103a0+0x1a8>
; data inside code section at 0x1059b -- 0x105a0
0x1059b:    0f 1f 44 00 00                                     |..D..           |
0x105a0:    48 8b 44 24 18                        	mov rax, qword ptr [rsp + 0x18]
0x105a5:    48 89 6c 24 08                        	mov qword ptr [rsp + 8], rbp
0x105aa:    48 89 44 24 20                        	mov qword ptr [rsp + 0x20], rax
0x105af:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x105b4:    48 8b 54 24 20                        	mov rdx, qword ptr [rsp + 0x20]
0x105b9:    4c 89 e7                              	mov rdi, r12
0x105bc:    48 29 c2                              	sub rdx, rax
0x105bf:    49 8d 74 c5 00                        	lea rsi, [r13 + rax*8]
0x105c4:    48 c1 e2 03                           	shl rdx, 3
0x105c8:    e8 b3 35 ff ff                        	call 0x3b80 <memcpy>
0x105cd:    48 8b 44 24 10                        	mov rax, qword ptr [rsp + 0x10]
0x105d2:    4c 8b 30                              	mov r14, qword ptr [rax]
0x105d5:    e9 58 fe ff ff                        	jmp 0x10432 <function_103a0+0x92>
; data inside code section at 0x105da -- 0x105e0
0x105da:    66 0f 1f 44 00 00                                  |f..D..          |
; function: function_105e0 at 0x105e0 -- 0x105ef
0x105e0:    48 8d 04 f7                           	lea rax, [rdi + rsi*8]
0x105e4:    48 89 d1                              	mov rcx, rdx
0x105e7:    48 89 c2                              	mov rdx, rax
0x105ea:    e9 b1 fd ff ff                        	jmp 0x103a0 <function_103a0>
; data inside code section at 0x105ef -- 0x105f0
0x105ef:    90                                                 |.               |
; function: function_105f0 at 0x105f0 -- 0x10631
0x105f0:    48 85 d2                              	test rdx, rdx
0x105f3:    41 54                                 	push r12
0x105f5:    55                                    	push rbp
0x105f6:    48 89 fd                              	mov rbp, rdi
0x105f9:    53                                    	push rbx
0x105fa:    74 2d                                 	je 0x10629 <function_105f0+0x39>
0x105fc:    49 89 f4                              	mov r12, rsi
0x105ff:    48 8d 5a ff                           	lea rbx, [rdx - 1]
0x10603:    e8 38 38 ff ff                        	call 0x3e40 <__ctype_tolower_loc>
0x10608:    0f 1f 84 00 00 00 00 00               	nop dword ptr [rax + rax]
0x10610:    41 0f b6 0c 1c                        	movzx ecx, byte ptr [r12 + rbx]
0x10615:    48 8b 10                              	mov rdx, qword ptr [rax]
0x10618:    8b 14 8a                              	mov edx, dword ptr [rdx + rcx*4]
0x1061b:    88 54 1d 00                           	mov byte ptr [rbp + rbx], dl
0x1061f:    48 83 eb 01                           	sub rbx, 1
0x10623:    48 83 fb ff                           	cmp rbx, -1
0x10627:    75 e7                                 	jne 0x10610 <function_105f0+0x20>
0x10629:    48 89 e8                              	mov rax, rbp
0x1062c:    5b                                    	pop rbx
0x1062d:    5d                                    	pop rbp
0x1062e:    41 5c                                 	pop r12
0x10630:    c3                                    	ret 
; data inside code section at 0x10631 -- 0x10640
0x10631:    0f 1f 44 00 00 66 2e 0f  1f 84 00 00 00 00 00      |..D..f......... |
; function: function_10640 at 0x10640 -- 0x10681
0x10640:    48 85 d2                              	test rdx, rdx
0x10643:    41 54                                 	push r12
0x10645:    55                                    	push rbp
0x10646:    48 89 fd                              	mov rbp, rdi
0x10649:    53                                    	push rbx
0x1064a:    74 2d                                 	je 0x10679 <function_10640+0x39>
0x1064c:    49 89 f4                              	mov r12, rsi
0x1064f:    48 8d 5a ff                           	lea rbx, [rdx - 1]
0x10653:    e8 28 31 ff ff                        	call 0x3780 <__ctype_toupper_loc>
0x10658:    0f 1f 84 00 00 00 00 00               	nop dword ptr [rax + rax]
0x10660:    41 0f b6 0c 1c                        	movzx ecx, byte ptr [r12 + rbx]
0x10665:    48 8b 10                              	mov rdx, qword ptr [rax]
0x10668:    8b 14 8a                              	mov edx, dword ptr [rdx + rcx*4]
0x1066b:    88 54 1d 00                           	mov byte ptr [rbp + rbx], dl
0x1066f:    48 83 eb 01                           	sub rbx, 1
0x10673:    48 83 fb ff                           	cmp rbx, -1
0x10677:    75 e7                                 	jne 0x10660 <function_10640+0x20>
0x10679:    48 89 e8                              	mov rax, rbp
0x1067c:    5b                                    	pop rbx
0x1067d:    5d                                    	pop rbp
0x1067e:    41 5c                                 	pop r12
0x10680:    c3                                    	ret 
; data inside code section at 0x10681 -- 0x10690
0x10681:    0f 1f 44 00 00 66 2e 0f  1f 84 00 00 00 00 00      |..D..f......... |
; function: function_10690 at 0x10690 -- 0x11f77
0x10690:    41 57                                 	push r15
0x10692:    41 56                                 	push r14
0x10694:    49 89 ff                              	mov r15, rdi
0x10697:    41 55                                 	push r13
0x10699:    41 54                                 	push r12
0x1069b:    48 8d 05 a8 75 00 00                  	lea rax, [rip + 0x75a8]
0x106a2:    55                                    	push rbp
0x106a3:    53                                    	push rbx
0x106a4:    49 89 f2                              	mov r10, rsi
0x106a7:    49 89 d3                              	mov r11, rdx
0x106aa:    48 81 ec d8 04 00 00                  	sub rsp, 0x4d8
0x106b1:    48 8b 59 30                           	mov rbx, qword ptr [rcx + 0x30]
0x106b5:    44 8b 71 08                           	mov r14d, dword ptr [rcx + 8]
0x106b9:    48 8b bc 24 10 05 00 00               	mov rdi, qword ptr [rsp + 0x510]
0x106c1:    48 89 4c 24 08                        	mov qword ptr [rsp + 8], rcx
0x106c6:    4c 89 4c 24 38                        	mov qword ptr [rsp + 0x38], r9
0x106cb:    44 88 44 24 4b                        	mov byte ptr [rsp + 0x4b], r8b
0x106d0:    48 89 7c 24 30                        	mov qword ptr [rsp + 0x30], rdi
0x106d5:    64 48 8b 3c 25 28 00 00 00            	mov rdi, qword ptr fs:[0x28]
0x106de:    48 89 bc 24 c8 04 00 00               	mov qword ptr [rsp + 0x4c8], rdi
0x106e6:    31 ff                                 	xor edi, edi
0x106e8:    48 85 db                              	test rbx, rbx
0x106eb:    48 0f 45 c3                           	cmovne rax, rbx
0x106ef:    41 83 fe 0c                           	cmp r14d, 0xc
0x106f3:    48 89 44 24 40                        	mov qword ptr [rsp + 0x40], rax
0x106f8:    0f 8e 12 01 00 00                     	jle 0x10810 <function_10690+0x180>
0x106fe:    41 83 ee 0c                           	sub r14d, 0xc
0x10702:    41 0f b6 03                           	movzx eax, byte ptr [r11]
0x10706:    45 31 ed                              	xor r13d, r13d
0x10709:    84 c0                                 	test al, al
0x1070b:    74 55                                 	je 0x10762 <function_10690+0xd2>
0x1070d:    48 8d b4 24 bb 00 00 00               	lea rsi, [rsp + 0xbb]
0x10715:    48 8d bc 24 bd 00 00 00               	lea rdi, [rsp + 0xbd]
0x1071d:    44 89 74 24 4c                        	mov dword ptr [rsp + 0x4c], r14d
0x10722:    4d 89 d4                              	mov r12, r10
0x10725:    48 89 74 24 10                        	mov qword ptr [rsp + 0x10], rsi
0x1072a:    48 89 7c 24 28                        	mov qword ptr [rsp + 0x28], rdi
0x1072f:    3c 25                                 	cmp al, 0x25
0x10731:    74 7d                                 	je 0x107b0 <function_10690+0x120>
0x10733:    4c 89 e2                              	mov rdx, r12
0x10736:    4c 29 ea                              	sub rdx, r13
0x10739:    48 83 fa 01                           	cmp rdx, 1
0x1073d:    76 39                                 	jbe 0x10778 <function_10690+0xe8>
0x1073f:    4d 85 ff                              	test r15, r15
0x10742:    74 07                                 	je 0x1074b <function_10690+0xbb>
0x10744:    41 88 07                              	mov byte ptr [r15], al
0x10747:    49 83 c7 01                           	add r15, 1
0x1074b:    49 83 c5 01                           	add r13, 1
0x1074f:    4d 89 de                              	mov r14, r11
0x10752:    41 0f b6 46 01                        	movzx eax, byte ptr [r14 + 1]
0x10757:    4d 8d 5e 01                           	lea r11, [r14 + 1]
0x1075b:    84 c0                                 	test al, al
0x1075d:    75 d0                                 	jne 0x1072f <function_10690+0x9f>
0x1075f:    4d 89 e2                              	mov r10, r12
0x10762:    4d 85 ff                              	test r15, r15
0x10765:    74 14                                 	je 0x1077b <function_10690+0xeb>
0x10767:    4d 85 d2                              	test r10, r10
0x1076a:    74 0f                                 	je 0x1077b <function_10690+0xeb>
0x1076c:    41 c6 07 00                           	mov byte ptr [r15], 0
0x10770:    eb 09                                 	jmp 0x1077b <function_10690+0xeb>
; data inside code section at 0x10772 -- 0x10778
0x10772:    66 0f 1f 44 00 00                                  |f..D..          |
0x10778:    45 31 ed                              	xor r13d, r13d
0x1077b:    48 8b bc 24 c8 04 00 00               	mov rdi, qword ptr [rsp + 0x4c8]
0x10783:    64 48 33 3c 25 28 00 00 00            	xor rdi, qword ptr fs:[0x28]
0x1078c:    4c 89 e8                              	mov rax, r13
0x1078f:    0f 85 d5 17 00 00                     	jne 0x11f6a <function_10690+0x18da>
0x10795:    48 81 c4 d8 04 00 00                  	add rsp, 0x4d8
0x1079c:    5b                                    	pop rbx
0x1079d:    5d                                    	pop rbp
0x1079e:    41 5c                                 	pop r12
0x107a0:    41 5d                                 	pop r13
0x107a2:    41 5e                                 	pop r14
0x107a4:    41 5f                                 	pop r15
0x107a6:    c3                                    	ret 
; data inside code section at 0x107a7 -- 0x107b0
0x107a7:    66 0f 1f 84 00 00 00 00  00                        |f........       |
0x107b0:    0f b6 44 24 4b                        	movzx eax, byte ptr [rsp + 0x4b]
0x107b5:    45 31 c0                              	xor r8d, r8d
0x107b8:    c7 44 24 20 00 00 00 00               	mov dword ptr [rsp + 0x20], 0
0x107c0:    88 44 24 18                           	mov byte ptr [rsp + 0x18], al
0x107c4:    49 83 c3 01                           	add r11, 1
0x107c8:    41 0f be 2b                           	movsx ebp, byte ptr [r11]
0x107cc:    40 80 fd 30                           	cmp bpl, 0x30
0x107d0:    89 e9                                 	mov ecx, ebp
0x107d2:    89 ef                                 	mov edi, ebp
0x107d4:    74 30                                 	je 0x10806 <function_10690+0x176>
0x107d6:    7f 18                                 	jg 0x107f0 <function_10690+0x160>
0x107d8:    40 80 fd 23                           	cmp bpl, 0x23
0x107dc:    75 22                                 	jne 0x10800 <function_10690+0x170>
0x107de:    41 b8 01 00 00 00                     	mov r8d, 1
0x107e4:    eb de                                 	jmp 0x107c4 <function_10690+0x134>
; data inside code section at 0x107e6 -- 0x107f0
0x107e6:    66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x107f0:    40 80 fd 5e                           	cmp bpl, 0x5e
0x107f4:    75 32                                 	jne 0x10828 <function_10690+0x198>
0x107f6:    c6 44 24 18 01                        	mov byte ptr [rsp + 0x18], 1
0x107fb:    eb c7                                 	jmp 0x107c4 <function_10690+0x134>
; data inside code section at 0x107fd -- 0x10800
0x107fd:    0f 1f 00                                           |...             |
0x10800:    40 80 fd 2d                           	cmp bpl, 0x2d
0x10804:    75 28                                 	jne 0x1082e <function_10690+0x19e>
0x10806:    89 6c 24 20                           	mov dword ptr [rsp + 0x20], ebp
0x1080a:    eb b8                                 	jmp 0x107c4 <function_10690+0x134>
; data inside code section at 0x1080c -- 0x10810
0x1080c:    0f 1f 40 00                                        |..@.            |
0x10810:    45 85 f6                              	test r14d, r14d
0x10813:    b8 0c 00 00 00                        	mov eax, 0xc
0x10818:    44 0f 44 f0                           	cmove r14d, eax
0x1081c:    e9 e1 fe ff ff                        	jmp 0x10702 <function_10690+0x72>
; data inside code section at 0x10821 -- 0x10828
0x10821:    0f 1f 80 00 00 00 00                               |.......         |
0x10828:    40 80 fd 5f                           	cmp bpl, 0x5f
0x1082c:    74 d8                                 	je 0x10806 <function_10690+0x176>
0x1082e:    8d 45 d0                              	lea eax, [rbp - 0x30]
0x10831:    bb ff ff ff ff                        	mov ebx, 0xffffffff
0x10836:    83 f8 09                              	cmp eax, 9
0x10839:    0f 86 f9 00 00 00                     	jbe 0x10938 <function_10690+0x2a8>
0x1083f:    80 f9 45                              	cmp cl, 0x45
0x10842:    74 24                                 	je 0x10868 <function_10690+0x1d8>
0x10844:    80 f9 4f                              	cmp cl, 0x4f
0x10847:    74 1f                                 	je 0x10868 <function_10690+0x1d8>
0x10849:    31 ed                                 	xor ebp, ebp
0x1084b:    80 f9 7a                              	cmp cl, 0x7a
0x1084e:    77 30                                 	ja 0x10880 <function_10690+0x1f0>
0x10850:    48 8d 35 25 9c 00 00                  	lea rsi, [rip + 0x9c25]
0x10857:    0f b6 c1                              	movzx eax, cl
0x1085a:    48 63 04 86                           	movsxd rax, dword ptr [rsi + rax*4]
0x1085e:    48 01 f0                              	add rax, rsi
0x10861:    ff e0                                 	jmp rax
; data inside code section at 0x10863 -- 0x10868
0x10863:    0f 1f 44 00 00                                     |..D..           |
0x10868:    41 0f be 7b 01                        	movsx edi, byte ptr [r11 + 1]
0x1086d:    49 83 c3 01                           	add r11, 1
0x10871:    89 f9                                 	mov ecx, edi
0x10873:    eb d6                                 	jmp 0x1084b <function_10690+0x1bb>
0x10875:    4d 89 c3                              	mov r11, r8
0x10878:    0f 1f 84 00 00 00 00 00               	nop dword ptr [rax + rax]
0x10880:    49 8d 43 ff                           	lea rax, [r11 - 1]
0x10884:    b9 01 00 00 00                        	mov ecx, 1
0x10889:    49 89 c0                              	mov r8, rax
0x1088c:    48 8d 40 ff                           	lea rax, [rax - 1]
0x10890:    83 c1 01                              	add ecx, 1
0x10893:    80 78 01 25                           	cmp byte ptr [rax + 1], 0x25
0x10897:    75 f0                                 	jne 0x10889 <function_10690+0x1f9>
0x10899:    4c 89 e2                              	mov rdx, r12
0x1089c:    b8 00 00 00 00                        	mov eax, 0
0x108a1:    48 63 e9                              	movsxd rbp, ecx
0x108a4:    4c 29 ea                              	sub rdx, r13
0x108a7:    85 db                                 	test ebx, ebx
0x108a9:    4d 89 de                              	mov r14, r11
0x108ac:    0f 49 c3                              	cmovns eax, ebx
0x108af:    48 98                                 	cdqe 
0x108b1:    48 39 c5                              	cmp rbp, rax
0x108b4:    49 89 c1                              	mov r9, rax
0x108b7:    4c 0f 43 cd                           	cmovae r9, rbp
0x108bb:    4c 39 ca                              	cmp rdx, r9
0x108be:    0f 86 b4 fe ff ff                     	jbe 0x10778 <function_10690+0xe8>
0x108c4:    4d 85 ff                              	test r15, r15
0x108c7:    74 64                                 	je 0x1092d <function_10690+0x29d>
0x108c9:    48 39 c5                              	cmp rbp, rax
0x108cc:    73 39                                 	jae 0x10907 <function_10690+0x277>
0x108ce:    48 63 d3                              	movsxd rdx, ebx
0x108d1:    4c 89 4c 24 50                        	mov qword ptr [rsp + 0x50], r9
0x108d6:    48 29 ea                              	sub rdx, rbp
0x108d9:    83 7c 24 20 30                        	cmp dword ptr [rsp + 0x20], 0x30
0x108de:    4c 89 44 24 20                        	mov qword ptr [rsp + 0x20], r8
0x108e3:    49 8d 1c 17                           	lea rbx, [r15 + rdx]
0x108e7:    0f 84 62 11 00 00                     	je 0x11a4f <function_10690+0x13bf>
0x108ed:    4c 89 ff                              	mov rdi, r15
0x108f0:    be 20 00 00 00                        	mov esi, 0x20
0x108f5:    49 89 df                              	mov r15, rbx
0x108f8:    e8 63 31 ff ff                        	call 0x3a60 <memset>
0x108fd:    4c 8b 4c 24 50                        	mov r9, qword ptr [rsp + 0x50]
0x10902:    4c 8b 44 24 20                        	mov r8, qword ptr [rsp + 0x20]
0x10907:    80 7c 24 18 00                        	cmp byte ptr [rsp + 0x18], 0
0x1090c:    48 89 ea                              	mov rdx, rbp
0x1090f:    4c 89 4c 24 18                        	mov qword ptr [rsp + 0x18], r9
0x10914:    4c 89 c6                              	mov rsi, r8
0x10917:    4c 89 ff                              	mov rdi, r15
0x1091a:    0f 85 80 00 00 00                     	jne 0x109a0 <function_10690+0x310>
0x10920:    e8 5b 32 ff ff                        	call 0x3b80 <memcpy>
0x10925:    4c 8b 4c 24 18                        	mov r9, qword ptr [rsp + 0x18]
0x1092a:    49 01 ef                              	add r15, rbp
0x1092d:    4d 01 cd                              	add r13, r9
0x10930:    e9 1d fe ff ff                        	jmp 0x10752 <function_10690+0xc2>
; data inside code section at 0x10935 -- 0x10938
0x10935:    0f 1f 00                                           |...             |
0x10938:    31 db                                 	xor ebx, ebx
0x1093a:    41 0f be 6b 01                        	movsx ebp, byte ptr [r11 + 1]
0x1093f:    81 fb cc cc cc 0c                     	cmp ebx, 0xccccccc
0x10945:    49 8d 73 01                           	lea rsi, [r11 + 1]
0x10949:    89 e9                                 	mov ecx, ebp
0x1094b:    8d 45 d0                              	lea eax, [rbp - 0x30]
0x1094e:    7f 25                                 	jg 0x10975 <function_10690+0x2e5>
0x10950:    41 0f be 13                           	movsx edx, byte ptr [r11]
0x10954:    74 1a                                 	je 0x10970 <function_10690+0x2e0>
0x10956:    8d 3c 9b                              	lea edi, [rbx + rbx*4]
0x10959:    49 89 f3                              	mov r11, rsi
0x1095c:    8d 5c 7a d0                           	lea ebx, [rdx + rdi*2 - 0x30]
0x10960:    83 f8 09                              	cmp eax, 9
0x10963:    76 d5                                 	jbe 0x1093a <function_10690+0x2aa>
0x10965:    89 ef                                 	mov edi, ebp
0x10967:    e9 d3 fe ff ff                        	jmp 0x1083f <function_10690+0x1af>
; data inside code section at 0x1096c -- 0x10970
0x1096c:    0f 1f 40 00                                        |..@.            |
0x10970:    80 fa 37                              	cmp dl, 0x37
0x10973:    7e e1                                 	jle 0x10956 <function_10690+0x2c6>
0x10975:    83 f8 09                              	cmp eax, 9
0x10978:    77 16                                 	ja 0x10990 <function_10690+0x300>
0x1097a:    41 0f be 6b 02                        	movsx ebp, byte ptr [r11 + 2]
0x1097f:    bb ff ff ff 7f                        	mov ebx, 0x7fffffff
0x10984:    49 83 c3 02                           	add r11, 2
0x10988:    89 e9                                 	mov ecx, ebp
0x1098a:    8d 45 d0                              	lea eax, [rbp - 0x30]
0x1098d:    eb d1                                 	jmp 0x10960 <function_10690+0x2d0>
; data inside code section at 0x1098f -- 0x10990
0x1098f:    90                                                 |.               |
0x10990:    89 ef                                 	mov edi, ebp
0x10992:    49 89 f3                              	mov r11, rsi
0x10995:    bb ff ff ff 7f                        	mov ebx, 0x7fffffff
0x1099a:    e9 a0 fe ff ff                        	jmp 0x1083f <function_10690+0x1af>
; data inside code section at 0x1099f -- 0x109a0
0x1099f:    90                                                 |.               |
0x109a0:    e8 9b fc ff ff                        	call 0x10640 <function_10640>
0x109a5:    4c 8b 4c 24 18                        	mov r9, qword ptr [rsp + 0x18]
0x109aa:    e9 7b ff ff ff                        	jmp 0x1092a <function_10690+0x29a>
; data inside code section at 0x109af -- 0x109b0
0x109af:    90                                                 |.               |
0x109b0:    85 ed                                 	test ebp, ebp
0x109b2:    0f 85 c8 fe ff ff                     	jne 0x10880 <function_10690+0x1f0>
0x109b8:    0f b6 44 24 18                        	movzx eax, byte ptr [rsp + 0x18]
0x109bd:    45 84 c0                              	test r8b, r8b
0x109c0:    41 0f 45 c0                           	cmovne eax, r8d
0x109c4:    88 44 24 18                           	mov byte ptr [rsp + 0x18], al
0x109c8:    48 8b 44 24 28                        	mov rax, qword ptr [rsp + 0x28]
0x109cd:    ba 20 25 00 00                        	mov edx, 0x2520
0x109d2:    4d 89 de                              	mov r14, r11
0x109d5:    66 89 94 24 bb 00 00 00               	mov word ptr [rsp + 0xbb], dx
0x109dd:    45 31 c0                              	xor r8d, r8d
0x109e0:    31 ed                                 	xor ebp, ebp
0x109e2:    66 0f 1f 44 00 00                     	nop word ptr [rax + rax]
0x109e8:    88 08                                 	mov byte ptr [rax], cl
0x109ea:    c6 40 01 00                           	mov byte ptr [rax + 1], 0
0x109ee:    48 8d 84 24 c0 00 00 00               	lea rax, [rsp + 0xc0]
0x109f6:    48 8b 4c 24 08                        	mov rcx, qword ptr [rsp + 8]
0x109fb:    48 8b 54 24 10                        	mov rdx, qword ptr [rsp + 0x10]
0x10a00:    be 00 04 00 00                        	mov esi, 0x400
0x10a05:    48 89 c7                              	mov rdi, rax
0x10a08:    44 88 44 24 58                        	mov byte ptr [rsp + 0x58], r8b
0x10a0d:    48 89 44 24 50                        	mov qword ptr [rsp + 0x50], rax
0x10a12:    e8 d9 32 ff ff                        	call 0x3cf0 <strftime>
0x10a17:    48 85 c0                              	test rax, rax
0x10a1a:    0f 84 32 fd ff ff                     	je 0x10752 <function_10690+0xc2>
0x10a20:    48 8d 48 ff                           	lea rcx, [rax - 1]
0x10a24:    85 db                                 	test ebx, ebx
0x10a26:    b8 00 00 00 00                        	mov eax, 0
0x10a2b:    0f 49 c3                              	cmovns eax, ebx
0x10a2e:    4c 89 e2                              	mov rdx, r12
0x10a31:    48 98                                 	cdqe 
0x10a33:    48 39 c1                              	cmp rcx, rax
0x10a36:    49 89 c1                              	mov r9, rax
0x10a39:    4c 0f 43 c9                           	cmovae r9, rcx
0x10a3d:    4c 29 ea                              	sub rdx, r13
0x10a40:    4c 39 ca                              	cmp rdx, r9
0x10a43:    0f 86 2f fd ff ff                     	jbe 0x10778 <function_10690+0xe8>
0x10a49:    4d 85 ff                              	test r15, r15
0x10a4c:    0f 84 db fe ff ff                     	je 0x1092d <function_10690+0x29d>
0x10a52:    85 ed                                 	test ebp, ebp
0x10a54:    44 0f b6 44 24 58                     	movzx r8d, byte ptr [rsp + 0x58]
0x10a5a:    75 49                                 	jne 0x10aa5 <function_10690+0x415>
0x10a5c:    48 39 c1                              	cmp rcx, rax
0x10a5f:    73 44                                 	jae 0x10aa5 <function_10690+0x415>
0x10a61:    48 63 d3                              	movsxd rdx, ebx
0x10a64:    4c 89 4c 24 60                        	mov qword ptr [rsp + 0x60], r9
0x10a69:    48 89 4c 24 58                        	mov qword ptr [rsp + 0x58], rcx
0x10a6e:    48 29 ca                              	sub rdx, rcx
0x10a71:    83 7c 24 20 30                        	cmp dword ptr [rsp + 0x20], 0x30
0x10a76:    44 88 44 24 20                        	mov byte ptr [rsp + 0x20], r8b
0x10a7b:    49 8d 2c 17                           	lea rbp, [r15 + rdx]
0x10a7f:    0f 84 a5 0f 00 00                     	je 0x11a2a <function_10690+0x139a>
0x10a85:    4c 89 ff                              	mov rdi, r15
0x10a88:    be 20 00 00 00                        	mov esi, 0x20
0x10a8d:    49 89 ef                              	mov r15, rbp
0x10a90:    e8 cb 2f ff ff                        	call 0x3a60 <memset>
0x10a95:    44 0f b6 44 24 20                     	movzx r8d, byte ptr [rsp + 0x20]
0x10a9b:    4c 8b 4c 24 60                        	mov r9, qword ptr [rsp + 0x60]
0x10aa0:    48 8b 4c 24 58                        	mov rcx, qword ptr [rsp + 0x58]
0x10aa5:    45 84 c0                              	test r8b, r8b
0x10aa8:    0f 85 ba 0e 00 00                     	jne 0x11968 <function_10690+0x12d8>
0x10aae:    80 7c 24 18 00                        	cmp byte ptr [rsp + 0x18], 0
0x10ab3:    4c 89 4c 24 20                        	mov qword ptr [rsp + 0x20], r9
0x10ab8:    48 8b 74 24 50                        	mov rsi, qword ptr [rsp + 0x50]
0x10abd:    0f 84 7d 0e 00 00                     	je 0x11940 <function_10690+0x12b0>
0x10ac3:    48 89 ca                              	mov rdx, rcx
0x10ac6:    48 83 c6 01                           	add rsi, 1
0x10aca:    4c 89 ff                              	mov rdi, r15
0x10acd:    48 89 4c 24 18                        	mov qword ptr [rsp + 0x18], rcx
0x10ad2:    e8 69 fb ff ff                        	call 0x10640 <function_10640>
0x10ad7:    48 8b 4c 24 18                        	mov rcx, qword ptr [rsp + 0x18]
0x10adc:    4c 8b 4c 24 20                        	mov r9, qword ptr [rsp + 0x20]
0x10ae1:    49 01 cf                              	add r15, rcx
0x10ae4:    4d 01 cd                              	add r13, r9
0x10ae7:    e9 66 fc ff ff                        	jmp 0x10752 <function_10690+0xc2>
; data inside code section at 0x10aec -- 0x10af0
0x10aec:    0f 1f 40 00                                        |..@.            |
0x10af0:    83 fd 4f                              	cmp ebp, 0x4f
0x10af3:    0f 84 87 fd ff ff                     	je 0x10880 <function_10690+0x1f0>
0x10af9:    45 31 c0                              	xor r8d, r8d
0x10afc:    be 20 25 00 00                        	mov esi, 0x2520
0x10b01:    85 ed                                 	test ebp, ebp
0x10b03:    66 89 b4 24 bb 00 00 00               	mov word ptr [rsp + 0xbb], si
0x10b0b:    0f 85 5e 14 00 00                     	jne 0x11f6f <function_10690+0x18df>
0x10b11:    4d 89 de                              	mov r14, r11
0x10b14:    48 8b 44 24 28                        	mov rax, qword ptr [rsp + 0x28]
0x10b19:    e9 ca fe ff ff                        	jmp 0x109e8 <function_10690+0x358>
0x10b1e:    83 fd 45                              	cmp ebp, 0x45
0x10b21:    0f 84 47 0f 00 00                     	je 0x11a6e <function_10690+0x13de>
0x10b27:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x10b2c:    ba 1f 85 eb 51                        	mov edx, 0x51eb851f
0x10b31:    41 ba 02 00 00 00                     	mov r10d, 2
0x10b37:    8b 70 14                              	mov esi, dword ptr [rax + 0x14]
0x10b3a:    89 f0                                 	mov eax, esi
0x10b3c:    f7 ea                                 	imul edx
0x10b3e:    89 d0                                 	mov eax, edx
0x10b40:    89 f2                                 	mov edx, esi
0x10b42:    c1 fa 1f                              	sar edx, 0x1f
0x10b45:    c1 f8 05                              	sar eax, 5
0x10b48:    29 d0                                 	sub eax, edx
0x10b4a:    89 f2                                 	mov edx, esi
0x10b4c:    8d 48 13                              	lea ecx, [rax + 0x13]
0x10b4f:    6b c0 64                              	imul eax, eax, 0x64
0x10b52:    29 c2                                 	sub edx, eax
0x10b54:    89 d0                                 	mov eax, edx
0x10b56:    c1 e8 1f                              	shr eax, 0x1f
0x10b59:    85 c9                                 	test ecx, ecx
0x10b5b:    0f 9f c2                              	setg dl
0x10b5e:    21 d0                                 	and eax, edx
0x10b60:    81 fe 94 f8 ff ff                     	cmp esi, 0xfffff894
0x10b66:    41 0f 9c c1                           	setl r9b
0x10b6a:    29 c1                                 	sub ecx, eax
0x10b6c:    31 f6                                 	xor esi, esi
0x10b6e:    45 31 f6                              	xor r14d, r14d
0x10b71:    0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0x10b78:    83 fd 4f                              	cmp ebp, 0x4f
0x10b7b:    0f 85 af 0c 00 00                     	jne 0x11830 <function_10690+0x11a0>
0x10b81:    45 84 c9                              	test r9b, r9b
0x10b84:    0f 85 af 0c 00 00                     	jne 0x11839 <function_10690+0x11a9>
0x10b8a:    89 f9                                 	mov ecx, edi
0x10b8c:    b8 20 25 00 00                        	mov eax, 0x2520
0x10b91:    45 31 c0                              	xor r8d, r8d
0x10b94:    66 89 84 24 bb 00 00 00               	mov word ptr [rsp + 0xbb], ax
0x10b9c:    48 8b 44 24 10                        	mov rax, qword ptr [rsp + 0x10]
0x10ba1:    40 88 ac 24 bd 00 00 00               	mov byte ptr [rsp + 0xbd], bpl
0x10ba9:    4d 89 de                              	mov r14, r11
0x10bac:    44 89 d5                              	mov ebp, r10d
0x10baf:    48 83 c0 03                           	add rax, 3
0x10bb3:    e9 30 fe ff ff                        	jmp 0x109e8 <function_10690+0x358>
0x10bb8:    85 ed                                 	test ebp, ebp
0x10bba:    0f 85 c0 fc ff ff                     	jne 0x10880 <function_10690+0x1f0>
0x10bc0:    48 8d 05 99 98 00 00                  	lea rax, [rip + 0x9899]
0x10bc7:    48 89 44 24 50                        	mov qword ptr [rsp + 0x50], rax
0x10bcc:    0f 1f 40 00                           	nop dword ptr [rax]
0x10bd0:    0f b6 44 24 18                        	movzx eax, byte ptr [rsp + 0x18]
0x10bd5:    8b bc 24 18 05 00 00                  	mov edi, dword ptr [rsp + 0x518]
0x10bdc:    48 c7 c6 ff ff ff ff                  	mov rsi, -1
0x10be3:    4c 89 5c 24 58                        	mov qword ptr [rsp + 0x58], r11
0x10be8:    89 44 24 18                           	mov dword ptr [rsp + 0x18], eax
0x10bec:    57                                    	push rdi
0x10bed:    41 89 c0                              	mov r8d, eax
0x10bf0:    ff 74 24 38                           	push qword ptr [rsp + 0x38]
0x10bf4:    4c 8b 4c 24 48                        	mov r9, qword ptr [rsp + 0x48]
0x10bf9:    31 ff                                 	xor edi, edi
0x10bfb:    48 8b 4c 24 18                        	mov rcx, qword ptr [rsp + 0x18]
0x10c00:    48 8b 54 24 60                        	mov rdx, qword ptr [rsp + 0x60]
0x10c05:    e8 86 fa ff ff                        	call 0x10690 <function_10690>
0x10c0a:    85 db                                 	test ebx, ebx
0x10c0c:    48 89 c5                              	mov rbp, rax
0x10c0f:    b8 00 00 00 00                        	mov eax, 0
0x10c14:    0f 49 c3                              	cmovns eax, ebx
0x10c17:    48 98                                 	cdqe 
0x10c19:    48 39 c5                              	cmp rbp, rax
0x10c1c:    49 89 c6                              	mov r14, rax
0x10c1f:    41 59                                 	pop r9
0x10c21:    41 5a                                 	pop r10
0x10c23:    4d 89 e2                              	mov r10, r12
0x10c26:    4c 0f 43 f5                           	cmovae r14, rbp
0x10c2a:    4d 29 ea                              	sub r10, r13
0x10c2d:    4d 39 f2                              	cmp r10, r14
0x10c30:    0f 86 42 fb ff ff                     	jbe 0x10778 <function_10690+0xe8>
0x10c36:    4d 85 ff                              	test r15, r15
0x10c39:    4c 8b 5c 24 58                        	mov r11, qword ptr [rsp + 0x58]
0x10c3e:    0f 85 68 0d 00 00                     	jne 0x119ac <function_10690+0x131c>
0x10c44:    4d 01 f5                              	add r13, r14
0x10c47:    4d 89 de                              	mov r14, r11
0x10c4a:    e9 03 fb ff ff                        	jmp 0x10752 <function_10690+0xc2>
0x10c4f:    83 fd 45                              	cmp ebp, 0x45
0x10c52:    0f 84 28 fc ff ff                     	je 0x10880 <function_10690+0x1f0>
0x10c58:    48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0x10c5d:    8b 72 14                              	mov esi, dword ptr [rdx + 0x14]
0x10c60:    44 8b 4a 1c                           	mov r9d, dword ptr [rdx + 0x1c]
0x10c64:    44 8b 72 18                           	mov r14d, dword ptr [rdx + 0x18]
0x10c68:    ba 93 24 49 92                        	mov edx, 0x92492493
0x10c6d:    89 f0                                 	mov eax, esi
0x10c6f:    45 89 c8                              	mov r8d, r9d
0x10c72:    c1 f8 1f                              	sar eax, 0x1f
0x10c75:    45 29 f0                              	sub r8d, r14d
0x10c78:    41 81 c0 7e 01 00 00                  	add r8d, 0x17e
0x10c7f:    25 90 01 00 00                        	and eax, 0x190
0x10c84:    44 8d 54 06 9c                        	lea r10d, [rsi + rax - 0x64]
0x10c89:    44 89 c0                              	mov eax, r8d
0x10c8c:    f7 ea                                 	imul edx
0x10c8e:    42 8d 04 02                           	lea eax, [rdx + r8]
0x10c92:    44 89 c2                              	mov edx, r8d
0x10c95:    c1 fa 1f                              	sar edx, 0x1f
0x10c98:    c1 f8 02                              	sar eax, 2
0x10c9b:    29 d0                                 	sub eax, edx
0x10c9d:    8d 14 c5 00 00 00 00                  	lea edx, [rax*8]
0x10ca4:    29 c2                                 	sub edx, eax
0x10ca6:    89 d0                                 	mov eax, edx
0x10ca8:    44 89 ca                              	mov edx, r9d
0x10cab:    44 29 c2                              	sub edx, r8d
0x10cae:    8d 44 02 03                           	lea eax, [rdx + rax + 3]
0x10cb2:    85 c0                                 	test eax, eax
0x10cb4:    89 44 24 50                           	mov dword ptr [rsp + 0x50], eax
0x10cb8:    0f 88 53 10 00 00                     	js 0x11d11 <function_10690+0x1681>
0x10cbe:    41 f6 c2 03                           	test r10b, 3
0x10cc2:    b8 6d 01 00 00                        	mov eax, 0x16d
0x10cc7:    75 4a                                 	jne 0x10d13 <function_10690+0x683>
0x10cc9:    41 b8 1f 85 eb 51                     	mov r8d, 0x51eb851f
0x10ccf:    44 89 d0                              	mov eax, r10d
0x10cd2:    41 f7 e8                              	imul r8d
0x10cd5:    44 89 d0                              	mov eax, r10d
0x10cd8:    c1 f8 1f                              	sar eax, 0x1f
0x10cdb:    89 44 24 58                           	mov dword ptr [rsp + 0x58], eax
0x10cdf:    41 89 d0                              	mov r8d, edx
0x10ce2:    c1 fa 05                              	sar edx, 5
0x10ce5:    29 c2                                 	sub edx, eax
0x10ce7:    b8 6e 01 00 00                        	mov eax, 0x16e
0x10cec:    6b d2 64                              	imul edx, edx, 0x64
0x10cef:    41 39 d2                              	cmp r10d, edx
0x10cf2:    75 1f                                 	jne 0x10d13 <function_10690+0x683>
0x10cf4:    41 c1 f8 07                           	sar r8d, 7
0x10cf8:    44 89 c0                              	mov eax, r8d
0x10cfb:    2b 44 24 58                           	sub eax, dword ptr [rsp + 0x58]
0x10cff:    69 c0 90 01 00 00                     	imul eax, eax, 0x190
0x10d05:    41 39 c2                              	cmp r10d, eax
0x10d08:    0f 94 c0                              	sete al
0x10d0b:    0f b6 c0                              	movzx eax, al
0x10d0e:    05 6d 01 00 00                        	add eax, 0x16d
0x10d13:    41 29 c1                              	sub r9d, eax
0x10d16:    ba 93 24 49 92                        	mov edx, 0x92492493
0x10d1b:    45 89 c8                              	mov r8d, r9d
0x10d1e:    45 29 f0                              	sub r8d, r14d
0x10d21:    41 be 01 00 00 00                     	mov r14d, 1
0x10d27:    41 81 c0 7e 01 00 00                  	add r8d, 0x17e
0x10d2e:    44 89 c0                              	mov eax, r8d
0x10d31:    45 29 c1                              	sub r9d, r8d
0x10d34:    f7 ea                                 	imul edx
0x10d36:    42 8d 04 02                           	lea eax, [rdx + r8]
0x10d3a:    44 89 c2                              	mov edx, r8d
0x10d3d:    c1 fa 1f                              	sar edx, 0x1f
0x10d40:    c1 f8 02                              	sar eax, 2
0x10d43:    29 d0                                 	sub eax, edx
0x10d45:    8d 14 c5 00 00 00 00                  	lea edx, [rax*8]
0x10d4c:    29 c2                                 	sub edx, eax
0x10d4e:    45 8d 44 11 03                        	lea r8d, [r9 + rdx + 3]
0x10d53:    45 85 c0                              	test r8d, r8d
0x10d56:    79 08                                 	jns 0x10d60 <function_10690+0x6d0>
0x10d58:    44 8b 44 24 50                        	mov r8d, dword ptr [rsp + 0x50]
0x10d5d:    45 31 f6                              	xor r14d, r14d
0x10d60:    80 f9 47                              	cmp cl, 0x47
0x10d63:    0f 84 3a 10 00 00                     	je 0x11da3 <function_10690+0x1713>
0x10d69:    80 f9 67                              	cmp cl, 0x67
0x10d6c:    0f 85 57 10 00 00                     	jne 0x11dc9 <function_10690+0x1739>
0x10d72:    b9 1f 85 eb 51                        	mov ecx, 0x51eb851f
0x10d77:    89 f0                                 	mov eax, esi
0x10d79:    41 89 f0                              	mov r8d, esi
0x10d7c:    f7 e9                                 	imul ecx
0x10d7e:    41 ba 02 00 00 00                     	mov r10d, 2
0x10d84:    89 d0                                 	mov eax, edx
0x10d86:    89 f2                                 	mov edx, esi
0x10d88:    c1 fa 1f                              	sar edx, 0x1f
0x10d8b:    c1 f8 05                              	sar eax, 5
0x10d8e:    29 d0                                 	sub eax, edx
0x10d90:    6b c0 64                              	imul eax, eax, 0x64
0x10d93:    41 29 c0                              	sub r8d, eax
0x10d96:    45 01 f0                              	add r8d, r14d
0x10d99:    44 89 c0                              	mov eax, r8d
0x10d9c:    f7 e9                                 	imul ecx
0x10d9e:    44 89 c0                              	mov eax, r8d
0x10da1:    c1 f8 1f                              	sar eax, 0x1f
0x10da4:    89 d1                                 	mov ecx, edx
0x10da6:    c1 f9 05                              	sar ecx, 5
0x10da9:    29 c1                                 	sub ecx, eax
0x10dab:    6b c9 64                              	imul ecx, ecx, 0x64
0x10dae:    41 29 c8                              	sub r8d, ecx
0x10db1:    44 89 c1                              	mov ecx, r8d
0x10db4:    79 1a                                 	jns 0x10dd0 <function_10690+0x740>
0x10db6:    b8 94 f8 ff ff                        	mov eax, 0xfffff894
0x10dbb:    44 89 c2                              	mov edx, r8d
0x10dbe:    83 c1 64                              	add ecx, 0x64
0x10dc1:    44 29 f0                              	sub eax, r14d
0x10dc4:    f7 da                                 	neg edx
0x10dc6:    39 c6                                 	cmp esi, eax
0x10dc8:    0f 4c ca                              	cmovl ecx, edx
0x10dcb:    0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0x10dd0:    89 c8                                 	mov eax, ecx
0x10dd2:    31 f6                                 	xor esi, esi
0x10dd4:    45 31 f6                              	xor r14d, r14d
0x10dd7:    c1 e8 1f                              	shr eax, 0x1f
0x10dda:    41 89 c1                              	mov r9d, eax
0x10ddd:    e9 96 fd ff ff                        	jmp 0x10b78 <function_10690+0x4e8>
0x10de2:    4c 89 e2                              	mov rdx, r12
0x10de5:    b8 00 00 00 00                        	mov eax, 0
0x10dea:    be 01 00 00 00                        	mov esi, 1
0x10def:    4c 29 ea                              	sub rdx, r13
0x10df2:    85 db                                 	test ebx, ebx
0x10df4:    0f 49 c3                              	cmovns eax, ebx
0x10df7:    48 98                                 	cdqe 
0x10df9:    48 85 c0                              	test rax, rax
0x10dfc:    48 0f 45 f0                           	cmovne rsi, rax
0x10e00:    85 ed                                 	test ebp, ebp
0x10e02:    49 89 f1                              	mov r9, rsi
0x10e05:    0f 85 b0 0e 00 00                     	jne 0x11cbb <function_10690+0x162b>
0x10e0b:    48 39 f2                              	cmp rdx, rsi
0x10e0e:    0f 86 64 f9 ff ff                     	jbe 0x10778 <function_10690+0xe8>
0x10e14:    4d 85 ff                              	test r15, r15
0x10e17:    74 4b                                 	je 0x10e64 <function_10690+0x7d4>
0x10e19:    83 fb 01                              	cmp ebx, 1
0x10e1c:    7e 3f                                 	jle 0x10e5d <function_10690+0x7cd>
0x10e1e:    48 63 d3                              	movsxd rdx, ebx
0x10e21:    48 89 74 24 18                        	mov qword ptr [rsp + 0x18], rsi
0x10e26:    be 30 00 00 00                        	mov esi, 0x30
0x10e2b:    48 83 ea 01                           	sub rdx, 1
0x10e2f:    83 7c 24 20 30                        	cmp dword ptr [rsp + 0x20], 0x30
0x10e34:    4c 89 5c 24 20                        	mov qword ptr [rsp + 0x20], r11
0x10e39:    49 8d 1c 17                           	lea rbx, [r15 + rdx]
0x10e3d:    74 05                                 	je 0x10e44 <function_10690+0x7b4>
0x10e3f:    be 20 00 00 00                        	mov esi, 0x20
0x10e44:    4c 89 ff                              	mov rdi, r15
0x10e47:    49 89 df                              	mov r15, rbx
0x10e4a:    e8 11 2c ff ff                        	call 0x3a60 <memset>
0x10e4f:    4c 8b 5c 24 20                        	mov r11, qword ptr [rsp + 0x20]
0x10e54:    4c 8b 4c 24 18                        	mov r9, qword ptr [rsp + 0x18]
0x10e59:    41 0f b6 0b                           	movzx ecx, byte ptr [r11]
0x10e5d:    41 88 0f                              	mov byte ptr [r15], cl
0x10e60:    49 83 c7 01                           	add r15, 1
0x10e64:    4d 01 cd                              	add r13, r9
0x10e67:    4d 89 de                              	mov r14, r11
0x10e6a:    e9 e3 f8 ff ff                        	jmp 0x10752 <function_10690+0xc2>
0x10e6f:    41 0f b6 43 01                        	movzx eax, byte ptr [r11 + 1]
0x10e74:    49 8d 53 01                           	lea rdx, [r11 + 1]
0x10e78:    3c 3a                                 	cmp al, 0x3a
0x10e7a:    0f 84 b9 0f 00 00                     	je 0x11e39 <function_10690+0x17a9>
0x10e80:    41 ba 01 00 00 00                     	mov r10d, 1
0x10e86:    3c 7a                                 	cmp al, 0x7a
0x10e88:    0f 85 f2 f9 ff ff                     	jne 0x10880 <function_10690+0x1f0>
0x10e8e:    49 89 d3                              	mov r11, rdx
0x10e91:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x10e96:    8b 48 20                              	mov ecx, dword ptr [rax + 0x20]
0x10e99:    85 c9                                 	test ecx, ecx
0x10e9b:    0f 88 50 0d 00 00                     	js 0x11bf1 <function_10690+0x1561>
0x10ea1:    48 8b 48 28                           	mov rcx, qword ptr [rax + 0x28]
0x10ea5:    41 b9 01 00 00 00                     	mov r9d, 1
0x10eab:    85 c9                                 	test ecx, ecx
0x10ead:    78 14                                 	js 0x10ec3 <function_10690+0x833>
0x10eaf:    41 b9 00 00 00 00                     	mov r9d, 0
0x10eb5:    75 0c                                 	jne 0x10ec3 <function_10690+0x833>
0x10eb7:    48 8b 44 24 40                        	mov rax, qword ptr [rsp + 0x40]
0x10ebc:    80 38 2d                              	cmp byte ptr [rax], 0x2d
0x10ebf:    41 0f 94 c1                           	sete r9b
0x10ec3:    89 c8                                 	mov eax, ecx
0x10ec5:    ba c5 b3 a2 91                        	mov edx, 0x91a2b3c5
0x10eca:    be 89 88 88 88                        	mov esi, 0x88888889
0x10ecf:    f7 ea                                 	imul edx
0x10ed1:    89 c8                                 	mov eax, ecx
0x10ed3:    c1 f8 1f                              	sar eax, 0x1f
0x10ed6:    89 44 24 50                           	mov dword ptr [rsp + 0x50], eax
0x10eda:    44 8d 34 0a                           	lea r14d, [rdx + rcx]
0x10ede:    41 c1 fe 0b                           	sar r14d, 0xb
0x10ee2:    41 29 c6                              	sub r14d, eax
0x10ee5:    89 c8                                 	mov eax, ecx
0x10ee7:    f7 ee                                 	imul esi
0x10ee9:    44 8d 04 0a                           	lea r8d, [rdx + rcx]
0x10eed:    41 c1 f8 05                           	sar r8d, 5
0x10ef1:    44 2b 44 24 50                        	sub r8d, dword ptr [rsp + 0x50]
0x10ef6:    44 89 c0                              	mov eax, r8d
0x10ef9:    f7 ee                                 	imul esi
0x10efb:    44 89 c0                              	mov eax, r8d
0x10efe:    c1 f8 1f                              	sar eax, 0x1f
0x10f01:    42 8d 34 02                           	lea esi, [rdx + r8]
0x10f05:    c1 fe 05                              	sar esi, 5
0x10f08:    29 c6                                 	sub esi, eax
0x10f0a:    44 89 c0                              	mov eax, r8d
0x10f0d:    6b f6 3c                              	imul esi, esi, 0x3c
0x10f10:    45 6b c0 3c                           	imul r8d, r8d, 0x3c
0x10f14:    29 f0                                 	sub eax, esi
0x10f16:    44 29 c1                              	sub ecx, r8d
0x10f19:    49 83 fa 01                           	cmp r10, 1
0x10f1d:    89 c6                                 	mov esi, eax
0x10f1f:    0f 84 ca 0e 00 00                     	je 0x11def <function_10690+0x175f>
0x10f25:    0f 82 61 0f 00 00                     	jb 0x11e8c <function_10690+0x17fc>
0x10f2b:    49 83 fa 02                           	cmp r10, 2
0x10f2f:    0f 84 b8 0d 00 00                     	je 0x11ced <function_10690+0x165d>
0x10f35:    49 83 fa 03                           	cmp r10, 3
0x10f39:    0f 85 41 0f 00 00                     	jne 0x11e80 <function_10690+0x17f0>
0x10f3f:    85 c9                                 	test ecx, ecx
0x10f41:    0f 85 a6 0d 00 00                     	jne 0x11ced <function_10690+0x165d>
0x10f47:    85 c0                                 	test eax, eax
0x10f49:    0f 85 a0 0e 00 00                     	jne 0x11def <function_10690+0x175f>
0x10f4f:    44 89 f1                              	mov ecx, r14d
0x10f52:    41 ba 03 00 00 00                     	mov r10d, 3
0x10f58:    41 be 01 00 00 00                     	mov r14d, 1
0x10f5e:    e9 15 fc ff ff                        	jmp 0x10b78 <function_10690+0x4e8>
; data inside code section at 0x10f63 -- 0x10f68
0x10f63:    0f 1f 44 00 00                                     |..D..           |
0x10f68:    83 fd 45                              	cmp ebp, 0x45
0x10f6b:    0f 84 0f f9 ff ff                     	je 0x10880 <function_10690+0x1f0>
0x10f71:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x10f76:    ba 93 24 49 92                        	mov edx, 0x92492493
0x10f7b:    8b 70 1c                              	mov esi, dword ptr [rax + 0x1c]
0x10f7e:    2b 70 18                              	sub esi, dword ptr [rax + 0x18]
0x10f81:    83 c6 07                              	add esi, 7
0x10f84:    89 f0                                 	mov eax, esi
0x10f86:    f7 ea                                 	imul edx
0x10f88:    8d 0c 32                              	lea ecx, [rdx + rsi]
0x10f8b:    c1 fe 1f                              	sar esi, 0x1f
0x10f8e:    41 ba 02 00 00 00                     	mov r10d, 2
0x10f94:    c1 f9 02                              	sar ecx, 2
0x10f97:    29 f1                                 	sub ecx, esi
0x10f99:    e9 32 fe ff ff                        	jmp 0x10dd0 <function_10690+0x740>
0x10f9e:    83 fd 45                              	cmp ebp, 0x45
0x10fa1:    0f 84 d9 f8 ff ff                     	je 0x10880 <function_10690+0x1f0>
0x10fa7:    4c 8b 54 24 08                        	mov r10, qword ptr [rsp + 8]
0x10fac:    b9 93 24 49 92                        	mov ecx, 0x92492493
0x10fb1:    41 8b 42 18                           	mov eax, dword ptr [r10 + 0x18]
0x10fb5:    8d 70 06                              	lea esi, [rax + 6]
0x10fb8:    89 44 24 50                           	mov dword ptr [rsp + 0x50], eax
0x10fbc:    89 f0                                 	mov eax, esi
0x10fbe:    f7 e9                                 	imul ecx
0x10fc0:    8d 04 32                              	lea eax, [rdx + rsi]
0x10fc3:    89 f2                                 	mov edx, esi
0x10fc5:    c1 fa 1f                              	sar edx, 0x1f
0x10fc8:    c1 f8 02                              	sar eax, 2
0x10fcb:    29 d0                                 	sub eax, edx
0x10fcd:    8d 14 c5 00 00 00 00                  	lea edx, [rax*8]
0x10fd4:    29 c2                                 	sub edx, eax
0x10fd6:    89 d0                                 	mov eax, edx
0x10fd8:    41 8b 52 1c                           	mov edx, dword ptr [r10 + 0x1c]
0x10fdc:    29 f0                                 	sub eax, esi
0x10fde:    8d 74 10 07                           	lea esi, [rax + rdx + 7]
0x10fe2:    89 f0                                 	mov eax, esi
0x10fe4:    f7 e9                                 	imul ecx
0x10fe6:    eb a0                                 	jmp 0x10f88 <function_10690+0x8f8>
0x10fe8:    85 db                                 	test ebx, ebx
0x10fea:    bd 00 00 00 00                        	mov ebp, 0
0x10fef:    b8 01 00 00 00                        	mov eax, 1
0x10ff4:    0f 49 eb                              	cmovns ebp, ebx
0x10ff7:    48 63 ed                              	movsxd rbp, ebp
0x10ffa:    48 85 ed                              	test rbp, rbp
0x10ffd:    48 0f 44 e8                           	cmove rbp, rax
0x11001:    4c 89 e0                              	mov rax, r12
0x11004:    4c 29 e8                              	sub rax, r13
0x11007:    48 39 e8                              	cmp rax, rbp
0x1100a:    0f 86 68 f7 ff ff                     	jbe 0x10778 <function_10690+0xe8>
0x11010:    4d 85 ff                              	test r15, r15
0x11013:    74 3d                                 	je 0x11052 <function_10690+0x9c2>
0x11015:    83 fb 01                              	cmp ebx, 1
0x11018:    7e 30                                 	jle 0x1104a <function_10690+0x9ba>
0x1101a:    48 63 d3                              	movsxd rdx, ebx
0x1101d:    4c 89 5c 24 18                        	mov qword ptr [rsp + 0x18], r11
0x11022:    48 83 ea 01                           	sub rdx, 1
0x11026:    83 7c 24 20 30                        	cmp dword ptr [rsp + 0x20], 0x30
0x1102b:    49 8d 1c 17                           	lea rbx, [r15 + rdx]
0x1102f:    0f 84 70 0e 00 00                     	je 0x11ea5 <function_10690+0x1815>
0x11035:    4c 89 ff                              	mov rdi, r15
0x11038:    be 20 00 00 00                        	mov esi, 0x20
0x1103d:    49 89 df                              	mov r15, rbx
0x11040:    e8 1b 2a ff ff                        	call 0x3a60 <memset>
0x11045:    4c 8b 5c 24 18                        	mov r11, qword ptr [rsp + 0x18]
0x1104a:    41 c6 07 09                           	mov byte ptr [r15], 9
0x1104e:    49 83 c7 01                           	add r15, 1
0x11052:    49 01 ed                              	add r13, rbp
0x11055:    4d 89 de                              	mov r14, r11
0x11058:    e9 f5 f6 ff ff                        	jmp 0x10752 <function_10690+0xc2>
0x1105d:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x11062:    83 fd 4f                              	cmp ebp, 0x4f
0x11065:    41 ba 01 00 00 00                     	mov r10d, 1
0x1106b:    8b 40 10                              	mov eax, dword ptr [rax + 0x10]
0x1106e:    0f 84 18 fb ff ff                     	je 0x10b8c <function_10690+0x4fc>
0x11074:    8d 14 80                              	lea edx, [rax + rax*4]
0x11077:    45 31 f6                              	xor r14d, r14d
0x1107a:    45 31 c9                              	xor r9d, r9d
0x1107d:    31 f6                                 	xor esi, esi
0x1107f:    8d 0c 50                              	lea ecx, [rax + rdx*2]
0x11082:    c1 f9 05                              	sar ecx, 5
0x11085:    83 c1 01                              	add ecx, 1
0x11088:    0f 1f 84 00 00 00 00 00               	nop dword ptr [rax + rax]
0x11090:    48 8d 84 24 c0 00 00 00               	lea rax, [rsp + 0xc0]
0x11098:    48 8d bc 24 d7 00 00 00               	lea rdi, [rsp + 0xd7]
0x110a0:    41 b8 cd cc cc cc                     	mov r8d, 0xcccccccd
0x110a6:    48 89 44 24 50                        	mov qword ptr [rsp + 0x50], rax
0x110ab:    0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0x110b0:    40 f6 c6 01                           	test sil, 1
0x110b4:    48 8d 6f ff                           	lea rbp, [rdi - 1]
0x110b8:    74 0e                                 	je 0x110c8 <function_10690+0xa38>
0x110ba:    48 8d 47 fe                           	lea rax, [rdi - 2]
0x110be:    c6 47 ff 3a                           	mov byte ptr [rdi - 1], 0x3a
0x110c2:    48 89 ef                              	mov rdi, rbp
0x110c5:    48 89 c5                              	mov rbp, rax
0x110c8:    89 c8                                 	mov eax, ecx
0x110ca:    d1 fe                                 	sar esi, 1
0x110cc:    41 f7 e0                              	mul r8d
0x110cf:    c1 ea 03                              	shr edx, 3
0x110d2:    8d 04 92                              	lea eax, [rdx + rdx*4]
0x110d5:    01 c0                                 	add eax, eax
0x110d7:    29 c1                                 	sub ecx, eax
0x110d9:    89 f0                                 	mov eax, esi
0x110db:    83 c1 30                              	add ecx, 0x30
0x110de:    09 d0                                 	or eax, edx
0x110e0:    88 4f ff                              	mov byte ptr [rdi - 1], cl
0x110e3:    89 d1                                 	mov ecx, edx
0x110e5:    48 89 ef                              	mov rdi, rbp
0x110e8:    75 c6                                 	jne 0x110b0 <function_10690+0xa20>
0x110ea:    41 39 da                              	cmp r10d, ebx
0x110ed:    44 0f 4c d3                           	cmovl r10d, ebx
0x110f1:    45 84 c9                              	test r9b, r9b
0x110f4:    0f 85 76 07 00 00                     	jne 0x11870 <function_10690+0x11e0>
0x110fa:    45 84 f6                              	test r14b, r14b
0x110fd:    0f 84 a9 02 00 00                     	je 0x113ac <function_10690+0xd1c>
0x11103:    83 7c 24 20 2d                        	cmp dword ptr [rsp + 0x20], 0x2d
0x11108:    41 b9 2b 00 00 00                     	mov r9d, 0x2b
0x1110e:    0f 84 d3 0a 00 00                     	je 0x11be7 <function_10690+0x1557>
0x11114:    48 8b 44 24 50                        	mov rax, qword ptr [rsp + 0x50]
0x11119:    45 8d 72 ff                           	lea r14d, [r10 - 1]
0x1111d:    4c 89 e2                              	mov rdx, r12
0x11120:    4c 29 ea                              	sub rdx, r13
0x11123:    48 8d 48 17                           	lea rcx, [rax + 0x17]
0x11127:    48 29 e9                              	sub rcx, rbp
0x1112a:    41 29 ce                              	sub r14d, ecx
0x1112d:    45 85 f6                              	test r14d, r14d
0x11130:    0f 8e e3 09 00 00                     	jle 0x11b19 <function_10690+0x1489>
0x11136:    83 7c 24 20 5f                        	cmp dword ptr [rsp + 0x20], 0x5f
0x1113b:    0f 84 47 09 00 00                     	je 0x11a88 <function_10690+0x13f8>
0x11141:    49 63 c2                              	movsxd rax, r10d
0x11144:    48 39 d0                              	cmp rax, rdx
0x11147:    0f 83 2b f6 ff ff                     	jae 0x10778 <function_10690+0xe8>
0x1114d:    85 db                                 	test ebx, ebx
0x1114f:    b8 00 00 00 00                        	mov eax, 0
0x11154:    be 01 00 00 00                        	mov esi, 1
0x11159:    0f 49 c3                              	cmovns eax, ebx
0x1115c:    48 98                                 	cdqe 
0x1115e:    48 85 c0                              	test rax, rax
0x11161:    48 0f 45 f0                           	cmovne rsi, rax
0x11165:    48 39 d6                              	cmp rsi, rdx
0x11168:    0f 83 0a f6 ff ff                     	jae 0x10778 <function_10690+0xe8>
0x1116e:    49 01 f5                              	add r13, rsi
0x11171:    4d 85 ff                              	test r15, r15
0x11174:    4d 63 c6                              	movsxd r8, r14d
0x11177:    4d 89 de                              	mov r14, r11
0x1117a:    0f 84 a4 00 00 00                     	je 0x11224 <function_10690+0xb94>
0x11180:    45 85 d2                              	test r10d, r10d
0x11183:    75 5f                                 	jne 0x111e4 <function_10690+0xb54>
0x11185:    48 83 f8 01                           	cmp rax, 1
0x11189:    76 59                                 	jbe 0x111e4 <function_10690+0xb54>
0x1118b:    48 63 d3                              	movsxd rdx, ebx
0x1118e:    4c 89 5c 24 70                        	mov qword ptr [rsp + 0x70], r11
0x11193:    44 88 4c 24 68                        	mov byte ptr [rsp + 0x68], r9b
0x11198:    48 83 ea 01                           	sub rdx, 1
0x1119c:    83 7c 24 20 30                        	cmp dword ptr [rsp + 0x20], 0x30
0x111a1:    4c 89 44 24 60                        	mov qword ptr [rsp + 0x60], r8
0x111a6:    49 8d 1c 17                           	lea rbx, [r15 + rdx]
0x111aa:    48 89 4c 24 58                        	mov qword ptr [rsp + 0x58], rcx
0x111af:    44 89 54 24 50                        	mov dword ptr [rsp + 0x50], r10d
0x111b4:    0f 84 44 0d 00 00                     	je 0x11efe <function_10690+0x186e>
0x111ba:    4c 89 ff                              	mov rdi, r15
0x111bd:    be 20 00 00 00                        	mov esi, 0x20
0x111c2:    49 89 df                              	mov r15, rbx
0x111c5:    e8 96 28 ff ff                        	call 0x3a60 <memset>
0x111ca:    44 0f b6 4c 24 68                     	movzx r9d, byte ptr [rsp + 0x68]
0x111d0:    4c 8b 5c 24 70                        	mov r11, qword ptr [rsp + 0x70]
0x111d5:    4c 8b 44 24 60                        	mov r8, qword ptr [rsp + 0x60]
0x111da:    48 8b 4c 24 58                        	mov rcx, qword ptr [rsp + 0x58]
0x111df:    44 8b 54 24 50                        	mov r10d, dword ptr [rsp + 0x50]
0x111e4:    45 88 0f                              	mov byte ptr [r15], r9b
0x111e7:    4d 89 de                              	mov r14, r11
0x111ea:    49 83 c7 01                           	add r15, 1
0x111ee:    4d 85 ff                              	test r15, r15
0x111f1:    74 31                                 	je 0x11224 <function_10690+0xb94>
0x111f3:    4c 89 c2                              	mov rdx, r8
0x111f6:    4c 89 ff                              	mov rdi, r15
0x111f9:    be 30 00 00 00                        	mov esi, 0x30
0x111fe:    48 89 4c 24 60                        	mov qword ptr [rsp + 0x60], rcx
0x11203:    44 89 54 24 58                        	mov dword ptr [rsp + 0x58], r10d
0x11208:    4c 89 44 24 50                        	mov qword ptr [rsp + 0x50], r8
0x1120d:    e8 4e 28 ff ff                        	call 0x3a60 <memset>
0x11212:    4c 8b 44 24 50                        	mov r8, qword ptr [rsp + 0x50]
0x11217:    48 8b 4c 24 60                        	mov rcx, qword ptr [rsp + 0x60]
0x1121c:    44 8b 54 24 58                        	mov r10d, dword ptr [rsp + 0x58]
0x11221:    4d 01 c7                              	add r15, r8
0x11224:    4d 01 c5                              	add r13, r8
0x11227:    4c 89 e2                              	mov rdx, r12
0x1122a:    45 31 c0                              	xor r8d, r8d
0x1122d:    4c 29 ea                              	sub rdx, r13
0x11230:    31 db                                 	xor ebx, ebx
0x11232:    4c 39 c1                              	cmp rcx, r8
0x11235:    4d 89 c1                              	mov r9, r8
0x11238:    4c 0f 43 c9                           	cmovae r9, rcx
0x1123c:    49 39 d1                              	cmp r9, rdx
0x1123f:    0f 83 33 f5 ff ff                     	jae 0x10778 <function_10690+0xe8>
0x11245:    4d 85 ff                              	test r15, r15
0x11248:    0f 84 df f6 ff ff                     	je 0x1092d <function_10690+0x29d>
0x1124e:    45 85 d2                              	test r10d, r10d
0x11251:    75 3e                                 	jne 0x11291 <function_10690+0xc01>
0x11253:    4c 39 c1                              	cmp rcx, r8
0x11256:    73 39                                 	jae 0x11291 <function_10690+0xc01>
0x11258:    48 63 d3                              	movsxd rdx, ebx
0x1125b:    48 89 4c 24 50                        	mov qword ptr [rsp + 0x50], rcx
0x11260:    48 29 ca                              	sub rdx, rcx
0x11263:    83 7c 24 20 30                        	cmp dword ptr [rsp + 0x20], 0x30
0x11268:    4c 89 4c 24 20                        	mov qword ptr [rsp + 0x20], r9
0x1126d:    49 8d 1c 17                           	lea rbx, [r15 + rdx]
0x11271:    0f 84 51 09 00 00                     	je 0x11bc8 <function_10690+0x1538>
0x11277:    4c 89 ff                              	mov rdi, r15
0x1127a:    be 20 00 00 00                        	mov esi, 0x20
0x1127f:    49 89 df                              	mov r15, rbx
0x11282:    e8 d9 27 ff ff                        	call 0x3a60 <memset>
0x11287:    48 8b 4c 24 50                        	mov rcx, qword ptr [rsp + 0x50]
0x1128c:    4c 8b 4c 24 20                        	mov r9, qword ptr [rsp + 0x20]
0x11291:    80 7c 24 18 00                        	cmp byte ptr [rsp + 0x18], 0
0x11296:    4c 89 4c 24 20                        	mov qword ptr [rsp + 0x20], r9
0x1129b:    48 89 ca                              	mov rdx, rcx
0x1129e:    48 89 4c 24 18                        	mov qword ptr [rsp + 0x18], rcx
0x112a3:    48 89 ee                              	mov rsi, rbp
0x112a6:    4c 89 ff                              	mov rdi, r15
0x112a9:    0f 84 e9 06 00 00                     	je 0x11998 <function_10690+0x1308>
0x112af:    e8 8c f3 ff ff                        	call 0x10640 <function_10640>
0x112b4:    48 8b 4c 24 18                        	mov rcx, qword ptr [rsp + 0x18]
0x112b9:    4c 8b 4c 24 20                        	mov r9, qword ptr [rsp + 0x20]
0x112be:    e9 1e f8 ff ff                        	jmp 0x10ae1 <function_10690+0x451>
0x112c3:    48 8d 05 29 6c 00 00                  	lea rax, [rip + 0x6c29]
0x112ca:    48 89 44 24 50                        	mov qword ptr [rsp + 0x50], rax
0x112cf:    e9 fc f8 ff ff                        	jmp 0x10bd0 <function_10690+0x540>
0x112d4:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x112d9:    48 8b 7c 24 30                        	mov rdi, qword ptr [rsp + 0x30]
0x112de:    48 8d b4 24 80 00 00 00               	lea rsi, [rsp + 0x80]
0x112e6:    4c 89 5c 24 58                        	mov qword ptr [rsp + 0x58], r11
0x112eb:    48 8d ac 24 d7 00 00 00               	lea rbp, [rsp + 0xd7]
0x112f3:    f3 0f 6f 00                           	movdqu xmm0, xmmword ptr [rax]
0x112f7:    0f 29 84 24 80 00 00 00               	movaps xmmword ptr [rsp + 0x80], xmm0
0x112ff:    f3 0f 6f 40 10                        	movdqu xmm0, xmmword ptr [rax + 0x10]
0x11304:    0f 29 84 24 90 00 00 00               	movaps xmmword ptr [rsp + 0x90], xmm0
0x1130c:    f3 0f 6f 40 20                        	movdqu xmm0, xmmword ptr [rax + 0x20]
0x11311:    48 8b 40 30                           	mov rax, qword ptr [rax + 0x30]
0x11315:    0f 29 84 24 a0 00 00 00               	movaps xmmword ptr [rsp + 0xa0], xmm0
0x1131d:    48 89 84 24 b0 00 00 00               	mov qword ptr [rsp + 0xb0], rax
0x11325:    e8 c6 47 00 00                        	call 0x15af0 <function_15af0>
0x1132a:    4c 8b 5c 24 58                        	mov r11, qword ptr [rsp + 0x58]
0x1132f:    48 89 c6                              	mov rsi, rax
0x11332:    48 89 c1                              	mov rcx, rax
0x11335:    48 8d 84 24 c0 00 00 00               	lea rax, [rsp + 0xc0]
0x1133d:    bf 30 00 00 00                        	mov edi, 0x30
0x11342:    48 89 44 24 50                        	mov qword ptr [rsp + 0x50], rax
0x11347:    66 0f 1f 84 00 00 00 00 00            	nop word ptr [rax + rax]
0x11350:    48 b8 67 66 66 66 66 66 66 66         	movabs rax, 0x6666666666666667
0x1135a:    48 f7 e9                              	imul rcx
0x1135d:    48 89 c8                              	mov rax, rcx
0x11360:    48 c1 f8 3f                           	sar rax, 0x3f
0x11364:    48 c1 fa 02                           	sar rdx, 2
0x11368:    48 29 c2                              	sub rdx, rax
0x1136b:    48 89 d0                              	mov rax, rdx
0x1136e:    48 8d 14 92                           	lea rdx, [rdx + rdx*4]
0x11372:    48 01 d2                              	add rdx, rdx
0x11375:    48 29 d1                              	sub rcx, rdx
0x11378:    48 89 ca                              	mov rdx, rcx
0x1137b:    48 89 c1                              	mov rcx, rax
0x1137e:    89 f8                                 	mov eax, edi
0x11380:    29 d0                                 	sub eax, edx
0x11382:    83 c2 30                              	add edx, 0x30
0x11385:    48 85 f6                              	test rsi, rsi
0x11388:    0f 48 d0                              	cmovs edx, eax
0x1138b:    48 83 ed 01                           	sub rbp, 1
0x1138f:    48 85 c9                              	test rcx, rcx
0x11392:    88 55 00                              	mov byte ptr [rbp], dl
0x11395:    75 b9                                 	jne 0x11350 <function_10690+0xcc0>
0x11397:    85 db                                 	test ebx, ebx
0x11399:    41 ba 01 00 00 00                     	mov r10d, 1
0x1139f:    44 0f 4f d3                           	cmovg r10d, ebx
0x113a3:    48 85 f6                              	test rsi, rsi
0x113a6:    0f 88 c4 04 00 00                     	js 0x11870 <function_10690+0x11e0>
0x113ac:    48 8b 44 24 50                        	mov rax, qword ptr [rsp + 0x50]
0x113b1:    4c 89 e2                              	mov rdx, r12
0x113b4:    4c 29 ea                              	sub rdx, r13
0x113b7:    48 8d 48 17                           	lea rcx, [rax + 0x17]
0x113bb:    48 29 e9                              	sub rcx, rbp
0x113be:    83 7c 24 20 2d                        	cmp dword ptr [rsp + 0x20], 0x2d
0x113c3:    74 0f                                 	je 0x113d4 <function_10690+0xd44>
0x113c5:    45 89 d6                              	mov r14d, r10d
0x113c8:    41 29 ce                              	sub r14d, ecx
0x113cb:    45 85 f6                              	test r14d, r14d
0x113ce:    0f 8f f7 08 00 00                     	jg 0x11ccb <function_10690+0x163b>
0x113d4:    85 db                                 	test ebx, ebx
0x113d6:    41 b8 00 00 00 00                     	mov r8d, 0
0x113dc:    4d 89 de                              	mov r14, r11
0x113df:    44 0f 49 c3                           	cmovns r8d, ebx
0x113e3:    4d 63 c0                              	movsxd r8, r8d
0x113e6:    e9 47 fe ff ff                        	jmp 0x11232 <function_10690+0xba2>
0x113eb:    83 fd 45                              	cmp ebp, 0x45
0x113ee:    0f 84 8c f4 ff ff                     	je 0x10880 <function_10690+0x1f0>
0x113f4:    8b 4c 24 4c                           	mov ecx, dword ptr [rsp + 0x4c]
0x113f8:    8b 44 24 20                           	mov eax, dword ptr [rsp + 0x20]
0x113fc:    41 ba 02 00 00 00                     	mov r10d, 2
0x11402:    83 f8 30                              	cmp eax, 0x30
0x11405:    0f 84 c5 f9 ff ff                     	je 0x10dd0 <function_10690+0x740>
0x1140b:    83 f8 2d                              	cmp eax, 0x2d
0x1140e:    0f 84 bc f9 ff ff                     	je 0x10dd0 <function_10690+0x740>
0x11414:    c7 44 24 20 5f 00 00 00               	mov dword ptr [rsp + 0x20], 0x5f
0x1141c:    e9 af f9 ff ff                        	jmp 0x10dd0 <function_10690+0x740>
0x11421:    83 fd 45                              	cmp ebp, 0x45
0x11424:    0f 84 56 f4 ff ff                     	je 0x10880 <function_10690+0x1f0>
0x1142a:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x1142f:    41 ba 02 00 00 00                     	mov r10d, 2
0x11435:    8b 48 10                              	mov ecx, dword ptr [rax + 0x10]
0x11438:    83 f9 ff                              	cmp ecx, -1
0x1143b:    41 0f 9c c1                           	setl r9b
0x1143f:    83 c1 01                              	add ecx, 1
0x11442:    31 f6                                 	xor esi, esi
0x11444:    45 31 f6                              	xor r14d, r14d
0x11447:    e9 2c f7 ff ff                        	jmp 0x10b78 <function_10690+0x4e8>
0x1144c:    85 db                                 	test ebx, ebx
0x1144e:    bd 00 00 00 00                        	mov ebp, 0
0x11453:    b8 01 00 00 00                        	mov eax, 1
0x11458:    0f 49 eb                              	cmovns ebp, ebx
0x1145b:    48 63 ed                              	movsxd rbp, ebp
0x1145e:    48 85 ed                              	test rbp, rbp
0x11461:    48 0f 44 e8                           	cmove rbp, rax
0x11465:    4c 89 e0                              	mov rax, r12
0x11468:    4c 29 e8                              	sub rax, r13
0x1146b:    48 39 e8                              	cmp rax, rbp
0x1146e:    0f 86 04 f3 ff ff                     	jbe 0x10778 <function_10690+0xe8>
0x11474:    4d 85 ff                              	test r15, r15
0x11477:    0f 84 d5 fb ff ff                     	je 0x11052 <function_10690+0x9c2>
0x1147d:    83 fb 01                              	cmp ebx, 1
0x11480:    7e 30                                 	jle 0x114b2 <function_10690+0xe22>
0x11482:    48 63 d3                              	movsxd rdx, ebx
0x11485:    4c 89 5c 24 18                        	mov qword ptr [rsp + 0x18], r11
0x1148a:    48 83 ea 01                           	sub rdx, 1
0x1148e:    83 7c 24 20 30                        	cmp dword ptr [rsp + 0x20], 0x30
0x11493:    49 8d 1c 17                           	lea rbx, [r15 + rdx]
0x11497:    0f 84 22 0a 00 00                     	je 0x11ebf <function_10690+0x182f>
0x1149d:    4c 89 ff                              	mov rdi, r15
0x114a0:    be 20 00 00 00                        	mov esi, 0x20
0x114a5:    49 89 df                              	mov r15, rbx
0x114a8:    e8 b3 25 ff ff                        	call 0x3a60 <memset>
0x114ad:    4c 8b 5c 24 18                        	mov r11, qword ptr [rsp + 0x18]
0x114b2:    41 c6 07 0a                           	mov byte ptr [r15], 0xa
0x114b6:    49 83 c7 01                           	add r15, 1
0x114ba:    e9 93 fb ff ff                        	jmp 0x11052 <function_10690+0x9c2>
0x114bf:    31 c0                                 	xor eax, eax
0x114c1:    45 84 c0                              	test r8b, r8b
0x114c4:    0f 85 ac 05 00 00                     	jne 0x11a76 <function_10690+0x13e6>
0x114ca:    41 89 c0                              	mov r8d, eax
0x114cd:    b9 70 00 00 00                        	mov ecx, 0x70
0x114d2:    e9 25 f6 ff ff                        	jmp 0x10afc <function_10690+0x46c>
0x114d7:    48 8d 05 94 8f 00 00                  	lea rax, [rip + 0x8f94]
0x114de:    48 89 44 24 50                        	mov qword ptr [rsp + 0x50], rax
0x114e3:    e9 e8 f6 ff ff                        	jmp 0x10bd0 <function_10690+0x540>
0x114e8:    83 fd 45                              	cmp ebp, 0x45
0x114eb:    0f 84 8f f3 ff ff                     	je 0x10880 <function_10690+0x1f0>
0x114f1:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x114f6:    41 ba 02 00 00 00                     	mov r10d, 2
0x114fc:    8b 08                                 	mov ecx, dword ptr [rax]
0x114fe:    e9 cd f8 ff ff                        	jmp 0x10dd0 <function_10690+0x740>
0x11503:    83 fd 45                              	cmp ebp, 0x45
0x11506:    0f 84 74 f3 ff ff                     	je 0x10880 <function_10690+0x1f0>
0x1150c:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x11511:    8b 48 08                              	mov ecx, dword ptr [rax + 8]
0x11514:    e9 df fe ff ff                        	jmp 0x113f8 <function_10690+0xd68>
0x11519:    85 ed                                 	test ebp, ebp
0x1151b:    0f 85 5f f3 ff ff                     	jne 0x10880 <function_10690+0x1f0>
0x11521:    48 8d 05 41 8f 00 00                  	lea rax, [rip + 0x8f41]
0x11528:    48 89 44 24 50                        	mov qword ptr [rsp + 0x50], rax
0x1152d:    e9 9e f6 ff ff                        	jmp 0x10bd0 <function_10690+0x540>
0x11532:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x11537:    ba 93 24 49 92                        	mov edx, 0x92492493
0x1153c:    41 ba 01 00 00 00                     	mov r10d, 1
0x11542:    8b 40 18                              	mov eax, dword ptr [rax + 0x18]
0x11545:    8d 48 06                              	lea ecx, [rax + 6]
0x11548:    89 44 24 50                           	mov dword ptr [rsp + 0x50], eax
0x1154c:    89 c8                                 	mov eax, ecx
0x1154e:    f7 ea                                 	imul edx
0x11550:    8d 04 0a                              	lea eax, [rdx + rcx]
0x11553:    89 ca                                 	mov edx, ecx
0x11555:    c1 fa 1f                              	sar edx, 0x1f
0x11558:    c1 f8 02                              	sar eax, 2
0x1155b:    29 d0                                 	sub eax, edx
0x1155d:    8d 14 c5 00 00 00 00                  	lea edx, [rax*8]
0x11564:    29 c2                                 	sub edx, eax
0x11566:    29 d1                                 	sub ecx, edx
0x11568:    83 c1 01                              	add ecx, 1
0x1156b:    e9 60 f8 ff ff                        	jmp 0x10dd0 <function_10690+0x740>
0x11570:    41 0f b6 4b ff                        	movzx ecx, byte ptr [r11 - 1]
0x11575:    4d 8d 43 ff                           	lea r8, [r11 - 1]
0x11579:    4c 89 e2                              	mov rdx, r12
0x1157c:    b8 00 00 00 00                        	mov eax, 0
0x11581:    4c 29 ea                              	sub rdx, r13
0x11584:    85 db                                 	test ebx, ebx
0x11586:    0f 49 c3                              	cmovns eax, ebx
0x11589:    80 f9 25                              	cmp cl, 0x25
0x1158c:    48 98                                 	cdqe 
0x1158e:    0f 85 e1 f2 ff ff                     	jne 0x10875 <function_10690+0x1e5>
0x11594:    48 85 c0                              	test rax, rax
0x11597:    b9 01 00 00 00                        	mov ecx, 1
0x1159c:    4d 89 c6                              	mov r14, r8
0x1159f:    48 0f 45 c8                           	cmovne rcx, rax
0x115a3:    bd 01 00 00 00                        	mov ebp, 1
0x115a8:    49 89 c9                              	mov r9, rcx
0x115ab:    e9 0b f3 ff ff                        	jmp 0x108bb <function_10690+0x22b>
0x115b0:    83 fd 45                              	cmp ebp, 0x45
0x115b3:    0f 84 b5 04 00 00                     	je 0x11a6e <function_10690+0x13de>
0x115b9:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x115be:    ba 1f 85 eb 51                        	mov edx, 0x51eb851f
0x115c3:    41 ba 02 00 00 00                     	mov r10d, 2
0x115c9:    8b 70 14                              	mov esi, dword ptr [rax + 0x14]
0x115cc:    89 f0                                 	mov eax, esi
0x115ce:    f7 ea                                 	imul edx
0x115d0:    89 f0                                 	mov eax, esi
0x115d2:    c1 f8 1f                              	sar eax, 0x1f
0x115d5:    c1 fa 05                              	sar edx, 5
0x115d8:    89 d1                                 	mov ecx, edx
0x115da:    29 c1                                 	sub ecx, eax
0x115dc:    89 f0                                 	mov eax, esi
0x115de:    6b c9 64                              	imul ecx, ecx, 0x64
0x115e1:    29 c8                                 	sub eax, ecx
0x115e3:    89 c1                                 	mov ecx, eax
0x115e5:    0f 89 e5 f7 ff ff                     	jns 0x10dd0 <function_10690+0x740>
0x115eb:    f7 d8                                 	neg eax
0x115ed:    83 c1 64                              	add ecx, 0x64
0x115f0:    81 fe 93 f8 ff ff                     	cmp esi, 0xfffff893
0x115f6:    0f 4e c8                              	cmovle ecx, eax
0x115f9:    e9 d2 f7 ff ff                        	jmp 0x10dd0 <function_10690+0x740>
0x115fe:    83 fd 45                              	cmp ebp, 0x45
0x11601:    0f 84 79 f2 ff ff                     	je 0x10880 <function_10690+0x1f0>
0x11607:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x1160c:    41 ba 02 00 00 00                     	mov r10d, 2
0x11612:    8b 48 0c                              	mov ecx, dword ptr [rax + 0xc]
0x11615:    e9 b6 f7 ff ff                        	jmp 0x10dd0 <function_10690+0x740>
0x1161a:    83 fd 45                              	cmp ebp, 0x45
0x1161d:    0f 84 5d f2 ff ff                     	je 0x10880 <function_10690+0x1f0>
0x11623:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x11628:    8b 48 0c                              	mov ecx, dword ptr [rax + 0xc]
0x1162b:    e9 c8 fd ff ff                        	jmp 0x113f8 <function_10690+0xd68>
0x11630:    83 fd 45                              	cmp ebp, 0x45
0x11633:    0f 84 47 f2 ff ff                     	je 0x10880 <function_10690+0x1f0>
0x11639:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x1163e:    41 ba 03 00 00 00                     	mov r10d, 3
0x11644:    8b 48 1c                              	mov ecx, dword ptr [rax + 0x1c]
0x11647:    83 f9 ff                              	cmp ecx, -1
0x1164a:    41 0f 9c c1                           	setl r9b
0x1164e:    83 c1 01                              	add ecx, 1
0x11651:    31 f6                                 	xor esi, esi
0x11653:    45 31 f6                              	xor r14d, r14d
0x11656:    e9 1d f5 ff ff                        	jmp 0x10b78 <function_10690+0x4e8>
0x1165b:    83 fd 45                              	cmp ebp, 0x45
0x1165e:    0f 84 1c f2 ff ff                     	je 0x10880 <function_10690+0x1f0>
0x11664:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x11669:    41 ba 02 00 00 00                     	mov r10d, 2
0x1166f:    8b 48 08                              	mov ecx, dword ptr [rax + 8]
0x11672:    e9 59 f7 ff ff                        	jmp 0x10dd0 <function_10690+0x740>
0x11677:    83 fd 45                              	cmp ebp, 0x45
0x1167a:    0f 84 00 f2 ff ff                     	je 0x10880 <function_10690+0x1f0>
0x11680:    8b 4c 24 4c                           	mov ecx, dword ptr [rsp + 0x4c]
0x11684:    41 ba 02 00 00 00                     	mov r10d, 2
0x1168a:    e9 41 f7 ff ff                        	jmp 0x10dd0 <function_10690+0x740>
0x1168f:    83 fd 45                              	cmp ebp, 0x45
0x11692:    0f 84 e8 f1 ff ff                     	je 0x10880 <function_10690+0x1f0>
0x11698:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x1169d:    41 ba 02 00 00 00                     	mov r10d, 2
0x116a3:    8b 48 04                              	mov ecx, dword ptr [rax + 4]
0x116a6:    e9 25 f7 ff ff                        	jmp 0x10dd0 <function_10690+0x740>
0x116ab:    83 fd 45                              	cmp ebp, 0x45
0x116ae:    0f 84 cc f1 ff ff                     	je 0x10880 <function_10690+0x1f0>
0x116b4:    83 fb ff                              	cmp ebx, -1
0x116b7:    0f 84 de 05 00 00                     	je 0x11c9b <function_10690+0x160b>
0x116bd:    83 fb 08                              	cmp ebx, 8
0x116c0:    0f 8f 98 08 00 00                     	jg 0x11f5e <function_10690+0x18ce>
0x116c6:    8b 8c 24 18 05 00 00                  	mov ecx, dword ptr [rsp + 0x518]
0x116cd:    89 de                                 	mov esi, ebx
0x116cf:    41 b8 67 66 66 66                     	mov r8d, 0x66666667
0x116d5:    0f 1f 00                              	nop dword ptr [rax]
0x116d8:    89 c8                                 	mov eax, ecx
0x116da:    83 c6 01                              	add esi, 1
0x116dd:    c1 f9 1f                              	sar ecx, 0x1f
0x116e0:    41 f7 e8                              	imul r8d
0x116e3:    c1 fa 02                              	sar edx, 2
0x116e6:    29 ca                                 	sub edx, ecx
0x116e8:    83 fe 09                              	cmp esi, 9
0x116eb:    89 d1                                 	mov ecx, edx
0x116ed:    75 e9                                 	jne 0x116d8 <function_10690+0x1048>
0x116ef:    41 89 da                              	mov r10d, ebx
0x116f2:    e9 d9 f6 ff ff                        	jmp 0x10dd0 <function_10690+0x740>
0x116f7:    b8 01 00 00 00                        	mov eax, 1
0x116fc:    e9 c0 fd ff ff                        	jmp 0x114c1 <function_10690+0xe31>
0x11701:    0f b6 7c 24 18                        	movzx edi, byte ptr [rsp + 0x18]
0x11706:    45 84 c0                              	test r8b, r8b
0x11709:    b8 00 00 00 00                        	mov eax, 0
0x1170e:    4c 89 5c 24 50                        	mov qword ptr [rsp + 0x50], r11
0x11713:    44 88 44 24 58                        	mov byte ptr [rsp + 0x58], r8b
0x11718:    0f 45 f8                              	cmovne edi, eax
0x1171b:    40 88 7c 24 18                        	mov byte ptr [rsp + 0x18], dil
0x11720:    48 8b 7c 24 40                        	mov rdi, qword ptr [rsp + 0x40]
0x11725:    e8 26 22 ff ff                        	call 0x3950 <strlen>
0x1172a:    85 db                                 	test ebx, ebx
0x1172c:    48 89 c5                              	mov rbp, rax
0x1172f:    b8 00 00 00 00                        	mov eax, 0
0x11734:    0f 49 c3                              	cmovns eax, ebx
0x11737:    4c 89 e2                              	mov rdx, r12
0x1173a:    48 98                                 	cdqe 
0x1173c:    48 39 c5                              	cmp rbp, rax
0x1173f:    49 89 c6                              	mov r14, rax
0x11742:    4c 0f 43 f5                           	cmovae r14, rbp
0x11746:    4c 29 ea                              	sub rdx, r13
0x11749:    4c 39 f2                              	cmp rdx, r14
0x1174c:    0f 86 26 f0 ff ff                     	jbe 0x10778 <function_10690+0xe8>
0x11752:    4d 85 ff                              	test r15, r15
0x11755:    4c 8b 5c 24 50                        	mov r11, qword ptr [rsp + 0x50]
0x1175a:    0f 84 e4 f4 ff ff                     	je 0x10c44 <function_10690+0x5b4>
0x11760:    48 39 c5                              	cmp rbp, rax
0x11763:    44 0f b6 44 24 58                     	movzx r8d, byte ptr [rsp + 0x58]
0x11769:    73 3a                                 	jae 0x117a5 <function_10690+0x1115>
0x1176b:    48 63 d3                              	movsxd rdx, ebx
0x1176e:    48 29 ea                              	sub rdx, rbp
0x11771:    83 7c 24 20 30                        	cmp dword ptr [rsp + 0x20], 0x30
0x11776:    49 8d 1c 17                           	lea rbx, [r15 + rdx]
0x1177a:    0f 84 59 07 00 00                     	je 0x11ed9 <function_10690+0x1849>
0x11780:    4c 89 ff                              	mov rdi, r15
0x11783:    be 20 00 00 00                        	mov esi, 0x20
0x11788:    4c 89 5c 24 50                        	mov qword ptr [rsp + 0x50], r11
0x1178d:    44 88 44 24 20                        	mov byte ptr [rsp + 0x20], r8b
0x11792:    49 89 df                              	mov r15, rbx
0x11795:    e8 c6 22 ff ff                        	call 0x3a60 <memset>
0x1179a:    44 0f b6 44 24 20                     	movzx r8d, byte ptr [rsp + 0x20]
0x117a0:    4c 8b 5c 24 50                        	mov r11, qword ptr [rsp + 0x50]
0x117a5:    45 84 c0                              	test r8b, r8b
0x117a8:    0f 85 6c 06 00 00                     	jne 0x11e1a <function_10690+0x178a>
0x117ae:    80 7c 24 18 00                        	cmp byte ptr [rsp + 0x18], 0
0x117b3:    48 89 ea                              	mov rdx, rbp
0x117b6:    4c 89 5c 24 18                        	mov qword ptr [rsp + 0x18], r11
0x117bb:    48 8b 74 24 40                        	mov rsi, qword ptr [rsp + 0x40]
0x117c0:    4c 89 ff                              	mov rdi, r15
0x117c3:    0f 84 42 06 00 00                     	je 0x11e0b <function_10690+0x177b>
0x117c9:    e8 72 ee ff ff                        	call 0x10640 <function_10640>
0x117ce:    4c 8b 5c 24 18                        	mov r11, qword ptr [rsp + 0x18]
0x117d3:    49 01 ef                              	add r15, rbp
0x117d6:    e9 69 f4 ff ff                        	jmp 0x10c44 <function_10690+0x5b4>
0x117db:    83 fd 45                              	cmp ebp, 0x45
0x117de:    0f 84 9c f0 ff ff                     	je 0x10880 <function_10690+0x1f0>
0x117e4:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x117e9:    41 ba 01 00 00 00                     	mov r10d, 1
0x117ef:    8b 48 18                              	mov ecx, dword ptr [rax + 0x18]
0x117f2:    e9 d9 f5 ff ff                        	jmp 0x10dd0 <function_10690+0x740>
0x117f7:    83 fd 45                              	cmp ebp, 0x45
0x117fa:    0f 84 6e 02 00 00                     	je 0x11a6e <function_10690+0x13de>
0x11800:    83 fd 4f                              	cmp ebp, 0x4f
0x11803:    0f 84 77 f0 ff ff                     	je 0x10880 <function_10690+0x1f0>
0x11809:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x1180e:    41 ba 04 00 00 00                     	mov r10d, 4
0x11814:    8b 48 14                              	mov ecx, dword ptr [rax + 0x14]
0x11817:    81 f9 94 f8 ff ff                     	cmp ecx, 0xfffff894
0x1181d:    41 0f 9c c1                           	setl r9b
0x11821:    81 c1 6c 07 00 00                     	add ecx, 0x76c
0x11827:    31 f6                                 	xor esi, esi
0x11829:    45 31 f6                              	xor r14d, r14d
0x1182c:    0f 1f 40 00                           	nop dword ptr [rax]
0x11830:    45 84 c9                              	test r9b, r9b
0x11833:    0f 84 57 f8 ff ff                     	je 0x11090 <function_10690+0xa00>
0x11839:    f7 d9                                 	neg ecx
0x1183b:    e9 50 f8 ff ff                        	jmp 0x11090 <function_10690+0xa00>
0x11840:    0f b6 44 24 18                        	movzx eax, byte ptr [rsp + 0x18]
0x11845:    45 84 c0                              	test r8b, r8b
0x11848:    41 0f 45 c0                           	cmovne eax, r8d
0x1184c:    85 ed                                 	test ebp, ebp
0x1184e:    0f 85 5e 04 00 00                     	jne 0x11cb2 <function_10690+0x1622>
0x11854:    89 f9                                 	mov ecx, edi
0x11856:    88 44 24 18                           	mov byte ptr [rsp + 0x18], al
0x1185a:    e9 69 f1 ff ff                        	jmp 0x109c8 <function_10690+0x338>
0x1185f:    45 31 d2                              	xor r10d, r10d
0x11862:    e9 2a f6 ff ff                        	jmp 0x10e91 <function_10690+0x801>
; data inside code section at 0x11867 -- 0x11870
0x11867:    66 0f 1f 84 00 00 00 00  00                        |f........       |
0x11870:    83 7c 24 20 2d                        	cmp dword ptr [rsp + 0x20], 0x2d
0x11875:    41 b9 2d 00 00 00                     	mov r9d, 0x2d
0x1187b:    b9 2d 00 00 00                        	mov ecx, 0x2d
0x11880:    0f 85 8e f8 ff ff                     	jne 0x11114 <function_10690+0xa84>
0x11886:    85 db                                 	test ebx, ebx
0x11888:    41 b8 00 00 00 00                     	mov r8d, 0
0x1188e:    41 be 01 00 00 00                     	mov r14d, 1
0x11894:    44 0f 49 c3                           	cmovns r8d, ebx
0x11898:    4c 89 e0                              	mov rax, r12
0x1189b:    4d 63 c0                              	movsxd r8, r8d
0x1189e:    4d 85 c0                              	test r8, r8
0x118a1:    4d 0f 45 f0                           	cmovne r14, r8
0x118a5:    4c 29 e8                              	sub rax, r13
0x118a8:    4c 39 f0                              	cmp rax, r14
0x118ab:    0f 86 c7 ee ff ff                     	jbe 0x10778 <function_10690+0xe8>
0x118b1:    4d 85 ff                              	test r15, r15
0x118b4:    74 5d                                 	je 0x11913 <function_10690+0x1283>
0x118b6:    45 85 d2                              	test r10d, r10d
0x118b9:    75 51                                 	jne 0x1190c <function_10690+0x127c>
0x118bb:    49 83 f8 01                           	cmp r8, 1
0x118bf:    76 4b                                 	jbe 0x1190c <function_10690+0x127c>
0x118c1:    4c 63 cb                              	movsxd r9, ebx
0x118c4:    4c 89 ff                              	mov rdi, r15
0x118c7:    be 20 00 00 00                        	mov esi, 0x20
0x118cc:    49 83 e9 01                           	sub r9, 1
0x118d0:    4c 89 5c 24 70                        	mov qword ptr [rsp + 0x70], r11
0x118d5:    88 4c 24 68                           	mov byte ptr [rsp + 0x68], cl
0x118d9:    4c 89 ca                              	mov rdx, r9
0x118dc:    4c 89 44 24 60                        	mov qword ptr [rsp + 0x60], r8
0x118e1:    44 89 54 24 58                        	mov dword ptr [rsp + 0x58], r10d
0x118e6:    4c 89 4c 24 20                        	mov qword ptr [rsp + 0x20], r9
0x118eb:    e8 70 21 ff ff                        	call 0x3a60 <memset>
0x118f0:    4c 8b 4c 24 20                        	mov r9, qword ptr [rsp + 0x20]
0x118f5:    0f b6 4c 24 68                        	movzx ecx, byte ptr [rsp + 0x68]
0x118fa:    4c 8b 5c 24 70                        	mov r11, qword ptr [rsp + 0x70]
0x118ff:    4c 8b 44 24 60                        	mov r8, qword ptr [rsp + 0x60]
0x11904:    44 8b 54 24 58                        	mov r10d, dword ptr [rsp + 0x58]
0x11909:    4d 01 cf                              	add r15, r9
0x1190c:    41 88 0f                              	mov byte ptr [r15], cl
0x1190f:    49 83 c7 01                           	add r15, 1
0x11913:    48 8b 4c 24 50                        	mov rcx, qword ptr [rsp + 0x50]
0x11918:    4d 01 f5                              	add r13, r14
0x1191b:    4c 89 e2                              	mov rdx, r12
0x1191e:    4c 29 ea                              	sub rdx, r13
0x11921:    4d 89 de                              	mov r14, r11
0x11924:    c7 44 24 20 2d 00 00 00               	mov dword ptr [rsp + 0x20], 0x2d
0x1192c:    48 83 c1 17                           	add rcx, 0x17
0x11930:    48 29 e9                              	sub rcx, rbp
0x11933:    e9 fa f8 ff ff                        	jmp 0x11232 <function_10690+0xba2>
; data inside code section at 0x11938 -- 0x11940
0x11938:    0f 1f 84 00 00 00 00 00                            |........        |
0x11940:    48 89 ca                              	mov rdx, rcx
0x11943:    48 83 c6 01                           	add rsi, 1
0x11947:    4c 89 ff                              	mov rdi, r15
0x1194a:    48 89 4c 24 18                        	mov qword ptr [rsp + 0x18], rcx
0x1194f:    e8 2c 22 ff ff                        	call 0x3b80 <memcpy>
0x11954:    4c 8b 4c 24 20                        	mov r9, qword ptr [rsp + 0x20]
0x11959:    48 8b 4c 24 18                        	mov rcx, qword ptr [rsp + 0x18]
0x1195e:    e9 7e f1 ff ff                        	jmp 0x10ae1 <function_10690+0x451>
; data inside code section at 0x11963 -- 0x11968
0x11963:    0f 1f 44 00 00                                     |..D..           |
0x11968:    48 8b 74 24 50                        	mov rsi, qword ptr [rsp + 0x50]
0x1196d:    48 89 ca                              	mov rdx, rcx
0x11970:    4c 89 ff                              	mov rdi, r15
0x11973:    4c 89 4c 24 20                        	mov qword ptr [rsp + 0x20], r9
0x11978:    48 89 4c 24 18                        	mov qword ptr [rsp + 0x18], rcx
0x1197d:    48 83 c6 01                           	add rsi, 1
0x11981:    e8 6a ec ff ff                        	call 0x105f0 <function_105f0>
0x11986:    48 8b 4c 24 18                        	mov rcx, qword ptr [rsp + 0x18]
0x1198b:    4c 8b 4c 24 20                        	mov r9, qword ptr [rsp + 0x20]
0x11990:    e9 4c f1 ff ff                        	jmp 0x10ae1 <function_10690+0x451>
; data inside code section at 0x11995 -- 0x11998
0x11995:    0f 1f 00                                           |...             |
0x11998:    e8 e3 21 ff ff                        	call 0x3b80 <memcpy>
0x1199d:    4c 8b 4c 24 20                        	mov r9, qword ptr [rsp + 0x20]
0x119a2:    48 8b 4c 24 18                        	mov rcx, qword ptr [rsp + 0x18]
0x119a7:    e9 35 f1 ff ff                        	jmp 0x10ae1 <function_10690+0x451>
0x119ac:    48 39 c5                              	cmp rbp, rax
0x119af:    73 39                                 	jae 0x119ea <function_10690+0x135a>
0x119b1:    48 63 d3                              	movsxd rdx, ebx
0x119b4:    48 29 ea                              	sub rdx, rbp
0x119b7:    83 7c 24 20 30                        	cmp dword ptr [rsp + 0x20], 0x30
0x119bc:    49 8d 1c 17                           	lea rbx, [r15 + rdx]
0x119c0:    0f 84 96 04 00 00                     	je 0x11e5c <function_10690+0x17cc>
0x119c6:    4c 89 ff                              	mov rdi, r15
0x119c9:    be 20 00 00 00                        	mov esi, 0x20
0x119ce:    4c 89 5c 24 58                        	mov qword ptr [rsp + 0x58], r11
0x119d3:    4c 89 54 24 20                        	mov qword ptr [rsp + 0x20], r10
0x119d8:    49 89 df                              	mov r15, rbx
0x119db:    e8 80 20 ff ff                        	call 0x3a60 <memset>
0x119e0:    4c 8b 5c 24 58                        	mov r11, qword ptr [rsp + 0x58]
0x119e5:    4c 8b 54 24 20                        	mov r10, qword ptr [rsp + 0x20]
0x119ea:    8b 84 24 18 05 00 00                  	mov eax, dword ptr [rsp + 0x518]
0x119f1:    4c 89 5c 24 20                        	mov qword ptr [rsp + 0x20], r11
0x119f6:    4c 89 ff                              	mov rdi, r15
0x119f9:    4c 89 d6                              	mov rsi, r10
0x119fc:    49 01 ef                              	add r15, rbp
0x119ff:    50                                    	push rax
0x11a00:    ff 74 24 38                           	push qword ptr [rsp + 0x38]
0x11a04:    4c 8b 4c 24 48                        	mov r9, qword ptr [rsp + 0x48]
0x11a09:    44 8b 44 24 28                        	mov r8d, dword ptr [rsp + 0x28]
0x11a0e:    48 8b 4c 24 18                        	mov rcx, qword ptr [rsp + 0x18]
0x11a13:    48 8b 54 24 60                        	mov rdx, qword ptr [rsp + 0x60]
0x11a18:    e8 73 ec ff ff                        	call 0x10690 <function_10690>
0x11a1d:    5f                                    	pop rdi
0x11a1e:    41 58                                 	pop r8
0x11a20:    4c 8b 5c 24 20                        	mov r11, qword ptr [rsp + 0x20]
0x11a25:    e9 1a f2 ff ff                        	jmp 0x10c44 <function_10690+0x5b4>
0x11a2a:    4c 89 ff                              	mov rdi, r15
0x11a2d:    be 30 00 00 00                        	mov esi, 0x30
0x11a32:    49 89 ef                              	mov r15, rbp
0x11a35:    e8 26 20 ff ff                        	call 0x3a60 <memset>
0x11a3a:    44 0f b6 44 24 20                     	movzx r8d, byte ptr [rsp + 0x20]
0x11a40:    48 8b 4c 24 58                        	mov rcx, qword ptr [rsp + 0x58]
0x11a45:    4c 8b 4c 24 60                        	mov r9, qword ptr [rsp + 0x60]
0x11a4a:    e9 56 f0 ff ff                        	jmp 0x10aa5 <function_10690+0x415>
0x11a4f:    4c 89 ff                              	mov rdi, r15
0x11a52:    be 30 00 00 00                        	mov esi, 0x30
0x11a57:    49 89 df                              	mov r15, rbx
0x11a5a:    e8 01 20 ff ff                        	call 0x3a60 <memset>
0x11a5f:    4c 8b 44 24 20                        	mov r8, qword ptr [rsp + 0x20]
0x11a64:    4c 8b 4c 24 50                        	mov r9, qword ptr [rsp + 0x50]
0x11a69:    e9 99 ee ff ff                        	jmp 0x10907 <function_10690+0x277>
0x11a6e:    45 31 d2                              	xor r10d, r10d
0x11a71:    e9 16 f1 ff ff                        	jmp 0x10b8c <function_10690+0x4fc>
0x11a76:    b9 70 00 00 00                        	mov ecx, 0x70
0x11a7b:    c6 44 24 18 00                        	mov byte ptr [rsp + 0x18], 0
0x11a80:    e9 77 f0 ff ff                        	jmp 0x10afc <function_10690+0x46c>
0x11a85:    45 31 c9                              	xor r9d, r9d
0x11a88:    49 63 ce                              	movsxd rcx, r14d
0x11a8b:    48 39 d1                              	cmp rcx, rdx
0x11a8e:    0f 83 e4 ec ff ff                     	jae 0x10778 <function_10690+0xe8>
0x11a94:    4d 85 ff                              	test r15, r15
0x11a97:    74 3c                                 	je 0x11ad5 <function_10690+0x1445>
0x11a99:    48 89 ca                              	mov rdx, rcx
0x11a9c:    4c 89 ff                              	mov rdi, r15
0x11a9f:    be 20 00 00 00                        	mov esi, 0x20
0x11aa4:    4c 89 5c 24 68                        	mov qword ptr [rsp + 0x68], r11
0x11aa9:    44 88 4c 24 60                        	mov byte ptr [rsp + 0x60], r9b
0x11aae:    44 89 54 24 58                        	mov dword ptr [rsp + 0x58], r10d
0x11ab3:    48 89 4c 24 20                        	mov qword ptr [rsp + 0x20], rcx
0x11ab8:    e8 a3 1f ff ff                        	call 0x3a60 <memset>
0x11abd:    48 8b 4c 24 20                        	mov rcx, qword ptr [rsp + 0x20]
0x11ac2:    44 0f b6 4c 24 60                     	movzx r9d, byte ptr [rsp + 0x60]
0x11ac8:    4c 8b 5c 24 68                        	mov r11, qword ptr [rsp + 0x68]
0x11acd:    44 8b 54 24 58                        	mov r10d, dword ptr [rsp + 0x58]
0x11ad2:    49 01 cf                              	add r15, rcx
0x11ad5:    89 d8                                 	mov eax, ebx
0x11ad7:    49 01 cd                              	add r13, rcx
0x11ada:    4c 89 e2                              	mov rdx, r12
0x11add:    44 29 f0                              	sub eax, r14d
0x11ae0:    41 39 de                              	cmp r14d, ebx
0x11ae3:    bb 00 00 00 00                        	mov ebx, 0
0x11ae8:    0f 4c d8                              	cmovl ebx, eax
0x11aeb:    4c 29 ea                              	sub rdx, r13
0x11aee:    45 84 c9                              	test r9b, r9b
0x11af1:    0f 85 02 01 00 00                     	jne 0x11bf9 <function_10690+0x1569>
0x11af7:    48 8b 44 24 50                        	mov rax, qword ptr [rsp + 0x50]
0x11afc:    4c 63 c3                              	movsxd r8, ebx
0x11aff:    4d 89 de                              	mov r14, r11
0x11b02:    c7 44 24 20 5f 00 00 00               	mov dword ptr [rsp + 0x20], 0x5f
0x11b0a:    48 83 c0 17                           	add rax, 0x17
0x11b0e:    48 29 e8                              	sub rax, rbp
0x11b11:    48 89 c1                              	mov rcx, rax
0x11b14:    e9 19 f7 ff ff                        	jmp 0x11232 <function_10690+0xba2>
0x11b19:    85 db                                 	test ebx, ebx
0x11b1b:    41 b8 00 00 00 00                     	mov r8d, 0
0x11b21:    b8 01 00 00 00                        	mov eax, 1
0x11b26:    44 0f 49 c3                           	cmovns r8d, ebx
0x11b2a:    4d 63 c0                              	movsxd r8, r8d
0x11b2d:    4d 85 c0                              	test r8, r8
0x11b30:    49 0f 45 c0                           	cmovne rax, r8
0x11b34:    48 39 d0                              	cmp rax, rdx
0x11b37:    49 89 c6                              	mov r14, rax
0x11b3a:    0f 83 38 ec ff ff                     	jae 0x10778 <function_10690+0xe8>
0x11b40:    4d 85 ff                              	test r15, r15
0x11b43:    74 72                                 	je 0x11bb7 <function_10690+0x1527>
0x11b45:    45 85 d2                              	test r10d, r10d
0x11b48:    75 66                                 	jne 0x11bb0 <function_10690+0x1520>
0x11b4a:    49 83 f8 01                           	cmp r8, 1
0x11b4e:    76 60                                 	jbe 0x11bb0 <function_10690+0x1520>
0x11b50:    48 63 d3                              	movsxd rdx, ebx
0x11b53:    4c 89 5c 24 78                        	mov qword ptr [rsp + 0x78], r11
0x11b58:    44 88 4c 24 70                        	mov byte ptr [rsp + 0x70], r9b
0x11b5d:    48 83 ea 01                           	sub rdx, 1
0x11b61:    83 7c 24 20 30                        	cmp dword ptr [rsp + 0x20], 0x30
0x11b66:    48 89 4c 24 68                        	mov qword ptr [rsp + 0x68], rcx
0x11b6b:    49 8d 04 17                           	lea rax, [r15 + rdx]
0x11b6f:    4c 89 44 24 60                        	mov qword ptr [rsp + 0x60], r8
0x11b74:    44 89 54 24 58                        	mov dword ptr [rsp + 0x58], r10d
0x11b79:    48 89 44 24 50                        	mov qword ptr [rsp + 0x50], rax
0x11b7e:    0f 84 a9 03 00 00                     	je 0x11f2d <function_10690+0x189d>
0x11b84:    4c 89 ff                              	mov rdi, r15
0x11b87:    be 20 00 00 00                        	mov esi, 0x20
0x11b8c:    e8 cf 1e ff ff                        	call 0x3a60 <memset>
0x11b91:    44 0f b6 4c 24 70                     	movzx r9d, byte ptr [rsp + 0x70]
0x11b97:    4c 8b 7c 24 50                        	mov r15, qword ptr [rsp + 0x50]
0x11b9c:    4c 8b 5c 24 78                        	mov r11, qword ptr [rsp + 0x78]
0x11ba1:    48 8b 4c 24 68                        	mov rcx, qword ptr [rsp + 0x68]
0x11ba6:    4c 8b 44 24 60                        	mov r8, qword ptr [rsp + 0x60]
0x11bab:    44 8b 54 24 58                        	mov r10d, dword ptr [rsp + 0x58]
0x11bb0:    45 88 0f                              	mov byte ptr [r15], r9b
0x11bb3:    49 83 c7 01                           	add r15, 1
0x11bb7:    4d 01 f5                              	add r13, r14
0x11bba:    4c 89 e2                              	mov rdx, r12
0x11bbd:    4d 89 de                              	mov r14, r11
0x11bc0:    4c 29 ea                              	sub rdx, r13
0x11bc3:    e9 6a f6 ff ff                        	jmp 0x11232 <function_10690+0xba2>
0x11bc8:    4c 89 ff                              	mov rdi, r15
0x11bcb:    be 30 00 00 00                        	mov esi, 0x30
0x11bd0:    49 89 df                              	mov r15, rbx
0x11bd3:    e8 88 1e ff ff                        	call 0x3a60 <memset>
0x11bd8:    4c 8b 4c 24 20                        	mov r9, qword ptr [rsp + 0x20]
0x11bdd:    48 8b 4c 24 50                        	mov rcx, qword ptr [rsp + 0x50]
0x11be2:    e9 aa f6 ff ff                        	jmp 0x11291 <function_10690+0xc01>
0x11be7:    b9 2b 00 00 00                        	mov ecx, 0x2b
0x11bec:    e9 95 fc ff ff                        	jmp 0x11886 <function_10690+0x11f6>
0x11bf1:    4d 89 de                              	mov r14, r11
0x11bf4:    e9 59 eb ff ff                        	jmp 0x10752 <function_10690+0xc2>
0x11bf9:    4c 63 c3                              	movsxd r8, ebx
0x11bfc:    41 be 01 00 00 00                     	mov r14d, 1
0x11c02:    4d 85 c0                              	test r8, r8
0x11c05:    4d 0f 45 f0                           	cmovne r14, r8
0x11c09:    49 39 d6                              	cmp r14, rdx
0x11c0c:    0f 83 66 eb ff ff                     	jae 0x10778 <function_10690+0xe8>
0x11c12:    4d 85 ff                              	test r15, r15
0x11c15:    74 5c                                 	je 0x11c73 <function_10690+0x15e3>
0x11c17:    45 85 d2                              	test r10d, r10d
0x11c1a:    75 50                                 	jne 0x11c6c <function_10690+0x15dc>
0x11c1c:    49 83 f8 01                           	cmp r8, 1
0x11c20:    76 4a                                 	jbe 0x11c6c <function_10690+0x15dc>
0x11c22:    49 8d 48 ff                           	lea rcx, [r8 - 1]
0x11c26:    4c 89 ff                              	mov rdi, r15
0x11c29:    be 20 00 00 00                        	mov esi, 0x20
0x11c2e:    4c 89 5c 24 70                        	mov qword ptr [rsp + 0x70], r11
0x11c33:    44 88 4c 24 68                        	mov byte ptr [rsp + 0x68], r9b
0x11c38:    48 89 ca                              	mov rdx, rcx
0x11c3b:    44 89 54 24 60                        	mov dword ptr [rsp + 0x60], r10d
0x11c40:    4c 89 44 24 58                        	mov qword ptr [rsp + 0x58], r8
0x11c45:    48 89 4c 24 20                        	mov qword ptr [rsp + 0x20], rcx
0x11c4a:    e8 11 1e ff ff                        	call 0x3a60 <memset>
0x11c4f:    48 8b 4c 24 20                        	mov rcx, qword ptr [rsp + 0x20]
0x11c54:    44 0f b6 4c 24 68                     	movzx r9d, byte ptr [rsp + 0x68]
0x11c5a:    4c 8b 5c 24 70                        	mov r11, qword ptr [rsp + 0x70]
0x11c5f:    44 8b 54 24 60                        	mov r10d, dword ptr [rsp + 0x60]
0x11c64:    4c 8b 44 24 58                        	mov r8, qword ptr [rsp + 0x58]
0x11c69:    49 01 cf                              	add r15, rcx
0x11c6c:    45 88 0f                              	mov byte ptr [r15], r9b
0x11c6f:    49 83 c7 01                           	add r15, 1
0x11c73:    48 8b 44 24 50                        	mov rax, qword ptr [rsp + 0x50]
0x11c78:    4d 01 f5                              	add r13, r14
0x11c7b:    4c 89 e2                              	mov rdx, r12
0x11c7e:    4c 29 ea                              	sub rdx, r13
0x11c81:    4d 89 de                              	mov r14, r11
0x11c84:    c7 44 24 20 5f 00 00 00               	mov dword ptr [rsp + 0x20], 0x5f
0x11c8c:    48 83 c0 17                           	add rax, 0x17
0x11c90:    48 29 e8                              	sub rax, rbp
0x11c93:    48 89 c1                              	mov rcx, rax
0x11c96:    e9 97 f5 ff ff                        	jmp 0x11232 <function_10690+0xba2>
0x11c9b:    8b 8c 24 18 05 00 00                  	mov ecx, dword ptr [rsp + 0x518]
0x11ca2:    bb 09 00 00 00                        	mov ebx, 9
0x11ca7:    41 ba 09 00 00 00                     	mov r10d, 9
0x11cad:    e9 1e f1 ff ff                        	jmp 0x10dd0 <function_10690+0x740>
0x11cb2:    88 44 24 18                           	mov byte ptr [rsp + 0x18], al
0x11cb6:    e9 c5 eb ff ff                        	jmp 0x10880 <function_10690+0x1f0>
0x11cbb:    4d 89 de                              	mov r14, r11
0x11cbe:    4d 89 d8                              	mov r8, r11
0x11cc1:    bd 01 00 00 00                        	mov ebp, 1
0x11cc6:    e9 f0 eb ff ff                        	jmp 0x108bb <function_10690+0x22b>
0x11ccb:    83 7c 24 20 5f                        	cmp dword ptr [rsp + 0x20], 0x5f
0x11cd0:    0f 84 af fd ff ff                     	je 0x11a85 <function_10690+0x13f5>
0x11cd6:    49 63 c2                              	movsxd rax, r10d
0x11cd9:    48 39 d0                              	cmp rax, rdx
0x11cdc:    0f 83 96 ea ff ff                     	jae 0x10778 <function_10690+0xe8>
0x11ce2:    4d 63 c6                              	movsxd r8, r14d
0x11ce5:    4d 89 de                              	mov r14, r11
0x11ce8:    e9 01 f5 ff ff                        	jmp 0x111ee <function_10690+0xb5e>
0x11ced:    41 69 c6 10 27 00 00                  	imul eax, r14d, 0x2710
0x11cf4:    41 ba 09 00 00 00                     	mov r10d, 9
0x11cfa:    41 be 01 00 00 00                     	mov r14d, 1
0x11d00:    6b f6 64                              	imul esi, esi, 0x64
0x11d03:    01 f0                                 	add eax, esi
0x11d05:    be 14 00 00 00                        	mov esi, 0x14
0x11d0a:    01 c1                                 	add ecx, eax
0x11d0c:    e9 67 ee ff ff                        	jmp 0x10b78 <function_10690+0x4e8>
0x11d11:    41 83 ea 01                           	sub r10d, 1
0x11d15:    ba 6d 01 00 00                        	mov edx, 0x16d
0x11d1a:    41 f6 c2 03                           	test r10b, 3
0x11d1e:    75 3e                                 	jne 0x11d5e <function_10690+0x16ce>
0x11d20:    44 89 d0                              	mov eax, r10d
0x11d23:    ba 1f 85 eb 51                        	mov edx, 0x51eb851f
0x11d28:    f7 ea                                 	imul edx
0x11d2a:    89 d0                                 	mov eax, edx
0x11d2c:    44 89 d2                              	mov edx, r10d
0x11d2f:    c1 fa 1f                              	sar edx, 0x1f
0x11d32:    c1 f8 05                              	sar eax, 5
0x11d35:    29 d0                                 	sub eax, edx
0x11d37:    ba 6e 01 00 00                        	mov edx, 0x16e
0x11d3c:    6b c0 64                              	imul eax, eax, 0x64
0x11d3f:    41 39 c2                              	cmp r10d, eax
0x11d42:    75 1a                                 	jne 0x11d5e <function_10690+0x16ce>
0x11d44:    44 89 d0                              	mov eax, r10d
0x11d47:    41 b8 90 01 00 00                     	mov r8d, 0x190
0x11d4d:    99                                    	cdq 
0x11d4e:    41 f7 f8                              	idiv r8d
0x11d51:    83 fa 01                              	cmp edx, 1
0x11d54:    19 d2                                 	sbb edx, edx
0x11d56:    f7 d2                                 	not edx
0x11d58:    81 c2 6e 01 00 00                     	add edx, 0x16e
0x11d5e:    41 01 d1                              	add r9d, edx
0x11d61:    ba 93 24 49 92                        	mov edx, 0x92492493
0x11d66:    45 89 c8                              	mov r8d, r9d
0x11d69:    45 29 f0                              	sub r8d, r14d
0x11d6c:    41 be ff ff ff ff                     	mov r14d, 0xffffffff
0x11d72:    41 81 c0 7e 01 00 00                  	add r8d, 0x17e
0x11d79:    44 89 c0                              	mov eax, r8d
0x11d7c:    45 29 c1                              	sub r9d, r8d
0x11d7f:    f7 ea                                 	imul edx
0x11d81:    42 8d 04 02                           	lea eax, [rdx + r8]
0x11d85:    44 89 c2                              	mov edx, r8d
0x11d88:    c1 fa 1f                              	sar edx, 0x1f
0x11d8b:    c1 f8 02                              	sar eax, 2
0x11d8e:    29 d0                                 	sub eax, edx
0x11d90:    8d 14 c5 00 00 00 00                  	lea edx, [rax*8]
0x11d97:    29 c2                                 	sub edx, eax
0x11d99:    45 8d 44 11 03                        	lea r8d, [r9 + rdx + 3]
0x11d9e:    e9 bd ef ff ff                        	jmp 0x10d60 <function_10690+0x6d0>
0x11da3:    b8 94 f8 ff ff                        	mov eax, 0xfffff894
0x11da8:    42 8d 8c 36 6c 07 00 00               	lea ecx, [rsi + r14 + 0x76c]
0x11db0:    41 ba 04 00 00 00                     	mov r10d, 4
0x11db6:    44 29 f0                              	sub eax, r14d
0x11db9:    39 c6                                 	cmp esi, eax
0x11dbb:    41 0f 9c c1                           	setl r9b
0x11dbf:    31 f6                                 	xor esi, esi
0x11dc1:    45 31 f6                              	xor r14d, r14d
0x11dc4:    e9 af ed ff ff                        	jmp 0x10b78 <function_10690+0x4e8>
0x11dc9:    44 89 c0                              	mov eax, r8d
0x11dcc:    ba 93 24 49 92                        	mov edx, 0x92492493
0x11dd1:    41 ba 02 00 00 00                     	mov r10d, 2
0x11dd7:    f7 ea                                 	imul edx
0x11dd9:    42 8d 0c 02                           	lea ecx, [rdx + r8]
0x11ddd:    41 c1 f8 1f                           	sar r8d, 0x1f
0x11de1:    c1 f9 02                              	sar ecx, 2
0x11de4:    44 29 c1                              	sub ecx, r8d
0x11de7:    83 c1 01                              	add ecx, 1
0x11dea:    e9 e1 ef ff ff                        	jmp 0x10dd0 <function_10690+0x740>
0x11def:    41 6b ce 64                           	imul ecx, r14d, 0x64
0x11df3:    41 ba 06 00 00 00                     	mov r10d, 6
0x11df9:    41 be 01 00 00 00                     	mov r14d, 1
0x11dff:    01 f1                                 	add ecx, esi
0x11e01:    be 04 00 00 00                        	mov esi, 4
0x11e06:    e9 6d ed ff ff                        	jmp 0x10b78 <function_10690+0x4e8>
0x11e0b:    e8 70 1d ff ff                        	call 0x3b80 <memcpy>
0x11e10:    4c 8b 5c 24 18                        	mov r11, qword ptr [rsp + 0x18]
0x11e15:    e9 b9 f9 ff ff                        	jmp 0x117d3 <function_10690+0x1143>
0x11e1a:    48 8b 74 24 40                        	mov rsi, qword ptr [rsp + 0x40]
0x11e1f:    48 89 ea                              	mov rdx, rbp
0x11e22:    4c 89 ff                              	mov rdi, r15
0x11e25:    4c 89 5c 24 18                        	mov qword ptr [rsp + 0x18], r11
0x11e2a:    e8 c1 e7 ff ff                        	call 0x105f0 <function_105f0>
0x11e2f:    4c 8b 5c 24 18                        	mov r11, qword ptr [rsp + 0x18]
0x11e34:    e9 9a f9 ff ff                        	jmp 0x117d3 <function_10690+0x1143>
0x11e39:    49 8d 4b 02                           	lea rcx, [r11 + 2]
0x11e3d:    41 ba 01 00 00 00                     	mov r10d, 1
0x11e43:    48 89 ca                              	mov rdx, rcx
0x11e46:    48 83 c1 01                           	add rcx, 1
0x11e4a:    0f b6 41 ff                           	movzx eax, byte ptr [rcx - 1]
0x11e4e:    49 83 c2 01                           	add r10, 1
0x11e52:    3c 3a                                 	cmp al, 0x3a
0x11e54:    0f 85 2c f0 ff ff                     	jne 0x10e86 <function_10690+0x7f6>
0x11e5a:    eb e7                                 	jmp 0x11e43 <function_10690+0x17b3>
0x11e5c:    4c 89 ff                              	mov rdi, r15
0x11e5f:    be 30 00 00 00                        	mov esi, 0x30
0x11e64:    4c 89 54 24 20                        	mov qword ptr [rsp + 0x20], r10
0x11e69:    49 89 df                              	mov r15, rbx
0x11e6c:    e8 ef 1b ff ff                        	call 0x3a60 <memset>
0x11e71:    4c 8b 54 24 20                        	mov r10, qword ptr [rsp + 0x20]
0x11e76:    4c 8b 5c 24 58                        	mov r11, qword ptr [rsp + 0x58]
0x11e7b:    e9 6a fb ff ff                        	jmp 0x119ea <function_10690+0x135a>
0x11e80:    41 0f b6 0b                           	movzx ecx, byte ptr [r11]
0x11e84:    4d 89 d8                              	mov r8, r11
0x11e87:    e9 ed f6 ff ff                        	jmp 0x11579 <function_10690+0xee9>
0x11e8c:    41 6b ce 64                           	imul ecx, r14d, 0x64
0x11e90:    31 f6                                 	xor esi, esi
0x11e92:    41 be 01 00 00 00                     	mov r14d, 1
0x11e98:    41 ba 05 00 00 00                     	mov r10d, 5
0x11e9e:    01 c1                                 	add ecx, eax
0x11ea0:    e9 d3 ec ff ff                        	jmp 0x10b78 <function_10690+0x4e8>
0x11ea5:    4c 89 ff                              	mov rdi, r15
0x11ea8:    be 30 00 00 00                        	mov esi, 0x30
0x11ead:    49 89 df                              	mov r15, rbx
0x11eb0:    e8 ab 1b ff ff                        	call 0x3a60 <memset>
0x11eb5:    4c 8b 5c 24 18                        	mov r11, qword ptr [rsp + 0x18]
0x11eba:    e9 8b f1 ff ff                        	jmp 0x1104a <function_10690+0x9ba>
0x11ebf:    4c 89 ff                              	mov rdi, r15
0x11ec2:    be 30 00 00 00                        	mov esi, 0x30
0x11ec7:    49 89 df                              	mov r15, rbx
0x11eca:    e8 91 1b ff ff                        	call 0x3a60 <memset>
0x11ecf:    4c 8b 5c 24 18                        	mov r11, qword ptr [rsp + 0x18]
0x11ed4:    e9 d9 f5 ff ff                        	jmp 0x114b2 <function_10690+0xe22>
0x11ed9:    4c 89 ff                              	mov rdi, r15
0x11edc:    be 30 00 00 00                        	mov esi, 0x30
0x11ee1:    44 88 44 24 20                        	mov byte ptr [rsp + 0x20], r8b
0x11ee6:    49 89 df                              	mov r15, rbx
0x11ee9:    e8 72 1b ff ff                        	call 0x3a60 <memset>
0x11eee:    44 0f b6 44 24 20                     	movzx r8d, byte ptr [rsp + 0x20]
0x11ef4:    4c 8b 5c 24 50                        	mov r11, qword ptr [rsp + 0x50]
0x11ef9:    e9 a7 f8 ff ff                        	jmp 0x117a5 <function_10690+0x1115>
0x11efe:    4c 89 ff                              	mov rdi, r15
0x11f01:    be 30 00 00 00                        	mov esi, 0x30
0x11f06:    49 89 df                              	mov r15, rbx
0x11f09:    e8 52 1b ff ff                        	call 0x3a60 <memset>
0x11f0e:    44 8b 54 24 50                        	mov r10d, dword ptr [rsp + 0x50]
0x11f13:    48 8b 4c 24 58                        	mov rcx, qword ptr [rsp + 0x58]
0x11f18:    4c 8b 44 24 60                        	mov r8, qword ptr [rsp + 0x60]
0x11f1d:    44 0f b6 4c 24 68                     	movzx r9d, byte ptr [rsp + 0x68]
0x11f23:    4c 8b 5c 24 70                        	mov r11, qword ptr [rsp + 0x70]
0x11f28:    e9 b7 f2 ff ff                        	jmp 0x111e4 <function_10690+0xb54>
0x11f2d:    4c 89 ff                              	mov rdi, r15
0x11f30:    be 30 00 00 00                        	mov esi, 0x30
0x11f35:    e8 26 1b ff ff                        	call 0x3a60 <memset>
0x11f3a:    4c 8b 7c 24 50                        	mov r15, qword ptr [rsp + 0x50]
0x11f3f:    44 8b 54 24 58                        	mov r10d, dword ptr [rsp + 0x58]
0x11f44:    4c 8b 44 24 60                        	mov r8, qword ptr [rsp + 0x60]
0x11f49:    48 8b 4c 24 68                        	mov rcx, qword ptr [rsp + 0x68]
0x11f4e:    44 0f b6 4c 24 70                     	movzx r9d, byte ptr [rsp + 0x70]
0x11f54:    4c 8b 5c 24 78                        	mov r11, qword ptr [rsp + 0x78]
0x11f59:    e9 52 fc ff ff                        	jmp 0x11bb0 <function_10690+0x1520>
0x11f5e:    8b 8c 24 18 05 00 00                  	mov ecx, dword ptr [rsp + 0x518]
0x11f65:    e9 85 f7 ff ff                        	jmp 0x116ef <function_10690+0x105f>
0x11f6a:    e8 01 1a ff ff                        	call 0x3970 <__stack_chk_fail>
0x11f6f:    45 31 d2                              	xor r10d, r10d
0x11f72:    e9 25 ec ff ff                        	jmp 0x10b9c <function_10690+0x50c>
; data inside code section at 0x11f77 -- 0x11f80
0x11f77:    66 0f 1f 84 00 00 00 00  00                        |f........       |
; function: function_11f80 at 0x11f80 -- 0x11fd0
0x11f80:    48 83 ec 18                           	sub rsp, 0x18
0x11f84:    64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x11f8d:    48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x11f92:    31 c0                                 	xor eax, eax
0x11f94:    c6 44 24 07 00                        	mov byte ptr [rsp + 7], 0
0x11f99:    41 51                                 	push r9
0x11f9b:    41 50                                 	push r8
0x11f9d:    45 31 c0                              	xor r8d, r8d
0x11fa0:    4c 8d 4c 24 17                        	lea r9, [rsp + 0x17]
0x11fa5:    e8 e6 e6 ff ff                        	call 0x10690 <function_10690>
0x11faa:    5a                                    	pop rdx
0x11fab:    59                                    	pop rcx
0x11fac:    48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0x11fb1:    64 48 33 14 25 28 00 00 00            	xor rdx, qword ptr fs:[0x28]
0x11fba:    75 05                                 	jne 0x11fc1 <function_11f80+0x41>
0x11fbc:    48 83 c4 18                           	add rsp, 0x18
0x11fc0:    c3                                    	ret 
0x11fc1:    e8 aa 19 ff ff                        	call 0x3970 <__stack_chk_fail>
0x11fc6:    66 2e 0f 1f 84 00 00 00 00 00         	nop word ptr cs:[rax + rax]
; function: function_11fd0 at 0x11fd0 -- 0x12069
0x11fd0:    48 85 ff                              	test rdi, rdi
0x11fd3:    53                                    	push rbx
0x11fd4:    74 71                                 	je 0x12047 <function_11fd0+0x77>
0x11fd6:    be 2f 00 00 00                        	mov esi, 0x2f
0x11fdb:    48 89 fb                              	mov rbx, rdi
0x11fde:    e8 fd 19 ff ff                        	call 0x39e0 <strrchr>
0x11fe3:    48 85 c0                              	test rax, rax
0x11fe6:    74 4f                                 	je 0x12037 <function_11fd0+0x67>
0x11fe8:    48 8d 50 01                           	lea rdx, [rax + 1]
0x11fec:    48 89 d1                              	mov rcx, rdx
0x11fef:    48 29 d9                              	sub rcx, rbx
0x11ff2:    48 83 f9 06                           	cmp rcx, 6
0x11ff6:    7e 3f                                 	jle 0x12037 <function_11fd0+0x67>
0x11ff8:    48 8d 70 fa                           	lea rsi, [rax - 6]
0x11ffc:    48 8d 3d 9d 86 00 00                  	lea rdi, [rip + 0x869d]
0x12003:    b9 07 00 00 00                        	mov ecx, 7
0x12008:    f3 a6                                 	repe cmpsb byte ptr [rsi], byte ptr [rdi]
0x1200a:    75 2b                                 	jne 0x12037 <function_11fd0+0x67>
0x1200c:    48 8d 3d 95 86 00 00                  	lea rdi, [rip + 0x8695]
0x12013:    b9 03 00 00 00                        	mov ecx, 3
0x12018:    48 89 d6                              	mov rsi, rdx
0x1201b:    48 89 d3                              	mov rbx, rdx
0x1201e:    f3 a6                                 	repe cmpsb byte ptr [rsi], byte ptr [rdi]
0x12020:    40 0f 97 c6                           	seta sil
0x12024:    0f 92 c1                              	setb cl
0x12027:    40 38 ce                              	cmp sil, cl
0x1202a:    75 0b                                 	jne 0x12037 <function_11fd0+0x67>
0x1202c:    48 8d 58 04                           	lea rbx, [rax + 4]
0x12030:    48 89 1d 49 e2 20 00                  	mov qword ptr [rip + 0x20e249], rbx
0x12037:    48 89 1d c2 f3 20 00                  	mov qword ptr [rip + 0x20f3c2], rbx
0x1203e:    48 89 1d 63 e2 20 00                  	mov qword ptr [rip + 0x20e263], rbx
0x12045:    5b                                    	pop rbx
0x12046:    c3                                    	ret 
0x12047:    48 8b 0d 72 e2 20 00                  	mov rcx, qword ptr [rip + 0x20e272]
0x1204e:    48 8d 3d 13 86 00 00                  	lea rdi, [rip + 0x8613]
0x12055:    ba 37 00 00 00                        	mov edx, 0x37
0x1205a:    be 01 00 00 00                        	mov esi, 1
0x1205f:    e8 7c 1d ff ff                        	call 0x3de0 <fwrite>
0x12064:    e8 77 17 ff ff                        	call 0x37e0 <abort>
; data inside code section at 0x12069 -- 0x12070
0x12069:    0f 1f 80 00 00 00 00                               |.......         |
; function: function_12070 at 0x12070 -- 0x12157
0x12070:    55                                    	push rbp
0x12071:    53                                    	push rbx
0x12072:    48 89 fd                              	mov rbp, rdi
0x12075:    89 f3                                 	mov ebx, esi
0x12077:    48 83 ec 08                           	sub rsp, 8
0x1207b:    e8 d0 3c 00 00                        	call 0x15d50 <function_15d50>
0x12080:    0f b6 10                              	movzx edx, byte ptr [rax]
0x12083:    83 e2 df                              	and edx, 0xffffffdf
0x12086:    80 fa 55                              	cmp dl, 0x55
0x12089:    74 75                                 	je 0x12100 <function_12070+0x90>
0x1208b:    80 fa 47                              	cmp dl, 0x47
0x1208e:    74 20                                 	je 0x120b0 <function_12070+0x40>
0x12090:    48 8d 05 24 86 00 00                  	lea rax, [rip + 0x8624]
0x12097:    48 8d 15 94 8f 00 00                  	lea rdx, [rip + 0x8f94]
0x1209e:    83 fb 09                              	cmp ebx, 9
0x120a1:    48 0f 45 c2                           	cmovne rax, rdx
0x120a5:    48 83 c4 08                           	add rsp, 8
0x120a9:    5b                                    	pop rbx
0x120aa:    5d                                    	pop rbp
0x120ab:    c3                                    	ret 
; data inside code section at 0x120ac -- 0x120b0
0x120ac:    0f 1f 40 00                                        |..@.            |
0x120b0:    0f b6 50 01                           	movzx edx, byte ptr [rax + 1]
0x120b4:    83 e2 df                              	and edx, 0xffffffdf
0x120b7:    80 fa 42                              	cmp dl, 0x42
0x120ba:    75 d4                                 	jne 0x12090 <function_12070+0x20>
0x120bc:    80 78 02 31                           	cmp byte ptr [rax + 2], 0x31
0x120c0:    75 ce                                 	jne 0x12090 <function_12070+0x20>
0x120c2:    80 78 03 38                           	cmp byte ptr [rax + 3], 0x38
0x120c6:    75 c8                                 	jne 0x12090 <function_12070+0x20>
0x120c8:    80 78 04 30                           	cmp byte ptr [rax + 4], 0x30
0x120cc:    75 c2                                 	jne 0x12090 <function_12070+0x20>
0x120ce:    80 78 05 33                           	cmp byte ptr [rax + 5], 0x33
0x120d2:    75 bc                                 	jne 0x12090 <function_12070+0x20>
0x120d4:    80 78 06 30                           	cmp byte ptr [rax + 6], 0x30
0x120d8:    75 b6                                 	jne 0x12090 <function_12070+0x20>
0x120da:    80 78 07 00                           	cmp byte ptr [rax + 7], 0
0x120de:    75 b0                                 	jne 0x12090 <function_12070+0x20>
0x120e0:    80 7d 00 60                           	cmp byte ptr [rbp], 0x60
0x120e4:    48 8d 05 c9 85 00 00                  	lea rax, [rip + 0x85c9]
0x120eb:    48 8d 15 c6 85 00 00                  	lea rdx, [rip + 0x85c6]
0x120f2:    48 0f 45 c2                           	cmovne rax, rdx
0x120f6:    48 83 c4 08                           	add rsp, 8
0x120fa:    5b                                    	pop rbx
0x120fb:    5d                                    	pop rbp
0x120fc:    c3                                    	ret 
; data inside code section at 0x120fd -- 0x12100
0x120fd:    0f 1f 00                                           |...             |
0x12100:    0f b6 50 01                           	movzx edx, byte ptr [rax + 1]
0x12104:    83 e2 df                              	and edx, 0xffffffdf
0x12107:    80 fa 54                              	cmp dl, 0x54
0x1210a:    75 84                                 	jne 0x12090 <function_12070+0x20>
0x1210c:    0f b6 50 02                           	movzx edx, byte ptr [rax + 2]
0x12110:    83 e2 df                              	and edx, 0xffffffdf
0x12113:    80 fa 46                              	cmp dl, 0x46
0x12116:    0f 85 74 ff ff ff                     	jne 0x12090 <function_12070+0x20>
0x1211c:    80 78 03 2d                           	cmp byte ptr [rax + 3], 0x2d
0x12120:    0f 85 6a ff ff ff                     	jne 0x12090 <function_12070+0x20>
0x12126:    80 78 04 38                           	cmp byte ptr [rax + 4], 0x38
0x1212a:    0f 85 60 ff ff ff                     	jne 0x12090 <function_12070+0x20>
0x12130:    80 78 05 00                           	cmp byte ptr [rax + 5], 0
0x12134:    0f 85 56 ff ff ff                     	jne 0x12090 <function_12070+0x20>
0x1213a:    80 7d 00 60                           	cmp byte ptr [rbp], 0x60
0x1213e:    48 8d 05 67 85 00 00                  	lea rax, [rip + 0x8567]
0x12145:    48 8d 15 64 85 00 00                  	lea rdx, [rip + 0x8564]
0x1214c:    48 0f 45 c2                           	cmovne rax, rdx
0x12150:    48 83 c4 08                           	add rsp, 8
0x12154:    5b                                    	pop rbx
0x12155:    5d                                    	pop rbp
0x12156:    c3                                    	ret 
; data inside code section at 0x12157 -- 0x12160
0x12157:    66 0f 1f 84 00 00 00 00  00                        |f........       |
; function: function_12160 at 0x12160 -- 0x13394
0x12160:    41 57                                 	push r15
0x12162:    41 56                                 	push r14
0x12164:    45 89 c7                              	mov r15d, r8d
0x12167:    41 55                                 	push r13
0x12169:    41 54                                 	push r12
0x1216b:    49 89 fe                              	mov r14, rdi
0x1216e:    55                                    	push rbp
0x1216f:    53                                    	push rbx
0x12170:    44 89 cb                              	mov ebx, r9d
0x12173:    49 89 f5                              	mov r13, rsi
0x12176:    48 89 cd                              	mov rbp, rcx
0x12179:    83 e3 02                              	and ebx, 2
0x1217c:    48 81 ec b8 00 00 00                  	sub rsp, 0xb8
0x12183:    48 8b 84 24 f0 00 00 00               	mov rax, qword ptr [rsp + 0xf0]
0x1218b:    48 89 54 24 10                        	mov qword ptr [rsp + 0x10], rdx
0x12190:    44 89 44 24 08                        	mov dword ptr [rsp + 8], r8d
0x12195:    44 89 4c 24 78                        	mov dword ptr [rsp + 0x78], r9d
0x1219a:    48 89 44 24 20                        	mov qword ptr [rsp + 0x20], rax
0x1219f:    48 8b 84 24 f8 00 00 00               	mov rax, qword ptr [rsp + 0xf8]
0x121a7:    48 89 44 24 68                        	mov qword ptr [rsp + 0x68], rax
0x121ac:    48 8b 84 24 00 01 00 00               	mov rax, qword ptr [rsp + 0x100]
0x121b4:    48 89 44 24 60                        	mov qword ptr [rsp + 0x60], rax
0x121b9:    64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x121c2:    48 89 84 24 a8 00 00 00               	mov qword ptr [rsp + 0xa8], rax
0x121ca:    31 c0                                 	xor eax, eax
0x121cc:    e8 6f 17 ff ff                        	call 0x3940 <__ctype_get_mb_cur_max>
0x121d1:    41 83 ff 0a                           	cmp r15d, 0xa
0x121d5:    48 89 44 24 58                        	mov qword ptr [rsp + 0x58], rax
0x121da:    0f 87 af 11 00 00                     	ja 0x1338f <function_12160+0x122f>
0x121e0:    48 8d 0d 39 85 00 00                  	lea rcx, [rip + 0x8539]
0x121e7:    44 89 fa                              	mov edx, r15d
0x121ea:    48 63 04 91                           	movsxd rax, dword ptr [rcx + rdx*4]
0x121ee:    48 01 c8                              	add rax, rcx
0x121f1:    ff e0                                 	jmp rax
0x121f3:    c6 44 24 0e 01                        	mov byte ptr [rsp + 0xe], 1
0x121f8:    c6 44 24 7c 00                        	mov byte ptr [rsp + 0x7c], 0
0x121fd:    45 31 e4                              	xor r12d, r12d
0x12200:    48 c7 44 24 50 00 00 00 00            	mov qword ptr [rsp + 0x50], 0
0x12209:    c6 44 24 0f 01                        	mov byte ptr [rsp + 0xf], 1
0x1220e:    c6 44 24 0d 00                        	mov byte ptr [rsp + 0xd], 0
0x12213:    48 8d 05 18 8e 00 00                  	lea rax, [rip + 0x8e18]
0x1221a:    48 c7 44 24 18 01 00 00 00            	mov qword ptr [rsp + 0x18], 1
0x12223:    45 31 ff                              	xor r15d, r15d
0x12226:    c7 44 24 08 02 00 00 00               	mov dword ptr [rsp + 8], 2
0x1222e:    48 89 44 24 48                        	mov qword ptr [rsp + 0x48], rax
0x12233:    45 31 db                              	xor r11d, r11d
0x12236:    48 89 e8                              	mov rax, rbp
0x12239:    45 89 e0                              	mov r8d, r12d
0x1223c:    4c 89 dd                              	mov rbp, r11
0x1223f:    49 89 c3                              	mov r11, rax
0x12242:    66 0f 1f 44 00 00                     	nop word ptr [rax + rax]
0x12248:    49 39 eb                              	cmp r11, rbp
0x1224b:    41 0f 95 c4                           	setne r12b
0x1224f:    49 83 fb ff                           	cmp r11, -1
0x12253:    75 0d                                 	jne 0x12262 <function_12160+0x102>
0x12255:    48 8b 44 24 10                        	mov rax, qword ptr [rsp + 0x10]
0x1225a:    80 3c 28 00                           	cmp byte ptr [rax + rbp], 0
0x1225e:    41 0f 95 c4                           	setne r12b
0x12262:    45 84 e4                              	test r12b, r12b
0x12265:    0f 84 55 06 00 00                     	je 0x128c0 <function_12160+0x760>
0x1226b:    83 7c 24 08 02                        	cmp dword ptr [rsp + 8], 2
0x12270:    48 8b 7c 24 10                        	mov rdi, qword ptr [rsp + 0x10]
0x12275:    4c 8d 0c 2f                           	lea r9, [rdi + rbp]
0x12279:    0f 95 c0                              	setne al
0x1227c:    22 44 24 0d                           	and al, byte ptr [rsp + 0xd]
0x12280:    41 89 c2                              	mov r10d, eax
0x12283:    0f 84 a7 00 00 00                     	je 0x12330 <function_12160+0x1d0>
0x12289:    48 8b 44 24 18                        	mov rax, qword ptr [rsp + 0x18]
0x1228e:    48 85 c0                              	test rax, rax
0x12291:    0f 84 29 04 00 00                     	je 0x126c0 <function_12160+0x560>
0x12297:    49 83 fb ff                           	cmp r11, -1
0x1229b:    48 8d 5c 05 00                        	lea rbx, [rbp + rax]
0x122a0:    75 2e                                 	jne 0x122d0 <function_12160+0x170>
0x122a2:    48 83 f8 01                           	cmp rax, 1
0x122a6:    76 28                                 	jbe 0x122d0 <function_12160+0x170>
0x122a8:    44 88 44 24 38                        	mov byte ptr [rsp + 0x38], r8b
0x122ad:    44 88 54 24 30                        	mov byte ptr [rsp + 0x30], r10b
0x122b2:    4c 89 4c 24 28                        	mov qword ptr [rsp + 0x28], r9
0x122b7:    e8 94 16 ff ff                        	call 0x3950 <strlen>
0x122bc:    44 0f b6 44 24 38                     	movzx r8d, byte ptr [rsp + 0x38]
0x122c2:    44 0f b6 54 24 30                     	movzx r10d, byte ptr [rsp + 0x30]
0x122c8:    49 89 c3                              	mov r11, rax
0x122cb:    4c 8b 4c 24 28                        	mov r9, qword ptr [rsp + 0x28]
0x122d0:    4c 39 db                              	cmp rbx, r11
0x122d3:    44 88 54 24 28                        	mov byte ptr [rsp + 0x28], r10b
0x122d8:    0f 87 b2 05 00 00                     	ja 0x12890 <function_12160+0x730>
0x122de:    48 8b 54 24 18                        	mov rdx, qword ptr [rsp + 0x18]
0x122e3:    48 8b 74 24 48                        	mov rsi, qword ptr [rsp + 0x48]
0x122e8:    4c 89 cf                              	mov rdi, r9
0x122eb:    4c 89 5c 24 40                        	mov qword ptr [rsp + 0x40], r11
0x122f0:    44 88 44 24 38                        	mov byte ptr [rsp + 0x38], r8b
0x122f5:    4c 89 4c 24 30                        	mov qword ptr [rsp + 0x30], r9
0x122fa:    e8 d1 17 ff ff                        	call 0x3ad0 <memcmp>
0x122ff:    85 c0                                 	test eax, eax
0x12301:    4c 8b 4c 24 30                        	mov r9, qword ptr [rsp + 0x30]
0x12306:    44 0f b6 44 24 38                     	movzx r8d, byte ptr [rsp + 0x38]
0x1230c:    4c 8b 5c 24 40                        	mov r11, qword ptr [rsp + 0x40]
0x12311:    0f 85 79 05 00 00                     	jne 0x12890 <function_12160+0x730>
0x12317:    80 7c 24 0f 00                        	cmp byte ptr [rsp + 0xf], 0
0x1231c:    44 0f b6 54 24 28                     	movzx r10d, byte ptr [rsp + 0x28]
0x12322:    0f 85 7d 0f 00 00                     	jne 0x132a5 <function_12160+0x1145>
0x12328:    0f 1f 84 00 00 00 00 00               	nop dword ptr [rax + rax]
0x12330:    41 0f b6 19                           	movzx ebx, byte ptr [r9]
0x12334:    80 fb 7e                              	cmp bl, 0x7e
0x12337:    0f 87 1b 03 00 00                     	ja 0x12658 <function_12160+0x4f8>
0x1233d:    48 8d 0d 08 84 00 00                  	lea rcx, [rip + 0x8408]
0x12344:    0f b6 d3                              	movzx edx, bl
0x12347:    48 63 04 91                           	movsxd rax, dword ptr [rcx + rdx*4]
0x1234b:    48 01 c8                              	add rax, rcx
0x1234e:    ff e0                                 	jmp rax
0x12350:    45 31 d2                              	xor r10d, r10d
0x12353:    49 83 fb 01                           	cmp r11, 1
0x12357:    0f 95 c0                              	setne al
0x1235a:    49 83 fb ff                           	cmp r11, -1
0x1235e:    75 0c                                 	jne 0x1236c <function_12160+0x20c>
0x12360:    48 8b 44 24 10                        	mov rax, qword ptr [rsp + 0x10]
0x12365:    80 78 01 00                           	cmp byte ptr [rax + 1], 0
0x12369:    0f 95 c0                              	setne al
0x1236c:    83 7c 24 08 02                        	cmp dword ptr [rsp + 8], 2
0x12371:    0f 94 c2                              	sete dl
0x12374:    84 c0                                 	test al, al
0x12376:    0f 84 4c 02 00 00                     	je 0x125c8 <function_12160+0x468>
0x1237c:    45 31 e4                              	xor r12d, r12d
0x1237f:    31 c0                                 	xor eax, eax
0x12381:    0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0x12388:    80 7c 24 0d 01                        	cmp byte ptr [rsp + 0xd], 1
0x1238d:    0f 85 0f 01 00 00                     	jne 0x124a2 <function_12160+0x342>
0x12393:    84 d2                                 	test dl, dl
0x12395:    0f 85 07 01 00 00                     	jne 0x124a2 <function_12160+0x342>
0x1239b:    48 8b 74 24 20                        	mov rsi, qword ptr [rsp + 0x20]
0x123a0:    48 85 f6                              	test rsi, rsi
0x123a3:    74 14                                 	je 0x123b9 <function_12160+0x259>
0x123a5:    89 da                                 	mov edx, ebx
0x123a7:    c0 ea 05                              	shr dl, 5
0x123aa:    0f b6 d2                              	movzx edx, dl
0x123ad:    8b 14 96                              	mov edx, dword ptr [rsi + rdx*4]
0x123b0:    0f a3 da                              	bt edx, ebx
0x123b3:    0f 82 4a 01 00 00                     	jb 0x12503 <function_12160+0x3a3>
0x123b9:    45 84 d2                              	test r10b, r10b
0x123bc:    0f 85 41 01 00 00                     	jne 0x12503 <function_12160+0x3a3>
0x123c2:    83 f0 01                              	xor eax, 1
0x123c5:    48 83 c5 01                           	add rbp, 1
0x123c9:    44 21 c0                              	and eax, r8d
0x123cc:    84 c0                                 	test al, al
0x123ce:    74 20                                 	je 0x123f0 <function_12160+0x290>
0x123d0:    4d 39 fd                              	cmp r13, r15
0x123d3:    76 05                                 	jbe 0x123da <function_12160+0x27a>
0x123d5:    43 c6 04 3e 27                        	mov byte ptr [r14 + r15], 0x27
0x123da:    49 8d 47 01                           	lea rax, [r15 + 1]
0x123de:    49 39 c5                              	cmp r13, rax
0x123e1:    76 06                                 	jbe 0x123e9 <function_12160+0x289>
0x123e3:    43 c6 44 3e 01 27                     	mov byte ptr [r14 + r15 + 1], 0x27
0x123e9:    49 83 c7 02                           	add r15, 2
0x123ed:    45 31 c0                              	xor r8d, r8d
0x123f0:    4d 39 ef                              	cmp r15, r13
0x123f3:    73 04                                 	jae 0x123f9 <function_12160+0x299>
0x123f5:    43 88 1c 3e                           	mov byte ptr [r14 + r15], bl
0x123f9:    0f b6 7c 24 0e                        	movzx edi, byte ptr [rsp + 0xe]
0x123fe:    49 83 c7 01                           	add r15, 1
0x12402:    b8 00 00 00 00                        	mov eax, 0
0x12407:    45 84 e4                              	test r12b, r12b
0x1240a:    0f 44 f8                              	cmove edi, eax
0x1240d:    40 88 7c 24 0e                        	mov byte ptr [rsp + 0xe], dil
0x12412:    e9 31 fe ff ff                        	jmp 0x12248 <function_12160+0xe8>
; data inside code section at 0x12417 -- 0x12420
0x12417:    66 0f 1f 84 00 00 00 00  00                        |f........       |
0x12420:    45 31 d2                              	xor r10d, r10d
0x12423:    8b 44 24 08                           	mov eax, dword ptr [rsp + 8]
0x12427:    83 f8 02                              	cmp eax, 2
0x1242a:    0f 84 b8 05 00 00                     	je 0x129e8 <function_12160+0x888>
0x12430:    83 f8 05                              	cmp eax, 5
0x12433:    0f 84 6f 05 00 00                     	je 0x129a8 <function_12160+0x848>
0x12439:    83 f8 02                              	cmp eax, 2
0x1243c:    bb 3f 00 00 00                        	mov ebx, 0x3f
0x12441:    0f 94 c2                              	sete dl
0x12444:    45 31 e4                              	xor r12d, r12d
0x12447:    31 c0                                 	xor eax, eax
0x12449:    e9 3a ff ff ff                        	jmp 0x12388 <function_12160+0x228>
; data inside code section at 0x1244e -- 0x12450
0x1244e:    66 90                                              |f.              |
0x12450:    45 31 d2                              	xor r10d, r10d
0x12453:    83 7c 24 08 02                        	cmp dword ptr [rsp + 8], 2
0x12458:    0f 84 02 05 00 00                     	je 0x12960 <function_12160+0x800>
0x1245e:    44 88 64 24 7c                        	mov byte ptr [rsp + 0x7c], r12b
0x12463:    31 d2                                 	xor edx, edx
0x12465:    31 c0                                 	xor eax, eax
0x12467:    bb 27 00 00 00                        	mov ebx, 0x27
0x1246c:    e9 17 ff ff ff                        	jmp 0x12388 <function_12160+0x228>
; data inside code section at 0x12471 -- 0x12478
0x12471:    0f 1f 80 00 00 00 00                               |.......         |
0x12478:    ba 09 00 00 00                        	mov edx, 9
0x1247d:    bb 74 00 00 00                        	mov ebx, 0x74
0x12482:    83 7c 24 08 02                        	cmp dword ptr [rsp + 8], 2
0x12487:    0f 94 c0                              	sete al
0x1248a:    22 44 24 0f                           	and al, byte ptr [rsp + 0xf]
0x1248e:    0f 85 4a 01 00 00                     	jne 0x125de <function_12160+0x47e>
0x12494:    80 7c 24 0d 00                        	cmp byte ptr [rsp + 0xd], 0
0x12499:    75 65                                 	jne 0x12500 <function_12160+0x3a0>
0x1249b:    89 d3                                 	mov ebx, edx
0x1249d:    45 31 e4                              	xor r12d, r12d
0x124a0:    31 c0                                 	xor eax, eax
0x124a2:    80 7c 24 0f 00                        	cmp byte ptr [rsp + 0xf], 0
0x124a7:    0f 85 ee fe ff ff                     	jne 0x1239b <function_12160+0x23b>
0x124ad:    e9 07 ff ff ff                        	jmp 0x123b9 <function_12160+0x259>
; data inside code section at 0x124b2 -- 0x124b8
0x124b2:    66 0f 1f 44 00 00                                  |f..D..          |
0x124b8:    ba 08 00 00 00                        	mov edx, 8
0x124bd:    bb 62 00 00 00                        	mov ebx, 0x62
0x124c2:    eb d0                                 	jmp 0x12494 <function_12160+0x334>
; data inside code section at 0x124c4 -- 0x124c8
0x124c4:    0f 1f 40 00                                        |..@.            |
0x124c8:    83 7c 24 08 02                        	cmp dword ptr [rsp + 8], 2
0x124cd:    0f 84 cd 03 00 00                     	je 0x128a0 <function_12160+0x740>
0x124d3:    80 7c 24 0d 00                        	cmp byte ptr [rsp + 0xd], 0
0x124d8:    0f 84 12 02 00 00                     	je 0x126f0 <function_12160+0x590>
0x124de:    80 7c 24 0f 00                        	cmp byte ptr [rsp + 0xf], 0
0x124e3:    0f 84 07 02 00 00                     	je 0x126f0 <function_12160+0x590>
0x124e9:    48 83 7c 24 18 00                     	cmp qword ptr [rsp + 0x18], 0
0x124ef:    0f 85 b6 03 00 00                     	jne 0x128ab <function_12160+0x74b>
0x124f5:    bb 5c 00 00 00                        	mov ebx, 0x5c
0x124fa:    66 0f 1f 44 00 00                     	nop word ptr [rax + rax]
0x12500:    45 31 e4                              	xor r12d, r12d
0x12503:    83 7c 24 08 02                        	cmp dword ptr [rsp + 8], 2
0x12508:    0f 94 c2                              	sete dl
0x1250b:    80 7c 24 0f 00                        	cmp byte ptr [rsp + 0xf], 0
0x12510:    89 d0                                 	mov eax, edx
0x12512:    0f 85 50 08 00 00                     	jne 0x12d68 <function_12160+0xc08>
0x12518:    44 89 c0                              	mov eax, r8d
0x1251b:    83 f0 01                              	xor eax, 1
0x1251e:    20 d0                                 	and al, dl
0x12520:    74 2f                                 	je 0x12551 <function_12160+0x3f1>
0x12522:    4d 39 fd                              	cmp r13, r15
0x12525:    76 05                                 	jbe 0x1252c <function_12160+0x3cc>
0x12527:    43 c6 04 3e 27                        	mov byte ptr [r14 + r15], 0x27
0x1252c:    49 8d 57 01                           	lea rdx, [r15 + 1]
0x12530:    49 39 d5                              	cmp r13, rdx
0x12533:    76 06                                 	jbe 0x1253b <function_12160+0x3db>
0x12535:    43 c6 44 3e 01 24                     	mov byte ptr [r14 + r15 + 1], 0x24
0x1253b:    49 8d 57 02                           	lea rdx, [r15 + 2]
0x1253f:    49 39 d5                              	cmp r13, rdx
0x12542:    76 06                                 	jbe 0x1254a <function_12160+0x3ea>
0x12544:    43 c6 44 3e 02 27                     	mov byte ptr [r14 + r15 + 2], 0x27
0x1254a:    49 83 c7 03                           	add r15, 3
0x1254e:    41 89 c0                              	mov r8d, eax
0x12551:    4d 39 fd                              	cmp r13, r15
0x12554:    76 05                                 	jbe 0x1255b <function_12160+0x3fb>
0x12556:    43 c6 04 3e 5c                        	mov byte ptr [r14 + r15], 0x5c
0x1255b:    49 83 c7 01                           	add r15, 1
0x1255f:    48 83 c5 01                           	add rbp, 1
0x12563:    e9 88 fe ff ff                        	jmp 0x123f0 <function_12160+0x290>
; data inside code section at 0x12568 -- 0x12570
0x12568:    0f 1f 84 00 00 00 00 00                            |........        |
0x12570:    80 7c 24 0d 00                        	cmp byte ptr [rsp + 0xd], 0
0x12575:    0f 85 c8 01 00 00                     	jne 0x12743 <function_12160+0x5e3>
0x1257b:    31 d2                                 	xor edx, edx
0x1257d:    f6 44 24 78 01                        	test byte ptr [rsp + 0x78], 1
0x12582:    0f 84 13 ff ff ff                     	je 0x1249b <function_12160+0x33b>
0x12588:    48 83 c5 01                           	add rbp, 1
0x1258c:    e9 b7 fc ff ff                        	jmp 0x12248 <function_12160+0xe8>
; data inside code section at 0x12591 -- 0x12598
0x12591:    0f 1f 80 00 00 00 00                               |.......         |
0x12598:    83 7c 24 08 02                        	cmp dword ptr [rsp + 8], 2
0x1259d:    0f 94 c2                              	sete dl
0x125a0:    31 c0                                 	xor eax, eax
0x125a2:    e9 e1 fd ff ff                        	jmp 0x12388 <function_12160+0x228>
; data inside code section at 0x125a7 -- 0x125b0
0x125a7:    66 0f 1f 84 00 00 00 00  00                        |f........       |
0x125b0:    ba 07 00 00 00                        	mov edx, 7
0x125b5:    bb 61 00 00 00                        	mov ebx, 0x61
0x125ba:    e9 d5 fe ff ff                        	jmp 0x12494 <function_12160+0x334>
; data inside code section at 0x125bf -- 0x125c0
0x125bf:    90                                                 |.               |
0x125c0:    83 7c 24 08 02                        	cmp dword ptr [rsp + 8], 2
0x125c5:    0f 94 c2                              	sete dl
0x125c8:    48 85 ed                              	test rbp, rbp
0x125cb:    0f 85 ab fd ff ff                     	jne 0x1237c <function_12160+0x21c>
0x125d1:    0f b6 44 24 0f                        	movzx eax, byte ptr [rsp + 0xf]
0x125d6:    20 d0                                 	and al, dl
0x125d8:    0f 84 aa fd ff ff                     	je 0x12388 <function_12160+0x228>
0x125de:    4c 89 dd                              	mov rbp, r11
0x125e1:    c7 44 24 08 02 00 00 00               	mov dword ptr [rsp + 8], 2
0x125e9:    e9 fb 06 00 00                        	jmp 0x12ce9 <function_12160+0xb89>
; data inside code section at 0x125ee -- 0x125f0
0x125ee:    66 90                                              |f.              |
0x125f0:    83 7c 24 08 02                        	cmp dword ptr [rsp + 8], 2
0x125f5:    0f 94 c2                              	sete dl
0x125f8:    45 31 e4                              	xor r12d, r12d
0x125fb:    eb d4                                 	jmp 0x125d1 <function_12160+0x471>
; data inside code section at 0x125fd -- 0x12600
0x125fd:    0f 1f 00                                           |...             |
0x12600:    83 7c 24 08 02                        	cmp dword ptr [rsp + 8], 2
0x12605:    bb 20 00 00 00                        	mov ebx, 0x20
0x1260a:    0f 94 c2                              	sete dl
0x1260d:    eb c2                                 	jmp 0x125d1 <function_12160+0x471>
; data inside code section at 0x1260f -- 0x12610
0x1260f:    90                                                 |.               |
0x12610:    ba 0d 00 00 00                        	mov edx, 0xd
0x12615:    bb 72 00 00 00                        	mov ebx, 0x72
0x1261a:    e9 63 fe ff ff                        	jmp 0x12482 <function_12160+0x322>
; data inside code section at 0x1261f -- 0x12620
0x1261f:    90                                                 |.               |
0x12620:    ba 0c 00 00 00                        	mov edx, 0xc
0x12625:    bb 66 00 00 00                        	mov ebx, 0x66
0x1262a:    e9 65 fe ff ff                        	jmp 0x12494 <function_12160+0x334>
; data inside code section at 0x1262f -- 0x12630
0x1262f:    90                                                 |.               |
0x12630:    ba 0b 00 00 00                        	mov edx, 0xb
0x12635:    bb 76 00 00 00                        	mov ebx, 0x76
0x1263a:    e9 55 fe ff ff                        	jmp 0x12494 <function_12160+0x334>
; data inside code section at 0x1263f -- 0x12640
0x1263f:    90                                                 |.               |
0x12640:    ba 0a 00 00 00                        	mov edx, 0xa
0x12645:    bb 6e 00 00 00                        	mov ebx, 0x6e
0x1264a:    e9 33 fe ff ff                        	jmp 0x12482 <function_12160+0x322>
; data inside code section at 0x1264f -- 0x12650
0x1264f:    90                                                 |.               |
0x12650:    45 31 d2                              	xor r10d, r10d
0x12653:    0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0x12658:    48 83 7c 24 58 01                     	cmp qword ptr [rsp + 0x58], 1
0x1265e:    0f 85 a4 03 00 00                     	jne 0x12a08 <function_12160+0x8a8>
0x12664:    4c 89 5c 24 38                        	mov qword ptr [rsp + 0x38], r11
0x12669:    44 88 44 24 30                        	mov byte ptr [rsp + 0x30], r8b
0x1266e:    44 88 54 24 28                        	mov byte ptr [rsp + 0x28], r10b
0x12673:    e8 d8 17 ff ff                        	call 0x3e50 <__ctype_b_loc>
0x12678:    48 8b 08                              	mov rcx, qword ptr [rax]
0x1267b:    0f b6 d3                              	movzx edx, bl
0x1267e:    44 0f b6 54 24 28                     	movzx r10d, byte ptr [rsp + 0x28]
0x12684:    44 0f b6 44 24 30                     	movzx r8d, byte ptr [rsp + 0x30]
0x1268a:    4c 8b 5c 24 38                        	mov r11, qword ptr [rsp + 0x38]
0x1268f:    bf 01 00 00 00                        	mov edi, 1
0x12694:    0f b7 04 51                           	movzx eax, word ptr [rcx + rdx*2]
0x12698:    66 25 00 40                           	and ax, 0x4000
0x1269c:    41 0f 95 c4                           	setne r12b
0x126a0:    0f 94 c0                              	sete al
0x126a3:    22 44 24 0d                           	and al, byte ptr [rsp + 0xd]
0x126a7:    84 c0                                 	test al, al
0x126a9:    0f 85 92 09 00 00                     	jne 0x13041 <function_12160+0xee1>
0x126af:    83 7c 24 08 02                        	cmp dword ptr [rsp + 8], 2
0x126b4:    0f 94 c2                              	sete dl
0x126b7:    e9 cc fc ff ff                        	jmp 0x12388 <function_12160+0x228>
; data inside code section at 0x126bc -- 0x126c0
0x126bc:    0f 1f 40 00                                        |..@.            |
0x126c0:    41 0f b6 19                           	movzx ebx, byte ptr [r9]
0x126c4:    80 fb 7e                              	cmp bl, 0x7e
0x126c7:    77 87                                 	ja 0x12650 <function_12160+0x4f0>
0x126c9:    48 8d 0d 78 82 00 00                  	lea rcx, [rip + 0x8278]
0x126d0:    0f b6 d3                              	movzx edx, bl
0x126d3:    48 63 04 91                           	movsxd rax, dword ptr [rcx + rdx*4]
0x126d7:    48 01 c8                              	add rax, rcx
0x126da:    ff e0                                 	jmp rax
; data inside code section at 0x126dc -- 0x126e0
0x126dc:    0f 1f 40 00                                        |..@.            |
0x126e0:    45 31 d2                              	xor r10d, r10d
0x126e3:    80 7c 24 0d 00                        	cmp byte ptr [rsp + 0xd], 0
0x126e8:    0f 85 f0 fd ff ff                     	jne 0x124de <function_12160+0x37e>
0x126ee:    66 90                                 	nop 
0x126f0:    ba 5c 00 00 00                        	mov edx, 0x5c
0x126f5:    bb 5c 00 00 00                        	mov ebx, 0x5c
0x126fa:    e9 95 fd ff ff                        	jmp 0x12494 <function_12160+0x334>
; data inside code section at 0x126ff -- 0x12700
0x126ff:    90                                                 |.               |
0x12700:    ba 0c 00 00 00                        	mov edx, 0xc
0x12705:    45 31 d2                              	xor r10d, r10d
0x12708:    bb 66 00 00 00                        	mov ebx, 0x66
0x1270d:    e9 82 fd ff ff                        	jmp 0x12494 <function_12160+0x334>
; data inside code section at 0x12712 -- 0x12718
0x12712:    66 0f 1f 44 00 00                                  |f..D..          |
0x12718:    ba 0a 00 00 00                        	mov edx, 0xa
0x1271d:    45 31 d2                              	xor r10d, r10d
0x12720:    bb 6e 00 00 00                        	mov ebx, 0x6e
0x12725:    e9 58 fd ff ff                        	jmp 0x12482 <function_12160+0x322>
; data inside code section at 0x1272a -- 0x12730
0x1272a:    66 0f 1f 44 00 00                                  |f..D..          |
0x12730:    bb 61 00 00 00                        	mov ebx, 0x61
0x12735:    e9 c6 fd ff ff                        	jmp 0x12500 <function_12160+0x3a0>
; data inside code section at 0x1273a -- 0x12740
0x1273a:    66 0f 1f 44 00 00                                  |f..D..          |
0x12740:    45 31 d2                              	xor r10d, r10d
0x12743:    83 7c 24 08 02                        	cmp dword ptr [rsp + 8], 2
0x12748:    0f 94 c2                              	sete dl
0x1274b:    80 7c 24 0f 00                        	cmp byte ptr [rsp + 0xf], 0
0x12750:    0f 85 94 0b 00 00                     	jne 0x132ea <function_12160+0x118a>
0x12756:    44 89 c0                              	mov eax, r8d
0x12759:    4c 89 f9                              	mov rcx, r15
0x1275c:    83 f0 01                              	xor eax, 1
0x1275f:    20 d0                                 	and al, dl
0x12761:    74 2d                                 	je 0x12790 <function_12160+0x630>
0x12763:    4d 39 fd                              	cmp r13, r15
0x12766:    76 05                                 	jbe 0x1276d <function_12160+0x60d>
0x12768:    43 c6 04 3e 27                        	mov byte ptr [r14 + r15], 0x27
0x1276d:    49 8d 4f 01                           	lea rcx, [r15 + 1]
0x12771:    49 39 cd                              	cmp r13, rcx
0x12774:    76 06                                 	jbe 0x1277c <function_12160+0x61c>
0x12776:    43 c6 44 3e 01 24                     	mov byte ptr [r14 + r15 + 1], 0x24
0x1277c:    49 8d 4f 02                           	lea rcx, [r15 + 2]
0x12780:    49 39 cd                              	cmp r13, rcx
0x12783:    0f 87 30 06 00 00                     	ja 0x12db9 <function_12160+0xc59>
0x12789:    49 8d 4f 03                           	lea rcx, [r15 + 3]
0x1278d:    41 89 c0                              	mov r8d, eax
0x12790:    49 39 cd                              	cmp r13, rcx
0x12793:    76 05                                 	jbe 0x1279a <function_12160+0x63a>
0x12795:    41 c6 04 0e 5c                        	mov byte ptr [r14 + rcx], 0x5c
0x1279a:    83 7c 24 08 02                        	cmp dword ptr [rsp + 8], 2
0x1279f:    4c 8d 79 01                           	lea r15, [rcx + 1]
0x127a3:    0f 84 00 06 00 00                     	je 0x12da9 <function_12160+0xc49>
0x127a9:    48 8d 45 01                           	lea rax, [rbp + 1]
0x127ad:    4c 39 d8                              	cmp rax, r11
0x127b0:    73 19                                 	jae 0x127cb <function_12160+0x66b>
0x127b2:    48 8b 44 24 10                        	mov rax, qword ptr [rsp + 0x10]
0x127b7:    0f b6 44 28 01                        	movzx eax, byte ptr [rax + rbp + 1]
0x127bc:    88 44 24 28                           	mov byte ptr [rsp + 0x28], al
0x127c0:    83 e8 30                              	sub eax, 0x30
0x127c3:    3c 09                                 	cmp al, 9
0x127c5:    0f 86 2e 08 00 00                     	jbe 0x12ff9 <function_12160+0xe99>
0x127cb:    44 89 e0                              	mov eax, r12d
0x127ce:    bb 30 00 00 00                        	mov ebx, 0x30
0x127d3:    45 31 e4                              	xor r12d, r12d
0x127d6:    e9 ad fb ff ff                        	jmp 0x12388 <function_12160+0x228>
; data inside code section at 0x127db -- 0x127e0
0x127db:    0f 1f 44 00 00                                     |..D..           |
0x127e0:    83 7c 24 08 02                        	cmp dword ptr [rsp + 8], 2
0x127e5:    45 89 d4                              	mov r12d, r10d
0x127e8:    0f 94 c2                              	sete dl
0x127eb:    45 31 d2                              	xor r10d, r10d
0x127ee:    31 c0                                 	xor eax, eax
0x127f0:    e9 93 fb ff ff                        	jmp 0x12388 <function_12160+0x228>
; data inside code section at 0x127f5 -- 0x127f8
0x127f5:    0f 1f 00                                           |...             |
0x127f8:    83 7c 24 08 02                        	cmp dword ptr [rsp + 8], 2
0x127fd:    0f 94 c2                              	sete dl
0x12800:    45 31 d2                              	xor r10d, r10d
0x12803:    e9 c0 fd ff ff                        	jmp 0x125c8 <function_12160+0x468>
; data inside code section at 0x12808 -- 0x12810
0x12808:    0f 1f 84 00 00 00 00 00                            |........        |
0x12810:    83 7c 24 08 02                        	cmp dword ptr [rsp + 8], 2
0x12815:    0f 94 c2                              	sete dl
0x12818:    45 31 d2                              	xor r10d, r10d
0x1281b:    45 31 e4                              	xor r12d, r12d
0x1281e:    e9 ae fd ff ff                        	jmp 0x125d1 <function_12160+0x471>
; data inside code section at 0x12823 -- 0x12828
0x12823:    0f 1f 44 00 00                                     |..D..           |
0x12828:    83 7c 24 08 02                        	cmp dword ptr [rsp + 8], 2
0x1282d:    45 89 d4                              	mov r12d, r10d
0x12830:    bb 20 00 00 00                        	mov ebx, 0x20
0x12835:    0f 94 c2                              	sete dl
0x12838:    45 31 d2                              	xor r10d, r10d
0x1283b:    e9 91 fd ff ff                        	jmp 0x125d1 <function_12160+0x471>
0x12840:    ba 0d 00 00 00                        	mov edx, 0xd
0x12845:    45 31 d2                              	xor r10d, r10d
0x12848:    bb 72 00 00 00                        	mov ebx, 0x72
0x1284d:    e9 30 fc ff ff                        	jmp 0x12482 <function_12160+0x322>
; data inside code section at 0x12852 -- 0x12858
0x12852:    66 0f 1f 44 00 00                                  |f..D..          |
0x12858:    bb 76 00 00 00                        	mov ebx, 0x76
0x1285d:    e9 9e fc ff ff                        	jmp 0x12500 <function_12160+0x3a0>
; data inside code section at 0x12862 -- 0x12868
0x12862:    66 0f 1f 44 00 00                                  |f..D..          |
0x12868:    ba 09 00 00 00                        	mov edx, 9
0x1286d:    45 31 d2                              	xor r10d, r10d
0x12870:    bb 74 00 00 00                        	mov ebx, 0x74
0x12875:    e9 08 fc ff ff                        	jmp 0x12482 <function_12160+0x322>
; data inside code section at 0x1287a -- 0x12880
0x1287a:    66 0f 1f 44 00 00                                  |f..D..          |
0x12880:    bb 62 00 00 00                        	mov ebx, 0x62
0x12885:    e9 76 fc ff ff                        	jmp 0x12500 <function_12160+0x3a0>
; data inside code section at 0x1288a -- 0x12890
0x1288a:    66 0f 1f 44 00 00                                  |f..D..          |
0x12890:    45 31 d2                              	xor r10d, r10d
0x12893:    e9 98 fa ff ff                        	jmp 0x12330 <function_12160+0x1d0>
; data inside code section at 0x12898 -- 0x128a0
0x12898:    0f 1f 84 00 00 00 00 00                            |........        |
0x128a0:    80 7c 24 0f 00                        	cmp byte ptr [rsp + 0xf], 0
0x128a5:    0f 85 65 09 00 00                     	jne 0x13210 <function_12160+0x10b0>
0x128ab:    48 83 c5 01                           	add rbp, 1
0x128af:    44 89 c0                              	mov eax, r8d
0x128b2:    45 31 e4                              	xor r12d, r12d
0x128b5:    bb 5c 00 00 00                        	mov ebx, 0x5c
0x128ba:    e9 0d fb ff ff                        	jmp 0x123cc <function_12160+0x26c>
; data inside code section at 0x128bf -- 0x128c0
0x128bf:    90                                                 |.               |
0x128c0:    83 7c 24 08 02                        	cmp dword ptr [rsp + 8], 2
0x128c5:    0f b6 5c 24 0f                        	movzx ebx, byte ptr [rsp + 0xf]
0x128ca:    45 89 c4                              	mov r12d, r8d
0x128cd:    4c 89 dd                              	mov rbp, r11
0x128d0:    0f 94 c2                              	sete dl
0x128d3:    89 d8                                 	mov eax, ebx
0x128d5:    4d 85 ff                              	test r15, r15
0x128d8:    0f 94 c1                              	sete cl
0x128db:    21 d0                                 	and eax, edx
0x128dd:    20 c8                                 	and al, cl
0x128df:    0f 85 61 0a 00 00                     	jne 0x13346 <function_12160+0x11e6>
0x128e5:    89 d8                                 	mov eax, ebx
0x128e7:    83 f0 01                              	xor eax, 1
0x128ea:    20 c2                                 	and dl, al
0x128ec:    0f 84 6a 09 00 00                     	je 0x1325c <function_12160+0x10fc>
0x128f2:    80 7c 24 7c 00                        	cmp byte ptr [rsp + 0x7c], 0
0x128f7:    0f 84 5d 09 00 00                     	je 0x1325a <function_12160+0x10fa>
0x128fd:    80 7c 24 0e 00                        	cmp byte ptr [rsp + 0xe], 0
0x12902:    0f 85 f5 09 00 00                     	jne 0x132fd <function_12160+0x119d>
0x12908:    4d 85 ed                              	test r13, r13
0x1290b:    0f 94 c0                              	sete al
0x1290e:    48 83 7c 24 50 00                     	cmp qword ptr [rsp + 0x50], 0
0x12914:    0f 95 c2                              	setne dl
0x12917:    20 d0                                 	and al, dl
0x12919:    0f 84 1d 0a 00 00                     	je 0x1333c <function_12160+0x11dc>
0x1291f:    4c 8b 6c 24 50                        	mov r13, qword ptr [rsp + 0x50]
0x12924:    48 8d 1d 07 87 00 00                  	lea rbx, [rip + 0x8707]
0x1292b:    41 c6 06 27                           	mov byte ptr [r14], 0x27
0x1292f:    c7 44 24 08 02 00 00 00               	mov dword ptr [rsp + 8], 2
0x12937:    41 bf 01 00 00 00                     	mov r15d, 1
0x1293d:    48 c7 44 24 18 01 00 00 00            	mov qword ptr [rsp + 0x18], 1
0x12946:    c6 44 24 0f 00                        	mov byte ptr [rsp + 0xf], 0
0x1294b:    48 89 5c 24 48                        	mov qword ptr [rsp + 0x48], rbx
0x12950:    88 44 24 7c                           	mov byte ptr [rsp + 0x7c], al
0x12954:    e9 da f8 ff ff                        	jmp 0x12233 <function_12160+0xd3>
; data inside code section at 0x12959 -- 0x12960
0x12959:    0f 1f 80 00 00 00 00                               |.......         |
0x12960:    80 7c 24 0f 00                        	cmp byte ptr [rsp + 0xf], 0
0x12965:    0f 85 a5 08 00 00                     	jne 0x13210 <function_12160+0x10b0>
0x1296b:    4d 85 ed                              	test r13, r13
0x1296e:    0f 84 fc 03 00 00                     	je 0x12d70 <function_12160+0xc10>
0x12974:    31 d2                                 	xor edx, edx
0x12976:    48 83 7c 24 50 00                     	cmp qword ptr [rsp + 0x50], 0
0x1297c:    0f 85 ee 03 00 00                     	jne 0x12d70 <function_12160+0xc10>
0x12982:    4c 89 6c 24 50                        	mov qword ptr [rsp + 0x50], r13
0x12987:    49 83 c7 03                           	add r15, 3
0x1298b:    31 c0                                 	xor eax, eax
0x1298d:    44 88 64 24 7c                        	mov byte ptr [rsp + 0x7c], r12b
0x12992:    45 31 c0                              	xor r8d, r8d
0x12995:    49 89 d5                              	mov r13, rdx
0x12998:    bb 27 00 00 00                        	mov ebx, 0x27
0x1299d:    e9 17 fa ff ff                        	jmp 0x123b9 <function_12160+0x259>
; data inside code section at 0x129a2 -- 0x129a8
0x129a2:    66 0f 1f 44 00 00                                  |f..D..          |
0x129a8:    f6 44 24 78 04                        	test byte ptr [rsp + 0x78], 4
0x129ad:    74 21                                 	je 0x129d0 <function_12160+0x870>
0x129af:    48 8d 4d 02                           	lea rcx, [rbp + 2]
0x129b3:    4c 39 d9                              	cmp rcx, r11
0x129b6:    73 18                                 	jae 0x129d0 <function_12160+0x870>
0x129b8:    48 8b 44 24 10                        	mov rax, qword ptr [rsp + 0x10]
0x129bd:    80 7c 28 01 3f                        	cmp byte ptr [rax + rbp + 1], 0x3f
0x129c2:    0f 84 8a 07 00 00                     	je 0x13152 <function_12160+0xff2>
0x129c8:    0f 1f 84 00 00 00 00 00               	nop dword ptr [rax + rax]
0x129d0:    31 d2                                 	xor edx, edx
0x129d2:    45 31 e4                              	xor r12d, r12d
0x129d5:    31 c0                                 	xor eax, eax
0x129d7:    bb 3f 00 00 00                        	mov ebx, 0x3f
0x129dc:    e9 a7 f9 ff ff                        	jmp 0x12388 <function_12160+0x228>
; data inside code section at 0x129e1 -- 0x129e8
0x129e1:    0f 1f 80 00 00 00 00                               |.......         |
0x129e8:    80 7c 24 0f 00                        	cmp byte ptr [rsp + 0xf], 0
0x129ed:    0f 85 1d 08 00 00                     	jne 0x13210 <function_12160+0x10b0>
0x129f3:    45 31 e4                              	xor r12d, r12d
0x129f6:    31 c0                                 	xor eax, eax
0x129f8:    bb 3f 00 00 00                        	mov ebx, 0x3f
0x129fd:    e9 b7 f9 ff ff                        	jmp 0x123b9 <function_12160+0x259>
; data inside code section at 0x12a02 -- 0x12a08
0x12a02:    66 0f 1f 44 00 00                                  |f..D..          |
0x12a08:    48 8d 84 24 a0 00 00 00               	lea rax, [rsp + 0xa0]
0x12a10:    49 83 fb ff                           	cmp r11, -1
0x12a14:    48 c7 84 24 a0 00 00 00 00 00 00 00   	mov qword ptr [rsp + 0xa0], 0
0x12a20:    48 89 44 24 28                        	mov qword ptr [rsp + 0x28], rax
0x12a25:    75 2d                                 	jne 0x12a54 <function_12160+0x8f4>
0x12a27:    48 8b 7c 24 10                        	mov rdi, qword ptr [rsp + 0x10]
0x12a2c:    44 88 44 24 40                        	mov byte ptr [rsp + 0x40], r8b
0x12a31:    44 88 54 24 38                        	mov byte ptr [rsp + 0x38], r10b
0x12a36:    4c 89 4c 24 30                        	mov qword ptr [rsp + 0x30], r9
0x12a3b:    e8 10 0f ff ff                        	call 0x3950 <strlen>
0x12a40:    44 0f b6 44 24 40                     	movzx r8d, byte ptr [rsp + 0x40]
0x12a46:    44 0f b6 54 24 38                     	movzx r10d, byte ptr [rsp + 0x38]
0x12a4c:    49 89 c3                              	mov r11, rax
0x12a4f:    4c 8b 4c 24 30                        	mov r9, qword ptr [rsp + 0x30]
0x12a54:    48 8d 84 24 9c 00 00 00               	lea rax, [rsp + 0x9c]
0x12a5c:    31 c9                                 	xor ecx, ecx
0x12a5e:    88 5c 24 7e                           	mov byte ptr [rsp + 0x7e], bl
0x12a62:    44 88 44 24 7d                        	mov byte ptr [rsp + 0x7d], r8b
0x12a67:    48 89 cb                              	mov rbx, rcx
0x12a6a:    4c 89 8c 24 88 00 00 00               	mov qword ptr [rsp + 0x88], r9
0x12a72:    48 89 44 24 38                        	mov qword ptr [rsp + 0x38], rax
0x12a77:    44 88 54 24 7f                        	mov byte ptr [rsp + 0x7f], r10b
0x12a7c:    4c 89 bc 24 80 00 00 00               	mov qword ptr [rsp + 0x80], r15
0x12a84:    4c 89 74 24 40                        	mov qword ptr [rsp + 0x40], r14
0x12a89:    4c 89 6c 24 70                        	mov qword ptr [rsp + 0x70], r13
0x12a8e:    4c 89 5c 24 30                        	mov qword ptr [rsp + 0x30], r11
0x12a93:    48 8b 44 24 10                        	mov rax, qword ptr [rsp + 0x10]
0x12a98:    4c 8d 74 1d 00                        	lea r14, [rbp + rbx]
0x12a9d:    48 8b 54 24 30                        	mov rdx, qword ptr [rsp + 0x30]
0x12aa2:    48 8b 4c 24 28                        	mov rcx, qword ptr [rsp + 0x28]
0x12aa7:    48 8b 7c 24 38                        	mov rdi, qword ptr [rsp + 0x38]
0x12aac:    4e 8d 2c 30                           	lea r13, [rax + r14]
0x12ab0:    4c 29 f2                              	sub rdx, r14
0x12ab3:    4c 89 ee                              	mov rsi, r13
0x12ab6:    e8 55 28 00 00                        	call 0x15310 <function_15310>
0x12abb:    48 85 c0                              	test rax, rax
0x12abe:    49 89 c7                              	mov r15, rax
0x12ac1:    74 4e                                 	je 0x12b11 <function_12160+0x9b1>
0x12ac3:    48 83 f8 ff                           	cmp rax, -1
0x12ac7:    0f 84 18 06 00 00                     	je 0x130e5 <function_12160+0xf85>
0x12acd:    48 83 f8 fe                           	cmp rax, -2
0x12ad1:    0f 84 9a 05 00 00                     	je 0x13071 <function_12160+0xf11>
0x12ad7:    83 7c 24 08 02                        	cmp dword ptr [rsp + 8], 2
0x12adc:    0f 94 c0                              	sete al
0x12adf:    22 44 24 0f                           	and al, byte ptr [rsp + 0xf]
0x12ae3:    0f 85 97 01 00 00                     	jne 0x12c80 <function_12160+0xb20>
0x12ae9:    8b bc 24 9c 00 00 00                  	mov edi, dword ptr [rsp + 0x9c]
0x12af0:    e8 2b 13 ff ff                        	call 0x3e20 <iswprint>
0x12af5:    48 8b 7c 24 28                        	mov rdi, qword ptr [rsp + 0x28]
0x12afa:    85 c0                                 	test eax, eax
0x12afc:    b8 00 00 00 00                        	mov eax, 0
0x12b01:    44 0f 44 e0                           	cmove r12d, eax
0x12b05:    4c 01 fb                              	add rbx, r15
0x12b08:    e8 03 13 ff ff                        	call 0x3e10 <mbsinit>
0x12b0d:    85 c0                                 	test eax, eax
0x12b0f:    74 82                                 	je 0x12a93 <function_12160+0x933>
0x12b11:    44 89 e2                              	mov edx, r12d
0x12b14:    48 89 df                              	mov rdi, rbx
0x12b17:    44 0f b6 44 24 7d                     	movzx r8d, byte ptr [rsp + 0x7d]
0x12b1d:    83 f2 01                              	xor edx, 1
0x12b20:    0f b6 5c 24 7e                        	movzx ebx, byte ptr [rsp + 0x7e]
0x12b25:    44 0f b6 54 24 7f                     	movzx r10d, byte ptr [rsp + 0x7f]
0x12b2b:    22 54 24 0d                           	and dl, byte ptr [rsp + 0xd]
0x12b2f:    4c 8b bc 24 80 00 00 00               	mov r15, qword ptr [rsp + 0x80]
0x12b37:    4c 8b 74 24 40                        	mov r14, qword ptr [rsp + 0x40]
0x12b3c:    4c 8b 6c 24 70                        	mov r13, qword ptr [rsp + 0x70]
0x12b41:    4c 8b 5c 24 30                        	mov r11, qword ptr [rsp + 0x30]
0x12b46:    48 83 ff 01                           	cmp rdi, 1
0x12b4a:    0f 86 fb 05 00 00                     	jbe 0x1314b <function_12160+0xfeb>
0x12b50:    48 89 f9                              	mov rcx, rdi
0x12b53:    31 f6                                 	xor esi, esi
0x12b55:    44 0f b6 4c 24 0f                     	movzx r9d, byte ptr [rsp + 0xf]
0x12b5b:    48 01 e9                              	add rcx, rbp
0x12b5e:    48 8b 7c 24 10                        	mov rdi, qword ptr [rsp + 0x10]
0x12b63:    e9 b6 00 00 00                        	jmp 0x12c1e <function_12160+0xabe>
; data inside code section at 0x12b68 -- 0x12b70
0x12b68:    0f 1f 84 00 00 00 00 00                            |........        |
0x12b70:    83 7c 24 08 02                        	cmp dword ptr [rsp + 8], 2
0x12b75:    0f 94 c0                              	sete al
0x12b78:    45 84 c9                              	test r9b, r9b
0x12b7b:    0f 85 af 04 00 00                     	jne 0x13030 <function_12160+0xed0>
0x12b81:    44 89 c6                              	mov esi, r8d
0x12b84:    83 f6 01                              	xor esi, 1
0x12b87:    40 20 f0                              	and al, sil
0x12b8a:    74 2f                                 	je 0x12bbb <function_12160+0xa5b>
0x12b8c:    4d 39 fd                              	cmp r13, r15
0x12b8f:    76 05                                 	jbe 0x12b96 <function_12160+0xa36>
0x12b91:    43 c6 04 3e 27                        	mov byte ptr [r14 + r15], 0x27
0x12b96:    49 8d 77 01                           	lea rsi, [r15 + 1]
0x12b9a:    49 39 f5                              	cmp r13, rsi
0x12b9d:    76 06                                 	jbe 0x12ba5 <function_12160+0xa45>
0x12b9f:    43 c6 44 3e 01 24                     	mov byte ptr [r14 + r15 + 1], 0x24
0x12ba5:    49 8d 77 02                           	lea rsi, [r15 + 2]
0x12ba9:    49 39 f5                              	cmp r13, rsi
0x12bac:    76 06                                 	jbe 0x12bb4 <function_12160+0xa54>
0x12bae:    43 c6 44 3e 02 27                     	mov byte ptr [r14 + r15 + 2], 0x27
0x12bb4:    49 83 c7 03                           	add r15, 3
0x12bb8:    41 89 c0                              	mov r8d, eax
0x12bbb:    4d 39 fd                              	cmp r13, r15
0x12bbe:    76 05                                 	jbe 0x12bc5 <function_12160+0xa65>
0x12bc0:    43 c6 04 3e 5c                        	mov byte ptr [r14 + r15], 0x5c
0x12bc5:    49 8d 47 01                           	lea rax, [r15 + 1]
0x12bc9:    49 39 c5                              	cmp r13, rax
0x12bcc:    76 0d                                 	jbe 0x12bdb <function_12160+0xa7b>
0x12bce:    89 d8                                 	mov eax, ebx
0x12bd0:    c0 e8 06                              	shr al, 6
0x12bd3:    83 c0 30                              	add eax, 0x30
0x12bd6:    43 88 44 3e 01                        	mov byte ptr [r14 + r15 + 1], al
0x12bdb:    49 8d 47 02                           	lea rax, [r15 + 2]
0x12bdf:    49 39 c5                              	cmp r13, rax
0x12be2:    76 10                                 	jbe 0x12bf4 <function_12160+0xa94>
0x12be4:    89 d8                                 	mov eax, ebx
0x12be6:    c0 e8 03                              	shr al, 3
0x12be9:    83 e0 07                              	and eax, 7
0x12bec:    83 c0 30                              	add eax, 0x30
0x12bef:    43 88 44 3e 02                        	mov byte ptr [r14 + r15 + 2], al
0x12bf4:    83 e3 07                              	and ebx, 7
0x12bf7:    48 83 c5 01                           	add rbp, 1
0x12bfb:    49 83 c7 03                           	add r15, 3
0x12bff:    83 c3 30                              	add ebx, 0x30
0x12c02:    48 39 cd                              	cmp rbp, rcx
0x12c05:    0f 83 e5 f7 ff ff                     	jae 0x123f0 <function_12160+0x290>
0x12c0b:    89 d6                                 	mov esi, edx
0x12c0d:    4d 39 fd                              	cmp r13, r15
0x12c10:    76 04                                 	jbe 0x12c16 <function_12160+0xab6>
0x12c12:    43 88 1c 3e                           	mov byte ptr [r14 + r15], bl
0x12c16:    0f b6 1c 2f                           	movzx ebx, byte ptr [rdi + rbp]
0x12c1a:    49 83 c7 01                           	add r15, 1
0x12c1e:    84 d2                                 	test dl, dl
0x12c20:    0f 85 4a ff ff ff                     	jne 0x12b70 <function_12160+0xa10>
0x12c26:    89 f0                                 	mov eax, esi
0x12c28:    83 f0 01                              	xor eax, 1
0x12c2b:    44 21 c0                              	and eax, r8d
0x12c2e:    45 84 d2                              	test r10b, r10b
0x12c31:    74 0e                                 	je 0x12c41 <function_12160+0xae1>
0x12c33:    4d 39 fd                              	cmp r13, r15
0x12c36:    76 05                                 	jbe 0x12c3d <function_12160+0xadd>
0x12c38:    43 c6 04 3e 5c                        	mov byte ptr [r14 + r15], 0x5c
0x12c3d:    49 83 c7 01                           	add r15, 1
0x12c41:    48 83 c5 01                           	add rbp, 1
0x12c45:    48 39 cd                              	cmp rbp, rcx
0x12c48:    0f 83 7e f7 ff ff                     	jae 0x123cc <function_12160+0x26c>
0x12c4e:    84 c0                                 	test al, al
0x12c50:    0f 84 f8 03 00 00                     	je 0x1304e <function_12160+0xeee>
0x12c56:    4d 39 fd                              	cmp r13, r15
0x12c59:    76 05                                 	jbe 0x12c60 <function_12160+0xb00>
0x12c5b:    43 c6 04 3e 27                        	mov byte ptr [r14 + r15], 0x27
0x12c60:    49 8d 47 01                           	lea rax, [r15 + 1]
0x12c64:    49 39 c5                              	cmp r13, rax
0x12c67:    76 06                                 	jbe 0x12c6f <function_12160+0xb0f>
0x12c69:    43 c6 44 3e 01 27                     	mov byte ptr [r14 + r15 + 1], 0x27
0x12c6f:    49 83 c7 02                           	add r15, 2
0x12c73:    45 31 d2                              	xor r10d, r10d
0x12c76:    45 31 c0                              	xor r8d, r8d
0x12c79:    eb 92                                 	jmp 0x12c0d <function_12160+0xaad>
; data inside code section at 0x12c7b -- 0x12c80
0x12c7b:    0f 1f 44 00 00                                     |..D..           |
0x12c80:    49 83 ff 01                           	cmp r15, 1
0x12c84:    0f 84 5f fe ff ff                     	je 0x12ae9 <function_12160+0x989>
0x12c8a:    48 8b 7c 24 10                        	mov rdi, qword ptr [rsp + 0x10]
0x12c8f:    4a 8d 0c 3f                           	lea rcx, [rdi + r15]
0x12c93:    4a 8d 54 37 01                        	lea rdx, [rdi + r14 + 1]
0x12c98:    4e 8d 04 31                           	lea r8, [rcx + r14]
0x12c9c:    eb 0f                                 	jmp 0x12cad <function_12160+0xb4d>
; data inside code section at 0x12c9e -- 0x12ca0
0x12c9e:    66 90                                              |f.              |
0x12ca0:    48 83 c2 01                           	add rdx, 1
0x12ca4:    49 39 d0                              	cmp r8, rdx
0x12ca7:    0f 84 3c fe ff ff                     	je 0x12ae9 <function_12160+0x989>
0x12cad:    0f b6 0a                              	movzx ecx, byte ptr [rdx]
0x12cb0:    83 e9 5b                              	sub ecx, 0x5b
0x12cb3:    80 f9 21                              	cmp cl, 0x21
0x12cb6:    77 e8                                 	ja 0x12ca0 <function_12160+0xb40>
0x12cb8:    be 01 00 00 00                        	mov esi, 1
0x12cbd:    48 d3 e6                              	shl rsi, cl
0x12cc0:    48 89 f1                              	mov rcx, rsi
0x12cc3:    48 be 2b 00 00 00 02 00 00 00         	movabs rsi, 0x20000002b
0x12ccd:    48 85 f1                              	test rcx, rsi
0x12cd0:    74 ce                                 	je 0x12ca0 <function_12160+0xb40>
0x12cd2:    4c 8b 74 24 40                        	mov r14, qword ptr [rsp + 0x40]
0x12cd7:    4c 8b 6c 24 70                        	mov r13, qword ptr [rsp + 0x70]
0x12cdc:    48 8b 6c 24 30                        	mov rbp, qword ptr [rsp + 0x30]
0x12ce1:    c7 44 24 08 02 00 00 00               	mov dword ptr [rsp + 8], 2
0x12ce9:    80 7c 24 0d 00                        	cmp byte ptr [rsp + 0xd], 0
0x12cee:    74 10                                 	je 0x12d00 <function_12160+0xba0>
0x12cf0:    84 c0                                 	test al, al
0x12cf2:    b8 04 00 00 00                        	mov eax, 4
0x12cf7:    0f 44 44 24 08                        	cmove eax, dword ptr [rsp + 8]
0x12cfc:    89 44 24 08                           	mov dword ptr [rsp + 8], eax
0x12d00:    48 83 ec 08                           	sub rsp, 8
0x12d04:    48 89 e9                              	mov rcx, rbp
0x12d07:    4c 89 ee                              	mov rsi, r13
0x12d0a:    ff 74 24 68                           	push qword ptr [rsp + 0x68]
0x12d0e:    ff 74 24 78                           	push qword ptr [rsp + 0x78]
0x12d12:    4c 89 f7                              	mov rdi, r14
0x12d15:    6a 00                                 	push 0
0x12d17:    44 8b 8c 24 98 00 00 00               	mov r9d, dword ptr [rsp + 0x98]
0x12d1f:    44 8b 44 24 28                        	mov r8d, dword ptr [rsp + 0x28]
0x12d24:    48 8b 54 24 30                        	mov rdx, qword ptr [rsp + 0x30]
0x12d29:    41 83 e1 fd                           	and r9d, 0xfffffffd
0x12d2d:    e8 2e f4 ff ff                        	call 0x12160 <function_12160>
0x12d32:    48 83 c4 20                           	add rsp, 0x20
0x12d36:    49 89 c7                              	mov r15, rax
0x12d39:    48 8b 9c 24 a8 00 00 00               	mov rbx, qword ptr [rsp + 0xa8]
0x12d41:    64 48 33 1c 25 28 00 00 00            	xor rbx, qword ptr fs:[0x28]
0x12d4a:    4c 89 f8                              	mov rax, r15
0x12d4d:    0f 85 00 06 00 00                     	jne 0x13353 <function_12160+0x11f3>
0x12d53:    48 81 c4 b8 00 00 00                  	add rsp, 0xb8
0x12d5a:    5b                                    	pop rbx
0x12d5b:    5d                                    	pop rbp
0x12d5c:    41 5c                                 	pop r12
0x12d5e:    41 5d                                 	pop r13
0x12d60:    41 5e                                 	pop r14
0x12d62:    41 5f                                 	pop r15
0x12d64:    c3                                    	ret 
; data inside code section at 0x12d65 -- 0x12d68
0x12d65:    0f 1f 00                                           |...             |
0x12d68:    4c 89 dd                              	mov rbp, r11
0x12d6b:    e9 79 ff ff ff                        	jmp 0x12ce9 <function_12160+0xb89>
0x12d70:    4d 39 fd                              	cmp r13, r15
0x12d73:    76 05                                 	jbe 0x12d7a <function_12160+0xc1a>
0x12d75:    43 c6 04 3e 27                        	mov byte ptr [r14 + r15], 0x27
0x12d7a:    49 8d 47 01                           	lea rax, [r15 + 1]
0x12d7e:    49 39 c5                              	cmp r13, rax
0x12d81:    76 06                                 	jbe 0x12d89 <function_12160+0xc29>
0x12d83:    43 c6 44 3e 01 5c                     	mov byte ptr [r14 + r15 + 1], 0x5c
0x12d89:    49 8d 47 02                           	lea rax, [r15 + 2]
0x12d8d:    49 39 c5                              	cmp r13, rax
0x12d90:    0f 86 ec 05 00 00                     	jbe 0x13382 <function_12160+0x1222>
0x12d96:    4c 89 ea                              	mov rdx, r13
0x12d99:    43 c6 44 3e 02 27                     	mov byte ptr [r14 + r15 + 2], 0x27
0x12d9f:    4c 8b 6c 24 50                        	mov r13, qword ptr [rsp + 0x50]
0x12da4:    e9 d9 fb ff ff                        	jmp 0x12982 <function_12160+0x822>
0x12da9:    44 89 e0                              	mov eax, r12d
0x12dac:    bb 30 00 00 00                        	mov ebx, 0x30
0x12db1:    45 31 e4                              	xor r12d, r12d
0x12db4:    e9 00 f6 ff ff                        	jmp 0x123b9 <function_12160+0x259>
0x12db9:    43 c6 44 3e 02 27                     	mov byte ptr [r14 + r15 + 2], 0x27
0x12dbf:    e9 c5 f9 ff ff                        	jmp 0x12789 <function_12160+0x629>
0x12dc4:    85 db                                 	test ebx, ebx
0x12dc6:    0f 85 27 f4 ff ff                     	jne 0x121f3 <function_12160+0x93>
0x12dcc:    c6 44 24 0d 01                        	mov byte ptr [rsp + 0xd], 1
0x12dd1:    4d 85 ed                              	test r13, r13
0x12dd4:    0f 85 90 05 00 00                     	jne 0x1336a <function_12160+0x120a>
0x12dda:    48 8d 05 51 82 00 00                  	lea rax, [rip + 0x8251]
0x12de1:    48 c7 44 24 50 00 00 00 00            	mov qword ptr [rsp + 0x50], 0
0x12dea:    c6 44 24 0e 01                        	mov byte ptr [rsp + 0xe], 1
0x12def:    c6 44 24 7c 00                        	mov byte ptr [rsp + 0x7c], 0
0x12df4:    45 31 e4                              	xor r12d, r12d
0x12df7:    c6 44 24 0f 00                        	mov byte ptr [rsp + 0xf], 0
0x12dfc:    48 c7 44 24 18 01 00 00 00            	mov qword ptr [rsp + 0x18], 1
0x12e05:    48 89 44 24 48                        	mov qword ptr [rsp + 0x48], rax
0x12e0a:    41 bf 01 00 00 00                     	mov r15d, 1
0x12e10:    c7 44 24 08 02 00 00 00               	mov dword ptr [rsp + 8], 2
0x12e18:    e9 16 f4 ff ff                        	jmp 0x12233 <function_12160+0xd3>
; data inside code section at 0x12e1d -- 0x12e20
0x12e1d:    0f 1f 00                                           |...             |
0x12e20:    85 db                                 	test ebx, ebx
0x12e22:    0f 85 f5 03 00 00                     	jne 0x1321d <function_12160+0x10bd>
0x12e28:    4d 85 ed                              	test r13, r13
0x12e2b:    0f 84 25 02 00 00                     	je 0x13056 <function_12160+0xef6>
0x12e31:    41 c6 06 22                           	mov byte ptr [r14], 0x22
0x12e35:    c6 44 24 0e 01                        	mov byte ptr [rsp + 0xe], 1
0x12e3a:    45 31 e4                              	xor r12d, r12d
0x12e3d:    c6 44 24 7c 00                        	mov byte ptr [rsp + 0x7c], 0
0x12e42:    48 c7 44 24 50 00 00 00 00            	mov qword ptr [rsp + 0x50], 0
0x12e4b:    48 8d 05 69 78 00 00                  	lea rax, [rip + 0x7869]
0x12e52:    c6 44 24 0f 00                        	mov byte ptr [rsp + 0xf], 0
0x12e57:    c6 44 24 0d 01                        	mov byte ptr [rsp + 0xd], 1
0x12e5c:    48 c7 44 24 18 01 00 00 00            	mov qword ptr [rsp + 0x18], 1
0x12e65:    41 bf 01 00 00 00                     	mov r15d, 1
0x12e6b:    48 89 44 24 48                        	mov qword ptr [rsp + 0x48], rax
0x12e70:    e9 be f3 ff ff                        	jmp 0x12233 <function_12160+0xd3>
0x12e75:    48 8d 05 3f 78 00 00                  	lea rax, [rip + 0x783f]
0x12e7c:    c6 44 24 0e 01                        	mov byte ptr [rsp + 0xe], 1
0x12e81:    c6 44 24 7c 00                        	mov byte ptr [rsp + 0x7c], 0
0x12e86:    45 31 e4                              	xor r12d, r12d
0x12e89:    48 c7 44 24 50 00 00 00 00            	mov qword ptr [rsp + 0x50], 0
0x12e92:    c6 44 24 0f 01                        	mov byte ptr [rsp + 0xf], 1
0x12e97:    c6 44 24 0d 01                        	mov byte ptr [rsp + 0xd], 1
0x12e9c:    48 c7 44 24 18 01 00 00 00            	mov qword ptr [rsp + 0x18], 1
0x12ea5:    45 31 ff                              	xor r15d, r15d
0x12ea8:    48 89 44 24 48                        	mov qword ptr [rsp + 0x48], rax
0x12ead:    c7 44 24 08 05 00 00 00               	mov dword ptr [rsp + 8], 5
0x12eb5:    e9 79 f3 ff ff                        	jmp 0x12233 <function_12160+0xd3>
0x12eba:    c6 44 24 0e 01                        	mov byte ptr [rsp + 0xe], 1
0x12ebf:    c6 44 24 7c 00                        	mov byte ptr [rsp + 0x7c], 0
0x12ec4:    45 31 e4                              	xor r12d, r12d
0x12ec7:    48 c7 44 24 50 00 00 00 00            	mov qword ptr [rsp + 0x50], 0
0x12ed0:    c6 44 24 0f 00                        	mov byte ptr [rsp + 0xf], 0
0x12ed5:    45 31 ff                              	xor r15d, r15d
0x12ed8:    c6 44 24 0d 01                        	mov byte ptr [rsp + 0xd], 1
0x12edd:    48 c7 44 24 18 00 00 00 00            	mov qword ptr [rsp + 0x18], 0
0x12ee6:    48 c7 44 24 48 00 00 00 00            	mov qword ptr [rsp + 0x48], 0
0x12eef:    e9 3f f3 ff ff                        	jmp 0x12233 <function_12160+0xd3>
0x12ef4:    83 7c 24 08 0a                        	cmp dword ptr [rsp + 8], 0xa
0x12ef9:    74 56                                 	je 0x12f51 <function_12160+0xdf1>
0x12efb:    48 8d 35 bb 77 00 00                  	lea rsi, [rip + 0x77bb]
0x12f02:    31 ff                                 	xor edi, edi
0x12f04:    ba 05 00 00 00                        	mov edx, 5
0x12f09:    e8 22 0a ff ff                        	call 0x3930 <dcgettext>
0x12f0e:    48 89 c1                              	mov rcx, rax
0x12f11:    48 89 44 24 68                        	mov qword ptr [rsp + 0x68], rax
0x12f16:    48 8d 05 a0 77 00 00                  	lea rax, [rip + 0x77a0]
0x12f1d:    48 39 c1                              	cmp rcx, rax
0x12f20:    0f 84 98 03 00 00                     	je 0x132be <function_12160+0x115e>
0x12f26:    48 8d 35 05 81 00 00                  	lea rsi, [rip + 0x8105]
0x12f2d:    31 ff                                 	xor edi, edi
0x12f2f:    ba 05 00 00 00                        	mov edx, 5
0x12f34:    e8 f7 09 ff ff                        	call 0x3930 <dcgettext>
0x12f39:    48 89 c1                              	mov rcx, rax
0x12f3c:    48 89 44 24 60                        	mov qword ptr [rsp + 0x60], rax
0x12f41:    48 8d 05 ea 80 00 00                  	lea rax, [rip + 0x80ea]
0x12f48:    48 39 c1                              	cmp rcx, rax
0x12f4b:    0f 84 83 03 00 00                     	je 0x132d4 <function_12160+0x1174>
0x12f51:    45 31 ff                              	xor r15d, r15d
0x12f54:    85 db                                 	test ebx, ebx
0x12f56:    0f 84 c1 01 00 00                     	je 0x1311d <function_12160+0xfbd>
0x12f5c:    85 db                                 	test ebx, ebx
0x12f5e:    48 8b 5c 24 60                        	mov rbx, qword ptr [rsp + 0x60]
0x12f63:    0f 95 44 24 0f                        	setne byte ptr [rsp + 0xf]
0x12f68:    45 31 e4                              	xor r12d, r12d
0x12f6b:    48 89 df                              	mov rdi, rbx
0x12f6e:    e8 dd 09 ff ff                        	call 0x3950 <strlen>
0x12f73:    48 89 5c 24 48                        	mov qword ptr [rsp + 0x48], rbx
0x12f78:    48 89 44 24 18                        	mov qword ptr [rsp + 0x18], rax
0x12f7d:    c6 44 24 0e 01                        	mov byte ptr [rsp + 0xe], 1
0x12f82:    c6 44 24 7c 00                        	mov byte ptr [rsp + 0x7c], 0
0x12f87:    48 c7 44 24 50 00 00 00 00            	mov qword ptr [rsp + 0x50], 0
0x12f90:    c6 44 24 0d 01                        	mov byte ptr [rsp + 0xd], 1
0x12f95:    e9 99 f2 ff ff                        	jmp 0x12233 <function_12160+0xd3>
0x12f9a:    c6 44 24 0e 01                        	mov byte ptr [rsp + 0xe], 1
0x12f9f:    c6 44 24 7c 00                        	mov byte ptr [rsp + 0x7c], 0
0x12fa4:    45 31 e4                              	xor r12d, r12d
0x12fa7:    48 c7 44 24 50 00 00 00 00            	mov qword ptr [rsp + 0x50], 0
0x12fb0:    c6 44 24 0f 00                        	mov byte ptr [rsp + 0xf], 0
0x12fb5:    45 31 ff                              	xor r15d, r15d
0x12fb8:    c6 44 24 0d 00                        	mov byte ptr [rsp + 0xd], 0
0x12fbd:    48 c7 44 24 18 00 00 00 00            	mov qword ptr [rsp + 0x18], 0
0x12fc6:    48 c7 44 24 48 00 00 00 00            	mov qword ptr [rsp + 0x48], 0
0x12fcf:    e9 5f f2 ff ff                        	jmp 0x12233 <function_12160+0xd3>
0x12fd4:    c6 44 24 0e 01                        	mov byte ptr [rsp + 0xe], 1
0x12fd9:    c6 44 24 7c 00                        	mov byte ptr [rsp + 0x7c], 0
0x12fde:    45 31 e4                              	xor r12d, r12d
0x12fe1:    48 c7 44 24 50 00 00 00 00            	mov qword ptr [rsp + 0x50], 0
0x12fea:    c6 44 24 0f 01                        	mov byte ptr [rsp + 0xf], 1
0x12fef:    c6 44 24 0d 01                        	mov byte ptr [rsp + 0xd], 1
0x12ff4:    e9 1a f2 ff ff                        	jmp 0x12213 <function_12160+0xb3>
0x12ff9:    4d 39 fd                              	cmp r13, r15
0x12ffc:    76 05                                 	jbe 0x13003 <function_12160+0xea3>
0x12ffe:    43 c6 04 3e 30                        	mov byte ptr [r14 + r15], 0x30
0x13003:    48 8d 41 02                           	lea rax, [rcx + 2]
0x13007:    49 39 c5                              	cmp r13, rax
0x1300a:    76 06                                 	jbe 0x13012 <function_12160+0xeb2>
0x1300c:    41 c6 44 0e 02 30                     	mov byte ptr [r14 + rcx + 2], 0x30
0x13012:    44 89 e0                              	mov eax, r12d
0x13015:    4c 8d 79 03                           	lea r15, [rcx + 3]
0x13019:    45 31 e4                              	xor r12d, r12d
0x1301c:    bb 30 00 00 00                        	mov ebx, 0x30
0x13021:    e9 62 f3 ff ff                        	jmp 0x12388 <function_12160+0x228>
; data inside code section at 0x13026 -- 0x13030
0x13026:    66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x13030:    0f b6 5c 24 0f                        	movzx ebx, byte ptr [rsp + 0xf]
0x13035:    4c 89 dd                              	mov rbp, r11
0x13038:    88 5c 24 0d                           	mov byte ptr [rsp + 0xd], bl
0x1303c:    e9 a8 fc ff ff                        	jmp 0x12ce9 <function_12160+0xb89>
0x13041:    0f b6 54 24 0d                        	movzx edx, byte ptr [rsp + 0xd]
0x13046:    45 31 e4                              	xor r12d, r12d
0x13049:    e9 02 fb ff ff                        	jmp 0x12b50 <function_12160+0x9f0>
0x1304e:    45 31 d2                              	xor r10d, r10d
0x13051:    e9 b7 fb ff ff                        	jmp 0x12c0d <function_12160+0xaad>
0x13056:    48 c7 44 24 50 00 00 00 00            	mov qword ptr [rsp + 0x50], 0
0x1305f:    c6 44 24 0e 01                        	mov byte ptr [rsp + 0xe], 1
0x13064:    45 31 e4                              	xor r12d, r12d
0x13067:    c6 44 24 7c 00                        	mov byte ptr [rsp + 0x7c], 0
0x1306c:    e9 da fd ff ff                        	jmp 0x12e4b <function_12160+0xceb>
0x13071:    4c 8b 5c 24 30                        	mov r11, qword ptr [rsp + 0x30]
0x13076:    4c 89 f6                              	mov rsi, r14
0x13079:    4c 89 e9                              	mov rcx, r13
0x1307c:    48 89 d8                              	mov rax, rbx
0x1307f:    48 89 df                              	mov rdi, rbx
0x13082:    44 0f b6 44 24 7d                     	movzx r8d, byte ptr [rsp + 0x7d]
0x13088:    0f b6 5c 24 7e                        	movzx ebx, byte ptr [rsp + 0x7e]
0x1308d:    4c 8b 8c 24 88 00 00 00               	mov r9, qword ptr [rsp + 0x88]
0x13095:    4c 39 de                              	cmp rsi, r11
0x13098:    44 0f b6 54 24 7f                     	movzx r10d, byte ptr [rsp + 0x7f]
0x1309e:    4c 8b bc 24 80 00 00 00               	mov r15, qword ptr [rsp + 0x80]
0x130a6:    4c 8b 74 24 40                        	mov r14, qword ptr [rsp + 0x40]
0x130ab:    4c 8b 6c 24 70                        	mov r13, qword ptr [rsp + 0x70]
0x130b0:    73 26                                 	jae 0x130d8 <function_12160+0xf78>
0x130b2:    80 39 00                              	cmp byte ptr [rcx], 0
0x130b5:    75 10                                 	jne 0x130c7 <function_12160+0xf67>
0x130b7:    eb 1f                                 	jmp 0x130d8 <function_12160+0xf78>
; data inside code section at 0x130b9 -- 0x130c0
0x130b9:    0f 1f 80 00 00 00 00                               |.......         |
0x130c0:    41 80 3c 01 00                        	cmp byte ptr [r9 + rax], 0
0x130c5:    74 0e                                 	je 0x130d5 <function_12160+0xf75>
0x130c7:    48 83 c0 01                           	add rax, 1
0x130cb:    48 8d 54 05 00                        	lea rdx, [rbp + rax]
0x130d0:    49 39 d3                              	cmp r11, rdx
0x130d3:    77 eb                                 	ja 0x130c0 <function_12160+0xf60>
0x130d5:    48 89 c7                              	mov rdi, rax
0x130d8:    0f b6 54 24 0d                        	movzx edx, byte ptr [rsp + 0xd]
0x130dd:    45 31 e4                              	xor r12d, r12d
0x130e0:    e9 61 fa ff ff                        	jmp 0x12b46 <function_12160+0x9e6>
0x130e5:    48 89 df                              	mov rdi, rbx
0x130e8:    44 0f b6 44 24 7d                     	movzx r8d, byte ptr [rsp + 0x7d]
0x130ee:    0f b6 5c 24 7e                        	movzx ebx, byte ptr [rsp + 0x7e]
0x130f3:    44 0f b6 54 24 7f                     	movzx r10d, byte ptr [rsp + 0x7f]
0x130f9:    4c 8b bc 24 80 00 00 00               	mov r15, qword ptr [rsp + 0x80]
0x13101:    45 31 e4                              	xor r12d, r12d
0x13104:    4c 8b 74 24 40                        	mov r14, qword ptr [rsp + 0x40]
0x13109:    4c 8b 6c 24 70                        	mov r13, qword ptr [rsp + 0x70]
0x1310e:    4c 8b 5c 24 30                        	mov r11, qword ptr [rsp + 0x30]
0x13113:    0f b6 54 24 0d                        	movzx edx, byte ptr [rsp + 0xd]
0x13118:    e9 29 fa ff ff                        	jmp 0x12b46 <function_12160+0x9e6>
0x1311d:    48 8b 54 24 68                        	mov rdx, qword ptr [rsp + 0x68]
0x13122:    0f b6 02                              	movzx eax, byte ptr [rdx]
0x13125:    84 c0                                 	test al, al
0x13127:    0f 84 2f fe ff ff                     	je 0x12f5c <function_12160+0xdfc>
0x1312d:    0f 1f 00                              	nop dword ptr [rax]
0x13130:    4d 39 fd                              	cmp r13, r15
0x13133:    76 04                                 	jbe 0x13139 <function_12160+0xfd9>
0x13135:    43 88 04 3e                           	mov byte ptr [r14 + r15], al
0x13139:    49 83 c7 01                           	add r15, 1
0x1313d:    42 0f b6 04 3a                        	movzx eax, byte ptr [rdx + r15]
0x13142:    84 c0                                 	test al, al
0x13144:    75 ea                                 	jne 0x13130 <function_12160+0xfd0>
0x13146:    e9 11 fe ff ff                        	jmp 0x12f5c <function_12160+0xdfc>
0x1314b:    89 d0                                 	mov eax, edx
0x1314d:    e9 55 f5 ff ff                        	jmp 0x126a7 <function_12160+0x547>
0x13152:    0f b6 1c 08                           	movzx ebx, byte ptr [rax + rcx]
0x13156:    80 fb 3e                              	cmp bl, 0x3e
0x13159:    0f 87 71 f8 ff ff                     	ja 0x129d0 <function_12160+0x870>
0x1315f:    48 b8 00 00 00 00 82 a3 00 70         	movabs rax, 0x7000a38200000000
0x13169:    48 0f a3 d8                           	bt rax, rbx
0x1316d:    0f 83 5d f8 ff ff                     	jae 0x129d0 <function_12160+0x870>
0x13173:    80 7c 24 0f 00                        	cmp byte ptr [rsp + 0xf], 0
0x13178:    0f 85 e4 01 00 00                     	jne 0x13362 <function_12160+0x1202>
0x1317e:    4d 39 fd                              	cmp r13, r15
0x13181:    76 05                                 	jbe 0x13188 <function_12160+0x1028>
0x13183:    43 c6 04 3e 3f                        	mov byte ptr [r14 + r15], 0x3f
0x13188:    49 8d 47 01                           	lea rax, [r15 + 1]
0x1318c:    49 39 c5                              	cmp r13, rax
0x1318f:    76 06                                 	jbe 0x13197 <function_12160+0x1037>
0x13191:    43 c6 44 3e 01 22                     	mov byte ptr [r14 + r15 + 1], 0x22
0x13197:    49 8d 47 02                           	lea rax, [r15 + 2]
0x1319b:    49 39 c5                              	cmp r13, rax
0x1319e:    76 06                                 	jbe 0x131a6 <function_12160+0x1046>
0x131a0:    43 c6 44 3e 02 22                     	mov byte ptr [r14 + r15 + 2], 0x22
0x131a6:    49 8d 47 03                           	lea rax, [r15 + 3]
0x131aa:    49 39 c5                              	cmp r13, rax
0x131ad:    76 06                                 	jbe 0x131b5 <function_12160+0x1055>
0x131af:    43 c6 44 3e 03 3f                     	mov byte ptr [r14 + r15 + 3], 0x3f
0x131b5:    49 83 c7 04                           	add r15, 4
0x131b9:    31 d2                                 	xor edx, edx
0x131bb:    45 31 e4                              	xor r12d, r12d
0x131be:    31 c0                                 	xor eax, eax
0x131c0:    48 89 cd                              	mov rbp, rcx
0x131c3:    e9 c0 f1 ff ff                        	jmp 0x12388 <function_12160+0x228>
0x131c8:    85 db                                 	test ebx, ebx
0x131ca:    0f 84 88 01 00 00                     	je 0x13358 <function_12160+0x11f8>
0x131d0:    48 8d 05 5b 7e 00 00                  	lea rax, [rip + 0x7e5b]
0x131d7:    c6 44 24 0e 01                        	mov byte ptr [rsp + 0xe], 1
0x131dc:    c6 44 24 7c 00                        	mov byte ptr [rsp + 0x7c], 0
0x131e1:    45 31 e4                              	xor r12d, r12d
0x131e4:    48 c7 44 24 50 00 00 00 00            	mov qword ptr [rsp + 0x50], 0
0x131ed:    c6 44 24 0f 01                        	mov byte ptr [rsp + 0xf], 1
0x131f2:    c6 44 24 0d 00                        	mov byte ptr [rsp + 0xd], 0
0x131f7:    48 c7 44 24 18 01 00 00 00            	mov qword ptr [rsp + 0x18], 1
0x13200:    45 31 ff                              	xor r15d, r15d
0x13203:    48 89 44 24 48                        	mov qword ptr [rsp + 0x48], rax
0x13208:    e9 26 f0 ff ff                        	jmp 0x12233 <function_12160+0xd3>
; data inside code section at 0x1320d -- 0x13210
0x1320d:    0f 1f 00                                           |...             |
0x13210:    4c 89 dd                              	mov rbp, r11
0x13213:    0f b6 44 24 0f                        	movzx eax, byte ptr [rsp + 0xf]
0x13218:    e9 cc fa ff ff                        	jmp 0x12ce9 <function_12160+0xb89>
0x1321d:    48 8d 05 97 74 00 00                  	lea rax, [rip + 0x7497]
0x13224:    c6 44 24 0e 01                        	mov byte ptr [rsp + 0xe], 1
0x13229:    c6 44 24 7c 00                        	mov byte ptr [rsp + 0x7c], 0
0x1322e:    45 31 e4                              	xor r12d, r12d
0x13231:    48 c7 44 24 50 00 00 00 00            	mov qword ptr [rsp + 0x50], 0
0x1323a:    c6 44 24 0f 01                        	mov byte ptr [rsp + 0xf], 1
0x1323f:    c6 44 24 0d 01                        	mov byte ptr [rsp + 0xd], 1
0x13244:    48 c7 44 24 18 01 00 00 00            	mov qword ptr [rsp + 0x18], 1
0x1324d:    45 31 ff                              	xor r15d, r15d
0x13250:    48 89 44 24 48                        	mov qword ptr [rsp + 0x48], rax
0x13255:    e9 d9 ef ff ff                        	jmp 0x12233 <function_12160+0xd3>
0x1325a:    89 d0                                 	mov eax, edx
0x1325c:    48 8b 5c 24 48                        	mov rbx, qword ptr [rsp + 0x48]
0x13261:    48 85 db                              	test rbx, rbx
0x13264:    74 2c                                 	je 0x13292 <function_12160+0x1132>
0x13266:    84 c0                                 	test al, al
0x13268:    74 28                                 	je 0x13292 <function_12160+0x1132>
0x1326a:    0f b6 0b                              	movzx ecx, byte ptr [rbx]
0x1326d:    48 89 d8                              	mov rax, rbx
0x13270:    84 c9                                 	test cl, cl
0x13272:    74 1e                                 	je 0x13292 <function_12160+0x1132>
0x13274:    4c 89 fa                              	mov rdx, r15
0x13277:    4c 29 f8                              	sub rax, r15
0x1327a:    49 39 d5                              	cmp r13, rdx
0x1327d:    76 04                                 	jbe 0x13283 <function_12160+0x1123>
0x1327f:    41 88 0c 16                           	mov byte ptr [r14 + rdx], cl
0x13283:    48 83 c2 01                           	add rdx, 1
0x13287:    0f b6 0c 10                           	movzx ecx, byte ptr [rax + rdx]
0x1328b:    84 c9                                 	test cl, cl
0x1328d:    75 eb                                 	jne 0x1327a <function_12160+0x111a>
0x1328f:    49 89 d7                              	mov r15, rdx
0x13292:    4d 39 fd                              	cmp r13, r15
0x13295:    0f 86 9e fa ff ff                     	jbe 0x12d39 <function_12160+0xbd9>
0x1329b:    43 c6 04 3e 00                        	mov byte ptr [r14 + r15], 0
0x132a0:    e9 94 fa ff ff                        	jmp 0x12d39 <function_12160+0xbd9>
0x132a5:    83 7c 24 08 02                        	cmp dword ptr [rsp + 8], 2
0x132aa:    0f b6 5c 24 0f                        	movzx ebx, byte ptr [rsp + 0xf]
0x132af:    4c 89 dd                              	mov rbp, r11
0x132b2:    0f 94 c0                              	sete al
0x132b5:    88 5c 24 0d                           	mov byte ptr [rsp + 0xd], bl
0x132b9:    e9 2b fa ff ff                        	jmp 0x12ce9 <function_12160+0xb89>
0x132be:    8b 74 24 08                           	mov esi, dword ptr [rsp + 8]
0x132c2:    48 89 cf                              	mov rdi, rcx
0x132c5:    e8 a6 ed ff ff                        	call 0x12070
0x132ca:    48 89 44 24 68                        	mov qword ptr [rsp + 0x68], rax
0x132cf:    e9 52 fc ff ff                        	jmp 0x12f26 <function_12160+0xdc6>
0x132d4:    8b 74 24 08                           	mov esi, dword ptr [rsp + 8]
0x132d8:    48 89 cf                              	mov rdi, rcx
0x132db:    e8 90 ed ff ff                        	call 0x12070
0x132e0:    48 89 44 24 60                        	mov qword ptr [rsp + 0x60], rax
0x132e5:    e9 67 fc ff ff                        	jmp 0x12f51 <function_12160+0xdf1>
0x132ea:    0f b6 5c 24 0f                        	movzx ebx, byte ptr [rsp + 0xf]
0x132ef:    4c 89 dd                              	mov rbp, r11
0x132f2:    89 d0                                 	mov eax, edx
0x132f4:    88 5c 24 0d                           	mov byte ptr [rsp + 0xd], bl
0x132f8:    e9 ec f9 ff ff                        	jmp 0x12ce9 <function_12160+0xb89>
0x132fd:    48 83 ec 08                           	sub rsp, 8
0x13301:    41 b8 05 00 00 00                     	mov r8d, 5
0x13307:    4c 89 d9                              	mov rcx, r11
0x1330a:    ff 74 24 68                           	push qword ptr [rsp + 0x68]
0x1330e:    ff 74 24 78                           	push qword ptr [rsp + 0x78]
0x13312:    4c 89 f7                              	mov rdi, r14
0x13315:    ff 74 24 38                           	push qword ptr [rsp + 0x38]
0x13319:    44 8b 8c 24 98 00 00 00               	mov r9d, dword ptr [rsp + 0x98]
0x13321:    48 8b 54 24 30                        	mov rdx, qword ptr [rsp + 0x30]
0x13326:    48 8b 74 24 70                        	mov rsi, qword ptr [rsp + 0x70]
0x1332b:    e8 30 ee ff ff                        	call 0x12160 <function_12160>
0x13330:    48 83 c4 20                           	add rsp, 0x20
0x13334:    49 89 c7                              	mov r15, rax
0x13337:    e9 fd f9 ff ff                        	jmp 0x12d39 <function_12160+0xbd9>
0x1333c:    0f b6 44 24 7c                        	movzx eax, byte ptr [rsp + 0x7c]
0x13341:    e9 16 ff ff ff                        	jmp 0x1325c <function_12160+0x10fc>
0x13346:    c7 44 24 08 02 00 00 00               	mov dword ptr [rsp + 8], 2
0x1334e:    e9 96 f9 ff ff                        	jmp 0x12ce9 <function_12160+0xb89>
0x13353:    e8 18 06 ff ff                        	call 0x3970 <__stack_chk_fail>
0x13358:    c6 44 24 0d 00                        	mov byte ptr [rsp + 0xd], 0
0x1335d:    e9 6f fa ff ff                        	jmp 0x12dd1 <function_12160+0xc71>
0x13362:    4c 89 dd                              	mov rbp, r11
0x13365:    e9 96 f9 ff ff                        	jmp 0x12d00 <function_12160+0xba0>
0x1336a:    c6 44 24 0e 01                        	mov byte ptr [rsp + 0xe], 1
0x1336f:    31 c0                                 	xor eax, eax
0x13371:    45 31 e4                              	xor r12d, r12d
0x13374:    48 c7 44 24 50 00 00 00 00            	mov qword ptr [rsp + 0x50], 0
0x1337d:    e9 a2 f5 ff ff                        	jmp 0x12924 <function_12160+0x7c4>
0x13382:    4c 89 ea                              	mov rdx, r13
0x13385:    4c 8b 6c 24 50                        	mov r13, qword ptr [rsp + 0x50]
0x1338a:    e9 f3 f5 ff ff                        	jmp 0x12982 <function_12160+0x822>
0x1338f:    e8 4c 04 ff ff                        	call 0x37e0 <abort>
; data inside code section at 0x13394 -- 0x133a0
0x13394:    66 90 66 2e 0f 1f 84 00  00 00 00 00               |f.f.........    |
; function: function_133a0 at 0x133a0 -- 0x1354b
0x133a0:    41 57                                 	push r15
0x133a2:    41 56                                 	push r14
0x133a4:    4c 63 ff                              	movsxd r15, edi
0x133a7:    41 55                                 	push r13
0x133a9:    41 54                                 	push r12
0x133ab:    49 89 d6                              	mov r14, rdx
0x133ae:    55                                    	push rbp
0x133af:    53                                    	push rbx
0x133b0:    48 89 cd                              	mov rbp, rcx
0x133b3:    48 83 ec 28                           	sub rsp, 0x28
0x133b7:    48 89 74 24 08                        	mov qword ptr [rsp + 8], rsi
0x133bc:    e8 2f 04 ff ff                        	call 0x37f0 <__errno_location>
0x133c1:    49 89 c5                              	mov r13, rax
0x133c4:    8b 00                                 	mov eax, dword ptr [rax]
0x133c6:    45 85 ff                              	test r15d, r15d
0x133c9:    48 8b 1d 70 ce 20 00                  	mov rbx, qword ptr [rip + 0x20ce70]
0x133d0:    89 44 24 18                           	mov dword ptr [rsp + 0x18], eax
0x133d4:    0f 88 67 01 00 00                     	js 0x13541 <function_133a0+0x1a1>
0x133da:    44 39 3d 57 ce 20 00                  	cmp dword ptr [rip + 0x20ce57], r15d
0x133e1:    7f 62                                 	jg 0x13445 <function_133a0+0xa5>
0x133e3:    41 81 ff fe ff ff 7f                  	cmp r15d, 0x7ffffffe
0x133ea:    0f 87 56 01 00 00                     	ja 0x13546 <function_133a0+0x1a6>
0x133f0:    45 8d 67 01                           	lea r12d, [r15 + 1]
0x133f4:    48 8d 05 55 ce 20 00                  	lea rax, [rip + 0x20ce55]
0x133fb:    49 63 f4                              	movsxd rsi, r12d
0x133fe:    48 c1 e6 04                           	shl rsi, 4
0x13402:    48 39 c3                              	cmp rbx, rax
0x13405:    0f 84 15 01 00 00                     	je 0x13520 <function_133a0+0x180>
0x1340b:    48 89 df                              	mov rdi, rbx
0x1340e:    e8 cd 10 00 00                        	call 0x144e0 <function_144e0>
0x13413:    48 89 c3                              	mov rbx, rax
0x13416:    48 89 05 23 ce 20 00                  	mov qword ptr [rip + 0x20ce23], rax
0x1341d:    48 63 3d 14 ce 20 00                  	movsxd rdi, dword ptr [rip + 0x20ce14]
0x13424:    44 89 e2                              	mov edx, r12d
0x13427:    31 f6                                 	xor esi, esi
0x13429:    29 fa                                 	sub edx, edi
0x1342b:    48 c1 e7 04                           	shl rdi, 4
0x1342f:    48 63 d2                              	movsxd rdx, edx
0x13432:    48 01 df                              	add rdi, rbx
0x13435:    48 c1 e2 04                           	shl rdx, 4
0x13439:    e8 22 06 ff ff                        	call 0x3a60 <memset>
0x1343e:    44 89 25 f3 cd 20 00                  	mov dword ptr [rip + 0x20cdf3], r12d
0x13445:    8b 45 04                              	mov eax, dword ptr [rbp + 4]
0x13448:    49 c1 e7 04                           	shl r15, 4
0x1344c:    48 83 ec 08                           	sub rsp, 8
0x13450:    4c 01 fb                              	add rbx, r15
0x13453:    4c 8d 7d 08                           	lea r15, [rbp + 8]
0x13457:    44 8b 45 00                           	mov r8d, dword ptr [rbp]
0x1345b:    4c 8b 1b                              	mov r11, qword ptr [rbx]
0x1345e:    4c 8b 63 08                           	mov r12, qword ptr [rbx + 8]
0x13462:    4c 89 f1                              	mov rcx, r14
0x13465:    83 c8 01                              	or eax, 1
0x13468:    89 44 24 24                           	mov dword ptr [rsp + 0x24], eax
0x1346c:    ff 75 30                              	push qword ptr [rbp + 0x30]
0x1346f:    41 89 c1                              	mov r9d, eax
0x13472:    ff 75 28                              	push qword ptr [rbp + 0x28]
0x13475:    41 57                                 	push r15
0x13477:    4c 89 de                              	mov rsi, r11
0x1347a:    48 8b 54 24 28                        	mov rdx, qword ptr [rsp + 0x28]
0x1347f:    4c 89 e7                              	mov rdi, r12
0x13482:    4c 89 5c 24 30                        	mov qword ptr [rsp + 0x30], r11
0x13487:    e8 d4 ec ff ff                        	call 0x12160 <function_12160>
0x1348c:    48 83 c4 20                           	add rsp, 0x20
0x13490:    4c 8b 5c 24 10                        	mov r11, qword ptr [rsp + 0x10]
0x13495:    49 39 c3                              	cmp r11, rax
0x13498:    77 67                                 	ja 0x13501 <function_133a0+0x161>
0x1349a:    48 8d 70 01                           	lea rsi, [rax + 1]
0x1349e:    48 8d 05 7b df 20 00                  	lea rax, [rip + 0x20df7b]
0x134a5:    49 39 c4                              	cmp r12, rax
0x134a8:    48 89 33                              	mov qword ptr [rbx], rsi
0x134ab:    74 12                                 	je 0x134bf <function_133a0+0x11f>
0x134ad:    4c 89 e7                              	mov rdi, r12
0x134b0:    48 89 74 24 10                        	mov qword ptr [rsp + 0x10], rsi
0x134b5:    e8 b6 09 ff ff                        	call 0x3e70 <free>
0x134ba:    48 8b 74 24 10                        	mov rsi, qword ptr [rsp + 0x10]
0x134bf:    48 89 f7                              	mov rdi, rsi
0x134c2:    48 89 74 24 10                        	mov qword ptr [rsp + 0x10], rsi
0x134c7:    e8 b4 0f 00 00                        	call 0x14480 <function_14480>
0x134cc:    48 83 ec 08                           	sub rsp, 8
0x134d0:    48 89 43 08                           	mov qword ptr [rbx + 8], rax
0x134d4:    44 8b 45 00                           	mov r8d, dword ptr [rbp]
0x134d8:    ff 75 30                              	push qword ptr [rbp + 0x30]
0x134db:    ff 75 28                              	push qword ptr [rbp + 0x28]
0x134de:    4c 89 f1                              	mov rcx, r14
0x134e1:    41 57                                 	push r15
0x134e3:    44 8b 4c 24 3c                        	mov r9d, dword ptr [rsp + 0x3c]
0x134e8:    48 89 c7                              	mov rdi, rax
0x134eb:    48 8b 54 24 28                        	mov rdx, qword ptr [rsp + 0x28]
0x134f0:    48 8b 74 24 30                        	mov rsi, qword ptr [rsp + 0x30]
0x134f5:    49 89 c4                              	mov r12, rax
0x134f8:    e8 63 ec ff ff                        	call 0x12160 <function_12160>
0x134fd:    48 83 c4 20                           	add rsp, 0x20
0x13501:    8b 44 24 18                           	mov eax, dword ptr [rsp + 0x18]
0x13505:    41 89 45 00                           	mov dword ptr [r13], eax
0x13509:    48 83 c4 28                           	add rsp, 0x28
0x1350d:    4c 89 e0                              	mov rax, r12
0x13510:    5b                                    	pop rbx
0x13511:    5d                                    	pop rbp
0x13512:    41 5c                                 	pop r12
0x13514:    41 5d                                 	pop r13
0x13516:    41 5e                                 	pop r14
0x13518:    41 5f                                 	pop r15
0x1351a:    c3                                    	ret 
; data inside code section at 0x1351b -- 0x13520
0x1351b:    0f 1f 44 00 00                                     |..D..           |
0x13520:    31 ff                                 	xor edi, edi
0x13522:    e8 b9 0f 00 00                        	call 0x144e0 <function_144e0>
0x13527:    66 0f 6f 05 21 cd 20 00               	movdqa xmm0, xmmword ptr [rip + 0x20cd21]
0x1352f:    48 89 c3                              	mov rbx, rax
0x13532:    48 89 05 07 cd 20 00                  	mov qword ptr [rip + 0x20cd07], rax
0x13539:    0f 11 00                              	movups xmmword ptr [rax], xmm0
0x1353c:    e9 dc fe ff ff                        	jmp 0x1341d <function_133a0+0x7d>
0x13541:    e8 9a 02 ff ff                        	call 0x37e0 <abort>
0x13546:    e8 85 11 00 00                        	call 0x146d0 <function_146d0>
; data inside code section at 0x1354b -- 0x13550
0x1354b:    0f 1f 44 00 00                                     |..D..           |
; function: function_13550 at 0x13550 -- 0x13586
0x13550:    41 54                                 	push r12
0x13552:    55                                    	push rbp
0x13553:    53                                    	push rbx
0x13554:    48 89 fb                              	mov rbx, rdi
0x13557:    e8 94 02 ff ff                        	call 0x37f0 <__errno_location>
0x1355c:    44 8b 20                              	mov r12d, dword ptr [rax]
0x1355f:    48 89 c5                              	mov rbp, rax
0x13562:    48 8d 05 b7 df 20 00                  	lea rax, [rip + 0x20dfb7]
0x13569:    48 85 db                              	test rbx, rbx
0x1356c:    be 38 00 00 00                        	mov esi, 0x38
0x13571:    48 0f 44 d8                           	cmove rbx, rax
0x13575:    48 89 df                              	mov rdi, rbx
0x13578:    e8 03 11 00 00                        	call 0x14680 <function_14680>
0x1357d:    44 89 65 00                           	mov dword ptr [rbp], r12d
0x13581:    5b                                    	pop rbx
0x13582:    5d                                    	pop rbp
0x13583:    41 5c                                 	pop r12
0x13585:    c3                                    	ret 
; data inside code section at 0x13586 -- 0x13590
0x13586:    66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_13590 at 0x13590 -- 0x135a1
0x13590:    48 8d 05 89 df 20 00                  	lea rax, [rip + 0x20df89]
0x13597:    48 85 ff                              	test rdi, rdi
0x1359a:    48 0f 44 f8                           	cmove rdi, rax
0x1359e:    8b 07                                 	mov eax, dword ptr [rdi]
0x135a0:    c3                                    	ret 
; data inside code section at 0x135a1 -- 0x135b0
0x135a1:    0f 1f 44 00 00 66 2e 0f  1f 84 00 00 00 00 00      |..D..f......... |
; function: function_135b0 at 0x135b0 -- 0x135c1
0x135b0:    48 8d 05 69 df 20 00                  	lea rax, [rip + 0x20df69]
0x135b7:    48 85 ff                              	test rdi, rdi
0x135ba:    48 0f 44 f8                           	cmove rdi, rax
0x135be:    89 37                                 	mov dword ptr [rdi], esi
0x135c0:    c3                                    	ret 
; data inside code section at 0x135c1 -- 0x135d0
0x135c1:    0f 1f 44 00 00 66 2e 0f  1f 84 00 00 00 00 00      |..D..f......... |
; function: function_135d0 at 0x135d0 -- 0x13605
0x135d0:    48 8d 05 49 df 20 00                  	lea rax, [rip + 0x20df49]
0x135d7:    48 85 ff                              	test rdi, rdi
0x135da:    89 f1                                 	mov ecx, esi
0x135dc:    48 0f 44 f8                           	cmove rdi, rax
0x135e0:    89 f0                                 	mov eax, esi
0x135e2:    83 e1 1f                              	and ecx, 0x1f
0x135e5:    c0 e8 05                              	shr al, 5
0x135e8:    0f b6 c0                              	movzx eax, al
0x135eb:    48 8d 7c 87 08                        	lea rdi, [rdi + rax*4 + 8]
0x135f0:    8b 37                                 	mov esi, dword ptr [rdi]
0x135f2:    89 f0                                 	mov eax, esi
0x135f4:    d3 e8                                 	shr eax, cl
0x135f6:    31 c2                                 	xor edx, eax
0x135f8:    83 e0 01                              	and eax, 1
0x135fb:    83 e2 01                              	and edx, 1
0x135fe:    d3 e2                                 	shl edx, cl
0x13600:    31 f2                                 	xor edx, esi
0x13602:    89 17                                 	mov dword ptr [rdi], edx
0x13604:    c3                                    	ret 
; data inside code section at 0x13605 -- 0x13610
0x13605:    90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: function_13610 at 0x13610 -- 0x13625
0x13610:    48 8d 05 09 df 20 00                  	lea rax, [rip + 0x20df09]
0x13617:    48 85 ff                              	test rdi, rdi
0x1361a:    48 0f 44 f8                           	cmove rdi, rax
0x1361e:    8b 47 04                              	mov eax, dword ptr [rdi + 4]
0x13621:    89 77 04                              	mov dword ptr [rdi + 4], esi
0x13624:    c3                                    	ret 
; data inside code section at 0x13625 -- 0x13630
0x13625:    90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: function_13630 at 0x13630 -- 0x13660
0x13630:    48 8d 05 e9 de 20 00                  	lea rax, [rip + 0x20dee9]
0x13637:    48 85 ff                              	test rdi, rdi
0x1363a:    48 0f 44 f8                           	cmove rdi, rax
0x1363e:    48 85 f6                              	test rsi, rsi
0x13641:    c7 07 0a 00 00 00                     	mov dword ptr [rdi], 0xa
0x13647:    74 0e                                 	je 0x13657 <function_13630+0x27>
0x13649:    48 85 d2                              	test rdx, rdx
0x1364c:    74 09                                 	je 0x13657 <function_13630+0x27>
0x1364e:    48 89 77 28                           	mov qword ptr [rdi + 0x28], rsi
0x13652:    48 89 57 30                           	mov qword ptr [rdi + 0x30], rdx
0x13656:    c3                                    	ret 
0x13657:    48 83 ec 08                           	sub rsp, 8
0x1365b:    e8 80 01 ff ff                        	call 0x37e0 <abort>
; function: function_13660 at 0x13660 -- 0x136d4
0x13660:    41 57                                 	push r15
0x13662:    41 56                                 	push r14
0x13664:    48 8d 05 b5 de 20 00                  	lea rax, [rip + 0x20deb5]
0x1366b:    41 55                                 	push r13
0x1366d:    41 54                                 	push r12
0x1366f:    49 89 fd                              	mov r13, rdi
0x13672:    55                                    	push rbp
0x13673:    53                                    	push rbx
0x13674:    4c 89 c3                              	mov rbx, r8
0x13677:    49 89 f6                              	mov r14, rsi
0x1367a:    49 89 d7                              	mov r15, rdx
0x1367d:    48 83 ec 18                           	sub rsp, 0x18
0x13681:    4d 85 c0                              	test r8, r8
0x13684:    48 0f 44 d8                           	cmove rbx, rax
0x13688:    48 89 4c 24 08                        	mov qword ptr [rsp + 8], rcx
0x1368d:    e8 5e 01 ff ff                        	call 0x37f0 <__errno_location>
0x13692:    44 8b 20                              	mov r12d, dword ptr [rax]
0x13695:    48 89 c5                              	mov rbp, rax
0x13698:    48 8d 43 08                           	lea rax, [rbx + 8]
0x1369c:    48 83 ec 08                           	sub rsp, 8
0x136a0:    44 8b 4b 04                           	mov r9d, dword ptr [rbx + 4]
0x136a4:    ff 73 30                              	push qword ptr [rbx + 0x30]
0x136a7:    44 8b 03                              	mov r8d, dword ptr [rbx]
0x136aa:    ff 73 28                              	push qword ptr [rbx + 0x28]
0x136ad:    4c 89 fa                              	mov rdx, r15
0x136b0:    50                                    	push rax
0x136b1:    48 8b 4c 24 28                        	mov rcx, qword ptr [rsp + 0x28]
0x136b6:    4c 89 f6                              	mov rsi, r14
0x136b9:    4c 89 ef                              	mov rdi, r13
0x136bc:    e8 9f ea ff ff                        	call 0x12160 <function_12160>
0x136c1:    44 89 65 00                           	mov dword ptr [rbp], r12d
0x136c5:    48 83 c4 38                           	add rsp, 0x38
0x136c9:    5b                                    	pop rbx
0x136ca:    5d                                    	pop rbp
0x136cb:    41 5c                                 	pop r12
0x136cd:    41 5d                                 	pop r13
0x136cf:    41 5e                                 	pop r14
0x136d1:    41 5f                                 	pop r15
0x136d3:    c3                                    	ret 
; data inside code section at 0x136d4 -- 0x136e0
0x136d4:    66 90 66 2e 0f 1f 84 00  00 00 00 00               |f.f.........    |
; function: function_136e0 at 0x136e0 -- 0x137c3
0x136e0:    41 57                                 	push r15
0x136e2:    41 56                                 	push r14
0x136e4:    48 8d 05 35 de 20 00                  	lea rax, [rip + 0x20de35]
0x136eb:    41 55                                 	push r13
0x136ed:    41 54                                 	push r12
0x136ef:    49 89 d4                              	mov r12, rdx
0x136f2:    55                                    	push rbp
0x136f3:    53                                    	push rbx
0x136f4:    48 89 cb                              	mov rbx, rcx
0x136f7:    49 89 fe                              	mov r14, rdi
0x136fa:    49 89 f7                              	mov r15, rsi
0x136fd:    48 83 ec 38                           	sub rsp, 0x38
0x13701:    48 85 c9                              	test rcx, rcx
0x13704:    48 0f 44 d8                           	cmove rbx, rax
0x13708:    31 ed                                 	xor ebp, ebp
0x1370a:    e8 e1 00 ff ff                        	call 0x37f0 <__errno_location>
0x1370f:    4d 85 e4                              	test r12, r12
0x13712:    49 89 c5                              	mov r13, rax
0x13715:    8b 00                                 	mov eax, dword ptr [rax]
0x13717:    40 0f 94 c5                           	sete bpl
0x1371b:    0b 6b 04                              	or ebp, dword ptr [rbx + 4]
0x1371e:    4c 8d 53 08                           	lea r10, [rbx + 8]
0x13722:    48 83 ec 08                           	sub rsp, 8
0x13726:    44 8b 03                              	mov r8d, dword ptr [rbx]
0x13729:    4c 89 f9                              	mov rcx, r15
0x1372c:    89 44 24 14                           	mov dword ptr [rsp + 0x14], eax
0x13730:    ff 73 30                              	push qword ptr [rbx + 0x30]
0x13733:    4c 89 f2                              	mov rdx, r14
0x13736:    ff 73 28                              	push qword ptr [rbx + 0x28]
0x13739:    41 52                                 	push r10
0x1373b:    31 f6                                 	xor esi, esi
0x1373d:    41 89 e9                              	mov r9d, ebp
0x13740:    31 ff                                 	xor edi, edi
0x13742:    4c 89 54 24 40                        	mov qword ptr [rsp + 0x40], r10
0x13747:    e8 14 ea ff ff                        	call 0x12160 <function_12160>
0x1374c:    48 8d 70 01                           	lea rsi, [rax + 1]
0x13750:    48 89 44 24 48                        	mov qword ptr [rsp + 0x48], rax
0x13755:    48 83 c4 20                           	add rsp, 0x20
0x13759:    48 89 f7                              	mov rdi, rsi
0x1375c:    48 89 74 24 18                        	mov qword ptr [rsp + 0x18], rsi
0x13761:    e8 1a 0d 00 00                        	call 0x14480 <function_14480>
0x13766:    48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x1376b:    48 83 ec 08                           	sub rsp, 8
0x1376f:    ff 73 30                              	push qword ptr [rbx + 0x30]
0x13772:    ff 73 28                              	push qword ptr [rbx + 0x28]
0x13775:    4c 8b 54 24 38                        	mov r10, qword ptr [rsp + 0x38]
0x1377a:    41 89 e9                              	mov r9d, ebp
0x1377d:    44 8b 03                              	mov r8d, dword ptr [rbx]
0x13780:    4c 89 f9                              	mov rcx, r15
0x13783:    4c 89 f2                              	mov rdx, r14
0x13786:    48 89 c7                              	mov rdi, rax
0x13789:    41 52                                 	push r10
0x1378b:    48 8b 74 24 38                        	mov rsi, qword ptr [rsp + 0x38]
0x13790:    e8 cb e9 ff ff                        	call 0x12160 <function_12160>
0x13795:    8b 44 24 2c                           	mov eax, dword ptr [rsp + 0x2c]
0x13799:    48 83 c4 20                           	add rsp, 0x20
0x1379d:    4d 85 e4                              	test r12, r12
0x137a0:    41 89 45 00                           	mov dword ptr [r13], eax
0x137a4:    74 09                                 	je 0x137af <function_136e0+0xcf>
0x137a6:    4c 8b 5c 24 28                        	mov r11, qword ptr [rsp + 0x28]
0x137ab:    4d 89 1c 24                           	mov qword ptr [r12], r11
0x137af:    48 8b 44 24 10                        	mov rax, qword ptr [rsp + 0x10]
0x137b4:    48 83 c4 38                           	add rsp, 0x38
0x137b8:    5b                                    	pop rbx
0x137b9:    5d                                    	pop rbp
0x137ba:    41 5c                                 	pop r12
0x137bc:    41 5d                                 	pop r13
0x137be:    41 5e                                 	pop r14
0x137c0:    41 5f                                 	pop r15
0x137c2:    c3                                    	ret 
; data inside code section at 0x137c3 -- 0x137d0
0x137c3:    0f 1f 00 66 2e 0f 1f 84  00 00 00 00 00            |...f.........   |
; function: function_137d0 at 0x137d0 -- 0x137da
0x137d0:    48 89 d1                              	mov rcx, rdx
0x137d3:    31 d2                                 	xor edx, edx
0x137d5:    e9 06 ff ff ff                        	jmp 0x136e0 <function_136e0>
; data inside code section at 0x137da -- 0x137e0
0x137da:    66 0f 1f 44 00 00                                  |f..D..          |
; function: function_137e0 at 0x137e0 -- 0x13873
0x137e0:    8b 05 52 ca 20 00                     	mov eax, dword ptr [rip + 0x20ca52]
0x137e6:    41 54                                 	push r12
0x137e8:    4c 8b 25 51 ca 20 00                  	mov r12, qword ptr [rip + 0x20ca51]
0x137ef:    55                                    	push rbp
0x137f0:    53                                    	push rbx
0x137f1:    83 f8 01                              	cmp eax, 1
0x137f4:    7e 2b                                 	jle 0x13821 <function_137e0+0x41>
0x137f6:    83 e8 02                              	sub eax, 2
0x137f9:    49 8d 5c 24 18                        	lea rbx, [r12 + 0x18]
0x137fe:    48 c1 e0 04                           	shl rax, 4
0x13802:    49 8d 6c 04 28                        	lea rbp, [r12 + rax + 0x28]
0x13807:    66 0f 1f 84 00 00 00 00 00            	nop word ptr [rax + rax]
0x13810:    48 8b 3b                              	mov rdi, qword ptr [rbx]
0x13813:    48 83 c3 10                           	add rbx, 0x10
0x13817:    e8 54 06 ff ff                        	call 0x3e70 <free>
0x1381c:    48 39 eb                              	cmp rbx, rbp
0x1381f:    75 ef                                 	jne 0x13810 <function_137e0+0x30>
0x13821:    49 8b 7c 24 08                        	mov rdi, qword ptr [r12 + 8]
0x13826:    48 8d 1d f3 db 20 00                  	lea rbx, [rip + 0x20dbf3]
0x1382d:    48 39 df                              	cmp rdi, rbx
0x13830:    74 17                                 	je 0x13849 <function_137e0+0x69>
0x13832:    e8 39 06 ff ff                        	call 0x3e70 <free>
0x13837:    48 c7 05 0e ca 20 00 00 01 00 00      	mov qword ptr [rip + 0x20ca0e], 0x100
0x13842:    48 89 1d 0f ca 20 00                  	mov qword ptr [rip + 0x20ca0f], rbx
0x13849:    48 8d 1d 00 ca 20 00                  	lea rbx, [rip + 0x20ca00]
0x13850:    49 39 dc                              	cmp r12, rbx
0x13853:    74 0f                                 	je 0x13864 <function_137e0+0x84>
0x13855:    4c 89 e7                              	mov rdi, r12
0x13858:    e8 13 06 ff ff                        	call 0x3e70 <free>
0x1385d:    48 89 1d dc c9 20 00                  	mov qword ptr [rip + 0x20c9dc], rbx
0x13864:    5b                                    	pop rbx
0x13865:    c7 05 c9 c9 20 00 01 00 00 00         	mov dword ptr [rip + 0x20c9c9], 1
0x1386f:    5d                                    	pop rbp
0x13870:    41 5c                                 	pop r12
0x13872:    c3                                    	ret 
; data inside code section at 0x13873 -- 0x13880
0x13873:    0f 1f 00 66 2e 0f 1f 84  00 00 00 00 00            |...f.........   |
; function: function_13880 at 0x13880 -- 0x13893
0x13880:    48 8d 0d 99 dc 20 00                  	lea rcx, [rip + 0x20dc99]
0x13887:    48 c7 c2 ff ff ff ff                  	mov rdx, -1
0x1388e:    e9 0d fb ff ff                        	jmp 0x133a0
; data inside code section at 0x13893 -- 0x138a0
0x13893:    0f 1f 00 66 2e 0f 1f 84  00 00 00 00 00            |...f.........   |
; function: function_138a0 at 0x138a0 -- 0x138ac
0x138a0:    48 8d 0d 79 dc 20 00                  	lea rcx, [rip + 0x20dc79]
0x138a7:    e9 f4 fa ff ff                        	jmp 0x133a0
; data inside code section at 0x138ac -- 0x138b0
0x138ac:    0f 1f 40 00                                        |..@.            |
; function: function_138b0 at 0x138b0 -- 0x138c8
0x138b0:    48 8d 0d 69 dc 20 00                  	lea rcx, [rip + 0x20dc69]
0x138b7:    48 89 fe                              	mov rsi, rdi
0x138ba:    48 c7 c2 ff ff ff ff                  	mov rdx, -1
0x138c1:    31 ff                                 	xor edi, edi
0x138c3:    e9 d8 fa ff ff                        	jmp 0x133a0
; data inside code section at 0x138c8 -- 0x138d0
0x138c8:    0f 1f 84 00 00 00 00 00                            |........        |
; function: function_138d0 at 0x138d0 -- 0x138e4
0x138d0:    48 8d 0d 49 dc 20 00                  	lea rcx, [rip + 0x20dc49]
0x138d7:    48 89 f2                              	mov rdx, rsi
0x138da:    48 89 fe                              	mov rsi, rdi
0x138dd:    31 ff                                 	xor edi, edi
0x138df:    e9 bc fa ff ff                        	jmp 0x133a0
; data inside code section at 0x138e4 -- 0x138f0
0x138e4:    66 90 66 2e 0f 1f 84 00  00 00 00 00               |f.f.........    |
; function: function_138f0 at 0x138f0 -- 0x13a10
0x138f0:    48 83 ec 48                           	sub rsp, 0x48
0x138f4:    48 89 d0                              	mov rax, rdx
0x138f7:    64 48 8b 14 25 28 00 00 00            	mov rdx, qword ptr fs:[0x28]
0x13900:    48 89 54 24 38                        	mov qword ptr [rsp + 0x38], rdx
0x13905:    31 d2                                 	xor edx, edx
0x13907:    83 fe 0a                              	cmp esi, 0xa
0x1390a:    74 68                                 	je 0x13974 <function_138f0+0x84>
0x1390c:    89 34 24                              	mov dword ptr [rsp], esi
0x1390f:    48 89 e1                              	mov rcx, rsp
0x13912:    48 c7 c2 ff ff ff ff                  	mov rdx, -1
0x13919:    48 89 c6                              	mov rsi, rax
0x1391c:    48 c7 44 24 04 00 00 00 00            	mov qword ptr [rsp + 4], 0
0x13925:    48 c7 44 24 0c 00 00 00 00            	mov qword ptr [rsp + 0xc], 0
0x1392e:    48 c7 44 24 14 00 00 00 00            	mov qword ptr [rsp + 0x14], 0
0x13937:    48 c7 44 24 1c 00 00 00 00            	mov qword ptr [rsp + 0x1c], 0
0x13940:    48 c7 44 24 24 00 00 00 00            	mov qword ptr [rsp + 0x24], 0
0x13949:    48 c7 44 24 2c 00 00 00 00            	mov qword ptr [rsp + 0x2c], 0
0x13952:    c7 44 24 34 00 00 00 00               	mov dword ptr [rsp + 0x34], 0
0x1395a:    e8 41 fa ff ff                        	call 0x133a0
0x1395f:    48 8b 4c 24 38                        	mov rcx, qword ptr [rsp + 0x38]
0x13964:    64 48 33 0c 25 28 00 00 00            	xor rcx, qword ptr fs:[0x28]
0x1396d:    75 0a                                 	jne 0x13979 <function_138f0+0x89>
0x1396f:    48 83 c4 48                           	add rsp, 0x48
0x13973:    c3                                    	ret 
0x13974:    e8 67 fe fe ff                        	call 0x37e0 <abort>
0x13979:    e8 f2 ff fe ff                        	call 0x3970 <__stack_chk_fail>
0x1397e:    66 90                                 	nop 
0x13980:    48 83 ec 48                           	sub rsp, 0x48
0x13984:    48 89 d0                              	mov rax, rdx
0x13987:    48 89 ca                              	mov rdx, rcx
0x1398a:    64 48 8b 0c 25 28 00 00 00            	mov rcx, qword ptr fs:[0x28]
0x13993:    48 89 4c 24 38                        	mov qword ptr [rsp + 0x38], rcx
0x13998:    31 c9                                 	xor ecx, ecx
0x1399a:    83 fe 0a                              	cmp esi, 0xa
0x1399d:    74 61                                 	je 0x13a00 <function_138f0+0x110>
0x1399f:    89 34 24                              	mov dword ptr [rsp], esi
0x139a2:    48 89 e1                              	mov rcx, rsp
0x139a5:    48 89 c6                              	mov rsi, rax
0x139a8:    48 c7 44 24 04 00 00 00 00            	mov qword ptr [rsp + 4], 0
0x139b1:    48 c7 44 24 0c 00 00 00 00            	mov qword ptr [rsp + 0xc], 0
0x139ba:    48 c7 44 24 14 00 00 00 00            	mov qword ptr [rsp + 0x14], 0
0x139c3:    48 c7 44 24 1c 00 00 00 00            	mov qword ptr [rsp + 0x1c], 0
0x139cc:    48 c7 44 24 24 00 00 00 00            	mov qword ptr [rsp + 0x24], 0
0x139d5:    48 c7 44 24 2c 00 00 00 00            	mov qword ptr [rsp + 0x2c], 0
0x139de:    c7 44 24 34 00 00 00 00               	mov dword ptr [rsp + 0x34], 0
0x139e6:    e8 b5 f9 ff ff                        	call 0x133a0
0x139eb:    48 8b 54 24 38                        	mov rdx, qword ptr [rsp + 0x38]
0x139f0:    64 48 33 14 25 28 00 00 00            	xor rdx, qword ptr fs:[0x28]
0x139f9:    75 0a                                 	jne 0x13a05 <function_138f0+0x115>
0x139fb:    48 83 c4 48                           	add rsp, 0x48
0x139ff:    c3                                    	ret 
0x13a00:    e8 db fd fe ff                        	call 0x37e0 <abort>
0x13a05:    e8 66 ff fe ff                        	call 0x3970 <__stack_chk_fail>
0x13a0a:    66 0f 1f 44 00 00                     	nop word ptr [rax + rax]
; function: function_13a10 at 0x13a10 -- 0x13a1c
0x13a10:    48 89 f2                              	mov rdx, rsi
0x13a13:    89 fe                                 	mov esi, edi
0x13a15:    31 ff                                 	xor edi, edi
0x13a17:    e9 d4 fe ff ff                        	jmp 0x138f0 <function_138f0>
; data inside code section at 0x13a1c -- 0x13a20
0x13a1c:    0f 1f 40 00                                        |..@.            |
; function: function_13a20 at 0x13a20 -- 0x13a2f
0x13a20:    48 89 d1                              	mov rcx, rdx
0x13a23:    48 89 f2                              	mov rdx, rsi
0x13a26:    89 fe                                 	mov esi, edi
0x13a28:    31 ff                                 	xor edi, edi
0x13a2a:    e9 51 ff ff ff                        	jmp 0x13980
; data inside code section at 0x13a2f -- 0x13a30
0x13a2f:    90                                                 |.               |
; function: function_13a30 at 0x13a30 -- 0x13ae0
0x13a30:    48 83 ec 48                           	sub rsp, 0x48
0x13a34:    89 d1                                 	mov ecx, edx
0x13a36:    64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x13a3f:    48 89 44 24 38                        	mov qword ptr [rsp + 0x38], rax
0x13a44:    31 c0                                 	xor eax, eax
0x13a46:    48 8b 05 03 db 20 00                  	mov rax, qword ptr [rip + 0x20db03]
0x13a4d:    49 89 e0                              	mov r8, rsp
0x13a50:    83 e1 1f                              	and ecx, 0x1f
0x13a53:    66 0f 6f 05 c5 da 20 00               	movdqa xmm0, xmmword ptr [rip + 0x20dac5]
0x13a5b:    48 89 44 24 30                        	mov qword ptr [rsp + 0x30], rax
0x13a60:    89 d0                                 	mov eax, edx
0x13a62:    0f 29 04 24                           	movaps xmmword ptr [rsp], xmm0
0x13a66:    c0 e8 05                              	shr al, 5
0x13a69:    0f b6 c0                              	movzx eax, al
0x13a6c:    4d 8d 4c 80 08                        	lea r9, [r8 + rax*4 + 8]
0x13a71:    66 0f 6f 05 b7 da 20 00               	movdqa xmm0, xmmword ptr [rip + 0x20dab7]
0x13a79:    0f 29 44 24 10                        	movaps xmmword ptr [rsp + 0x10], xmm0
0x13a7e:    66 0f 6f 05 ba da 20 00               	movdqa xmm0, xmmword ptr [rip + 0x20daba]
0x13a86:    0f 29 44 24 20                        	movaps xmmword ptr [rsp + 0x20], xmm0
0x13a8b:    41 8b 11                              	mov edx, dword ptr [r9]
0x13a8e:    89 d0                                 	mov eax, edx
0x13a90:    d3 e8                                 	shr eax, cl
0x13a92:    f7 d0                                 	not eax
0x13a94:    83 e0 01                              	and eax, 1
0x13a97:    d3 e0                                 	shl eax, cl
0x13a99:    4c 89 c1                              	mov rcx, r8
0x13a9c:    31 d0                                 	xor eax, edx
0x13a9e:    48 89 f2                              	mov rdx, rsi
0x13aa1:    48 89 fe                              	mov rsi, rdi
0x13aa4:    41 89 01                              	mov dword ptr [r9], eax
0x13aa7:    31 ff                                 	xor edi, edi
0x13aa9:    e8 f2 f8 ff ff                        	call 0x133a0
0x13aae:    48 8b 74 24 38                        	mov rsi, qword ptr [rsp + 0x38]
0x13ab3:    64 48 33 34 25 28 00 00 00            	xor rsi, qword ptr fs:[0x28]
0x13abc:    75 05                                 	jne 0x13ac3 <function_13a30+0x93>
0x13abe:    48 83 c4 48                           	add rsp, 0x48
0x13ac2:    c3                                    	ret 
0x13ac3:    e8 a8 fe fe ff                        	call 0x3970 <__stack_chk_fail>
0x13ac8:    0f 1f 84 00 00 00 00 00               	nop dword ptr [rax + rax]
0x13ad0:    40 0f be d6                           	movsx edx, sil
0x13ad4:    48 c7 c6 ff ff ff ff                  	mov rsi, -1
0x13adb:    e9 50 ff ff ff                        	jmp 0x13a30 <function_13a30>
; function: function_13ae0 at 0x13ae0 -- 0x13af1
0x13ae0:    ba 3a 00 00 00                        	mov edx, 0x3a
0x13ae5:    48 c7 c6 ff ff ff ff                  	mov rsi, -1
0x13aec:    e9 3f ff ff ff                        	jmp 0x13a30 <function_13a30>
; data inside code section at 0x13af1 -- 0x13b00
0x13af1:    0f 1f 44 00 00 66 2e 0f  1f 84 00 00 00 00 00      |..D..f......... |
; function: function_13b00 at 0x13b00 -- 0x13b0a
0x13b00:    ba 3a 00 00 00                        	mov edx, 0x3a
0x13b05:    e9 26 ff ff ff                        	jmp 0x13a30 <function_13a30>
; data inside code section at 0x13b0a -- 0x13b10
0x13b0a:    66 0f 1f 44 00 00                                  |f..D..          |
; function: function_13b10 at 0x13b10 -- 0x13c4c
0x13b10:    48 83 ec 48                           	sub rsp, 0x48
0x13b14:    48 89 d0                              	mov rax, rdx
0x13b17:    64 48 8b 14 25 28 00 00 00            	mov rdx, qword ptr fs:[0x28]
0x13b20:    48 89 54 24 38                        	mov qword ptr [rsp + 0x38], rdx
0x13b25:    31 d2                                 	xor edx, edx
0x13b27:    83 fe 0a                              	cmp esi, 0xa
0x13b2a:    74 68                                 	je 0x13b94 <function_13b10+0x84>
0x13b2c:    89 34 24                              	mov dword ptr [rsp], esi
0x13b2f:    48 89 e1                              	mov rcx, rsp
0x13b32:    48 c7 c2 ff ff ff ff                  	mov rdx, -1
0x13b39:    48 89 c6                              	mov rsi, rax
0x13b3c:    48 c7 44 24 04 00 00 00 00            	mov qword ptr [rsp + 4], 0
0x13b45:    48 c7 44 24 0c 00 00 00 04            	mov qword ptr [rsp + 0xc], 0x4000000
0x13b4e:    48 c7 44 24 14 00 00 00 00            	mov qword ptr [rsp + 0x14], 0
0x13b57:    48 c7 44 24 1c 00 00 00 00            	mov qword ptr [rsp + 0x1c], 0
0x13b60:    48 c7 44 24 24 00 00 00 00            	mov qword ptr [rsp + 0x24], 0
0x13b69:    48 c7 44 24 2c 00 00 00 00            	mov qword ptr [rsp + 0x2c], 0
0x13b72:    c7 44 24 34 00 00 00 00               	mov dword ptr [rsp + 0x34], 0
0x13b7a:    e8 21 f8 ff ff                        	call 0x133a0
0x13b7f:    48 8b 4c 24 38                        	mov rcx, qword ptr [rsp + 0x38]
0x13b84:    64 48 33 0c 25 28 00 00 00            	xor rcx, qword ptr fs:[0x28]
0x13b8d:    75 0a                                 	jne 0x13b99 <function_13b10+0x89>
0x13b8f:    48 83 c4 48                           	add rsp, 0x48
0x13b93:    c3                                    	ret 
0x13b94:    e8 47 fc fe ff                        	call 0x37e0 <abort>
0x13b99:    e8 d2 fd fe ff                        	call 0x3970 <__stack_chk_fail>
0x13b9e:    66 90                                 	nop 
0x13ba0:    48 83 ec 48                           	sub rsp, 0x48
0x13ba4:    49 89 c9                              	mov r9, rcx
0x13ba7:    48 8b 0d a2 d9 20 00                  	mov rcx, qword ptr [rip + 0x20d9a2]
0x13bae:    66 0f 6f 05 6a d9 20 00               	movdqa xmm0, xmmword ptr [rip + 0x20d96a]
0x13bb6:    64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x13bbf:    48 89 44 24 38                        	mov qword ptr [rsp + 0x38], rax
0x13bc4:    31 c0                                 	xor eax, eax
0x13bc6:    0f 29 04 24                           	movaps xmmword ptr [rsp], xmm0
0x13bca:    48 85 f6                              	test rsi, rsi
0x13bcd:    48 89 4c 24 30                        	mov qword ptr [rsp + 0x30], rcx
0x13bd2:    c7 04 24 0a 00 00 00                  	mov dword ptr [rsp], 0xa
0x13bd9:    66 0f 6f 05 4f d9 20 00               	movdqa xmm0, xmmword ptr [rip + 0x20d94f]
0x13be1:    0f 29 44 24 10                        	movaps xmmword ptr [rsp + 0x10], xmm0
0x13be6:    66 0f 6f 05 52 d9 20 00               	movdqa xmm0, xmmword ptr [rip + 0x20d952]
0x13bee:    0f 29 44 24 20                        	movaps xmmword ptr [rsp + 0x20], xmm0
0x13bf3:    74 32                                 	je 0x13c27 <function_13b10+0x117>
0x13bf5:    48 85 d2                              	test rdx, rdx
0x13bf8:    74 2d                                 	je 0x13c27 <function_13b10+0x117>
0x13bfa:    48 89 74 24 28                        	mov qword ptr [rsp + 0x28], rsi
0x13bff:    48 89 54 24 30                        	mov qword ptr [rsp + 0x30], rdx
0x13c04:    48 89 e1                              	mov rcx, rsp
0x13c07:    4c 89 c2                              	mov rdx, r8
0x13c0a:    4c 89 ce                              	mov rsi, r9
0x13c0d:    e8 8e f7 ff ff                        	call 0x133a0
0x13c12:    48 8b 7c 24 38                        	mov rdi, qword ptr [rsp + 0x38]
0x13c17:    64 48 33 3c 25 28 00 00 00            	xor rdi, qword ptr fs:[0x28]
0x13c20:    75 0a                                 	jne 0x13c2c <function_13b10+0x11c>
0x13c22:    48 83 c4 48                           	add rsp, 0x48
0x13c26:    c3                                    	ret 
0x13c27:    e8 b4 fb fe ff                        	call 0x37e0 <abort>
0x13c2c:    e8 3f fd fe ff                        	call 0x3970 <__stack_chk_fail>
0x13c31:    0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0x13c36:    66 2e 0f 1f 84 00 00 00 00 00         	nop word ptr cs:[rax + rax]
0x13c40:    49 c7 c0 ff ff ff ff                  	mov r8, -1
0x13c47:    e9 54 ff ff ff                        	jmp 0x13ba0 <function_13b10+0x90>
; data inside code section at 0x13c4c -- 0x13c50
0x13c4c:    0f 1f 40 00                                        |..@.            |
; function: function_13c50 at 0x13c50 -- 0x13c67
0x13c50:    48 89 d1                              	mov rcx, rdx
0x13c53:    49 c7 c0 ff ff ff ff                  	mov r8, -1
0x13c5a:    48 89 f2                              	mov rdx, rsi
0x13c5d:    48 89 fe                              	mov rsi, rdi
0x13c60:    31 ff                                 	xor edi, edi
0x13c62:    e9 39 ff ff ff                        	jmp 0x13ba0
; data inside code section at 0x13c67 -- 0x13c70
0x13c67:    66 0f 1f 84 00 00 00 00  00                        |f........       |
; function: function_13c70 at 0x13c70 -- 0x13c83
0x13c70:    49 89 c8                              	mov r8, rcx
0x13c73:    48 89 d1                              	mov rcx, rdx
0x13c76:    48 89 f2                              	mov rdx, rsi
0x13c79:    48 89 fe                              	mov rsi, rdi
0x13c7c:    31 ff                                 	xor edi, edi
0x13c7e:    e9 1d ff ff ff                        	jmp 0x13ba0
; data inside code section at 0x13c83 -- 0x13c90
0x13c83:    0f 1f 00 66 2e 0f 1f 84  00 00 00 00 00            |...f.........   |
; function: function_13c90 at 0x13c90 -- 0x13c9c
0x13c90:    48 8d 0d 69 c5 20 00                  	lea rcx, [rip + 0x20c569]
0x13c97:    e9 04 f7 ff ff                        	jmp 0x133a0
; data inside code section at 0x13c9c -- 0x13ca0
0x13c9c:    0f 1f 40 00                                        |..@.            |
; function: function_13ca0 at 0x13ca0 -- 0x13cb4
0x13ca0:    48 8d 0d 59 c5 20 00                  	lea rcx, [rip + 0x20c559]
0x13ca7:    48 89 f2                              	mov rdx, rsi
0x13caa:    48 89 fe                              	mov rsi, rdi
0x13cad:    31 ff                                 	xor edi, edi
0x13caf:    e9 ec f6 ff ff                        	jmp 0x133a0
; data inside code section at 0x13cb4 -- 0x13cc0
0x13cb4:    66 90 66 2e 0f 1f 84 00  00 00 00 00               |f.f.........    |
; function: function_13cc0 at 0x13cc0 -- 0x13cd3
0x13cc0:    48 8d 0d 39 c5 20 00                  	lea rcx, [rip + 0x20c539]
0x13cc7:    48 c7 c2 ff ff ff ff                  	mov rdx, -1
0x13cce:    e9 cd f6 ff ff                        	jmp 0x133a0
; data inside code section at 0x13cd3 -- 0x13ce0
0x13cd3:    0f 1f 00 66 2e 0f 1f 84  00 00 00 00 00            |...f.........   |
; function: function_13ce0 at 0x13ce0 -- 0x13cf8
0x13ce0:    48 8d 0d 19 c5 20 00                  	lea rcx, [rip + 0x20c519]
0x13ce7:    48 89 fe                              	mov rsi, rdi
0x13cea:    48 c7 c2 ff ff ff ff                  	mov rdx, -1
0x13cf1:    31 ff                                 	xor edi, edi
0x13cf3:    e9 a8 f6 ff ff                        	jmp 0x133a0
; data inside code section at 0x13cf8 -- 0x13d00
0x13cf8:    0f 1f 84 00 00 00 00 00                            |........        |
; function: function_13d00 at 0x13d00 -- 0x13e70
0x13d00:    41 57                                 	push r15
0x13d02:    41 56                                 	push r14
0x13d04:    41 55                                 	push r13
0x13d06:    41 54                                 	push r12
0x13d08:    49 89 fc                              	mov r12, rdi
0x13d0b:    55                                    	push rbp
0x13d0c:    53                                    	push rbx
0x13d0d:    48 89 f5                              	mov rbp, rsi
0x13d10:    31 db                                 	xor ebx, ebx
0x13d12:    48 81 ec 38 01 00 00                  	sub rsp, 0x138
0x13d19:    64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x13d22:    48 89 84 24 28 01 00 00               	mov qword ptr [rsp + 0x128], rax
0x13d2a:    31 c0                                 	xor eax, eax
0x13d2c:    e8 df 90 ff ff                        	call 0xce10 <function_ce10>
0x13d31:    48 89 ef                              	mov rdi, rbp
0x13d34:    49 89 c5                              	mov r13, rax
0x13d37:    e8 d4 90 ff ff                        	call 0xce10 <function_ce10>
0x13d3c:    4c 89 ef                              	mov rdi, r13
0x13d3f:    49 89 c6                              	mov r14, rax
0x13d42:    e8 29 91 ff ff                        	call 0xce70 <function_ce70>
0x13d47:    4c 89 f7                              	mov rdi, r14
0x13d4a:    49 89 c7                              	mov r15, rax
0x13d4d:    e8 1e 91 ff ff                        	call 0xce70 <function_ce70>
0x13d52:    49 39 c7                              	cmp r15, rax
0x13d55:    74 31                                 	je 0x13d88 <function_13d00+0x88>
0x13d57:    48 8b 8c 24 28 01 00 00               	mov rcx, qword ptr [rsp + 0x128]
0x13d5f:    64 48 33 0c 25 28 00 00 00            	xor rcx, qword ptr fs:[0x28]
0x13d68:    89 d8                                 	mov eax, ebx
0x13d6a:    0f 85 f2 00 00 00                     	jne 0x13e62 <function_13d00+0x162>
0x13d70:    48 81 c4 38 01 00 00                  	add rsp, 0x138
0x13d77:    5b                                    	pop rbx
0x13d78:    5d                                    	pop rbp
0x13d79:    41 5c                                 	pop r12
0x13d7b:    41 5d                                 	pop r13
0x13d7d:    41 5e                                 	pop r14
0x13d7f:    41 5f                                 	pop r15
0x13d81:    c3                                    	ret 
; data inside code section at 0x13d82 -- 0x13d88
0x13d82:    66 0f 1f 44 00 00                                  |f..D..          |
0x13d88:    4c 89 fa                              	mov rdx, r15
0x13d8b:    4c 89 f6                              	mov rsi, r14
0x13d8e:    4c 89 ef                              	mov rdi, r13
0x13d91:    e8 3a fd fe ff                        	call 0x3ad0 <memcmp>
0x13d96:    85 c0                                 	test eax, eax
0x13d98:    75 bd                                 	jne 0x13d57 <function_13d00+0x57>
0x13d9a:    4c 89 e7                              	mov rdi, r12
0x13d9d:    e8 4e 1f 00 00                        	call 0x15cf0 <function_15cf0>
0x13da2:    48 89 ef                              	mov rdi, rbp
0x13da5:    49 89 c4                              	mov r12, rax
0x13da8:    e8 43 1f 00 00                        	call 0x15cf0 <function_15cf0>
0x13dad:    48 89 e2                              	mov rdx, rsp
0x13db0:    4c 89 e6                              	mov rsi, r12
0x13db3:    bf 01 00 00 00                        	mov edi, 1
0x13db8:    48 89 c5                              	mov rbp, rax
0x13dbb:    e8 20 fe fe ff                        	call 0x3be0 <__xstat>
0x13dc0:    85 c0                                 	test eax, eax
0x13dc2:    75 7c                                 	jne 0x13e40 <function_13d00+0x140>
0x13dc4:    48 8d 94 24 90 00 00 00               	lea rdx, [rsp + 0x90]
0x13dcc:    48 89 ee                              	mov rsi, rbp
0x13dcf:    bf 01 00 00 00                        	mov edi, 1
0x13dd4:    e8 07 fe fe ff                        	call 0x3be0 <__xstat>
0x13dd9:    85 c0                                 	test eax, eax
0x13ddb:    75 3b                                 	jne 0x13e18 <function_13d00+0x118>
0x13ddd:    31 db                                 	xor ebx, ebx
0x13ddf:    48 8b 84 24 98 00 00 00               	mov rax, qword ptr [rsp + 0x98]
0x13de7:    48 39 44 24 08                        	cmp qword ptr [rsp + 8], rax
0x13dec:    75 0f                                 	jne 0x13dfd <function_13d00+0xfd>
0x13dee:    48 8b 84 24 90 00 00 00               	mov rax, qword ptr [rsp + 0x90]
0x13df6:    48 39 04 24                           	cmp qword ptr [rsp], rax
0x13dfa:    0f 94 c3                              	sete bl
0x13dfd:    4c 89 e7                              	mov rdi, r12
0x13e00:    e8 6b 00 ff ff                        	call 0x3e70 <free>
0x13e05:    48 89 ef                              	mov rdi, rbp
0x13e08:    e8 63 00 ff ff                        	call 0x3e70 <free>
0x13e0d:    e9 45 ff ff ff                        	jmp 0x13d57 <function_13d00+0x57>
; data inside code section at 0x13e12 -- 0x13e18
0x13e12:    66 0f 1f 44 00 00                                  |f..D..          |
0x13e18:    e8 d3 f9 fe ff                        	call 0x37f0 <__errno_location>
0x13e1d:    8b 30                                 	mov esi, dword ptr [rax]
0x13e1f:    48 8d 15 d6 64 00 00                  	lea rdx, [rip + 0x64d6]
0x13e26:    48 89 e9                              	mov rcx, rbp
0x13e29:    bf 01 00 00 00                        	mov edi, 1
0x13e2e:    31 c0                                 	xor eax, eax
0x13e30:    e8 eb fe fe ff                        	call 0x3d20 <error>
0x13e35:    eb a6                                 	jmp 0x13ddd <function_13d00+0xdd>
; data inside code section at 0x13e37 -- 0x13e40
0x13e37:    66 0f 1f 84 00 00 00 00  00                        |f........       |
0x13e40:    e8 ab f9 fe ff                        	call 0x37f0 <__errno_location>
0x13e45:    8b 30                                 	mov esi, dword ptr [rax]
0x13e47:    48 8d 15 ae 64 00 00                  	lea rdx, [rip + 0x64ae]
0x13e4e:    4c 89 e1                              	mov rcx, r12
0x13e51:    bf 01 00 00 00                        	mov edi, 1
0x13e56:    31 c0                                 	xor eax, eax
0x13e58:    e8 c3 fe fe ff                        	call 0x3d20 <error>
0x13e5d:    e9 62 ff ff ff                        	jmp 0x13dc4 <function_13d00+0xc4>
0x13e62:    e8 09 fb fe ff                        	call 0x3970 <__stack_chk_fail>
0x13e67:    66 0f 1f 84 00 00 00 00 00            	nop word ptr [rax + rax]
; function: function_13e70 at 0x13e70 -- 0x14277
0x13e70:    41 57                                 	push r15
0x13e72:    41 56                                 	push r14
0x13e74:    41 55                                 	push r13
0x13e76:    41 54                                 	push r12
0x13e78:    4d 89 cc                              	mov r12, r9
0x13e7b:    55                                    	push rbp
0x13e7c:    53                                    	push rbx
0x13e7d:    48 89 fd                              	mov rbp, rdi
0x13e80:    4c 89 c3                              	mov rbx, r8
0x13e83:    48 83 ec 28                           	sub rsp, 0x28
0x13e87:    48 85 f6                              	test rsi, rsi
0x13e8a:    0f 84 90 00 00 00                     	je 0x13f20 <function_13e70+0xb0>
0x13e90:    49 89 d0                              	mov r8, rdx
0x13e93:    48 8d 15 ee 6c 00 00                  	lea rdx, [rip + 0x6cee]
0x13e9a:    49 89 c9                              	mov r9, rcx
0x13e9d:    31 c0                                 	xor eax, eax
0x13e9f:    48 89 f1                              	mov rcx, rsi
0x13ea2:    be 01 00 00 00                        	mov esi, 1
0x13ea7:    e8 44 ff fe ff                        	call 0x3df0 <__fprintf_chk>
0x13eac:    48 8d 35 e8 6c 00 00                  	lea rsi, [rip + 0x6ce8]
0x13eb3:    31 ff                                 	xor edi, edi
0x13eb5:    ba 05 00 00 00                        	mov edx, 5
0x13eba:    e8 71 fa fe ff                        	call 0x3930 <dcgettext>
0x13ebf:    48 8d 15 fa 6f 00 00                  	lea rdx, [rip + 0x6ffa]
0x13ec6:    48 89 c1                              	mov rcx, rax
0x13ec9:    41 b8 e1 07 00 00                     	mov r8d, 0x7e1
0x13ecf:    be 01 00 00 00                        	mov esi, 1
0x13ed4:    48 89 ef                              	mov rdi, rbp
0x13ed7:    31 c0                                 	xor eax, eax
0x13ed9:    e8 12 ff fe ff                        	call 0x3df0 <__fprintf_chk>
0x13ede:    48 8d 35 43 6d 00 00                  	lea rsi, [rip + 0x6d43]
0x13ee5:    31 ff                                 	xor edi, edi
0x13ee7:    ba 05 00 00 00                        	mov edx, 5
0x13eec:    e8 3f fa fe ff                        	call 0x3930 <dcgettext>
0x13ef1:    48 89 ee                              	mov rsi, rbp
0x13ef4:    48 89 c7                              	mov rdi, rax
0x13ef7:    e8 f4 fb fe ff                        	call 0x3af0 <fputs_unlocked>
0x13efc:    49 83 fc 09                           	cmp r12, 9
0x13f00:    0f 87 2a 03 00 00                     	ja 0x14230 <function_13e70+0x3c0>
0x13f06:    48 8d 15 73 6f 00 00                  	lea rdx, [rip + 0x6f73]
0x13f0d:    4a 63 04 a2                           	movsxd rax, dword ptr [rdx + r12*4]
0x13f11:    48 01 d0                              	add rax, rdx
0x13f14:    ff e0                                 	jmp rax
; data inside code section at 0x13f16 -- 0x13f20
0x13f16:    66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x13f20:    49 89 c8                              	mov r8, rcx
0x13f23:    48 89 d1                              	mov rcx, rdx
0x13f26:    48 8d 15 67 6c 00 00                  	lea rdx, [rip + 0x6c67]
0x13f2d:    be 01 00 00 00                        	mov esi, 1
0x13f32:    31 c0                                 	xor eax, eax
0x13f34:    e8 b7 fe fe ff                        	call 0x3df0 <__fprintf_chk>
0x13f39:    e9 6e ff ff ff                        	jmp 0x13eac <function_13e70+0x3c>
; data inside code section at 0x13f3e -- 0x13f40
0x13f3e:    66 90                                              |f.              |
0x13f40:    4c 8b 4b 38                           	mov r9, qword ptr [rbx + 0x38]
0x13f44:    48 8b 43 10                           	mov rax, qword ptr [rbx + 0x10]
0x13f48:    48 8d 35 49 6e 00 00                  	lea rsi, [rip + 0x6e49]
0x13f4f:    4c 8b 43 08                           	mov r8, qword ptr [rbx + 8]
0x13f53:    ba 05 00 00 00                        	mov edx, 5
0x13f58:    31 ff                                 	xor edi, edi
0x13f5a:    4c 8b 6b 30                           	mov r13, qword ptr [rbx + 0x30]
0x13f5e:    4c 8b 63 28                           	mov r12, qword ptr [rbx + 0x28]
0x13f62:    4c 89 4c 24 10                        	mov qword ptr [rsp + 0x10], r9
0x13f67:    4c 8b 7b 20                           	mov r15, qword ptr [rbx + 0x20]
0x13f6b:    4c 8b 73 18                           	mov r14, qword ptr [rbx + 0x18]
0x13f6f:    48 89 04 24                           	mov qword ptr [rsp], rax
0x13f73:    4c 89 44 24 08                        	mov qword ptr [rsp + 8], r8
0x13f78:    48 8b 1b                              	mov rbx, qword ptr [rbx]
0x13f7b:    e8 b0 f9 fe ff                        	call 0x3930 <dcgettext>
0x13f80:    48 83 ec 08                           	sub rsp, 8
0x13f84:    4c 8b 4c 24 18                        	mov r9, qword ptr [rsp + 0x18]
0x13f89:    48 89 d9                              	mov rcx, rbx
0x13f8c:    48 89 c2                              	mov rdx, rax
0x13f8f:    48 89 ef                              	mov rdi, rbp
0x13f92:    be 01 00 00 00                        	mov esi, 1
0x13f97:    31 c0                                 	xor eax, eax
0x13f99:    41 51                                 	push r9
0x13f9b:    41 55                                 	push r13
0x13f9d:    41 54                                 	push r12
0x13f9f:    41 57                                 	push r15
0x13fa1:    41 56                                 	push r14
0x13fa3:    4c 8b 4c 24 30                        	mov r9, qword ptr [rsp + 0x30]
0x13fa8:    4c 8b 44 24 38                        	mov r8, qword ptr [rsp + 0x38]
0x13fad:    e8 3e fe fe ff                        	call 0x3df0 <__fprintf_chk>
0x13fb2:    48 83 c4 30                           	add rsp, 0x30
0x13fb6:    48 83 c4 28                           	add rsp, 0x28
0x13fba:    5b                                    	pop rbx
0x13fbb:    5d                                    	pop rbp
0x13fbc:    41 5c                                 	pop r12
0x13fbe:    41 5d                                 	pop r13
0x13fc0:    41 5e                                 	pop r14
0x13fc2:    41 5f                                 	pop r15
0x13fc4:    c3                                    	ret 
; data inside code section at 0x13fc5 -- 0x13fc8
0x13fc5:    0f 1f 00                                           |...             |
0x13fc8:    4c 8b 53 40                           	mov r10, qword ptr [rbx + 0x40]
0x13fcc:    4c 8b 4b 38                           	mov r9, qword ptr [rbx + 0x38]
0x13fd0:    48 8d 35 f1 6d 00 00                  	lea rsi, [rip + 0x6df1]
0x13fd7:    48 8b 43 10                           	mov rax, qword ptr [rbx + 0x10]
0x13fdb:    4c 8b 43 08                           	mov r8, qword ptr [rbx + 8]
0x13fdf:    ba 05 00 00 00                        	mov edx, 5
0x13fe4:    4c 8b 6b 30                           	mov r13, qword ptr [rbx + 0x30]
0x13fe8:    4c 8b 63 28                           	mov r12, qword ptr [rbx + 0x28]
0x13fec:    4c 8b 7b 20                           	mov r15, qword ptr [rbx + 0x20]
0x13ff0:    4c 8b 73 18                           	mov r14, qword ptr [rbx + 0x18]
0x13ff4:    48 8b 1b                              	mov rbx, qword ptr [rbx]
0x13ff7:    4c 89 54 24 18                        	mov qword ptr [rsp + 0x18], r10
0x13ffc:    4c 89 4c 24 10                        	mov qword ptr [rsp + 0x10], r9
0x14001:    48 89 04 24                           	mov qword ptr [rsp], rax
0x14005:    4c 89 44 24 08                        	mov qword ptr [rsp + 8], r8
0x1400a:    31 ff                                 	xor edi, edi
0x1400c:    e8 1f f9 fe ff                        	call 0x3930 <dcgettext>
0x14011:    4c 8b 54 24 18                        	mov r10, qword ptr [rsp + 0x18]
0x14016:    41 52                                 	push r10
0x14018:    e9 67 ff ff ff                        	jmp 0x13f84 <function_13e70+0x114>
; data inside code section at 0x1401d -- 0x14020
0x1401d:    0f 1f 00                                           |...             |
0x14020:    48 8b 1b                              	mov rbx, qword ptr [rbx]
0x14023:    48 8d 35 75 6b 00 00                  	lea rsi, [rip + 0x6b75]
0x1402a:    ba 05 00 00 00                        	mov edx, 5
0x1402f:    31 ff                                 	xor edi, edi
0x14031:    e8 fa f8 fe ff                        	call 0x3930 <dcgettext>
0x14036:    48 83 c4 28                           	add rsp, 0x28
0x1403a:    48 89 d9                              	mov rcx, rbx
0x1403d:    48 89 ef                              	mov rdi, rbp
0x14040:    5b                                    	pop rbx
0x14041:    5d                                    	pop rbp
0x14042:    41 5c                                 	pop r12
0x14044:    41 5d                                 	pop r13
0x14046:    41 5e                                 	pop r14
0x14048:    41 5f                                 	pop r15
0x1404a:    48 89 c2                              	mov rdx, rax
0x1404d:    be 01 00 00 00                        	mov esi, 1
0x14052:    31 c0                                 	xor eax, eax
0x14054:    e9 97 fd fe ff                        	jmp 0x3df0 <__fprintf_chk>
; data inside code section at 0x14059 -- 0x14060
0x14059:    0f 1f 80 00 00 00 00                               |.......         |
0x14060:    4c 8b 63 08                           	mov r12, qword ptr [rbx + 8]
0x14064:    48 8d 35 44 6b 00 00                  	lea rsi, [rip + 0x6b44]
0x1406b:    48 8b 1b                              	mov rbx, qword ptr [rbx]
0x1406e:    ba 05 00 00 00                        	mov edx, 5
0x14073:    31 ff                                 	xor edi, edi
0x14075:    e8 b6 f8 fe ff                        	call 0x3930 <dcgettext>
0x1407a:    48 83 c4 28                           	add rsp, 0x28
0x1407e:    4d 89 e0                              	mov r8, r12
0x14081:    48 89 d9                              	mov rcx, rbx
0x14084:    48 89 ef                              	mov rdi, rbp
0x14087:    48 89 c2                              	mov rdx, rax
0x1408a:    be 01 00 00 00                        	mov esi, 1
0x1408f:    5b                                    	pop rbx
0x14090:    5d                                    	pop rbp
0x14091:    41 5c                                 	pop r12
0x14093:    41 5d                                 	pop r13
0x14095:    41 5e                                 	pop r14
0x14097:    41 5f                                 	pop r15
0x14099:    31 c0                                 	xor eax, eax
0x1409b:    e9 50 fd fe ff                        	jmp 0x3df0 <__fprintf_chk>
0x140a0:    4c 8b 6b 10                           	mov r13, qword ptr [rbx + 0x10]
0x140a4:    4c 8b 63 08                           	mov r12, qword ptr [rbx + 8]
0x140a8:    48 8d 35 17 6b 00 00                  	lea rsi, [rip + 0x6b17]
0x140af:    48 8b 1b                              	mov rbx, qword ptr [rbx]
0x140b2:    ba 05 00 00 00                        	mov edx, 5
0x140b7:    31 ff                                 	xor edi, edi
0x140b9:    e8 72 f8 fe ff                        	call 0x3930 <dcgettext>
0x140be:    48 83 c4 28                           	add rsp, 0x28
0x140c2:    4d 89 e9                              	mov r9, r13
0x140c5:    4d 89 e0                              	mov r8, r12
0x140c8:    48 89 d9                              	mov rcx, rbx
0x140cb:    48 89 ef                              	mov rdi, rbp
0x140ce:    48 89 c2                              	mov rdx, rax
0x140d1:    5b                                    	pop rbx
0x140d2:    5d                                    	pop rbp
0x140d3:    41 5c                                 	pop r12
0x140d5:    41 5d                                 	pop r13
0x140d7:    41 5e                                 	pop r14
0x140d9:    41 5f                                 	pop r15
0x140db:    be 01 00 00 00                        	mov esi, 1
0x140e0:    31 c0                                 	xor eax, eax
0x140e2:    e9 09 fd fe ff                        	jmp 0x3df0 <__fprintf_chk>
; data inside code section at 0x140e7 -- 0x140f0
0x140e7:    66 0f 1f 84 00 00 00 00  00                        |f........       |
0x140f0:    48 8d 35 01 6c 00 00                  	lea rsi, [rip + 0x6c01]
0x140f7:    ba 05 00 00 00                        	mov edx, 5
0x140fc:    31 ff                                 	xor edi, edi
0x140fe:    4c 8b 73 18                           	mov r14, qword ptr [rbx + 0x18]
0x14102:    4c 8b 6b 10                           	mov r13, qword ptr [rbx + 0x10]
0x14106:    4c 8b 63 08                           	mov r12, qword ptr [rbx + 8]
0x1410a:    48 8b 1b                              	mov rbx, qword ptr [rbx]
0x1410d:    e8 1e f8 fe ff                        	call 0x3930 <dcgettext>
0x14112:    48 83 ec 08                           	sub rsp, 8
0x14116:    41 56                                 	push r14
0x14118:    48 89 c2                              	mov rdx, rax
0x1411b:    4d 89 e9                              	mov r9, r13
0x1411e:    4d 89 e0                              	mov r8, r12
0x14121:    48 89 d9                              	mov rcx, rbx
0x14124:    48 89 ef                              	mov rdi, rbp
0x14127:    be 01 00 00 00                        	mov esi, 1
0x1412c:    31 c0                                 	xor eax, eax
0x1412e:    e8 bd fc fe ff                        	call 0x3df0 <__fprintf_chk>
0x14133:    58                                    	pop rax
0x14134:    5a                                    	pop rdx
0x14135:    48 83 c4 28                           	add rsp, 0x28
0x14139:    5b                                    	pop rbx
0x1413a:    5d                                    	pop rbp
0x1413b:    41 5c                                 	pop r12
0x1413d:    41 5d                                 	pop r13
0x1413f:    41 5e                                 	pop r14
0x14141:    41 5f                                 	pop r15
0x14143:    c3                                    	ret 
; data inside code section at 0x14144 -- 0x14148
0x14144:    0f 1f 40 00                                        |..@.            |
0x14148:    4c 8b 7b 20                           	mov r15, qword ptr [rbx + 0x20]
0x1414c:    48 8d 35 c5 6b 00 00                  	lea rsi, [rip + 0x6bc5]
0x14153:    ba 05 00 00 00                        	mov edx, 5
0x14158:    31 ff                                 	xor edi, edi
0x1415a:    4c 8b 73 18                           	mov r14, qword ptr [rbx + 0x18]
0x1415e:    4c 8b 6b 10                           	mov r13, qword ptr [rbx + 0x10]
0x14162:    4c 8b 63 08                           	mov r12, qword ptr [rbx + 8]
0x14166:    48 8b 1b                              	mov rbx, qword ptr [rbx]
0x14169:    e8 c2 f7 fe ff                        	call 0x3930 <dcgettext>
0x1416e:    41 57                                 	push r15
0x14170:    eb a4                                 	jmp 0x14116 <function_13e70+0x2a6>
; data inside code section at 0x14172 -- 0x14178
0x14172:    66 0f 1f 44 00 00                                  |f..D..          |
0x14178:    4c 8b 43 08                           	mov r8, qword ptr [rbx + 8]
0x1417c:    4c 8b 63 28                           	mov r12, qword ptr [rbx + 0x28]
0x14180:    48 8d 35 b9 6b 00 00                  	lea rsi, [rip + 0x6bb9]
0x14187:    4c 8b 7b 20                           	mov r15, qword ptr [rbx + 0x20]
0x1418b:    4c 8b 73 18                           	mov r14, qword ptr [rbx + 0x18]
0x1418f:    ba 05 00 00 00                        	mov edx, 5
0x14194:    4c 8b 6b 10                           	mov r13, qword ptr [rbx + 0x10]
0x14198:    31 ff                                 	xor edi, edi
0x1419a:    48 8b 1b                              	mov rbx, qword ptr [rbx]
0x1419d:    4c 89 04 24                           	mov qword ptr [rsp], r8
0x141a1:    e8 8a f7 fe ff                        	call 0x3930 <dcgettext>
0x141a6:    48 83 ec 08                           	sub rsp, 8
0x141aa:    4d 89 e9                              	mov r9, r13
0x141ad:    41 54                                 	push r12
0x141af:    41 57                                 	push r15
0x141b1:    41 56                                 	push r14
0x141b3:    4c 8b 44 24 20                        	mov r8, qword ptr [rsp + 0x20]
0x141b8:    48 89 d9                              	mov rcx, rbx
0x141bb:    48 89 c2                              	mov rdx, rax
0x141be:    48 89 ef                              	mov rdi, rbp
0x141c1:    be 01 00 00 00                        	mov esi, 1
0x141c6:    31 c0                                 	xor eax, eax
0x141c8:    e8 23 fc fe ff                        	call 0x3df0 <__fprintf_chk>
0x141cd:    48 83 c4 20                           	add rsp, 0x20
0x141d1:    48 83 c4 28                           	add rsp, 0x28
0x141d5:    5b                                    	pop rbx
0x141d6:    5d                                    	pop rbp
0x141d7:    41 5c                                 	pop r12
0x141d9:    41 5d                                 	pop r13
0x141db:    41 5e                                 	pop r14
0x141dd:    41 5f                                 	pop r15
0x141df:    c3                                    	ret 
0x141e0:    4c 8b 4b 10                           	mov r9, qword ptr [rbx + 0x10]
0x141e4:    4c 8b 6b 30                           	mov r13, qword ptr [rbx + 0x30]
0x141e8:    48 8d 35 79 6b 00 00                  	lea rsi, [rip + 0x6b79]
0x141ef:    4c 8b 63 28                           	mov r12, qword ptr [rbx + 0x28]
0x141f3:    4c 8b 7b 20                           	mov r15, qword ptr [rbx + 0x20]
0x141f7:    ba 05 00 00 00                        	mov edx, 5
0x141fc:    4c 8b 73 18                           	mov r14, qword ptr [rbx + 0x18]
0x14200:    4c 8b 43 08                           	mov r8, qword ptr [rbx + 8]
0x14204:    31 ff                                 	xor edi, edi
0x14206:    4c 89 4c 24 08                        	mov qword ptr [rsp + 8], r9
0x1420b:    48 8b 1b                              	mov rbx, qword ptr [rbx]
0x1420e:    4c 89 04 24                           	mov qword ptr [rsp], r8
0x14212:    e8 19 f7 fe ff                        	call 0x3930 <dcgettext>
0x14217:    41 55                                 	push r13
0x14219:    41 54                                 	push r12
0x1421b:    41 57                                 	push r15
0x1421d:    41 56                                 	push r14
0x1421f:    4c 8b 4c 24 28                        	mov r9, qword ptr [rsp + 0x28]
0x14224:    eb 8d                                 	jmp 0x141b3 <function_13e70+0x343>
; data inside code section at 0x14226 -- 0x14230
0x14226:    66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x14230:    4c 8b 53 40                           	mov r10, qword ptr [rbx + 0x40]
0x14234:    4c 8b 4b 38                           	mov r9, qword ptr [rbx + 0x38]
0x14238:    ba 05 00 00 00                        	mov edx, 5
0x1423d:    48 8b 43 10                           	mov rax, qword ptr [rbx + 0x10]
0x14241:    4c 8b 43 08                           	mov r8, qword ptr [rbx + 8]
0x14245:    48 8d 35 b4 6b 00 00                  	lea rsi, [rip + 0x6bb4]
0x1424c:    4c 8b 6b 30                           	mov r13, qword ptr [rbx + 0x30]
0x14250:    4c 8b 63 28                           	mov r12, qword ptr [rbx + 0x28]
0x14254:    4c 8b 7b 20                           	mov r15, qword ptr [rbx + 0x20]
0x14258:    4c 8b 73 18                           	mov r14, qword ptr [rbx + 0x18]
0x1425c:    4c 89 54 24 18                        	mov qword ptr [rsp + 0x18], r10
0x14261:    4c 89 4c 24 10                        	mov qword ptr [rsp + 0x10], r9
0x14266:    48 89 04 24                           	mov qword ptr [rsp], rax
0x1426a:    4c 89 44 24 08                        	mov qword ptr [rsp + 8], r8
0x1426f:    48 8b 1b                              	mov rbx, qword ptr [rbx]
0x14272:    e9 93 fd ff ff                        	jmp 0x1400a <function_13e70+0x19a>
; function: function_14277 at 0x14277 -- 0x1427c
0x14277:    e8 64 f5 fe ff                        	call 0x37e0 <abort>
; data inside code section at 0x1427c -- 0x14280
0x1427c:    0f 1f 40 00                                        |..@.            |
; function: function_14280 at 0x14280 -- 0x142a0
0x14280:    45 31 c9                              	xor r9d, r9d
0x14283:    49 83 38 00                           	cmp qword ptr [r8], 0
0x14287:    74 12                                 	je 0x1429b <function_14280+0x1b>
0x14289:    0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0x14290:    49 83 c1 01                           	add r9, 1
0x14294:    4b 83 3c c8 00                        	cmp qword ptr [r8 + r9*8], 0
0x14299:    75 f5                                 	jne 0x14290 <function_14280+0x10>
0x1429b:    e9 d0 fb ff ff                        	jmp 0x13e70 <function_13e70>
; function: function_142a0 at 0x142a0 -- 0x14318
0x142a0:    48 83 ec 68                           	sub rsp, 0x68
0x142a4:    4d 89 c2                              	mov r10, r8
0x142a7:    45 31 c9                              	xor r9d, r9d
0x142aa:    64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x142b3:    48 89 44 24 58                        	mov qword ptr [rsp + 0x58], rax
0x142b8:    31 c0                                 	xor eax, eax
0x142ba:    49 89 e0                              	mov r8, rsp
0x142bd:    0f 1f 00                              	nop dword ptr [rax]
0x142c0:    41 8b 02                              	mov eax, dword ptr [r10]
0x142c3:    83 f8 2f                              	cmp eax, 0x2f
0x142c6:    77 42                                 	ja 0x1430a <function_142a0+0x6a>
0x142c8:    41 89 c3                              	mov r11d, eax
0x142cb:    4d 03 5a 10                           	add r11, qword ptr [r10 + 0x10]
0x142cf:    83 c0 08                              	add eax, 8
0x142d2:    41 89 02                              	mov dword ptr [r10], eax
0x142d5:    49 8b 03                              	mov rax, qword ptr [r11]
0x142d8:    48 85 c0                              	test rax, rax
0x142db:    4b 89 04 c8                           	mov qword ptr [r8 + r9*8], rax
0x142df:    74 0a                                 	je 0x142eb <function_142a0+0x4b>
0x142e1:    49 83 c1 01                           	add r9, 1
0x142e5:    49 83 f9 0a                           	cmp r9, 0xa
0x142e9:    75 d5                                 	jne 0x142c0 <function_142a0+0x20>
0x142eb:    e8 80 fb ff ff                        	call 0x13e70 <function_13e70>
0x142f0:    48 8b 44 24 58                        	mov rax, qword ptr [rsp + 0x58]
0x142f5:    64 48 33 04 25 28 00 00 00            	xor rax, qword ptr fs:[0x28]
0x142fe:    75 05                                 	jne 0x14305 <function_142a0+0x65>
0x14300:    48 83 c4 68                           	add rsp, 0x68
0x14304:    c3                                    	ret 
0x14305:    e8 66 f6 fe ff                        	call 0x3970 <__stack_chk_fail>
0x1430a:    4d 8b 5a 08                           	mov r11, qword ptr [r10 + 8]
0x1430e:    49 8d 43 08                           	lea rax, [r11 + 8]
0x14312:    49 89 42 08                           	mov qword ptr [r10 + 8], rax
0x14316:    eb bd                                 	jmp 0x142d5 <function_142a0+0x35>
; data inside code section at 0x14318 -- 0x14320
0x14318:    0f 1f 84 00 00 00 00 00                            |........        |
; function: function_14320 at 0x14320 -- 0x143f5
0x14320:    55                                    	push rbp
0x14321:    53                                    	push rbx
0x14322:    41 ba 20 00 00 00                     	mov r10d, 0x20
0x14328:    45 31 db                              	xor r11d, r11d
0x1432b:    48 81 ec b8 00 00 00                  	sub rsp, 0xb8
0x14332:    64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x1433b:    48 89 44 24 78                        	mov qword ptr [rsp + 0x78], rax
0x14340:    31 c0                                 	xor eax, eax
0x14342:    48 8d 84 24 d0 00 00 00               	lea rax, [rsp + 0xd0]
0x1434a:    4c 89 84 24 a0 00 00 00               	mov qword ptr [rsp + 0xa0], r8
0x14352:    48 8d 9c 24 d0 00 00 00               	lea rbx, [rsp + 0xd0]
0x1435a:    4c 8d 44 24 20                        	lea r8, [rsp + 0x20]
0x1435f:    4c 89 8c 24 a8 00 00 00               	mov qword ptr [rsp + 0xa8], r9
0x14367:    c7 44 24 08 20 00 00 00               	mov dword ptr [rsp + 8], 0x20
0x1436f:    48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x14374:    48 8d 84 24 80 00 00 00               	lea rax, [rsp + 0x80]
0x1437c:    45 31 c9                              	xor r9d, r9d
0x1437f:    48 89 44 24 18                        	mov qword ptr [rsp + 0x18], rax
0x14384:    48 89 c5                              	mov rbp, rax
0x14387:    66 0f 1f 84 00 00 00 00 00            	nop word ptr [rax + rax]
0x14390:    41 83 fa 2f                           	cmp r10d, 0x2f
0x14394:    77 56                                 	ja 0x143ec <function_14320+0xcc>
0x14396:    44 89 d0                              	mov eax, r10d
0x14399:    41 bb 01 00 00 00                     	mov r11d, 1
0x1439f:    41 83 c2 08                           	add r10d, 8
0x143a3:    48 01 e8                              	add rax, rbp
0x143a6:    48 8b 00                              	mov rax, qword ptr [rax]
0x143a9:    48 85 c0                              	test rax, rax
0x143ac:    4b 89 04 c8                           	mov qword ptr [r8 + r9*8], rax
0x143b0:    74 0a                                 	je 0x143bc <function_14320+0x9c>
0x143b2:    49 83 c1 01                           	add r9, 1
0x143b6:    49 83 f9 0a                           	cmp r9, 0xa
0x143ba:    75 d4                                 	jne 0x14390 <function_14320+0x70>
0x143bc:    45 84 db                              	test r11b, r11b
0x143bf:    75 24                                 	jne 0x143e5 <function_14320+0xc5>
0x143c1:    e8 aa fa ff ff                        	call 0x13e70 <function_13e70>
0x143c6:    48 8b 44 24 78                        	mov rax, qword ptr [rsp + 0x78]
0x143cb:    64 48 33 04 25 28 00 00 00            	xor rax, qword ptr fs:[0x28]
0x143d4:    75 0a                                 	jne 0x143e0 <function_14320+0xc0>
0x143d6:    48 81 c4 b8 00 00 00                  	add rsp, 0xb8
0x143dd:    5b                                    	pop rbx
0x143de:    5d                                    	pop rbp
0x143df:    c3                                    	ret 
0x143e0:    e8 8b f5 fe ff                        	call 0x3970 <__stack_chk_fail>
0x143e5:    44 89 54 24 08                        	mov dword ptr [rsp + 8], r10d
0x143ea:    eb d5                                 	jmp 0x143c1 <function_14320+0xa1>
0x143ec:    48 89 d8                              	mov rax, rbx
0x143ef:    48 83 c3 08                           	add rbx, 8
0x143f3:    eb b1                                 	jmp 0x143a6 <function_14320+0x86>
; data inside code section at 0x143f5 -- 0x14400
0x143f5:    90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: function_14400 at 0x14400 -- 0x14480
0x14400:    53                                    	push rbx
0x14401:    48 8d 35 da 67 00 00                  	lea rsi, [rip + 0x67da]
0x14408:    ba 05 00 00 00                        	mov edx, 5
0x1440d:    31 ff                                 	xor edi, edi
0x1440f:    e8 1c f5 fe ff                        	call 0x3930 <dcgettext>
0x14414:    48 8d 15 dc 67 00 00                  	lea rdx, [rip + 0x67dc]
0x1441b:    48 89 c6                              	mov rsi, rax
0x1441e:    bf 01 00 00 00                        	mov edi, 1
0x14423:    31 c0                                 	xor eax, eax
0x14425:    e8 a6 f8 fe ff                        	call 0x3cd0 <__printf_chk>
0x1442a:    48 8d 35 dc 67 00 00                  	lea rsi, [rip + 0x67dc]
0x14431:    ba 05 00 00 00                        	mov edx, 5
0x14436:    31 ff                                 	xor edi, edi
0x14438:    e8 f3 f4 fe ff                        	call 0x3930 <dcgettext>
0x1443d:    48 8d 0d 74 5b 00 00                  	lea rcx, [rip + 0x5b74]
0x14444:    48 8d 15 2c 39 00 00                  	lea rdx, [rip + 0x392c]
0x1444b:    48 89 c6                              	mov rsi, rax
0x1444e:    bf 01 00 00 00                        	mov edi, 1
0x14453:    31 c0                                 	xor eax, eax
0x14455:    e8 76 f8 fe ff                        	call 0x3cd0 <__printf_chk>
0x1445a:    48 8b 1d 27 be 20 00                  	mov rbx, qword ptr [rip + 0x20be27]
0x14461:    48 8d 35 d8 69 00 00                  	lea rsi, [rip + 0x69d8]
0x14468:    31 ff                                 	xor edi, edi
0x1446a:    ba 05 00 00 00                        	mov edx, 5
0x1446f:    e8 bc f4 fe ff                        	call 0x3930 <dcgettext>
0x14474:    48 89 de                              	mov rsi, rbx
0x14477:    48 89 c7                              	mov rdi, rax
0x1447a:    5b                                    	pop rbx
0x1447b:    e9 70 f6 fe ff                        	jmp 0x3af0 <fputs_unlocked>
; function: function_14480 at 0x14480 -- 0x1449a
0x14480:    53                                    	push rbx
0x14481:    48 89 fb                              	mov rbx, rdi
0x14484:    e8 ef f9 fe ff                        	call 0x3e78 <malloc>
0x14489:    48 85 c0                              	test rax, rax
0x1448c:    75 05                                 	jne 0x14493 <function_14480+0x13>
0x1448e:    48 85 db                              	test rbx, rbx
0x14491:    75 02                                 	jne 0x14495 <function_14480+0x15>
0x14493:    5b                                    	pop rbx
0x14494:    c3                                    	ret 
0x14495:    e8 36 02 00 00                        	call 0x146d0 <function_146d0>
; data inside code section at 0x1449a -- 0x144a0
0x1449a:    66 0f 1f 44 00 00                                  |f..D..          |
; function: function_144a0 at 0x144a0 -- 0x144c4
0x144a0:    48 89 f8                              	mov rax, rdi
0x144a3:    48 f7 e6                              	mul rsi
0x144a6:    48 89 c7                              	mov rdi, rax
0x144a9:    0f 90 c0                              	seto al
0x144ac:    48 85 ff                              	test rdi, rdi
0x144af:    78 0a                                 	js 0x144bb <function_144a0+0x1b>
0x144b1:    0f b6 c0                              	movzx eax, al
0x144b4:    48 85 c0                              	test rax, rax
0x144b7:    75 02                                 	jne 0x144bb <function_144a0+0x1b>
0x144b9:    eb c5                                 	jmp 0x14480 <function_14480>
0x144bb:    48 83 ec 08                           	sub rsp, 8
0x144bf:    e8 0c 02 00 00                        	call 0x146d0 <function_146d0>
; data inside code section at 0x144c4 -- 0x144d0
0x144c4:    66 90 66 2e 0f 1f 84 00  00 00 00 00               |f.f.........    |
; function: function_144d0 at 0x144d0 -- 0x144d2
0x144d0:    eb ae                                 	jmp 0x14480 <function_14480>
; data inside code section at 0x144d2 -- 0x144e0
0x144d2:    0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: function_144e0 at 0x144e0 -- 0x14516
0x144e0:    48 85 f6                              	test rsi, rsi
0x144e3:    53                                    	push rbx
0x144e4:    48 89 f3                              	mov rbx, rsi
0x144e7:    75 05                                 	jne 0x144ee <function_144e0+0xe>
0x144e9:    48 85 ff                              	test rdi, rdi
0x144ec:    75 1a                                 	jne 0x14508 <function_144e0+0x28>
0x144ee:    48 89 de                              	mov rsi, rbx
0x144f1:    e8 9a f7 fe ff                        	call 0x3c90 <realloc>
0x144f6:    48 85 c0                              	test rax, rax
0x144f9:    75 05                                 	jne 0x14500 <function_144e0+0x20>
0x144fb:    48 85 db                              	test rbx, rbx
0x144fe:    75 11                                 	jne 0x14511 <function_144e0+0x31>
0x14500:    5b                                    	pop rbx
0x14501:    c3                                    	ret 
; data inside code section at 0x14502 -- 0x14508
0x14502:    66 0f 1f 44 00 00                                  |f..D..          |
0x14508:    e8 63 f9 fe ff                        	call 0x3e70 <free>
0x1450d:    31 c0                                 	xor eax, eax
0x1450f:    5b                                    	pop rbx
0x14510:    c3                                    	ret 
0x14511:    e8 ba 01 00 00                        	call 0x146d0 <function_146d0>
; data inside code section at 0x14516 -- 0x14520
0x14516:    66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_14520 at 0x14520 -- 0x14544
0x14520:    48 89 f0                              	mov rax, rsi
0x14523:    48 f7 e2                              	mul rdx
0x14526:    48 89 c6                              	mov rsi, rax
0x14529:    0f 90 c0                              	seto al
0x1452c:    48 85 f6                              	test rsi, rsi
0x1452f:    78 0a                                 	js 0x1453b <function_14520+0x1b>
0x14531:    0f b6 c0                              	movzx eax, al
0x14534:    48 85 c0                              	test rax, rax
0x14537:    75 02                                 	jne 0x1453b <function_14520+0x1b>
0x14539:    eb a5                                 	jmp 0x144e0 <function_144e0>
0x1453b:    48 83 ec 08                           	sub rsp, 8
0x1453f:    e8 8c 01 00 00                        	call 0x146d0 <function_146d0>
; data inside code section at 0x14544 -- 0x14550
0x14544:    66 90 66 2e 0f 1f 84 00  00 00 00 00               |f.f.........    |
; function: function_14550 at 0x14550 -- 0x145d2
0x14550:    48 85 ff                              	test rdi, rdi
0x14553:    49 89 d1                              	mov r9, rdx
0x14556:    48 8b 0e                              	mov rcx, qword ptr [rsi]
0x14559:    74 35                                 	je 0x14590 <function_14550+0x40>
0x1455b:    31 d2                                 	xor edx, edx
0x1455d:    48 b8 54 55 55 55 55 55 55 55         	movabs rax, 0x5555555555555554
0x14567:    49 f7 f1                              	div r9
0x1456a:    48 39 c8                              	cmp rax, rcx
0x1456d:    76 3c                                 	jbe 0x145ab <function_14550+0x5b>
0x1456f:    48 89 c8                              	mov rax, rcx
0x14572:    48 d1 e8                              	shr rax, 1
0x14575:    48 8d 4c 08 01                        	lea rcx, [rax + rcx + 1]
0x1457a:    48 89 0e                              	mov qword ptr [rsi], rcx
0x1457d:    49 0f af c9                           	imul rcx, r9
0x14581:    48 89 ce                              	mov rsi, rcx
0x14584:    e9 57 ff ff ff                        	jmp 0x144e0 <function_144e0>
; data inside code section at 0x14589 -- 0x14590
0x14589:    0f 1f 80 00 00 00 00                               |.......         |
0x14590:    48 85 c9                              	test rcx, rcx
0x14593:    74 23                                 	je 0x145b8 <function_14550+0x68>
0x14595:    48 89 c8                              	mov rax, rcx
0x14598:    49 f7 e1                              	mul r9
0x1459b:    0f 90 c2                              	seto dl
0x1459e:    48 85 c0                              	test rax, rax
0x145a1:    0f b6 d2                              	movzx edx, dl
0x145a4:    78 05                                 	js 0x145ab <function_14550+0x5b>
0x145a6:    48 85 d2                              	test rdx, rdx
0x145a9:    74 cf                                 	je 0x1457a <function_14550+0x2a>
0x145ab:    48 83 ec 08                           	sub rsp, 8
0x145af:    e8 1c 01 00 00                        	call 0x146d0 <function_146d0>
; data inside code section at 0x145b4 -- 0x145b8
0x145b4:    0f 1f 40 00                                        |..@.            |
0x145b8:    31 d2                                 	xor edx, edx
0x145ba:    b8 80 00 00 00                        	mov eax, 0x80
0x145bf:    45 31 c0                              	xor r8d, r8d
0x145c2:    49 f7 f1                              	div r9
0x145c5:    48 85 c0                              	test rax, rax
0x145c8:    41 0f 94 c0                           	sete r8b
0x145cc:    49 8d 0c 00                           	lea rcx, [r8 + rax]
0x145d0:    eb c3                                 	jmp 0x14595 <function_14550+0x45>
; data inside code section at 0x145d2 -- 0x145e0
0x145d2:    0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: function_145e0 at 0x145e0 -- 0x1462a
0x145e0:    48 85 ff                              	test rdi, rdi
0x145e3:    48 8b 06                              	mov rax, qword ptr [rsi]
0x145e6:    74 28                                 	je 0x14610 <function_145e0+0x30>
0x145e8:    48 ba 53 55 55 55 55 55 55 55         	movabs rdx, 0x5555555555555553
0x145f2:    48 39 d0                              	cmp rax, rdx
0x145f5:    77 2a                                 	ja 0x14621 <function_145e0+0x41>
0x145f7:    48 89 c2                              	mov rdx, rax
0x145fa:    48 d1 ea                              	shr rdx, 1
0x145fd:    48 8d 44 02 01                        	lea rax, [rdx + rax + 1]
0x14602:    48 89 06                              	mov qword ptr [rsi], rax
0x14605:    48 89 c6                              	mov rsi, rax
0x14608:    e9 d3 fe ff ff                        	jmp 0x144e0 <function_144e0>
; data inside code section at 0x1460d -- 0x14610
0x1460d:    0f 1f 00                                           |...             |
0x14610:    48 85 c0                              	test rax, rax
0x14613:    ba 80 00 00 00                        	mov edx, 0x80
0x14618:    48 0f 44 c2                           	cmove rax, rdx
0x1461c:    48 85 c0                              	test rax, rax
0x1461f:    79 e1                                 	jns 0x14602 <function_145e0+0x22>
0x14621:    48 83 ec 08                           	sub rsp, 8
0x14625:    e8 a6 00 00 00                        	call 0x146d0 <function_146d0>
; data inside code section at 0x1462a -- 0x14630
0x1462a:    66 0f 1f 44 00 00                                  |f..D..          |
; function: function_14630 at 0x14630 -- 0x14647
0x14630:    53                                    	push rbx
0x14631:    48 89 fb                              	mov rbx, rdi
0x14634:    e8 47 fe ff ff                        	call 0x14480 <function_14480>
0x14639:    48 89 da                              	mov rdx, rbx
0x1463c:    31 f6                                 	xor esi, esi
0x1463e:    48 89 c7                              	mov rdi, rax
0x14641:    5b                                    	pop rbx
0x14642:    e9 19 f4 fe ff                        	jmp 0x3a60 <memset>
; data inside code section at 0x14647 -- 0x14650
0x14647:    66 0f 1f 84 00 00 00 00  00                        |f........       |
; function: function_14650 at 0x14650 -- 0x1467e
0x14650:    48 89 f8                              	mov rax, rdi
0x14653:    48 83 ec 08                           	sub rsp, 8
0x14657:    48 f7 e6                              	mul rsi
0x1465a:    0f 90 c2                              	seto dl
0x1465d:    48 85 c0                              	test rax, rax
0x14660:    78 17                                 	js 0x14679 <function_14650+0x29>
0x14662:    0f b6 d2                              	movzx edx, dl
0x14665:    48 85 d2                              	test rdx, rdx
0x14668:    75 0f                                 	jne 0x14679 <function_14650+0x29>
0x1466a:    e8 91 f4 fe ff                        	call 0x3b00 <calloc>
0x1466f:    48 85 c0                              	test rax, rax
0x14672:    74 05                                 	je 0x14679 <function_14650+0x29>
0x14674:    48 83 c4 08                           	add rsp, 8
0x14678:    c3                                    	ret 
0x14679:    e8 52 00 00 00                        	call 0x146d0 <function_146d0>
; data inside code section at 0x1467e -- 0x14680
0x1467e:    66 90                                              |f.              |
; function: function_14680 at 0x14680 -- 0x146a8
0x14680:    55                                    	push rbp
0x14681:    53                                    	push rbx
0x14682:    48 89 fd                              	mov rbp, rdi
0x14685:    48 89 f7                              	mov rdi, rsi
0x14688:    48 89 f3                              	mov rbx, rsi
0x1468b:    48 83 ec 08                           	sub rsp, 8
0x1468f:    e8 ec fd ff ff                        	call 0x14480 <function_14480>
0x14694:    48 83 c4 08                           	add rsp, 8
0x14698:    48 89 da                              	mov rdx, rbx
0x1469b:    48 89 ee                              	mov rsi, rbp
0x1469e:    5b                                    	pop rbx
0x1469f:    5d                                    	pop rbp
0x146a0:    48 89 c7                              	mov rdi, rax
0x146a3:    e9 d8 f4 fe ff                        	jmp 0x3b80 <memcpy>
; data inside code section at 0x146a8 -- 0x146b0
0x146a8:    0f 1f 84 00 00 00 00 00                            |........        |
; function: function_146b0 at 0x146b0 -- 0x146c3
0x146b0:    53                                    	push rbx
0x146b1:    48 89 fb                              	mov rbx, rdi
0x146b4:    e8 97 f2 fe ff                        	call 0x3950 <strlen>
0x146b9:    48 89 df                              	mov rdi, rbx
0x146bc:    48 8d 70 01                           	lea rsi, [rax + 1]
0x146c0:    5b                                    	pop rbx
0x146c1:    eb bd                                 	jmp 0x14680 <function_14680>
; data inside code section at 0x146c3 -- 0x146d0
0x146c3:    66 2e 0f 1f 84 00 00 00  00 00 0f 1f 00            |f............   |
; function: function_146d0 at 0x146d0 -- 0x14705
0x146d0:    48 8d 35 18 68 00 00                  	lea rsi, [rip + 0x6818]
0x146d7:    48 83 ec 08                           	sub rsp, 8
0x146db:    ba 05 00 00 00                        	mov edx, 5
0x146e0:    31 ff                                 	xor edi, edi
0x146e2:    e8 49 f2 fe ff                        	call 0x3930 <dcgettext>
0x146e7:    8b 3d 0b bb 20 00                     	mov edi, dword ptr [rip + 0x20bb0b]
0x146ed:    48 8d 15 08 5c 00 00                  	lea rdx, [rip + 0x5c08]
0x146f4:    48 89 c1                              	mov rcx, rax
0x146f7:    31 f6                                 	xor esi, esi
0x146f9:    31 c0                                 	xor eax, eax
0x146fb:    e8 20 f6 fe ff                        	call 0x3d20 <error>
0x14700:    e8 db f0 fe ff                        	call 0x37e0 <abort>
; data inside code section at 0x14705 -- 0x14710
0x14705:    66 2e 0f 1f 84 00 00 00  00 00 90                  |f..........     |
; function: function_14710 at 0x14710 -- 0x14831
0x14710:    41 57                                 	push r15
0x14712:    41 56                                 	push r14
0x14714:    49 89 cf                              	mov r15, rcx
0x14717:    41 55                                 	push r13
0x14719:    41 54                                 	push r12
0x1471b:    49 89 d6                              	mov r14, rdx
0x1471e:    55                                    	push rbp
0x1471f:    53                                    	push rbx
0x14720:    89 f2                                 	mov edx, esi
0x14722:    31 f6                                 	xor esi, esi
0x14724:    49 89 fc                              	mov r12, rdi
0x14727:    4d 89 cd                              	mov r13, r9
0x1472a:    48 83 ec 18                           	sub rsp, 0x18
0x1472e:    48 89 e1                              	mov rcx, rsp
0x14731:    8b 5c 24 50                           	mov ebx, dword ptr [rsp + 0x50]
0x14735:    64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x1473e:    48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x14743:    31 c0                                 	xor eax, eax
0x14745:    e8 d6 06 00 00                        	call 0x14e20 <function_14e20>
0x1474a:    85 c0                                 	test eax, eax
0x1474c:    0f 85 8e 00 00 00                     	jne 0x147e0 <function_14710+0xd0>
0x14752:    48 8b 2c 24                           	mov rbp, qword ptr [rsp]
0x14756:    4c 39 f5                              	cmp rbp, r14
0x14759:    72 05                                 	jb 0x14760 <function_14710+0x50>
0x1475b:    4c 39 fd                              	cmp rbp, r15
0x1475e:    76 54                                 	jbe 0x147b4 <function_14710+0xa4>
0x14760:    e8 8b f0 fe ff                        	call 0x37f0 <__errno_location>
0x14765:    48 81 fd 00 00 00 40                  	cmp rbp, 0x40000000
0x1476c:    49 89 c6                              	mov r14, rax
0x1476f:    19 c0                                 	sbb eax, eax
0x14771:    83 e0 d7                              	and eax, 0xffffffd7
0x14774:    83 c0 4b                              	add eax, 0x4b
0x14777:    41 89 06                              	mov dword ptr [r14], eax
0x1477a:    4c 89 e7                              	mov rdi, r12
0x1477d:    e8 5e f5 ff ff                        	call 0x13ce0 <function_13ce0>
0x14782:    41 8b 36                              	mov esi, dword ptr [r14]
0x14785:    49 89 c0                              	mov r8, rax
0x14788:    b8 00 00 00 00                        	mov eax, 0
0x1478d:    48 8d 15 44 36 00 00                  	lea rdx, [rip + 0x3644]
0x14794:    4c 89 e9                              	mov rcx, r13
0x14797:    83 fe 16                              	cmp esi, 0x16
0x1479a:    0f 44 f0                              	cmove esi, eax
0x1479d:    85 db                                 	test ebx, ebx
0x1479f:    b8 01 00 00 00                        	mov eax, 1
0x147a4:    0f 44 d8                              	cmove ebx, eax
0x147a7:    31 c0                                 	xor eax, eax
0x147a9:    89 df                                 	mov edi, ebx
0x147ab:    e8 70 f5 fe ff                        	call 0x3d20 <error>
0x147b0:    48 8b 2c 24                           	mov rbp, qword ptr [rsp]
0x147b4:    48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0x147b9:    64 48 33 14 25 28 00 00 00            	xor rdx, qword ptr fs:[0x28]
0x147c2:    48 89 e8                              	mov rax, rbp
0x147c5:    75 44                                 	jne 0x1480b <function_14710+0xfb>
0x147c7:    48 83 c4 18                           	add rsp, 0x18
0x147cb:    5b                                    	pop rbx
0x147cc:    5d                                    	pop rbp
0x147cd:    41 5c                                 	pop r12
0x147cf:    41 5d                                 	pop r13
0x147d1:    41 5e                                 	pop r14
0x147d3:    41 5f                                 	pop r15
0x147d5:    c3                                    	ret 
; data inside code section at 0x147d6 -- 0x147e0
0x147d6:    66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x147e0:    89 c5                                 	mov ebp, eax
0x147e2:    e8 09 f0 fe ff                        	call 0x37f0 <__errno_location>
0x147e7:    83 fd 01                              	cmp ebp, 1
0x147ea:    49 89 c6                              	mov r14, rax
0x147ed:    74 11                                 	je 0x14800 <function_14710+0xf0>
0x147ef:    83 fd 03                              	cmp ebp, 3
0x147f2:    75 86                                 	jne 0x1477a <function_14710+0x6a>
0x147f4:    c7 00 00 00 00 00                     	mov dword ptr [rax], 0
0x147fa:    e9 7b ff ff ff                        	jmp 0x1477a <function_14710+0x6a>
; data inside code section at 0x147ff -- 0x14800
0x147ff:    90                                                 |.               |
0x14800:    c7 00 4b 00 00 00                     	mov dword ptr [rax], 0x4b
0x14806:    e9 6f ff ff ff                        	jmp 0x1477a <function_14710+0x6a>
0x1480b:    e8 60 f1 fe ff                        	call 0x3970 <__stack_chk_fail>
0x14810:    48 83 ec 10                           	sub rsp, 0x10
0x14814:    41 51                                 	push r9
0x14816:    4d 89 c1                              	mov r9, r8
0x14819:    49 89 c8                              	mov r8, rcx
0x1481c:    48 89 d1                              	mov rcx, rdx
0x1481f:    48 89 f2                              	mov rdx, rsi
0x14822:    be 0a 00 00 00                        	mov esi, 0xa
0x14827:    e8 e4 fe ff ff                        	call 0x14710
0x1482c:    48 83 c4 18                           	add rsp, 0x18
0x14830:    c3                                    	ret 
; data inside code section at 0x14831 -- 0x14840
0x14831:    66 2e 0f 1f 84 00 00 00  00 00 0f 1f 44 00 00      |f...........D.. |
; function: function_14840 at 0x14840 -- 0x1486f
0x14840:    53                                    	push rbx
0x14841:    31 f6                                 	xor esi, esi
0x14843:    31 ff                                 	xor edi, edi
0x14845:    e8 46 f2 fe ff                        	call 0x3a90 <getcwd>
0x1484a:    48 85 c0                              	test rax, rax
0x1484d:    48 89 c3                              	mov rbx, rax
0x14850:    74 0e                                 	je 0x14860 <function_14840+0x20>
0x14852:    48 89 d8                              	mov rax, rbx
0x14855:    5b                                    	pop rbx
0x14856:    c3                                    	ret 
; data inside code section at 0x14857 -- 0x14860
0x14857:    66 0f 1f 84 00 00 00 00  00                        |f........       |
0x14860:    e8 8b ef fe ff                        	call 0x37f0 <__errno_location>
0x14865:    83 38 0c                              	cmp dword ptr [rax], 0xc
0x14868:    75 e8                                 	jne 0x14852 <function_14840+0x12>
0x1486a:    e8 61 fe ff ff                        	call 0x146d0 <function_146d0>
; data inside code section at 0x1486f -- 0x14870
0x1486f:    90                                                 |.               |
; function: function_14870 at 0x14870 -- 0x14950
0x14870:    41 56                                 	push r14
0x14872:    41 55                                 	push r13
0x14874:    49 bd 01 10 40 00 10 00 00 00         	movabs r13, 0x1000401001
0x1487e:    41 54                                 	push r12
0x14880:    55                                    	push rbp
0x14881:    53                                    	push rbx
0x14882:    31 db                                 	xor ebx, ebx
0x14884:    48 83 ec 10                           	sub rsp, 0x10
0x14888:    64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x14891:    48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x14896:    31 c0                                 	xor eax, eax
0x14898:    48 c7 04 24 22 00 00 00               	mov qword ptr [rsp], 0x22
0x148a0:    49 89 e4                              	mov r12, rsp
0x148a3:    e8 48 ef fe ff                        	call 0x37f0 <__errno_location>
0x148a8:    48 89 c5                              	mov rbp, rax
0x148ab:    0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0x148b0:    48 89 df                              	mov rdi, rbx
0x148b3:    4c 89 e6                              	mov rsi, r12
0x148b6:    e8 25 fd ff ff                        	call 0x145e0 <function_145e0>
0x148bb:    48 8b 34 24                           	mov rsi, qword ptr [rsp]
0x148bf:    48 89 c7                              	mov rdi, rax
0x148c2:    48 89 c3                              	mov rbx, rax
0x148c5:    4c 8d 74 30 fe                        	lea r14, [rax + rsi - 2]
0x148ca:    48 83 ee 01                           	sub rsi, 1
0x148ce:    41 c6 06 00                           	mov byte ptr [r14], 0
0x148d2:    c7 45 00 00 00 00 00                  	mov dword ptr [rbp], 0
0x148d9:    e8 d2 f4 fe ff                        	call 0x3db0 <gethostname>
0x148de:    85 c0                                 	test eax, eax
0x148e0:    75 2e                                 	jne 0x14910 <function_14870+0xa0>
0x148e2:    41 80 3e 00                           	cmp byte ptr [r14], 0
0x148e6:    75 c8                                 	jne 0x148b0 <function_14870+0x40>
0x148e8:    48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0x148ed:    64 48 33 14 25 28 00 00 00            	xor rdx, qword ptr fs:[0x28]
0x148f6:    48 89 d8                              	mov rax, rbx
0x148f9:    75 41                                 	jne 0x1493c <function_14870+0xcc>
0x148fb:    48 83 c4 10                           	add rsp, 0x10
0x148ff:    5b                                    	pop rbx
0x14900:    5d                                    	pop rbp
0x14901:    41 5c                                 	pop r12
0x14903:    41 5d                                 	pop r13
0x14905:    41 5e                                 	pop r14
0x14907:    c3                                    	ret 
; data inside code section at 0x14908 -- 0x14910
0x14908:    0f 1f 84 00 00 00 00 00                            |........        |
0x14910:    44 8b 75 00                           	mov r14d, dword ptr [rbp]
0x14914:    41 83 fe 24                           	cmp r14d, 0x24
0x14918:    76 16                                 	jbe 0x14930 <function_14870+0xc0>
0x1491a:    48 89 df                              	mov rdi, rbx
0x1491d:    31 db                                 	xor ebx, ebx
0x1491f:    e8 4c f5 fe ff                        	call 0x3e70 <free>
0x14924:    44 89 75 00                           	mov dword ptr [rbp], r14d
0x14928:    eb be                                 	jmp 0x148e8 <function_14870+0x78>
; data inside code section at 0x1492a -- 0x14930
0x1492a:    66 0f 1f 44 00 00                                  |f..D..          |
0x14930:    4d 0f a3 f5                           	bt r13, r14
0x14934:    0f 82 76 ff ff ff                     	jb 0x148b0 <function_14870+0x40>
0x1493a:    eb de                                 	jmp 0x1491a <function_14870+0xaa>
0x1493c:    e8 2f f0 fe ff                        	call 0x3970 <__stack_chk_fail>
0x14941:    66 2e 0f 1f 84 00 00 00 00 00         	nop word ptr cs:[rax + rax]
0x1494b:    0f 1f 44 00 00                        	nop dword ptr [rax + rax]
; function: function_14950 at 0x14950 -- 0x14d6c
0x14950:    41 57                                 	push r15
0x14952:    41 56                                 	push r14
0x14954:    41 55                                 	push r13
0x14956:    41 54                                 	push r12
0x14958:    55                                    	push rbp
0x14959:    53                                    	push rbx
0x1495a:    48 83 ec 28                           	sub rsp, 0x28
0x1495e:    64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x14967:    48 89 44 24 18                        	mov qword ptr [rsp + 0x18], rax
0x1496c:    31 c0                                 	xor eax, eax
0x1496e:    83 fa 24                              	cmp edx, 0x24
0x14971:    0f 87 5e 03 00 00                     	ja 0x14cd5 <function_14950+0x385>
0x14977:    48 8d 44 24 10                        	lea rax, [rsp + 0x10]
0x1497c:    49 89 f7                              	mov r15, rsi
0x1497f:    48 85 f6                              	test rsi, rsi
0x14982:    48 89 fd                              	mov rbp, rdi
0x14985:    89 54 24 08                           	mov dword ptr [rsp + 8], edx
0x14989:    49 89 ce                              	mov r14, rcx
0x1498c:    4d 89 c5                              	mov r13, r8
0x1498f:    4c 0f 44 f8                           	cmove r15, rax
0x14993:    e8 58 ee fe ff                        	call 0x37f0 <__errno_location>
0x14998:    c7 00 00 00 00 00                     	mov dword ptr [rax], 0
0x1499e:    49 89 c4                              	mov r12, rax
0x149a1:    0f b6 5d 00                           	movzx ebx, byte ptr [rbp]
0x149a5:    e8 a6 f4 fe ff                        	call 0x3e50 <__ctype_b_loc>
0x149aa:    8b 54 24 08                           	mov edx, dword ptr [rsp + 8]
0x149ae:    48 8b 30                              	mov rsi, qword ptr [rax]
0x149b1:    48 89 e8                              	mov rax, rbp
0x149b4:    eb 11                                 	jmp 0x149c7 <function_14950+0x77>
; data inside code section at 0x149b6 -- 0x149c0
0x149b6:    66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x149c0:    48 83 c0 01                           	add rax, 1
0x149c4:    0f b6 18                              	movzx ebx, byte ptr [rax]
0x149c7:    0f b6 cb                              	movzx ecx, bl
0x149ca:    f6 44 4e 01 20                        	test byte ptr [rsi + rcx*2 + 1], 0x20
0x149cf:    75 ef                                 	jne 0x149c0 <function_14950+0x70>
0x149d1:    80 fb 2d                              	cmp bl, 0x2d
0x149d4:    74 52                                 	je 0x14a28 <function_14950+0xd8>
0x149d6:    4c 89 fe                              	mov rsi, r15
0x149d9:    48 89 ef                              	mov rdi, rbp
0x149dc:    e8 7f f3 fe ff                        	call 0x3d60 <strtoul>
0x149e1:    49 8b 0f                              	mov rcx, qword ptr [r15]
0x149e4:    48 89 c3                              	mov rbx, rax
0x149e7:    48 39 e9                              	cmp rcx, rbp
0x149ea:    74 2c                                 	je 0x14a18 <function_14950+0xc8>
0x149ec:    41 8b 04 24                           	mov eax, dword ptr [r12]
0x149f0:    85 c0                                 	test eax, eax
0x149f2:    74 64                                 	je 0x14a58 <function_14950+0x108>
0x149f4:    83 f8 22                              	cmp eax, 0x22
0x149f7:    bd 01 00 00 00                        	mov ebp, 1
0x149fc:    75 2a                                 	jne 0x14a28 <function_14950+0xd8>
0x149fe:    4d 85 ed                              	test r13, r13
0x14a01:    74 09                                 	je 0x14a0c <function_14950+0xbc>
0x14a03:    44 0f b6 21                           	movzx r12d, byte ptr [rcx]
0x14a07:    45 84 e4                              	test r12b, r12b
0x14a0a:    75 7b                                 	jne 0x14a87 <function_14950+0x137>
0x14a0c:    49 89 1e                              	mov qword ptr [r14], rbx
0x14a0f:    eb 1c                                 	jmp 0x14a2d <function_14950+0xdd>
; data inside code section at 0x14a11 -- 0x14a18
0x14a11:    0f 1f 80 00 00 00 00                               |.......         |
0x14a18:    4d 85 ed                              	test r13, r13
0x14a1b:    48 89 4c 24 08                        	mov qword ptr [rsp + 8], rcx
0x14a20:    75 3e                                 	jne 0x14a60 <function_14950+0x110>
0x14a22:    66 0f 1f 44 00 00                     	nop word ptr [rax + rax]
0x14a28:    bd 04 00 00 00                        	mov ebp, 4
0x14a2d:    48 8b 7c 24 18                        	mov rdi, qword ptr [rsp + 0x18]
0x14a32:    64 48 33 3c 25 28 00 00 00            	xor rdi, qword ptr fs:[0x28]
0x14a3b:    89 e8                                 	mov eax, ebp
0x14a3d:    0f 85 8d 02 00 00                     	jne 0x14cd0 <function_14950+0x380>
0x14a43:    48 83 c4 28                           	add rsp, 0x28
0x14a47:    5b                                    	pop rbx
0x14a48:    5d                                    	pop rbp
0x14a49:    41 5c                                 	pop r12
0x14a4b:    41 5d                                 	pop r13
0x14a4d:    41 5e                                 	pop r14
0x14a4f:    41 5f                                 	pop r15
0x14a51:    c3                                    	ret 
; data inside code section at 0x14a52 -- 0x14a58
0x14a52:    66 0f 1f 44 00 00                                  |f..D..          |
0x14a58:    31 ed                                 	xor ebp, ebp
0x14a5a:    eb a2                                 	jmp 0x149fe <function_14950+0xae>
; data inside code section at 0x14a5c -- 0x14a60
0x14a5c:    0f 1f 40 00                                        |..@.            |
0x14a60:    44 0f b6 65 00                        	movzx r12d, byte ptr [rbp]
0x14a65:    45 84 e4                              	test r12b, r12b
0x14a68:    74 be                                 	je 0x14a28 <function_14950+0xd8>
0x14a6a:    41 0f be f4                           	movsx esi, r12b
0x14a6e:    4c 89 ef                              	mov rdi, r13
0x14a71:    31 ed                                 	xor ebp, ebp
0x14a73:    e8 28 ef fe ff                        	call 0x39a0 <strchr>
0x14a78:    48 85 c0                              	test rax, rax
0x14a7b:    bb 01 00 00 00                        	mov ebx, 1
0x14a80:    48 8b 4c 24 08                        	mov rcx, qword ptr [rsp + 8]
0x14a85:    74 a1                                 	je 0x14a28 <function_14950+0xd8>
0x14a87:    41 0f be f4                           	movsx esi, r12b
0x14a8b:    4c 89 ef                              	mov rdi, r13
0x14a8e:    48 89 4c 24 08                        	mov qword ptr [rsp + 8], rcx
0x14a93:    e8 08 ef fe ff                        	call 0x39a0 <strchr>
0x14a98:    48 85 c0                              	test rax, rax
0x14a9b:    48 8b 4c 24 08                        	mov rcx, qword ptr [rsp + 8]
0x14aa0:    0f 84 c6 00 00 00                     	je 0x14b6c <function_14950+0x21c>
0x14aa6:    41 8d 44 24 bb                        	lea eax, [r12 - 0x45]
0x14aab:    3c 2f                                 	cmp al, 0x2f
0x14aad:    77 51                                 	ja 0x14b00 <function_14950+0x1b0>
0x14aaf:    48 ba 45 89 30 00 44 81 00 00         	movabs rdx, 0x814400308945
0x14ab9:    48 0f a3 c2                           	bt rdx, rax
0x14abd:    73 41                                 	jae 0x14b00 <function_14950+0x1b0>
0x14abf:    be 30 00 00 00                        	mov esi, 0x30
0x14ac4:    4c 89 ef                              	mov rdi, r13
0x14ac7:    48 89 4c 24 08                        	mov qword ptr [rsp + 8], rcx
0x14acc:    e8 cf ee fe ff                        	call 0x39a0 <strchr>
0x14ad1:    48 85 c0                              	test rax, rax
0x14ad4:    48 8b 4c 24 08                        	mov rcx, qword ptr [rsp + 8]
0x14ad9:    74 25                                 	je 0x14b00 <function_14950+0x1b0>
0x14adb:    0f b6 41 01                           	movzx eax, byte ptr [rcx + 1]
0x14adf:    3c 44                                 	cmp al, 0x44
0x14ae1:    74 0c                                 	je 0x14aef <function_14950+0x19f>
0x14ae3:    3c 69                                 	cmp al, 0x69
0x14ae5:    0f 84 cd 01 00 00                     	je 0x14cb8 <function_14950+0x368>
0x14aeb:    3c 42                                 	cmp al, 0x42
0x14aed:    75 11                                 	jne 0x14b00 <function_14950+0x1b0>
0x14aef:    bf 02 00 00 00                        	mov edi, 2
0x14af4:    be e8 03 00 00                        	mov esi, 0x3e8
0x14af9:    eb 0f                                 	jmp 0x14b0a <function_14950+0x1ba>
; data inside code section at 0x14afb -- 0x14b00
0x14afb:    0f 1f 44 00 00                                     |..D..           |
0x14b00:    bf 01 00 00 00                        	mov edi, 1
0x14b05:    be 00 04 00 00                        	mov esi, 0x400
0x14b0a:    41 83 ec 42                           	sub r12d, 0x42
0x14b0e:    41 80 fc 35                           	cmp r12b, 0x35
0x14b12:    77 58                                 	ja 0x14b6c <function_14950+0x21c>
0x14b14:    48 8d 15 1d 64 00 00                  	lea rdx, [rip + 0x641d]
0x14b1b:    45 0f b6 e4                           	movzx r12d, r12b
0x14b1f:    4a 63 04 a2                           	movsxd rax, dword ptr [rdx + r12*4]
0x14b23:    48 01 d0                              	add rax, rdx
0x14b26:    ff e0                                 	jmp rax
0x14b28:    48 89 d8                              	mov rax, rbx
0x14b2b:    48 f7 e6                              	mul rsi
0x14b2e:    0f 80 ed 01 00 00                     	jo 0x14d21 <function_14950+0x3d1>
0x14b34:    45 31 c0                              	xor r8d, r8d
0x14b37:    48 f7 e6                              	mul rsi
0x14b3a:    0f 80 d2 01 00 00                     	jo 0x14d12 <function_14950+0x3c2>
0x14b40:    48 89 c3                              	mov rbx, rax
0x14b43:    44 09 c5                              	or ebp, r8d
0x14b46:    66 2e 0f 1f 84 00 00 00 00 00         	nop word ptr cs:[rax + rax]
0x14b50:    48 63 ff                              	movsxd rdi, edi
0x14b53:    89 e8                                 	mov eax, ebp
0x14b55:    48 01 f9                              	add rcx, rdi
0x14b58:    83 c8 02                              	or eax, 2
0x14b5b:    49 89 0f                              	mov qword ptr [r15], rcx
0x14b5e:    80 39 00                              	cmp byte ptr [rcx], 0
0x14b61:    49 89 1e                              	mov qword ptr [r14], rbx
0x14b64:    0f 45 e8                              	cmovne ebp, eax
0x14b67:    e9 c1 fe ff ff                        	jmp 0x14a2d <function_14950+0xdd>
0x14b6c:    49 89 1e                              	mov qword ptr [r14], rbx
0x14b6f:    83 cd 02                              	or ebp, 2
0x14b72:    e9 b6 fe ff ff                        	jmp 0x14a2d <function_14950+0xdd>
0x14b77:    ba 02 00 00 00                        	mov edx, 2
0x14b7c:    48 89 d0                              	mov rax, rdx
0x14b7f:    48 f7 e3                              	mul rbx
0x14b82:    0f 80 96 00 00 00                     	jo 0x14c1e <function_14950+0x2ce>
0x14b88:    48 01 db                              	add rbx, rbx
0x14b8b:    eb c3                                 	jmp 0x14b50 <function_14950+0x200>
0x14b8d:    ba 00 02 00 00                        	mov edx, 0x200
0x14b92:    48 89 d0                              	mov rax, rdx
0x14b95:    48 f7 e3                              	mul rbx
0x14b98:    0f 80 80 00 00 00                     	jo 0x14c1e <function_14950+0x2ce>
0x14b9e:    48 c1 e3 09                           	shl rbx, 9
0x14ba2:    eb ac                                 	jmp 0x14b50 <function_14950+0x200>
0x14ba4:    41 b8 07 00 00 00                     	mov r8d, 7
0x14baa:    45 31 c9                              	xor r9d, r9d
0x14bad:    0f 1f 00                              	nop dword ptr [rax]
0x14bb0:    48 89 d8                              	mov rax, rbx
0x14bb3:    48 f7 e6                              	mul rsi
0x14bb6:    48 89 c3                              	mov rbx, rax
0x14bb9:    0f 80 8f 01 00 00                     	jo 0x14d4e <function_14950+0x3fe>
0x14bbf:    41 83 e8 01                           	sub r8d, 1
0x14bc3:    75 eb                                 	jne 0x14bb0 <function_14950+0x260>
0x14bc5:    44 09 cd                              	or ebp, r9d
0x14bc8:    eb 86                                 	jmp 0x14b50 <function_14950+0x200>
0x14bca:    41 b8 08 00 00 00                     	mov r8d, 8
0x14bd0:    45 31 c9                              	xor r9d, r9d
0x14bd3:    0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0x14bd8:    48 89 d8                              	mov rax, rbx
0x14bdb:    48 f7 e6                              	mul rsi
0x14bde:    48 89 c3                              	mov rbx, rax
0x14be1:    0f 80 49 01 00 00                     	jo 0x14d30 <function_14950+0x3e0>
0x14be7:    41 83 e8 01                           	sub r8d, 1
0x14beb:    75 eb                                 	jne 0x14bd8 <function_14950+0x288>
0x14bed:    eb d6                                 	jmp 0x14bc5 <function_14950+0x275>
0x14bef:    41 b8 04 00 00 00                     	mov r8d, 4
0x14bf5:    45 31 c9                              	xor r9d, r9d
0x14bf8:    48 89 d8                              	mov rax, rbx
0x14bfb:    48 f7 e6                              	mul rsi
0x14bfe:    48 89 c3                              	mov rbx, rax
0x14c01:    0f 80 fc 00 00 00                     	jo 0x14d03 <function_14950+0x3b3>
0x14c07:    41 83 e8 01                           	sub r8d, 1
0x14c0b:    75 eb                                 	jne 0x14bf8 <function_14950+0x2a8>
0x14c0d:    eb b6                                 	jmp 0x14bc5 <function_14950+0x275>
0x14c0f:    48 89 d8                              	mov rax, rbx
0x14c12:    48 f7 e6                              	mul rsi
0x14c15:    48 89 c3                              	mov rbx, rax
0x14c18:    0f 81 32 ff ff ff                     	jno 0x14b50 <function_14950+0x200>
0x14c1e:    bd 01 00 00 00                        	mov ebp, 1
0x14c23:    48 83 cb ff                           	or rbx, 0xffffffffffffffff
0x14c27:    e9 24 ff ff ff                        	jmp 0x14b50 <function_14950+0x200>
; data inside code section at 0x14c2c -- 0x14c30
0x14c2c:    0f 1f 40 00                                        |..@.            |
0x14c30:    41 b8 05 00 00 00                     	mov r8d, 5
0x14c36:    45 31 c9                              	xor r9d, r9d
0x14c39:    48 89 d8                              	mov rax, rbx
0x14c3c:    48 f7 e6                              	mul rsi
0x14c3f:    48 89 c3                              	mov rbx, rax
0x14c42:    0f 80 f7 00 00 00                     	jo 0x14d3f <function_14950+0x3ef>
0x14c48:    41 83 e8 01                           	sub r8d, 1
0x14c4c:    75 eb                                 	jne 0x14c39 <function_14950+0x2e9>
0x14c4e:    e9 72 ff ff ff                        	jmp 0x14bc5 <function_14950+0x275>
0x14c53:    41 b8 06 00 00 00                     	mov r8d, 6
0x14c59:    45 31 c9                              	xor r9d, r9d
0x14c5c:    48 89 d8                              	mov rax, rbx
0x14c5f:    48 f7 e6                              	mul rsi
0x14c62:    48 89 c3                              	mov rbx, rax
0x14c65:    0f 80 89 00 00 00                     	jo 0x14cf4 <function_14950+0x3a4>
0x14c6b:    41 83 e8 01                           	sub r8d, 1
0x14c6f:    75 eb                                 	jne 0x14c5c <function_14950+0x30c>
0x14c71:    e9 4f ff ff ff                        	jmp 0x14bc5 <function_14950+0x275>
0x14c76:    ba 00 04 00 00                        	mov edx, 0x400
0x14c7b:    48 89 d0                              	mov rax, rdx
0x14c7e:    48 f7 e3                              	mul rbx
0x14c81:    70 9b                                 	jo 0x14c1e <function_14950+0x2ce>
0x14c83:    48 c1 e3 0a                           	shl rbx, 0xa
0x14c87:    e9 c4 fe ff ff                        	jmp 0x14b50 <function_14950+0x200>
0x14c8c:    48 89 d8                              	mov rax, rbx
0x14c8f:    48 f7 e6                              	mul rsi
0x14c92:    0f 80 c5 00 00 00                     	jo 0x14d5d <function_14950+0x40d>
0x14c98:    45 31 c0                              	xor r8d, r8d
0x14c9b:    48 f7 e6                              	mul rsi
0x14c9e:    0f 81 93 fe ff ff                     	jno 0x14b37 <function_14950+0x1e7>
0x14ca4:    41 b8 01 00 00 00                     	mov r8d, 1
0x14caa:    48 83 c8 ff                           	or rax, 0xffffffffffffffff
0x14cae:    e9 84 fe ff ff                        	jmp 0x14b37 <function_14950+0x1e7>
; data inside code section at 0x14cb3 -- 0x14cb8
0x14cb3:    0f 1f 44 00 00                                     |..D..           |
0x14cb8:    31 ff                                 	xor edi, edi
0x14cba:    80 79 02 42                           	cmp byte ptr [rcx + 2], 0x42
0x14cbe:    be 00 04 00 00                        	mov esi, 0x400
0x14cc3:    40 0f 94 c7                           	sete dil
0x14cc7:    8d 7c 3f 01                           	lea edi, [rdi + rdi + 1]
0x14ccb:    e9 3a fe ff ff                        	jmp 0x14b0a <function_14950+0x1ba>
0x14cd0:    e8 9b ec fe ff                        	call 0x3970 <__stack_chk_fail>
0x14cd5:    48 8d 0d 34 63 00 00                  	lea rcx, [rip + 0x6334]
0x14cdc:    48 8d 35 1d 62 00 00                  	lea rsi, [rip + 0x621d]
0x14ce3:    48 8d 3d 26 62 00 00                  	lea rdi, [rip + 0x6226]
0x14cea:    ba 60 00 00 00                        	mov edx, 0x60
0x14cef:    e8 3c ed fe ff                        	call 0x3a30 <__assert_fail>
0x14cf4:    41 b9 01 00 00 00                     	mov r9d, 1
0x14cfa:    48 83 cb ff                           	or rbx, 0xffffffffffffffff
0x14cfe:    e9 68 ff ff ff                        	jmp 0x14c6b <function_14950+0x31b>
0x14d03:    41 b9 01 00 00 00                     	mov r9d, 1
0x14d09:    48 83 cb ff                           	or rbx, 0xffffffffffffffff
0x14d0d:    e9 f5 fe ff ff                        	jmp 0x14c07 <function_14950+0x2b7>
0x14d12:    41 b8 01 00 00 00                     	mov r8d, 1
0x14d18:    48 83 cb ff                           	or rbx, 0xffffffffffffffff
0x14d1c:    e9 22 fe ff ff                        	jmp 0x14b43 <function_14950+0x1f3>
0x14d21:    48 83 c8 ff                           	or rax, 0xffffffffffffffff
0x14d25:    41 b8 01 00 00 00                     	mov r8d, 1
0x14d2b:    e9 07 fe ff ff                        	jmp 0x14b37 <function_14950+0x1e7>
0x14d30:    41 b9 01 00 00 00                     	mov r9d, 1
0x14d36:    48 83 cb ff                           	or rbx, 0xffffffffffffffff
0x14d3a:    e9 a8 fe ff ff                        	jmp 0x14be7 <function_14950+0x297>
0x14d3f:    41 b9 01 00 00 00                     	mov r9d, 1
0x14d45:    48 83 cb ff                           	or rbx, 0xffffffffffffffff
0x14d49:    e9 fa fe ff ff                        	jmp 0x14c48 <function_14950+0x2f8>
0x14d4e:    41 b9 01 00 00 00                     	mov r9d, 1
0x14d54:    48 83 cb ff                           	or rbx, 0xffffffffffffffff
0x14d58:    e9 62 fe ff ff                        	jmp 0x14bbf <function_14950+0x26f>
0x14d5d:    41 b8 01 00 00 00                     	mov r8d, 1
0x14d63:    48 83 c8 ff                           	or rax, 0xffffffffffffffff
0x14d67:    e9 2f ff ff ff                        	jmp 0x14c9b <function_14950+0x34b>
; data inside code section at 0x14d6c -- 0x14d70
0x14d6c:    0f 1f 40 00                                        |..@.            |
; function: function_14d70 at 0x14d70 -- 0x14e1c
0x14d70:    41 55                                 	push r13
0x14d72:    41 54                                 	push r12
0x14d74:    41 89 f2                              	mov r10d, esi
0x14d77:    55                                    	push rbp
0x14d78:    53                                    	push rbx
0x14d79:    4d 89 c4                              	mov r12, r8
0x14d7c:    48 83 ec 18                           	sub rsp, 0x18
0x14d80:    64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x14d89:    48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x14d8e:    31 c0                                 	xor eax, eax
0x14d90:    83 ff 03                              	cmp edi, 3
0x14d93:    8b 2d 5f b4 20 00                     	mov ebp, dword ptr [rip + 0x20b45f]
0x14d99:    77 59                                 	ja 0x14df4 <function_14d70+0x84>
0x14d9b:    83 ff 02                              	cmp edi, 2
0x14d9e:    73 4b                                 	jae 0x14deb <function_14d70+0x7b>
0x14da0:    83 ef 01                              	sub edi, 1
0x14da3:    48 8d 35 8a 62 00 00                  	lea rsi, [rip + 0x628a]
0x14daa:    75 3a                                 	jne 0x14de6 <function_14d70+0x76>
0x14dac:    45 85 d2                              	test r10d, r10d
0x14daf:    49 63 c2                              	movsxd rax, r10d
0x14db2:    78 4e                                 	js 0x14e02 <function_14d70+0x92>
0x14db4:    48 c1 e0 05                           	shl rax, 5
0x14db8:    48 8d 1d 92 62 00 00                  	lea rbx, [rip + 0x6292]
0x14dbf:    4c 8b 2c 01                           	mov r13, qword ptr [rcx + rax]
0x14dc3:    ba 05 00 00 00                        	mov edx, 5
0x14dc8:    31 ff                                 	xor edi, edi
0x14dca:    e8 61 eb fe ff                        	call 0x3930 <dcgettext>
0x14dcf:    4d 89 e1                              	mov r9, r12
0x14dd2:    48 89 c2                              	mov rdx, rax
0x14dd5:    4d 89 e8                              	mov r8, r13
0x14dd8:    48 89 d9                              	mov rcx, rbx
0x14ddb:    31 f6                                 	xor esi, esi
0x14ddd:    89 ef                                 	mov edi, ebp
0x14ddf:    31 c0                                 	xor eax, eax
0x14de1:    e8 3a ef fe ff                        	call 0x3d20 <error>
0x14de6:    e8 f5 e9 fe ff                        	call 0x37e0 <abort>
0x14deb:    48 8d 35 66 62 00 00                  	lea rsi, [rip + 0x6266]
0x14df2:    eb b8                                 	jmp 0x14dac <function_14d70+0x3c>
0x14df4:    83 ff 04                              	cmp edi, 4
0x14df7:    48 8d 35 1b 62 00 00                  	lea rsi, [rip + 0x621b]
0x14dfe:    74 ac                                 	je 0x14dac <function_14d70+0x3c>
0x14e00:    eb e4                                 	jmp 0x14de6 <function_14d70+0x76>
0x14e02:    48 8d 1d 48 62 00 00                  	lea rbx, [rip + 0x6248]
0x14e09:    88 54 24 06                           	mov byte ptr [rsp + 6], dl
0x14e0d:    c6 44 24 07 00                        	mov byte ptr [rsp + 7], 0
0x14e12:    4c 8d 6c 24 06                        	lea r13, [rsp + 6]
0x14e17:    48 29 c3                              	sub rbx, rax
0x14e1a:    eb a7                                 	jmp 0x14dc3 <function_14d70+0x53>
; data inside code section at 0x14e1c -- 0x14e20
0x14e1c:    0f 1f 40 00                                        |..@.            |
; function: function_14e20 at 0x14e20 -- 0x1523c
0x14e20:    41 57                                 	push r15
0x14e22:    41 56                                 	push r14
0x14e24:    41 55                                 	push r13
0x14e26:    41 54                                 	push r12
0x14e28:    55                                    	push rbp
0x14e29:    53                                    	push rbx
0x14e2a:    48 83 ec 28                           	sub rsp, 0x28
0x14e2e:    64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x14e37:    48 89 44 24 18                        	mov qword ptr [rsp + 0x18], rax
0x14e3c:    31 c0                                 	xor eax, eax
0x14e3e:    83 fa 24                              	cmp edx, 0x24
0x14e41:    0f 87 5e 03 00 00                     	ja 0x151a5 <function_14e20+0x385>
0x14e47:    48 8d 44 24 10                        	lea rax, [rsp + 0x10]
0x14e4c:    49 89 f7                              	mov r15, rsi
0x14e4f:    48 85 f6                              	test rsi, rsi
0x14e52:    48 89 fd                              	mov rbp, rdi
0x14e55:    89 54 24 08                           	mov dword ptr [rsp + 8], edx
0x14e59:    49 89 ce                              	mov r14, rcx
0x14e5c:    4d 89 c5                              	mov r13, r8
0x14e5f:    4c 0f 44 f8                           	cmove r15, rax
0x14e63:    e8 88 e9 fe ff                        	call 0x37f0 <__errno_location>
0x14e68:    c7 00 00 00 00 00                     	mov dword ptr [rax], 0
0x14e6e:    49 89 c4                              	mov r12, rax
0x14e71:    0f b6 5d 00                           	movzx ebx, byte ptr [rbp]
0x14e75:    e8 d6 ef fe ff                        	call 0x3e50 <__ctype_b_loc>
0x14e7a:    8b 54 24 08                           	mov edx, dword ptr [rsp + 8]
0x14e7e:    48 8b 30                              	mov rsi, qword ptr [rax]
0x14e81:    48 89 e8                              	mov rax, rbp
0x14e84:    eb 11                                 	jmp 0x14e97 <function_14e20+0x77>
; data inside code section at 0x14e86 -- 0x14e90
0x14e86:    66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x14e90:    48 83 c0 01                           	add rax, 1
0x14e94:    0f b6 18                              	movzx ebx, byte ptr [rax]
0x14e97:    0f b6 cb                              	movzx ecx, bl
0x14e9a:    f6 44 4e 01 20                        	test byte ptr [rsi + rcx*2 + 1], 0x20
0x14e9f:    75 ef                                 	jne 0x14e90 <function_14e20+0x70>
0x14ea1:    80 fb 2d                              	cmp bl, 0x2d
0x14ea4:    74 52                                 	je 0x14ef8 <function_14e20+0xd8>
0x14ea6:    31 c9                                 	xor ecx, ecx
0x14ea8:    4c 89 fe                              	mov rsi, r15
0x14eab:    48 89 ef                              	mov rdi, rbp
0x14eae:    e8 8d eb fe ff                        	call 0x3a40 <__strtoul_internal>
0x14eb3:    49 8b 0f                              	mov rcx, qword ptr [r15]
0x14eb6:    48 89 c3                              	mov rbx, rax
0x14eb9:    48 39 e9                              	cmp rcx, rbp
0x14ebc:    74 2a                                 	je 0x14ee8 <function_14e20+0xc8>
0x14ebe:    41 8b 04 24                           	mov eax, dword ptr [r12]
0x14ec2:    85 c0                                 	test eax, eax
0x14ec4:    74 62                                 	je 0x14f28 <function_14e20+0x108>
0x14ec6:    83 f8 22                              	cmp eax, 0x22
0x14ec9:    bd 01 00 00 00                        	mov ebp, 1
0x14ece:    75 28                                 	jne 0x14ef8 <function_14e20+0xd8>
0x14ed0:    4d 85 ed                              	test r13, r13
0x14ed3:    74 09                                 	je 0x14ede <function_14e20+0xbe>
0x14ed5:    44 0f b6 21                           	movzx r12d, byte ptr [rcx]
0x14ed9:    45 84 e4                              	test r12b, r12b
0x14edc:    75 79                                 	jne 0x14f57 <function_14e20+0x137>
0x14ede:    49 89 1e                              	mov qword ptr [r14], rbx
0x14ee1:    eb 1a                                 	jmp 0x14efd <function_14e20+0xdd>
; data inside code section at 0x14ee3 -- 0x14ee8
0x14ee3:    0f 1f 44 00 00                                     |..D..           |
0x14ee8:    4d 85 ed                              	test r13, r13
0x14eeb:    48 89 4c 24 08                        	mov qword ptr [rsp + 8], rcx
0x14ef0:    75 3e                                 	jne 0x14f30 <function_14e20+0x110>
0x14ef2:    66 0f 1f 44 00 00                     	nop word ptr [rax + rax]
0x14ef8:    bd 04 00 00 00                        	mov ebp, 4
0x14efd:    48 8b 7c 24 18                        	mov rdi, qword ptr [rsp + 0x18]
0x14f02:    64 48 33 3c 25 28 00 00 00            	xor rdi, qword ptr fs:[0x28]
0x14f0b:    89 e8                                 	mov eax, ebp
0x14f0d:    0f 85 8d 02 00 00                     	jne 0x151a0 <function_14e20+0x380>
0x14f13:    48 83 c4 28                           	add rsp, 0x28
0x14f17:    5b                                    	pop rbx
0x14f18:    5d                                    	pop rbp
0x14f19:    41 5c                                 	pop r12
0x14f1b:    41 5d                                 	pop r13
0x14f1d:    41 5e                                 	pop r14
0x14f1f:    41 5f                                 	pop r15
0x14f21:    c3                                    	ret 
; data inside code section at 0x14f22 -- 0x14f28
0x14f22:    66 0f 1f 44 00 00                                  |f..D..          |
0x14f28:    31 ed                                 	xor ebp, ebp
0x14f2a:    eb a4                                 	jmp 0x14ed0 <function_14e20+0xb0>
; data inside code section at 0x14f2c -- 0x14f30
0x14f2c:    0f 1f 40 00                                        |..@.            |
0x14f30:    44 0f b6 65 00                        	movzx r12d, byte ptr [rbp]
0x14f35:    45 84 e4                              	test r12b, r12b
0x14f38:    74 be                                 	je 0x14ef8 <function_14e20+0xd8>
0x14f3a:    41 0f be f4                           	movsx esi, r12b
0x14f3e:    4c 89 ef                              	mov rdi, r13
0x14f41:    31 ed                                 	xor ebp, ebp
0x14f43:    e8 58 ea fe ff                        	call 0x39a0 <strchr>
0x14f48:    48 85 c0                              	test rax, rax
0x14f4b:    bb 01 00 00 00                        	mov ebx, 1
0x14f50:    48 8b 4c 24 08                        	mov rcx, qword ptr [rsp + 8]
0x14f55:    74 a1                                 	je 0x14ef8 <function_14e20+0xd8>
0x14f57:    41 0f be f4                           	movsx esi, r12b
0x14f5b:    4c 89 ef                              	mov rdi, r13
0x14f5e:    48 89 4c 24 08                        	mov qword ptr [rsp + 8], rcx
0x14f63:    e8 38 ea fe ff                        	call 0x39a0 <strchr>
0x14f68:    48 85 c0                              	test rax, rax
0x14f6b:    48 8b 4c 24 08                        	mov rcx, qword ptr [rsp + 8]
0x14f70:    0f 84 c6 00 00 00                     	je 0x1503c <function_14e20+0x21c>
0x14f76:    41 8d 44 24 bb                        	lea eax, [r12 - 0x45]
0x14f7b:    3c 2f                                 	cmp al, 0x2f
0x14f7d:    77 51                                 	ja 0x14fd0 <function_14e20+0x1b0>
0x14f7f:    48 ba 45 89 30 00 44 81 00 00         	movabs rdx, 0x814400308945
0x14f89:    48 0f a3 c2                           	bt rdx, rax
0x14f8d:    73 41                                 	jae 0x14fd0 <function_14e20+0x1b0>
0x14f8f:    be 30 00 00 00                        	mov esi, 0x30
0x14f94:    4c 89 ef                              	mov rdi, r13
0x14f97:    48 89 4c 24 08                        	mov qword ptr [rsp + 8], rcx
0x14f9c:    e8 ff e9 fe ff                        	call 0x39a0 <strchr>
0x14fa1:    48 85 c0                              	test rax, rax
0x14fa4:    48 8b 4c 24 08                        	mov rcx, qword ptr [rsp + 8]
0x14fa9:    74 25                                 	je 0x14fd0 <function_14e20+0x1b0>
0x14fab:    0f b6 41 01                           	movzx eax, byte ptr [rcx + 1]
0x14faf:    3c 44                                 	cmp al, 0x44
0x14fb1:    74 0c                                 	je 0x14fbf <function_14e20+0x19f>
0x14fb3:    3c 69                                 	cmp al, 0x69
0x14fb5:    0f 84 cd 01 00 00                     	je 0x15188 <function_14e20+0x368>
0x14fbb:    3c 42                                 	cmp al, 0x42
0x14fbd:    75 11                                 	jne 0x14fd0 <function_14e20+0x1b0>
0x14fbf:    bf 02 00 00 00                        	mov edi, 2
0x14fc4:    be e8 03 00 00                        	mov esi, 0x3e8
0x14fc9:    eb 0f                                 	jmp 0x14fda <function_14e20+0x1ba>
; data inside code section at 0x14fcb -- 0x14fd0
0x14fcb:    0f 1f 44 00 00                                     |..D..           |
0x14fd0:    bf 01 00 00 00                        	mov edi, 1
0x14fd5:    be 00 04 00 00                        	mov esi, 0x400
0x14fda:    41 83 ec 42                           	sub r12d, 0x42
0x14fde:    41 80 fc 35                           	cmp r12b, 0x35
0x14fe2:    77 58                                 	ja 0x1503c <function_14e20+0x21c>
0x14fe4:    48 8d 15 95 60 00 00                  	lea rdx, [rip + 0x6095]
0x14feb:    45 0f b6 e4                           	movzx r12d, r12b
0x14fef:    4a 63 04 a2                           	movsxd rax, dword ptr [rdx + r12*4]
0x14ff3:    48 01 d0                              	add rax, rdx
0x14ff6:    ff e0                                 	jmp rax
0x14ff8:    48 89 d8                              	mov rax, rbx
0x14ffb:    48 f7 e6                              	mul rsi
0x14ffe:    0f 80 ed 01 00 00                     	jo 0x151f1 <function_14e20+0x3d1>
0x15004:    45 31 c0                              	xor r8d, r8d
0x15007:    48 f7 e6                              	mul rsi
0x1500a:    0f 80 d2 01 00 00                     	jo 0x151e2 <function_14e20+0x3c2>
0x15010:    48 89 c3                              	mov rbx, rax
0x15013:    44 09 c5                              	or ebp, r8d
0x15016:    66 2e 0f 1f 84 00 00 00 00 00         	nop word ptr cs:[rax + rax]
0x15020:    48 63 ff                              	movsxd rdi, edi
0x15023:    89 e8                                 	mov eax, ebp
0x15025:    48 01 f9                              	add rcx, rdi
0x15028:    83 c8 02                              	or eax, 2
0x1502b:    49 89 0f                              	mov qword ptr [r15], rcx
0x1502e:    80 39 00                              	cmp byte ptr [rcx], 0
0x15031:    49 89 1e                              	mov qword ptr [r14], rbx
0x15034:    0f 45 e8                              	cmovne ebp, eax
0x15037:    e9 c1 fe ff ff                        	jmp 0x14efd <function_14e20+0xdd>
0x1503c:    49 89 1e                              	mov qword ptr [r14], rbx
0x1503f:    83 cd 02                              	or ebp, 2
0x15042:    e9 b6 fe ff ff                        	jmp 0x14efd <function_14e20+0xdd>
0x15047:    ba 02 00 00 00                        	mov edx, 2
0x1504c:    48 89 d0                              	mov rax, rdx
0x1504f:    48 f7 e3                              	mul rbx
0x15052:    0f 80 96 00 00 00                     	jo 0x150ee <function_14e20+0x2ce>
0x15058:    48 01 db                              	add rbx, rbx
0x1505b:    eb c3                                 	jmp 0x15020 <function_14e20+0x200>
0x1505d:    ba 00 02 00 00                        	mov edx, 0x200
0x15062:    48 89 d0                              	mov rax, rdx
0x15065:    48 f7 e3                              	mul rbx
0x15068:    0f 80 80 00 00 00                     	jo 0x150ee <function_14e20+0x2ce>
0x1506e:    48 c1 e3 09                           	shl rbx, 9
0x15072:    eb ac                                 	jmp 0x15020 <function_14e20+0x200>
0x15074:    41 b8 07 00 00 00                     	mov r8d, 7
0x1507a:    45 31 c9                              	xor r9d, r9d
0x1507d:    0f 1f 00                              	nop dword ptr [rax]
0x15080:    48 89 d8                              	mov rax, rbx
0x15083:    48 f7 e6                              	mul rsi
0x15086:    48 89 c3                              	mov rbx, rax
0x15089:    0f 80 8f 01 00 00                     	jo 0x1521e <function_14e20+0x3fe>
0x1508f:    41 83 e8 01                           	sub r8d, 1
0x15093:    75 eb                                 	jne 0x15080 <function_14e20+0x260>
0x15095:    44 09 cd                              	or ebp, r9d
0x15098:    eb 86                                 	jmp 0x15020 <function_14e20+0x200>
0x1509a:    41 b8 08 00 00 00                     	mov r8d, 8
0x150a0:    45 31 c9                              	xor r9d, r9d
0x150a3:    0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0x150a8:    48 89 d8                              	mov rax, rbx
0x150ab:    48 f7 e6                              	mul rsi
0x150ae:    48 89 c3                              	mov rbx, rax
0x150b1:    0f 80 49 01 00 00                     	jo 0x15200 <function_14e20+0x3e0>
0x150b7:    41 83 e8 01                           	sub r8d, 1
0x150bb:    75 eb                                 	jne 0x150a8 <function_14e20+0x288>
0x150bd:    eb d6                                 	jmp 0x15095 <function_14e20+0x275>
0x150bf:    41 b8 04 00 00 00                     	mov r8d, 4
0x150c5:    45 31 c9                              	xor r9d, r9d
0x150c8:    48 89 d8                              	mov rax, rbx
0x150cb:    48 f7 e6                              	mul rsi
0x150ce:    48 89 c3                              	mov rbx, rax
0x150d1:    0f 80 fc 00 00 00                     	jo 0x151d3 <function_14e20+0x3b3>
0x150d7:    41 83 e8 01                           	sub r8d, 1
0x150db:    75 eb                                 	jne 0x150c8 <function_14e20+0x2a8>
0x150dd:    eb b6                                 	jmp 0x15095 <function_14e20+0x275>
0x150df:    48 89 d8                              	mov rax, rbx
0x150e2:    48 f7 e6                              	mul rsi
0x150e5:    48 89 c3                              	mov rbx, rax
0x150e8:    0f 81 32 ff ff ff                     	jno 0x15020 <function_14e20+0x200>
0x150ee:    bd 01 00 00 00                        	mov ebp, 1
0x150f3:    48 83 cb ff                           	or rbx, 0xffffffffffffffff
0x150f7:    e9 24 ff ff ff                        	jmp 0x15020 <function_14e20+0x200>
; data inside code section at 0x150fc -- 0x15100
0x150fc:    0f 1f 40 00                                        |..@.            |
0x15100:    41 b8 05 00 00 00                     	mov r8d, 5
0x15106:    45 31 c9                              	xor r9d, r9d
0x15109:    48 89 d8                              	mov rax, rbx
0x1510c:    48 f7 e6                              	mul rsi
0x1510f:    48 89 c3                              	mov rbx, rax
0x15112:    0f 80 f7 00 00 00                     	jo 0x1520f <function_14e20+0x3ef>
0x15118:    41 83 e8 01                           	sub r8d, 1
0x1511c:    75 eb                                 	jne 0x15109 <function_14e20+0x2e9>
0x1511e:    e9 72 ff ff ff                        	jmp 0x15095 <function_14e20+0x275>
0x15123:    41 b8 06 00 00 00                     	mov r8d, 6
0x15129:    45 31 c9                              	xor r9d, r9d
0x1512c:    48 89 d8                              	mov rax, rbx
0x1512f:    48 f7 e6                              	mul rsi
0x15132:    48 89 c3                              	mov rbx, rax
0x15135:    0f 80 89 00 00 00                     	jo 0x151c4 <function_14e20+0x3a4>
0x1513b:    41 83 e8 01                           	sub r8d, 1
0x1513f:    75 eb                                 	jne 0x1512c <function_14e20+0x30c>
0x15141:    e9 4f ff ff ff                        	jmp 0x15095 <function_14e20+0x275>
0x15146:    ba 00 04 00 00                        	mov edx, 0x400
0x1514b:    48 89 d0                              	mov rax, rdx
0x1514e:    48 f7 e3                              	mul rbx
0x15151:    70 9b                                 	jo 0x150ee <function_14e20+0x2ce>
0x15153:    48 c1 e3 0a                           	shl rbx, 0xa
0x15157:    e9 c4 fe ff ff                        	jmp 0x15020 <function_14e20+0x200>
0x1515c:    48 89 d8                              	mov rax, rbx
0x1515f:    48 f7 e6                              	mul rsi
0x15162:    0f 80 c5 00 00 00                     	jo 0x1522d <function_14e20+0x40d>
0x15168:    45 31 c0                              	xor r8d, r8d
0x1516b:    48 f7 e6                              	mul rsi
0x1516e:    0f 81 93 fe ff ff                     	jno 0x15007 <function_14e20+0x1e7>
0x15174:    41 b8 01 00 00 00                     	mov r8d, 1
0x1517a:    48 83 c8 ff                           	or rax, 0xffffffffffffffff
0x1517e:    e9 84 fe ff ff                        	jmp 0x15007 <function_14e20+0x1e7>
; data inside code section at 0x15183 -- 0x15188
0x15183:    0f 1f 44 00 00                                     |..D..           |
0x15188:    31 ff                                 	xor edi, edi
0x1518a:    80 79 02 42                           	cmp byte ptr [rcx + 2], 0x42
0x1518e:    be 00 04 00 00                        	mov esi, 0x400
0x15193:    40 0f 94 c7                           	sete dil
0x15197:    8d 7c 3f 01                           	lea edi, [rdi + rdi + 1]
0x1519b:    e9 3a fe ff ff                        	jmp 0x14fda <function_14e20+0x1ba>
0x151a0:    e8 cb e7 fe ff                        	call 0x3970 <__stack_chk_fail>
0x151a5:    48 8d 0d ac 5f 00 00                  	lea rcx, [rip + 0x5fac]
0x151ac:    48 8d 35 4d 5d 00 00                  	lea rsi, [rip + 0x5d4d]
0x151b3:    48 8d 3d 56 5d 00 00                  	lea rdi, [rip + 0x5d56]
0x151ba:    ba 60 00 00 00                        	mov edx, 0x60
0x151bf:    e8 6c e8 fe ff                        	call 0x3a30 <__assert_fail>
0x151c4:    41 b9 01 00 00 00                     	mov r9d, 1
0x151ca:    48 83 cb ff                           	or rbx, 0xffffffffffffffff
0x151ce:    e9 68 ff ff ff                        	jmp 0x1513b <function_14e20+0x31b>
0x151d3:    41 b9 01 00 00 00                     	mov r9d, 1
0x151d9:    48 83 cb ff                           	or rbx, 0xffffffffffffffff
0x151dd:    e9 f5 fe ff ff                        	jmp 0x150d7 <function_14e20+0x2b7>
0x151e2:    41 b8 01 00 00 00                     	mov r8d, 1
0x151e8:    48 83 cb ff                           	or rbx, 0xffffffffffffffff
0x151ec:    e9 22 fe ff ff                        	jmp 0x15013 <function_14e20+0x1f3>
0x151f1:    48 83 c8 ff                           	or rax, 0xffffffffffffffff
0x151f5:    41 b8 01 00 00 00                     	mov r8d, 1
0x151fb:    e9 07 fe ff ff                        	jmp 0x15007 <function_14e20+0x1e7>
0x15200:    41 b9 01 00 00 00                     	mov r9d, 1
0x15206:    48 83 cb ff                           	or rbx, 0xffffffffffffffff
0x1520a:    e9 a8 fe ff ff                        	jmp 0x150b7 <function_14e20+0x297>
0x1520f:    41 b9 01 00 00 00                     	mov r9d, 1
0x15215:    48 83 cb ff                           	or rbx, 0xffffffffffffffff
0x15219:    e9 fa fe ff ff                        	jmp 0x15118 <function_14e20+0x2f8>
0x1521e:    41 b9 01 00 00 00                     	mov r9d, 1
0x15224:    48 83 cb ff                           	or rbx, 0xffffffffffffffff
0x15228:    e9 62 fe ff ff                        	jmp 0x1508f <function_14e20+0x26f>
0x1522d:    41 b8 01 00 00 00                     	mov r8d, 1
0x15233:    48 83 c8 ff                           	or rax, 0xffffffffffffffff
0x15237:    e9 2f ff ff ff                        	jmp 0x1516b <function_14e20+0x34b>
; data inside code section at 0x1523c -- 0x15240
0x1523c:    0f 1f 40 00                                        |..@.            |
; function: function_15240 at 0x15240 -- 0x152a2
0x15240:    85 ff                                 	test edi, edi
0x15242:    53                                    	push rbx
0x15243:    74 4b                                 	je 0x15290 <function_15240+0x50>
0x15245:    83 ff 0a                              	cmp edi, 0xa
0x15248:    89 f8                                 	mov eax, edi
0x1524a:    74 04                                 	je 0x15250 <function_15240+0x10>
0x1524c:    5b                                    	pop rbx
0x1524d:    c3                                    	ret 
; data inside code section at 0x1524e -- 0x15250
0x1524e:    66 90                                              |f.              |
0x15250:    48 8b 16                              	mov rdx, qword ptr [rsi]
0x15253:    48 8d 3d 51 2a 00 00                  	lea rdi, [rip + 0x2a51]
0x1525a:    48 89 f3                              	mov rbx, rsi
0x1525d:    b9 0a 00 00 00                        	mov ecx, 0xa
0x15262:    48 89 d6                              	mov rsi, rdx
0x15265:    f3 a6                                 	repe cmpsb byte ptr [rsi], byte ptr [rdi]
0x15267:    75 e3                                 	jne 0x1524c <function_15240+0xc>
0x15269:    48 89 d7                              	mov rdi, rdx
0x1526c:    e8 2f eb fe ff                        	call 0x3da0 <function_3da0>
0x15271:    48 c7 03 00 00 00 00                  	mov qword ptr [rbx], 0
0x15278:    e8 73 e5 fe ff                        	call 0x37f0 <__errno_location>
0x1527d:    c7 00 3d 00 00 00                     	mov dword ptr [rax], 0x3d
0x15283:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0x15288:    5b                                    	pop rbx
0x15289:    c3                                    	ret 
; data inside code section at 0x1528a -- 0x15290
0x1528a:    66 0f 1f 44 00 00                                  |f..D..          |
0x15290:    e8 5b e5 fe ff                        	call 0x37f0 <__errno_location>
0x15295:    c7 00 5f 00 00 00                     	mov dword ptr [rax], 0x5f
0x1529b:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0x152a0:    5b                                    	pop rbx
0x152a1:    c3                                    	ret 
; data inside code section at 0x152a2 -- 0x152b0
0x152a2:    0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: function_152b0 at 0x152b0 -- 0x152c4
0x152b0:    53                                    	push rbx
0x152b1:    48 89 f3                              	mov rbx, rsi
0x152b4:    e8 e7 e8 fe ff                        	call 0x3ba0 <function_3ba0>
0x152b9:    48 89 de                              	mov rsi, rbx
0x152bc:    89 c7                                 	mov edi, eax
0x152be:    5b                                    	pop rbx
0x152bf:    e9 7c ff ff ff                        	jmp 0x15240 <function_15240>
; data inside code section at 0x152c4 -- 0x152d0
0x152c4:    66 90 66 2e 0f 1f 84 00  00 00 00 00               |f.f.........    |
; function: function_152d0 at 0x152d0 -- 0x152e4
0x152d0:    53                                    	push rbx
0x152d1:    48 89 f3                              	mov rbx, rsi
0x152d4:    e8 37 e8 fe ff                        	call 0x3b10 <function_3b10>
0x152d9:    48 89 de                              	mov rsi, rbx
0x152dc:    89 c7                                 	mov edi, eax
0x152de:    5b                                    	pop rbx
0x152df:    e9 5c ff ff ff                        	jmp 0x15240 <function_15240>
; data inside code section at 0x152e4 -- 0x152f0
0x152e4:    66 90 66 2e 0f 1f 84 00  00 00 00 00               |f.f.........    |
; function: function_152f0 at 0x152f0 -- 0x15304
0x152f0:    53                                    	push rbx
0x152f1:    48 89 f3                              	mov rbx, rsi
0x152f4:    e8 f7 e6 fe ff                        	call 0x39f0 <function_39f0>
0x152f9:    48 89 de                              	mov rsi, rbx
0x152fc:    89 c7                                 	mov edi, eax
0x152fe:    5b                                    	pop rbx
0x152ff:    e9 3c ff ff ff                        	jmp 0x15240 <function_15240>
; data inside code section at 0x15304 -- 0x15310
0x15304:    66 2e 0f 1f 84 00 00 00  00 00 66 90               |f.........f.    |
; function: function_15310 at 0x15310 -- 0x153a0
0x15310:    41 55                                 	push r13
0x15312:    41 54                                 	push r12
0x15314:    49 89 f5                              	mov r13, rsi
0x15317:    55                                    	push rbp
0x15318:    53                                    	push rbx
0x15319:    48 89 fb                              	mov rbx, rdi
0x1531c:    49 89 d4                              	mov r12, rdx
0x1531f:    48 83 ec 18                           	sub rsp, 0x18
0x15323:    64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x1532c:    48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x15331:    31 c0                                 	xor eax, eax
0x15333:    48 8d 44 24 04                        	lea rax, [rsp + 4]
0x15338:    48 85 ff                              	test rdi, rdi
0x1533b:    48 0f 44 d8                           	cmove rbx, rax
0x1533f:    48 89 df                              	mov rdi, rbx
0x15342:    e8 49 e6 fe ff                        	call 0x3990 <mbrtowc>
0x15347:    48 83 f8 fd                           	cmp rax, -3
0x1534b:    48 89 c5                              	mov rbp, rax
0x1534e:    76 20                                 	jbe 0x15370 <function_15310+0x60>
0x15350:    4d 85 e4                              	test r12, r12
0x15353:    74 1b                                 	je 0x15370 <function_15310+0x60>
0x15355:    31 ff                                 	xor edi, edi
0x15357:    e8 d4 84 ff ff                        	call 0xd830 <function_d830>
0x1535c:    84 c0                                 	test al, al
0x1535e:    75 10                                 	jne 0x15370 <function_15310+0x60>
0x15360:    41 0f b6 45 00                        	movzx eax, byte ptr [r13]
0x15365:    bd 01 00 00 00                        	mov ebp, 1
0x1536a:    89 03                                 	mov dword ptr [rbx], eax
0x1536c:    0f 1f 40 00                           	nop dword ptr [rax]
0x15370:    48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0x15375:    64 48 33 14 25 28 00 00 00            	xor rdx, qword ptr fs:[0x28]
0x1537e:    48 89 e8                              	mov rax, rbp
0x15381:    75 0b                                 	jne 0x1538e <function_15310+0x7e>
0x15383:    48 83 c4 18                           	add rsp, 0x18
0x15387:    5b                                    	pop rbx
0x15388:    5d                                    	pop rbp
0x15389:    41 5c                                 	pop r12
0x1538b:    41 5d                                 	pop r13
0x1538d:    c3                                    	ret 
0x1538e:    e8 dd e5 fe ff                        	call 0x3970 <__stack_chk_fail>
0x15393:    66 2e 0f 1f 84 00 00 00 00 00         	nop word ptr cs:[rax + rax]
0x1539d:    0f 1f 00                              	nop dword ptr [rax]
; function: function_153a0 at 0x153a0 -- 0x153df
0x153a0:    48 8d 35 48 5b 00 00                  	lea rsi, [rip + 0x5b48]
0x153a7:    48 83 ec 08                           	sub rsp, 8
0x153ab:    ba 05 00 00 00                        	mov edx, 5
0x153b0:    31 ff                                 	xor edi, edi
0x153b2:    e8 79 e5 fe ff                        	call 0x3930 <dcgettext>
0x153b7:    48 8b 3d 02 af 20 00                  	mov rdi, qword ptr [rip + 0x20af02]
0x153be:    48 8d 15 cb 57 00 00                  	lea rdx, [rip + 0x57cb]
0x153c5:    48 89 c1                              	mov rcx, rax
0x153c8:    be 01 00 00 00                        	mov esi, 1
0x153cd:    31 c0                                 	xor eax, eax
0x153cf:    e8 1c ea fe ff                        	call 0x3df0 <__fprintf_chk>
0x153d4:    8b 3d 1e ae 20 00                     	mov edi, dword ptr [rip + 0x20ae1e]
0x153da:    e8 f1 e9 fe ff                        	call 0x3dd0 <exit>
; data inside code section at 0x153df -- 0x153e0
0x153df:    90                                                 |.               |
; function: function_153e0 at 0x153e0 -- 0x153f6
0x153e0:    f6 47 50 01                           	test byte ptr [rdi + 0x50], 1
0x153e4:    48 8b 47 38                           	mov rax, qword ptr [rdi + 0x38]
0x153e8:    75 06                                 	jne 0x153f0 <function_153e0+0x10>
0x153ea:    48 89 f7                              	mov rdi, rsi
0x153ed:    ff e0                                 	jmp rax
; data inside code section at 0x153ef -- 0x153f0
0x153ef:    90                                                 |.               |
0x153f0:    48 8b 7f 48                           	mov rdi, qword ptr [rdi + 0x48]
0x153f4:    ff e0                                 	jmp rax
; data inside code section at 0x153f6 -- 0x15400
0x153f6:    66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_15400 at 0x15400 -- 0x15416
0x15400:    f6 47 50 01                           	test byte ptr [rdi + 0x50], 1
0x15404:    48 8b 47 40                           	mov rax, qword ptr [rdi + 0x40]
0x15408:    75 06                                 	jne 0x15410 <function_15400+0x10>
0x1540a:    48 89 f7                              	mov rdi, rsi
0x1540d:    ff e0                                 	jmp rax
; data inside code section at 0x1540f -- 0x15410
0x1540f:    90                                                 |.               |
0x15410:    48 8b 7f 48                           	mov rdi, qword ptr [rdi + 0x48]
0x15414:    ff e0                                 	jmp rax
; data inside code section at 0x15416 -- 0x15420
0x15416:    66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_15420 at 0x15420 -- 0x154a3
0x15420:    48 85 d2                              	test rdx, rdx
0x15423:    41 54                                 	push r12
0x15425:    55                                    	push rbp
0x15426:    53                                    	push rbx
0x15427:    48 89 fb                              	mov rbx, rdi
0x1542a:    74 64                                 	je 0x15490 <function_15420+0x70>
0x1542c:    4c 8d 62 ff                           	lea r12, [rdx - 1]
0x15430:    48 89 d5                              	mov rbp, rdx
0x15433:    48 85 f6                              	test rsi, rsi
0x15436:    b8 e0 0f 00 00                        	mov eax, 0xfe0
0x1543b:    4c 89 63 30                           	mov qword ptr [rbx + 0x30], r12
0x1543f:    48 0f 44 f0                           	cmove rsi, rax
0x15443:    48 89 df                              	mov rdi, rbx
0x15446:    48 89 33                              	mov qword ptr [rbx], rsi
0x15449:    e8 92 ff ff ff                        	call 0x153e0 <function_153e0>
0x1544e:    48 85 c0                              	test rax, rax
0x15451:    48 89 43 08                           	mov qword ptr [rbx + 8], rax
0x15455:    74 46                                 	je 0x1549d <function_15420+0x7d>
0x15457:    4a 8d 54 20 10                        	lea rdx, [rax + r12 + 0x10]
0x1545c:    48 f7 dd                              	neg rbp
0x1545f:    48 21 d5                              	and rbp, rdx
0x15462:    48 8b 13                              	mov rdx, qword ptr [rbx]
0x15465:    48 89 6b 10                           	mov qword ptr [rbx + 0x10], rbp
0x15469:    48 89 6b 18                           	mov qword ptr [rbx + 0x18], rbp
0x1546d:    48 01 c2                              	add rdx, rax
0x15470:    48 89 10                              	mov qword ptr [rax], rdx
0x15473:    48 89 53 20                           	mov qword ptr [rbx + 0x20], rdx
0x15477:    48 c7 40 08 00 00 00 00               	mov qword ptr [rax + 8], 0
0x1547f:    b8 01 00 00 00                        	mov eax, 1
0x15484:    80 63 50 f9                           	and byte ptr [rbx + 0x50], 0xf9
0x15488:    5b                                    	pop rbx
0x15489:    5d                                    	pop rbp
0x1548a:    41 5c                                 	pop r12
0x1548c:    c3                                    	ret 
; data inside code section at 0x1548d -- 0x15490
0x1548d:    0f 1f 00                                           |...             |
0x15490:    41 bc 0f 00 00 00                     	mov r12d, 0xf
0x15496:    bd 10 00 00 00                        	mov ebp, 0x10
0x1549b:    eb 96                                 	jmp 0x15433 <function_15420+0x13>
0x1549d:    ff 15 bd ad 20 00                     	call qword ptr [rip + 0x20adbd] <function_153a0>
; data inside code section at 0x154a3 -- 0x154b0
0x154a3:    0f 1f 00 66 2e 0f 1f 84  00 00 00 00 00            |...f.........   |
; function: _obstack_begin at 0x154b0 -- 0x154c1
0x154b0:    80 67 50 fe                           	and byte ptr [rdi + 0x50], 0xfe
0x154b4:    48 89 4f 38                           	mov qword ptr [rdi + 0x38], rcx
0x154b8:    4c 89 47 40                           	mov qword ptr [rdi + 0x40], r8
0x154bc:    e9 5f ff ff ff                        	jmp 0x15420 <function_15420>
; data inside code section at 0x154c1 -- 0x154d0
0x154c1:    0f 1f 44 00 00 66 2e 0f  1f 84 00 00 00 00 00      |..D..f......... |
; function: _obstack_begin_1 at 0x154d0 -- 0x154e5
0x154d0:    80 4f 50 01                           	or byte ptr [rdi + 0x50], 1
0x154d4:    48 89 4f 38                           	mov qword ptr [rdi + 0x38], rcx
0x154d8:    4c 89 47 40                           	mov qword ptr [rdi + 0x40], r8
0x154dc:    4c 89 4f 48                           	mov qword ptr [rdi + 0x48], r9
0x154e0:    e9 3b ff ff ff                        	jmp 0x15420 <function_15420>
; data inside code section at 0x154e5 -- 0x154f0
0x154e5:    90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: _obstack_newchunk at 0x154f0 -- 0x155db
0x154f0:    41 56                                 	push r14
0x154f2:    41 55                                 	push r13
0x154f4:    31 d2                                 	xor edx, edx
0x154f6:    41 54                                 	push r12
0x154f8:    55                                    	push rbp
0x154f9:    53                                    	push rbx
0x154fa:    48 8b 5f 18                           	mov rbx, qword ptr [rdi + 0x18]
0x154fe:    48 2b 5f 10                           	sub rbx, qword ptr [rdi + 0x10]
0x15502:    48 8b 6f 08                           	mov rbp, qword ptr [rdi + 8]
0x15506:    48 01 de                              	add rsi, rbx
0x15509:    48 89 d9                              	mov rcx, rbx
0x1550c:    0f 92 c2                              	setb dl
0x1550f:    48 03 77 30                           	add rsi, qword ptr [rdi + 0x30]
0x15513:    0f 92 c0                              	setb al
0x15516:    48 c1 e9 03                           	shr rcx, 3
0x1551a:    48 39 37                              	cmp qword ptr [rdi], rsi
0x1551d:    4c 8d 64 0e 64                        	lea r12, [rsi + rcx + 0x64]
0x15522:    48 0f 43 37                           	cmovae rsi, qword ptr [rdi]
0x15526:    4c 39 e6                              	cmp rsi, r12
0x15529:    4c 0f 43 e6                           	cmovae r12, rsi
0x1552d:    48 85 d2                              	test rdx, rdx
0x15530:    0f 85 9f 00 00 00                     	jne 0x155d5 <_obstack_newchunk+0xe5>
0x15536:    0f b6 c0                              	movzx eax, al
0x15539:    48 85 c0                              	test rax, rax
0x1553c:    0f 85 93 00 00 00                     	jne 0x155d5 <_obstack_newchunk+0xe5>
0x15542:    4c 89 e6                              	mov rsi, r12
0x15545:    49 89 fd                              	mov r13, rdi
0x15548:    e8 93 fe ff ff                        	call 0x153e0 <function_153e0>
0x1554d:    48 85 c0                              	test rax, rax
0x15550:    49 89 c6                              	mov r14, rax
0x15553:    0f 84 7c 00 00 00                     	je 0x155d5 <_obstack_newchunk+0xe5>
0x15559:    4a 8d 34 20                           	lea rsi, [rax + r12]
0x1555d:    49 89 45 08                           	mov qword ptr [r13 + 8], rax
0x15561:    48 89 68 08                           	mov qword ptr [rax + 8], rbp
0x15565:    48 89 da                              	mov rdx, rbx
0x15568:    49 89 75 20                           	mov qword ptr [r13 + 0x20], rsi
0x1556c:    48 89 30                              	mov qword ptr [rax], rsi
0x1556f:    49 8b 45 30                           	mov rax, qword ptr [r13 + 0x30]
0x15573:    49 8b 75 10                           	mov rsi, qword ptr [r13 + 0x10]
0x15577:    4d 8d 64 06 10                        	lea r12, [r14 + rax + 0x10]
0x1557c:    48 f7 d0                              	not rax
0x1557f:    49 21 c4                              	and r12, rax
0x15582:    4c 89 e7                              	mov rdi, r12
0x15585:    e8 f6 e5 fe ff                        	call 0x3b80 <memcpy>
0x1558a:    41 f6 45 50 02                        	test byte ptr [r13 + 0x50], 2
0x1558f:    75 15                                 	jne 0x155a6 <_obstack_newchunk+0xb6>
0x15591:    49 8b 45 30                           	mov rax, qword ptr [r13 + 0x30]
0x15595:    48 8d 54 05 10                        	lea rdx, [rbp + rax + 0x10]
0x1559a:    48 f7 d0                              	not rax
0x1559d:    48 21 d0                              	and rax, rdx
0x155a0:    49 39 45 10                           	cmp qword ptr [r13 + 0x10], rax
0x155a4:    74 1a                                 	je 0x155c0 <_obstack_newchunk+0xd0>
0x155a6:    41 80 65 50 fd                        	and byte ptr [r13 + 0x50], 0xfd
0x155ab:    4c 01 e3                              	add rbx, r12
0x155ae:    4d 89 65 10                           	mov qword ptr [r13 + 0x10], r12
0x155b2:    49 89 5d 18                           	mov qword ptr [r13 + 0x18], rbx
0x155b6:    5b                                    	pop rbx
0x155b7:    5d                                    	pop rbp
0x155b8:    41 5c                                 	pop r12
0x155ba:    41 5d                                 	pop r13
0x155bc:    41 5e                                 	pop r14
0x155be:    c3                                    	ret 
; data inside code section at 0x155bf -- 0x155c0
0x155bf:    90                                                 |.               |
0x155c0:    48 8b 45 08                           	mov rax, qword ptr [rbp + 8]
0x155c4:    48 89 ee                              	mov rsi, rbp
0x155c7:    4c 89 ef                              	mov rdi, r13
0x155ca:    49 89 46 08                           	mov qword ptr [r14 + 8], rax
0x155ce:    e8 2d fe ff ff                        	call 0x15400 <function_15400>
0x155d3:    eb d1                                 	jmp 0x155a6 <_obstack_newchunk+0xb6>
0x155d5:    ff 15 85 ac 20 00                     	call qword ptr [rip + 0x20ac85] <function_153a0>
; data inside code section at 0x155db -- 0x155e0
0x155db:    0f 1f 44 00 00                                     |..D..           |
; function: _obstack_allocated_p at 0x155e0 -- 0x15618
0x155e0:    48 8b 47 08                           	mov rax, qword ptr [rdi + 8]
0x155e4:    48 85 c0                              	test rax, rax
0x155e7:    74 2d                                 	je 0x15616 <_obstack_allocated_p+0x36>
0x155e9:    0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0x155f0:    48 39 c6                              	cmp rsi, rax
0x155f3:    76 05                                 	jbe 0x155fa <_obstack_allocated_p+0x1a>
0x155f5:    48 39 30                              	cmp qword ptr [rax], rsi
0x155f8:    73 16                                 	jae 0x15610 <_obstack_allocated_p+0x30>
0x155fa:    48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0x155fe:    48 85 c0                              	test rax, rax
0x15601:    75 ed                                 	jne 0x155f0 <_obstack_allocated_p+0x10>
0x15603:    31 c0                                 	xor eax, eax
0x15605:    c3                                    	ret 
; data inside code section at 0x15606 -- 0x15610
0x15606:    66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x15610:    b8 01 00 00 00                        	mov eax, 1
0x15615:    c3                                    	ret 
0x15616:    f3 c3                                 	ret 
; data inside code section at 0x15618 -- 0x15620
0x15618:    0f 1f 84 00 00 00 00 00                            |........        |
; function: _obstack_free at 0x15620 -- 0x1568a
0x15620:    41 54                                 	push r12
0x15622:    55                                    	push rbp
0x15623:    48 89 f5                              	mov rbp, rsi
0x15626:    53                                    	push rbx
0x15627:    48 8b 77 08                           	mov rsi, qword ptr [rdi + 8]
0x1562b:    48 89 fb                              	mov rbx, rdi
0x1562e:    48 85 f6                              	test rsi, rsi
0x15631:    74 2a                                 	je 0x1565d <_obstack_free+0x3d>
0x15633:    0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0x15638:    48 39 ee                              	cmp rsi, rbp
0x1563b:    73 08                                 	jae 0x15645 <_obstack_free+0x25>
0x1563d:    48 8b 06                              	mov rax, qword ptr [rsi]
0x15640:    48 39 e8                              	cmp rax, rbp
0x15643:    73 2b                                 	jae 0x15670 <_obstack_free+0x50>
0x15645:    4c 8b 66 08                           	mov r12, qword ptr [rsi + 8]
0x15649:    48 89 df                              	mov rdi, rbx
0x1564c:    e8 af fd ff ff                        	call 0x15400 <function_15400>
0x15651:    80 4b 50 02                           	or byte ptr [rbx + 0x50], 2
0x15655:    4d 85 e4                              	test r12, r12
0x15658:    4c 89 e6                              	mov rsi, r12
0x1565b:    75 db                                 	jne 0x15638 <_obstack_free+0x18>
0x1565d:    48 85 ed                              	test rbp, rbp
0x15660:    75 23                                 	jne 0x15685 <_obstack_free+0x65>
0x15662:    5b                                    	pop rbx
0x15663:    5d                                    	pop rbp
0x15664:    41 5c                                 	pop r12
0x15666:    c3                                    	ret 
; data inside code section at 0x15667 -- 0x15670
0x15667:    66 0f 1f 84 00 00 00 00  00                        |f........       |
0x15670:    48 89 6b 18                           	mov qword ptr [rbx + 0x18], rbp
0x15674:    48 89 6b 10                           	mov qword ptr [rbx + 0x10], rbp
0x15678:    48 89 43 20                           	mov qword ptr [rbx + 0x20], rax
0x1567c:    48 89 73 08                           	mov qword ptr [rbx + 8], rsi
0x15680:    5b                                    	pop rbx
0x15681:    5d                                    	pop rbp
0x15682:    41 5c                                 	pop r12
0x15684:    c3                                    	ret 
0x15685:    e8 56 e1 fe ff                        	call 0x37e0 <abort>
; data inside code section at 0x1568a -- 0x15690
0x1568a:    66 0f 1f 44 00 00                                  |f..D..          |
; function: _obstack_memory_used at 0x15690 -- 0x156ba
0x15690:    48 8b 57 08                           	mov rdx, qword ptr [rdi + 8]
0x15694:    31 c0                                 	xor eax, eax
0x15696:    48 85 d2                              	test rdx, rdx
0x15699:    74 1d                                 	je 0x156b8 <_obstack_memory_used+0x28>
0x1569b:    0f 1f 44 00 00                        	nop dword ptr [rax + rax]
0x156a0:    48 8b 0a                              	mov rcx, qword ptr [rdx]
0x156a3:    48 29 d1                              	sub rcx, rdx
0x156a6:    48 8b 52 08                           	mov rdx, qword ptr [rdx + 8]
0x156aa:    48 01 c8                              	add rax, rcx
0x156ad:    48 85 d2                              	test rdx, rdx
0x156b0:    75 ee                                 	jne 0x156a0 <_obstack_memory_used+0x10>
0x156b2:    f3 c3                                 	ret 
; data inside code section at 0x156b4 -- 0x156b8
0x156b4:    0f 1f 40 00                                        |..@.            |
0x156b8:    f3 c3                                 	ret 
; data inside code section at 0x156ba -- 0x156c0
0x156ba:    66 0f 1f 44 00 00                                  |f..D..          |
; function: function_156c0 at 0x156c0 -- 0x156ec
0x156c0:    48 85 ff                              	test rdi, rdi
0x156c3:    74 1b                                 	je 0x156e0 <function_156c0+0x20>
0x156c5:    48 89 fe                              	mov rsi, rdi
0x156c8:    48 8d 3d 6d 28 00 00                  	lea rdi, [rip + 0x286d]
0x156cf:    ba 01 00 00 00                        	mov edx, 1
0x156d4:    e9 f7 e1 fe ff                        	jmp 0x38d0 <setenv>
; data inside code section at 0x156d9 -- 0x156e0
0x156d9:    0f 1f 80 00 00 00 00                               |.......         |
0x156e0:    48 8d 3d 55 28 00 00                  	lea rdi, [rip + 0x2855]
0x156e7:    e9 64 e6 fe ff                        	jmp 0x3d50 <unsetenv>
; data inside code section at 0x156ec -- 0x156f0
0x156ec:    0f 1f 40 00                                        |..@.            |
; function: function_156f0 at 0x156f0 -- 0x1571a
0x156f0:    48 85 ff                              	test rdi, rdi
0x156f3:    74 23                                 	je 0x15718 <function_156f0+0x28>
0x156f5:    53                                    	push rbx
0x156f6:    66 2e 0f 1f 84 00 00 00 00 00         	nop word ptr cs:[rax + rax]
0x15700:    48 8b 1f                              	mov rbx, qword ptr [rdi]
0x15703:    e8 68 e7 fe ff                        	call 0x3e70 <free>
0x15708:    48 85 db                              	test rbx, rbx
0x1570b:    48 89 df                              	mov rdi, rbx
0x1570e:    75 f0                                 	jne 0x15700 <function_156f0+0x10>
0x15710:    5b                                    	pop rbx
0x15711:    c3                                    	ret 
; data inside code section at 0x15712 -- 0x15718
0x15712:    66 0f 1f 44 00 00                                  |f..D..          |
0x15718:    f3 c3                                 	ret 
; data inside code section at 0x1571a -- 0x15720
0x1571a:    66 0f 1f 44 00 00                                  |f..D..          |
; function: function_15720 at 0x15720 -- 0x1577d
0x15720:    41 55                                 	push r13
0x15722:    41 54                                 	push r12
0x15724:    55                                    	push rbp
0x15725:    53                                    	push rbx
0x15726:    48 89 fd                              	mov rbp, rdi
0x15729:    48 83 ec 08                           	sub rsp, 8
0x1572d:    e8 be e0 fe ff                        	call 0x37f0 <__errno_location>
0x15732:    80 7d 08 00                           	cmp byte ptr [rbp + 8], 0
0x15736:    48 89 c3                              	mov rbx, rax
0x15739:    44 8b 20                              	mov r12d, dword ptr [rax]
0x1573c:    48 8d 7d 09                           	lea rdi, [rbp + 9]
0x15740:    75 02                                 	jne 0x15744 <function_15720+0x24>
0x15742:    31 ff                                 	xor edi, edi
0x15744:    e8 77 ff ff ff                        	call 0x156c0 <function_156c0>
0x15749:    85 c0                                 	test eax, eax
0x1574b:    74 23                                 	je 0x15770 <function_15720+0x50>
0x1574d:    44 8b 23                              	mov r12d, dword ptr [rbx]
0x15750:    45 31 ed                              	xor r13d, r13d
0x15753:    48 89 ef                              	mov rdi, rbp
0x15756:    e8 95 ff ff ff                        	call 0x156f0 <function_156f0>
0x1575b:    44 89 23                              	mov dword ptr [rbx], r12d
0x1575e:    48 83 c4 08                           	add rsp, 8
0x15762:    44 89 e8                              	mov eax, r13d
0x15765:    5b                                    	pop rbx
0x15766:    5d                                    	pop rbp
0x15767:    41 5c                                 	pop r12
0x15769:    41 5d                                 	pop r13
0x1576b:    c3                                    	ret 
; data inside code section at 0x1576c -- 0x15770
0x1576c:    0f 1f 40 00                                        |..@.            |
0x15770:    e8 3b e4 fe ff                        	call 0x3bb0 <tzset>
0x15775:    41 bd 01 00 00 00                     	mov r13d, 1
0x1577b:    eb d6                                 	jmp 0x15753 <function_15720+0x33>
; data inside code section at 0x1577d -- 0x15780
0x1577d:    0f 1f 00                                           |...             |
; function: function_15780 at 0x15780 -- 0x1580f
0x15780:    48 85 ff                              	test rdi, rdi
0x15783:    41 54                                 	push r12
0x15785:    55                                    	push rbp
0x15786:    53                                    	push rbx
0x15787:    74 5f                                 	je 0x157e8 <function_15780+0x68>
0x15789:    49 89 fc                              	mov r12, rdi
0x1578c:    e8 bf e1 fe ff                        	call 0x3950 <strlen>
0x15791:    48 8d 68 01                           	lea rbp, [rax + 1]
0x15795:    bf 76 00 00 00                        	mov edi, 0x76
0x1579a:    48 83 fd 76                           	cmp rbp, 0x76
0x1579e:    48 0f 43 fd                           	cmovae rdi, rbp
0x157a2:    48 83 c7 11                           	add rdi, 0x11
0x157a6:    48 83 e7 f8                           	and rdi, 0xfffffffffffffff8
0x157aa:    e8 c9 e6 fe ff                        	call 0x3e78 <malloc>
0x157af:    48 85 c0                              	test rax, rax
0x157b2:    48 89 c3                              	mov rbx, rax
0x157b5:    74 24                                 	je 0x157db <function_15780+0x5b>
0x157b7:    48 c7 00 00 00 00 00                  	mov qword ptr [rax], 0
0x157be:    48 8d 7b 09                           	lea rdi, [rbx + 9]
0x157c2:    b8 01 00 00 00                        	mov eax, 1
0x157c7:    66 89 43 08                           	mov word ptr [rbx + 8], ax
0x157cb:    48 89 ea                              	mov rdx, rbp
0x157ce:    4c 89 e6                              	mov rsi, r12
0x157d1:    e8 aa e3 fe ff                        	call 0x3b80 <memcpy>
0x157d6:    c6 44 2b 09 00                        	mov byte ptr [rbx + rbp + 9], 0
0x157db:    48 89 d8                              	mov rax, rbx
0x157de:    5b                                    	pop rbx
0x157df:    5d                                    	pop rbp
0x157e0:    41 5c                                 	pop r12
0x157e2:    c3                                    	ret 
; data inside code section at 0x157e3 -- 0x157e8
0x157e3:    0f 1f 44 00 00                                     |..D..           |
0x157e8:    bf 80 00 00 00                        	mov edi, 0x80
0x157ed:    e8 86 e6 fe ff                        	call 0x3e78 <malloc>
0x157f2:    48 85 c0                              	test rax, rax
0x157f5:    48 89 c3                              	mov rbx, rax
0x157f8:    74 e1                                 	je 0x157db <function_15780+0x5b>
0x157fa:    31 d2                                 	xor edx, edx
0x157fc:    48 c7 03 00 00 00 00                  	mov qword ptr [rbx], 0
0x15803:    48 89 d8                              	mov rax, rbx
0x15806:    66 89 53 08                           	mov word ptr [rbx + 8], dx
0x1580a:    5b                                    	pop rbx
0x1580b:    5d                                    	pop rbp
0x1580c:    41 5c                                 	pop r12
0x1580e:    c3                                    	ret 
; data inside code section at 0x1580f -- 0x15810
0x1580f:    90                                                 |.               |
; function: function_15810 at 0x15810 -- 0x15946
0x15810:    41 57                                 	push r15
0x15812:    41 56                                 	push r14
0x15814:    b8 01 00 00 00                        	mov eax, 1
0x15819:    41 55                                 	push r13
0x1581b:    41 54                                 	push r12
0x1581d:    55                                    	push rbp
0x1581e:    53                                    	push rbx
0x1581f:    48 83 ec 08                           	sub rsp, 8
0x15823:    48 8b 6e 30                           	mov rbp, qword ptr [rsi + 0x30]
0x15827:    48 85 ed                              	test rbp, rbp
0x1582a:    0f 84 90 00 00 00                     	je 0x158c0 <function_15810+0xb0>
0x15830:    48 39 ee                              	cmp rsi, rbp
0x15833:    49 89 fc                              	mov r12, rdi
0x15836:    49 89 f5                              	mov r13, rsi
0x15839:    77 09                                 	ja 0x15844 <function_15810+0x34>
0x1583b:    48 8d 56 38                           	lea rdx, [rsi + 0x38]
0x1583f:    48 39 d5                              	cmp rbp, rdx
0x15842:    72 7c                                 	jb 0x158c0 <function_15810+0xb0>
0x15844:    80 7d 00 00                           	cmp byte ptr [rbp], 0
0x15848:    49 8d 5c 24 09                        	lea rbx, [r12 + 9]
0x1584d:    74 61                                 	je 0x158b0 <function_15810+0xa0>
0x1584f:    90                                    	nop 
0x15850:    48 89 ee                              	mov rsi, rbp
0x15853:    48 89 df                              	mov rdi, rbx
0x15856:    e8 c5 e2 fe ff                        	call 0x3b20 <strcmp>
0x1585b:    85 c0                                 	test eax, eax
0x1585d:    74 58                                 	je 0x158b7 <function_15810+0xa7>
0x1585f:    80 3b 00                              	cmp byte ptr [rbx], 0
0x15862:    75 12                                 	jne 0x15876 <function_15810+0x66>
0x15864:    4d 8d 74 24 09                        	lea r14, [r12 + 9]
0x15869:    49 39 de                              	cmp r14, rbx
0x1586c:    75 62                                 	jne 0x158d0 <function_15810+0xc0>
0x1586e:    41 80 7c 24 08 00                     	cmp byte ptr [r12 + 8], 0
0x15874:    74 5a                                 	je 0x158d0 <function_15810+0xc0>
0x15876:    48 89 df                              	mov rdi, rbx
0x15879:    e8 d2 e0 fe ff                        	call 0x3950 <strlen>
0x1587e:    48 8d 5c 03 01                        	lea rbx, [rbx + rax + 1]
0x15883:    80 3b 00                              	cmp byte ptr [rbx], 0
0x15886:    75 c8                                 	jne 0x15850 <function_15810+0x40>
0x15888:    49 8b 04 24                           	mov rax, qword ptr [r12]
0x1588c:    48 85 c0                              	test rax, rax
0x1588f:    74 bf                                 	je 0x15850 <function_15810+0x40>
0x15891:    48 8d 58 09                           	lea rbx, [rax + 9]
0x15895:    48 89 ee                              	mov rsi, rbp
0x15898:    49 89 c4                              	mov r12, rax
0x1589b:    48 89 df                              	mov rdi, rbx
0x1589e:    e8 7d e2 fe ff                        	call 0x3b20 <strcmp>
0x158a3:    85 c0                                 	test eax, eax
0x158a5:    75 b8                                 	jne 0x1585f <function_15810+0x4f>
0x158a7:    eb 0e                                 	jmp 0x158b7 <function_15810+0xa7>
; data inside code section at 0x158a9 -- 0x158b0
0x158a9:    0f 1f 80 00 00 00 00                               |.......         |
0x158b0:    48 8d 1d 93 23 00 00                  	lea rbx, [rip + 0x2393]
0x158b7:    49 89 5d 30                           	mov qword ptr [r13 + 0x30], rbx
0x158bb:    b8 01 00 00 00                        	mov eax, 1
0x158c0:    48 83 c4 08                           	add rsp, 8
0x158c4:    5b                                    	pop rbx
0x158c5:    5d                                    	pop rbp
0x158c6:    41 5c                                 	pop r12
0x158c8:    41 5d                                 	pop r13
0x158ca:    41 5e                                 	pop r14
0x158cc:    41 5f                                 	pop r15
0x158ce:    c3                                    	ret 
; data inside code section at 0x158cf -- 0x158d0
0x158cf:    90                                                 |.               |
0x158d0:    48 89 ef                              	mov rdi, rbp
0x158d3:    e8 78 e0 fe ff                        	call 0x3950 <strlen>
0x158d8:    48 8d 50 01                           	lea rdx, [rax + 1]
0x158dc:    49 89 c7                              	mov r15, rax
0x158df:    48 89 d8                              	mov rax, rbx
0x158e2:    4c 29 f0                              	sub rax, r14
0x158e5:    48 89 c1                              	mov rcx, rax
0x158e8:    48 f7 d1                              	not rcx
0x158eb:    48 39 d1                              	cmp rcx, rdx
0x158ee:    72 30                                 	jb 0x15920 <function_15810+0x110>
0x158f0:    48 01 d0                              	add rax, rdx
0x158f3:    48 83 f8 76                           	cmp rax, 0x76
0x158f7:    76 37                                 	jbe 0x15930 <function_15810+0x120>
0x158f9:    48 89 ef                              	mov rdi, rbp
0x158fc:    e8 7f fe ff ff                        	call 0x15780 <function_15780>
0x15901:    48 89 c3                              	mov rbx, rax
0x15904:    49 89 04 24                           	mov qword ptr [r12], rax
0x15908:    31 c0                                 	xor eax, eax
0x1590a:    48 85 db                              	test rbx, rbx
0x1590d:    74 b1                                 	je 0x158c0 <function_15810+0xb0>
0x1590f:    c6 43 08 00                           	mov byte ptr [rbx + 8], 0
0x15913:    48 83 c3 09                           	add rbx, 9
0x15917:    eb 9e                                 	jmp 0x158b7 <function_15810+0xa7>
; data inside code section at 0x15919 -- 0x15920
0x15919:    0f 1f 80 00 00 00 00                               |.......         |
0x15920:    e8 cb de fe ff                        	call 0x37f0 <__errno_location>
0x15925:    c7 00 0c 00 00 00                     	mov dword ptr [rax], 0xc
0x1592b:    31 c0                                 	xor eax, eax
0x1592d:    eb 91                                 	jmp 0x158c0 <function_15810+0xb0>
; data inside code section at 0x1592f -- 0x15930
0x1592f:    90                                                 |.               |
0x15930:    48 89 ee                              	mov rsi, rbp
0x15933:    48 89 df                              	mov rdi, rbx
0x15936:    e8 45 e2 fe ff                        	call 0x3b80 <memcpy>
0x1593b:    42 c6 44 3b 01 00                     	mov byte ptr [rbx + r15 + 1], 0
0x15941:    e9 71 ff ff ff                        	jmp 0x158b7 <function_15810+0xa7>
; data inside code section at 0x15946 -- 0x15950
0x15946:    66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_15950 at 0x15950 -- 0x15a2f
0x15950:    41 54                                 	push r12
0x15952:    55                                    	push rbp
0x15953:    48 89 fd                              	mov rbp, rdi
0x15956:    53                                    	push rbx
0x15957:    48 8d 3d de 25 00 00                  	lea rdi, [rip + 0x25de]
0x1595e:    48 83 ec 10                           	sub rsp, 0x10
0x15962:    e8 39 de fe ff                        	call 0x37a0 <getenv>
0x15967:    48 85 c0                              	test rax, rax
0x1596a:    48 89 c3                              	mov rbx, rax
0x1596d:    0f 84 95 00 00 00                     	je 0x15a08 <function_15950+0xb8>
0x15973:    80 7d 08 00                           	cmp byte ptr [rbp + 8], 0
0x15977:    75 67                                 	jne 0x159e0 <function_15950+0x90>
0x15979:    48 89 df                              	mov rdi, rbx
0x1597c:    e8 ff fd ff ff                        	call 0x15780 <function_15780>
0x15981:    48 85 c0                              	test rax, rax
0x15984:    49 89 c4                              	mov r12, rax
0x15987:    74 44                                 	je 0x159cd <function_15950+0x7d>
0x15989:    31 ff                                 	xor edi, edi
0x1598b:    80 7d 08 00                           	cmp byte ptr [rbp + 8], 0
0x1598f:    74 04                                 	je 0x15995 <function_15950+0x45>
0x15991:    48 8d 7d 09                           	lea rdi, [rbp + 9]
0x15995:    e8 26 fd ff ff                        	call 0x156c0 <function_156c0>
0x1599a:    85 c0                                 	test eax, eax
0x1599c:    0f 84 86 00 00 00                     	je 0x15a28 <function_15950+0xd8>
0x159a2:    e8 49 de fe ff                        	call 0x37f0 <__errno_location>
0x159a7:    49 83 fc 01                           	cmp r12, 1
0x159ab:    8b 18                                 	mov ebx, dword ptr [rax]
0x159ad:    74 19                                 	je 0x159c8 <function_15950+0x78>
0x159af:    4c 89 e7                              	mov rdi, r12
0x159b2:    48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x159b7:    e8 34 fd ff ff                        	call 0x156f0 <function_156f0>
0x159bc:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x159c1:    0f 1f 80 00 00 00 00                  	nop dword ptr [rax]
0x159c8:    89 18                                 	mov dword ptr [rax], ebx
0x159ca:    45 31 e4                              	xor r12d, r12d
0x159cd:    48 83 c4 10                           	add rsp, 0x10
0x159d1:    4c 89 e0                              	mov rax, r12
0x159d4:    5b                                    	pop rbx
0x159d5:    5d                                    	pop rbp
0x159d6:    41 5c                                 	pop r12
0x159d8:    c3                                    	ret 
; data inside code section at 0x159d9 -- 0x159e0
0x159d9:    0f 1f 80 00 00 00 00                               |.......         |
0x159e0:    48 8d 7d 09                           	lea rdi, [rbp + 9]
0x159e4:    48 89 c6                              	mov rsi, rax
0x159e7:    41 bc 01 00 00 00                     	mov r12d, 1
0x159ed:    e8 2e e1 fe ff                        	call 0x3b20 <strcmp>
0x159f2:    85 c0                                 	test eax, eax
0x159f4:    75 83                                 	jne 0x15979 <function_15950+0x29>
0x159f6:    48 83 c4 10                           	add rsp, 0x10
0x159fa:    4c 89 e0                              	mov rax, r12
0x159fd:    5b                                    	pop rbx
0x159fe:    5d                                    	pop rbp
0x159ff:    41 5c                                 	pop r12
0x15a01:    c3                                    	ret 
; data inside code section at 0x15a02 -- 0x15a08
0x15a02:    66 0f 1f 44 00 00                                  |f..D..          |
0x15a08:    80 7d 08 00                           	cmp byte ptr [rbp + 8], 0
0x15a0c:    41 bc 01 00 00 00                     	mov r12d, 1
0x15a12:    0f 85 61 ff ff ff                     	jne 0x15979 <function_15950+0x29>
0x15a18:    48 83 c4 10                           	add rsp, 0x10
0x15a1c:    4c 89 e0                              	mov rax, r12
0x15a1f:    5b                                    	pop rbx
0x15a20:    5d                                    	pop rbp
0x15a21:    41 5c                                 	pop r12
0x15a23:    c3                                    	ret 
; data inside code section at 0x15a24 -- 0x15a28
0x15a24:    0f 1f 40 00                                        |..@.            |
0x15a28:    e8 83 e1 fe ff                        	call 0x3bb0 <tzset>
0x15a2d:    eb 9e                                 	jmp 0x159cd <function_15950+0x7d>
; data inside code section at 0x15a2f -- 0x15a30
0x15a2f:    90                                                 |.               |
; function: function_15a30 at 0x15a30 -- 0x15a3c
0x15a30:    48 83 ff 01                           	cmp rdi, 1
0x15a34:    74 05                                 	je 0x15a3b <function_15a30+0xb>
0x15a36:    e9 b5 fc ff ff                        	jmp 0x156f0 <function_156f0>
0x15a3b:    c3                                    	ret 
; data inside code section at 0x15a3c -- 0x15a40
0x15a3c:    0f 1f 40 00                                        |..@.            |
; function: function_15a40 at 0x15a40 -- 0x15ae3
0x15a40:    41 55                                 	push r13
0x15a42:    41 54                                 	push r12
0x15a44:    55                                    	push rbp
0x15a45:    53                                    	push rbx
0x15a46:    48 89 f5                              	mov rbp, rsi
0x15a49:    48 83 ec 08                           	sub rsp, 8
0x15a4d:    48 85 ff                              	test rdi, rdi
0x15a50:    74 6e                                 	je 0x15ac0 <function_15a40+0x80>
0x15a52:    49 89 d5                              	mov r13, rdx
0x15a55:    48 89 fb                              	mov rbx, rdi
0x15a58:    e8 f3 fe ff ff                        	call 0x15950 <function_15950>
0x15a5d:    48 85 c0                              	test rax, rax
0x15a60:    49 89 c4                              	mov r12, rax
0x15a63:    74 49                                 	je 0x15aae <function_15a40+0x6e>
0x15a65:    4c 89 ee                              	mov rsi, r13
0x15a68:    48 89 ef                              	mov rdi, rbp
0x15a6b:    e8 a0 dd fe ff                        	call 0x3810 <localtime_r>
0x15a70:    48 85 c0                              	test rax, rax
0x15a73:    74 2b                                 	je 0x15aa0 <function_15a40+0x60>
0x15a75:    4c 89 ee                              	mov rsi, r13
0x15a78:    48 89 df                              	mov rdi, rbx
0x15a7b:    e8 90 fd ff ff                        	call 0x15810 <function_15810>
0x15a80:    84 c0                                 	test al, al
0x15a82:    74 1c                                 	je 0x15aa0 <function_15a40+0x60>
0x15a84:    49 83 fc 01                           	cmp r12, 1
0x15a88:    75 4b                                 	jne 0x15ad5 <function_15a40+0x95>
0x15a8a:    48 83 c4 08                           	add rsp, 8
0x15a8e:    4c 89 e8                              	mov rax, r13
0x15a91:    5b                                    	pop rbx
0x15a92:    5d                                    	pop rbp
0x15a93:    41 5c                                 	pop r12
0x15a95:    41 5d                                 	pop r13
0x15a97:    c3                                    	ret 
; data inside code section at 0x15a98 -- 0x15aa0
0x15a98:    0f 1f 84 00 00 00 00 00                            |........        |
0x15aa0:    49 83 fc 01                           	cmp r12, 1
0x15aa4:    74 08                                 	je 0x15aae <function_15a40+0x6e>
0x15aa6:    4c 89 e7                              	mov rdi, r12
0x15aa9:    e8 72 fc ff ff                        	call 0x15720 <function_15720>
0x15aae:    48 83 c4 08                           	add rsp, 8
0x15ab2:    31 c0                                 	xor eax, eax
0x15ab4:    5b                                    	pop rbx
0x15ab5:    5d                                    	pop rbp
0x15ab6:    41 5c                                 	pop r12
0x15ab8:    41 5d                                 	pop r13
0x15aba:    c3                                    	ret 
; data inside code section at 0x15abb -- 0x15ac0
0x15abb:    0f 1f 44 00 00                                     |..D..           |
0x15ac0:    48 83 c4 08                           	add rsp, 8
0x15ac4:    48 89 ef                              	mov rdi, rbp
0x15ac7:    48 89 d6                              	mov rsi, rdx
0x15aca:    5b                                    	pop rbx
0x15acb:    5d                                    	pop rbp
0x15acc:    41 5c                                 	pop r12
0x15ace:    41 5d                                 	pop r13
0x15ad0:    e9 2b df fe ff                        	jmp 0x3a00 <gmtime_r>
0x15ad5:    4c 89 e7                              	mov rdi, r12
0x15ad8:    e8 43 fc ff ff                        	call 0x15720 <function_15720>
0x15add:    84 c0                                 	test al, al
0x15adf:    75 a9                                 	jne 0x15a8a <function_15a40+0x4a>
0x15ae1:    eb cb                                 	jmp 0x15aae <function_15a40+0x6e>
; data inside code section at 0x15ae3 -- 0x15af0
0x15ae3:    0f 1f 00 66 2e 0f 1f 84  00 00 00 00 00            |...f.........   |
; function: function_15af0 at 0x15af0 -- 0x15c40
0x15af0:    41 54                                 	push r12
0x15af2:    55                                    	push rbp
0x15af3:    53                                    	push rbx
0x15af4:    48 89 f3                              	mov rbx, rsi
0x15af7:    48 83 ec 50                           	sub rsp, 0x50
0x15afb:    64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x15b04:    48 89 44 24 48                        	mov qword ptr [rsp + 0x48], rax
0x15b09:    31 c0                                 	xor eax, eax
0x15b0b:    48 85 ff                              	test rdi, rdi
0x15b0e:    0f 84 fc 00 00 00                     	je 0x15c10 <function_15af0+0x120>
0x15b14:    48 89 fd                              	mov rbp, rdi
0x15b17:    e8 34 fe ff ff                        	call 0x15950 <function_15950>
0x15b1c:    48 85 c0                              	test rax, rax
0x15b1f:    49 89 c4                              	mov r12, rax
0x15b22:    0f 84 f8 00 00 00                     	je 0x15c20 <function_15af0+0x130>
0x15b28:    48 89 df                              	mov rdi, rbx
0x15b2b:    e8 30 e1 fe ff                        	call 0x3c60 <mktime>
0x15b30:    48 83 f8 ff                           	cmp rax, -1
0x15b34:    48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x15b39:    74 55                                 	je 0x15b90 <function_15af0+0xa0>
0x15b3b:    48 89 de                              	mov rsi, rbx
0x15b3e:    48 89 ef                              	mov rdi, rbp
0x15b41:    e8 ca fc ff ff                        	call 0x15810 <function_15810>
0x15b46:    84 c0                                 	test al, al
0x15b48:    75 09                                 	jne 0x15b53 <function_15af0+0x63>
0x15b4a:    48 c7 44 24 08 ff ff ff ff            	mov qword ptr [rsp + 8], -1
0x15b53:    49 83 fc 01                           	cmp r12, 1
0x15b57:    74 10                                 	je 0x15b69 <function_15af0+0x79>
0x15b59:    4c 89 e7                              	mov rdi, r12
0x15b5c:    e8 bf fb ff ff                        	call 0x15720 <function_15720>
0x15b61:    84 c0                                 	test al, al
0x15b63:    0f 84 b7 00 00 00                     	je 0x15c20 <function_15af0+0x130>
0x15b69:    48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x15b6e:    48 8b 4c 24 48                        	mov rcx, qword ptr [rsp + 0x48]
0x15b73:    64 48 33 0c 25 28 00 00 00            	xor rcx, qword ptr fs:[0x28]
0x15b7c:    0f 85 aa 00 00 00                     	jne 0x15c2c <function_15af0+0x13c>
0x15b82:    48 83 c4 50                           	add rsp, 0x50
0x15b86:    5b                                    	pop rbx
0x15b87:    5d                                    	pop rbp
0x15b88:    41 5c                                 	pop r12
0x15b8a:    c3                                    	ret 
; data inside code section at 0x15b8b -- 0x15b90
0x15b8b:    0f 1f 44 00 00                                     |..D..           |
0x15b90:    48 8d 74 24 10                        	lea rsi, [rsp + 0x10]
0x15b95:    48 8d 7c 24 08                        	lea rdi, [rsp + 8]
0x15b9a:    e8 71 dc fe ff                        	call 0x3810 <localtime_r>
0x15b9f:    48 85 c0                              	test rax, rax
0x15ba2:    74 af                                 	je 0x15b53 <function_15af0+0x63>
0x15ba4:    8b 03                                 	mov eax, dword ptr [rbx]
0x15ba6:    8b 53 04                              	mov edx, dword ptr [rbx + 4]
0x15ba9:    33 44 24 10                           	xor eax, dword ptr [rsp + 0x10]
0x15bad:    33 54 24 14                           	xor edx, dword ptr [rsp + 0x14]
0x15bb1:    8b 4c 24 30                           	mov ecx, dword ptr [rsp + 0x30]
0x15bb5:    09 d0                                 	or eax, edx
0x15bb7:    8b 53 08                              	mov edx, dword ptr [rbx + 8]
0x15bba:    33 54 24 18                           	xor edx, dword ptr [rsp + 0x18]
0x15bbe:    09 d0                                 	or eax, edx
0x15bc0:    8b 53 0c                              	mov edx, dword ptr [rbx + 0xc]
0x15bc3:    33 54 24 1c                           	xor edx, dword ptr [rsp + 0x1c]
0x15bc7:    09 d0                                 	or eax, edx
0x15bc9:    8b 53 10                              	mov edx, dword ptr [rbx + 0x10]
0x15bcc:    33 54 24 20                           	xor edx, dword ptr [rsp + 0x20]
0x15bd0:    09 d0                                 	or eax, edx
0x15bd2:    8b 53 14                              	mov edx, dword ptr [rbx + 0x14]
0x15bd5:    33 54 24 24                           	xor edx, dword ptr [rsp + 0x24]
0x15bd9:    09 d0                                 	or eax, edx
0x15bdb:    8b 53 20                              	mov edx, dword ptr [rbx + 0x20]
0x15bde:    85 d2                                 	test edx, edx
0x15be0:    40 0f 94 c7                           	sete dil
0x15be4:    85 c9                                 	test ecx, ecx
0x15be6:    40 0f 94 c6                           	sete sil
0x15bea:    40 38 f7                              	cmp dil, sil
0x15bed:    74 0c                                 	je 0x15bfb <function_15af0+0x10b>
0x15bef:    85 d2                                 	test edx, edx
0x15bf1:    78 08                                 	js 0x15bfb <function_15af0+0x10b>
0x15bf3:    85 c9                                 	test ecx, ecx
0x15bf5:    0f 89 58 ff ff ff                     	jns 0x15b53 <function_15af0+0x63>
0x15bfb:    85 c0                                 	test eax, eax
0x15bfd:    0f 84 38 ff ff ff                     	je 0x15b3b <function_15af0+0x4b>
0x15c03:    e9 4b ff ff ff                        	jmp 0x15b53 <function_15af0+0x63>
; data inside code section at 0x15c08 -- 0x15c10
0x15c08:    0f 1f 84 00 00 00 00 00                            |........        |
0x15c10:    48 89 f7                              	mov rdi, rsi
0x15c13:    e8 c8 e0 fe ff                        	call 0x3ce0 <timegm>
0x15c18:    e9 51 ff ff ff                        	jmp 0x15b6e <function_15af0+0x7e>
; data inside code section at 0x15c1d -- 0x15c20
0x15c1d:    0f 1f 00                                           |...             |
0x15c20:    48 c7 c0 ff ff ff ff                  	mov rax, -1
0x15c27:    e9 42 ff ff ff                        	jmp 0x15b6e <function_15af0+0x7e>
0x15c2c:    e8 3f dd fe ff                        	call 0x3970 <__stack_chk_fail>
0x15c31:    66 2e 0f 1f 84 00 00 00 00 00         	nop word ptr cs:[rax + rax]
0x15c3b:    0f 1f 44 00 00                        	nop dword ptr [rax + rax]
; function: function_15c40 at 0x15c40 -- 0x15c68
0x15c40:    83 ff 16                              	cmp edi, 0x16
0x15c43:    74 20                                 	je 0x15c65 <function_15c40+0x25>
0x15c45:    7e 19                                 	jle 0x15c60 <function_15c40+0x20>
0x15c47:    83 ff 26                              	cmp edi, 0x26
0x15c4a:    74 19                                 	je 0x15c65 <function_15c40+0x25>
0x15c4c:    83 ff 5f                              	cmp edi, 0x5f
0x15c4f:    74 14                                 	je 0x15c65 <function_15c40+0x25>
0x15c51:    b8 01 00 00 00                        	mov eax, 1
0x15c56:    c3                                    	ret 
; data inside code section at 0x15c57 -- 0x15c60
0x15c57:    66 0f 1f 84 00 00 00 00  00                        |f........       |
0x15c60:    83 ff 10                              	cmp edi, 0x10
0x15c63:    75 ec                                 	jne 0x15c51 <function_15c40+0x11>
0x15c65:    31 c0                                 	xor eax, eax
0x15c67:    c3                                    	ret 
; data inside code section at 0x15c68 -- 0x15c70
0x15c68:    0f 1f 84 00 00 00 00 00                            |........        |
; function: function_15c70 at 0x15c70 -- 0x15ced
0x15c70:    41 54                                 	push r12
0x15c72:    55                                    	push rbp
0x15c73:    48 89 fd                              	mov rbp, rdi
0x15c76:    53                                    	push rbx
0x15c77:    e8 c4 db fe ff                        	call 0x3840 <__fpending>
0x15c7c:    8b 5d 00                              	mov ebx, dword ptr [rbp]
0x15c7f:    48 89 ef                              	mov rdi, rbp
0x15c82:    49 89 c4                              	mov r12, rax
0x15c85:    e8 16 05 00 00                        	call 0x161a0 <function_161a0>
0x15c8a:    83 e3 20                              	and ebx, 0x20
0x15c8d:    85 db                                 	test ebx, ebx
0x15c8f:    75 17                                 	jne 0x15ca8 <function_15c70+0x38>
0x15c91:    85 c0                                 	test eax, eax
0x15c93:    74 0a                                 	je 0x15c9f <function_15c70+0x2f>
0x15c95:    4d 85 e4                              	test r12, r12
0x15c98:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0x15c9d:    74 39                                 	je 0x15cd8 <function_15c70+0x68>
0x15c9f:    5b                                    	pop rbx
0x15ca0:    5d                                    	pop rbp
0x15ca1:    41 5c                                 	pop r12
0x15ca3:    c3                                    	ret 
; data inside code section at 0x15ca4 -- 0x15ca8
0x15ca4:    0f 1f 40 00                                        |..@.            |
0x15ca8:    85 c0                                 	test eax, eax
0x15caa:    75 1c                                 	jne 0x15cc8 <function_15c70+0x58>
0x15cac:    e8 3f db fe ff                        	call 0x37f0 <__errno_location>
0x15cb1:    c7 00 00 00 00 00                     	mov dword ptr [rax], 0
0x15cb7:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0x15cbc:    5b                                    	pop rbx
0x15cbd:    5d                                    	pop rbp
0x15cbe:    41 5c                                 	pop r12
0x15cc0:    c3                                    	ret 
; data inside code section at 0x15cc1 -- 0x15cc8
0x15cc1:    0f 1f 80 00 00 00 00                               |.......         |
0x15cc8:    5b                                    	pop rbx
0x15cc9:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0x15cce:    5d                                    	pop rbp
0x15ccf:    41 5c                                 	pop r12
0x15cd1:    c3                                    	ret 
; data inside code section at 0x15cd2 -- 0x15cd8
0x15cd2:    66 0f 1f 44 00 00                                  |f..D..          |
0x15cd8:    e8 13 db fe ff                        	call 0x37f0 <__errno_location>
0x15cdd:    83 38 09                              	cmp dword ptr [rax], 9
0x15ce0:    5b                                    	pop rbx
0x15ce1:    5d                                    	pop rbp
0x15ce2:    41 5c                                 	pop r12
0x15ce4:    0f 95 c0                              	setne al
0x15ce7:    0f b6 c0                              	movzx eax, al
0x15cea:    f7 d8                                 	neg eax
0x15cec:    c3                                    	ret 
; data inside code section at 0x15ced -- 0x15cf0
0x15ced:    0f 1f 00                                           |...             |
; function: function_15cf0 at 0x15cf0 -- 0x15d08
0x15cf0:    48 83 ec 08                           	sub rsp, 8
0x15cf4:    e8 b7 70 ff ff                        	call 0xcdb0 <function_cdb0>
0x15cf9:    48 85 c0                              	test rax, rax
0x15cfc:    74 05                                 	je 0x15d03 <function_15cf0+0x13>
0x15cfe:    48 83 c4 08                           	add rsp, 8
0x15d02:    c3                                    	ret 
0x15d03:    e8 c8 e9 ff ff                        	call 0x146d0 <function_146d0>
; data inside code section at 0x15d08 -- 0x15d10
0x15d08:    0f 1f 84 00 00 00 00 00                            |........        |
; function: function_15d10 at 0x15d10 -- 0x15d46
0x15d10:    48 0f be 0f                           	movsx rcx, byte ptr [rdi]
0x15d14:    84 c9                                 	test cl, cl
0x15d16:    74 28                                 	je 0x15d40 <function_15d10+0x30>
0x15d18:    31 c0                                 	xor eax, eax
0x15d1a:    66 0f 1f 44 00 00                     	nop word ptr [rax + rax]
0x15d20:    48 c1 c0 09                           	rol rax, 9
0x15d24:    48 83 c7 01                           	add rdi, 1
0x15d28:    48 01 c8                              	add rax, rcx
0x15d2b:    48 0f be 0f                           	movsx rcx, byte ptr [rdi]
0x15d2f:    84 c9                                 	test cl, cl
0x15d31:    75 ed                                 	jne 0x15d20 <function_15d10+0x10>
0x15d33:    31 d2                                 	xor edx, edx
0x15d35:    48 f7 f6                              	div rsi
0x15d38:    48 89 d0                              	mov rax, rdx
0x15d3b:    c3                                    	ret 
; data inside code section at 0x15d3c -- 0x15d40
0x15d3c:    0f 1f 40 00                                        |..@.            |
0x15d40:    31 d2                                 	xor edx, edx
0x15d42:    48 89 d0                              	mov rax, rdx
0x15d45:    c3                                    	ret 
; data inside code section at 0x15d46 -- 0x15d50
0x15d46:    66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
; function: function_15d50 at 0x15d50 -- 0x1619e
0x15d50:    41 57                                 	push r15
0x15d52:    41 56                                 	push r14
0x15d54:    bf 0e 00 00 00                        	mov edi, 0xe
0x15d59:    41 55                                 	push r13
0x15d5b:    41 54                                 	push r12
0x15d5d:    55                                    	push rbp
0x15d5e:    53                                    	push rbx
0x15d5f:    48 81 ec a8 00 00 00                  	sub rsp, 0xa8
0x15d66:    64 48 8b 04 25 28 00 00 00            	mov rax, qword ptr fs:[0x28]
0x15d6f:    48 89 84 24 98 00 00 00               	mov qword ptr [rsp + 0x98], rax
0x15d77:    31 c0                                 	xor eax, eax
0x15d79:    e8 a2 de fe ff                        	call 0x3c20 <nl_langinfo>
0x15d7e:    4c 8b 3d d3 b7 20 00                  	mov r15, qword ptr [rip + 0x20b7d3]
0x15d85:    48 85 c0                              	test rax, rax
0x15d88:    48 89 c3                              	mov rbx, rax
0x15d8b:    48 8d 05 b8 1e 00 00                  	lea rax, [rip + 0x1eb8]
0x15d92:    48 0f 44 d8                           	cmove rbx, rax
0x15d96:    4d 85 ff                              	test r15, r15
0x15d99:    75 1f                                 	jne 0x15dba <function_15d50+0x6a>
0x15d9b:    e9 90 00 00 00                        	jmp 0x15e30 <function_15d50+0xe0>
0x15da0:    4c 89 ff                              	mov rdi, r15
0x15da3:    e8 a8 db fe ff                        	call 0x3950 <strlen>
0x15da8:    49 8d 6c 07 01                        	lea rbp, [r15 + rax + 1]
0x15dad:    48 89 ef                              	mov rdi, rbp
0x15db0:    e8 9b db fe ff                        	call 0x3950 <strlen>
0x15db5:    4c 8d 7c 05 01                        	lea r15, [rbp + rax + 1]
0x15dba:    41 0f b6 2f                           	movzx ebp, byte ptr [r15]
0x15dbe:    40 84 ed                              	test bpl, bpl
0x15dc1:    74 29                                 	je 0x15dec <function_15d50+0x9c>
0x15dc3:    4c 89 fe                              	mov rsi, r15
0x15dc6:    48 89 df                              	mov rdi, rbx
0x15dc9:    e8 52 dd fe ff                        	call 0x3b20 <strcmp>
0x15dce:    85 c0                                 	test eax, eax
0x15dd0:    74 0d                                 	je 0x15ddf <function_15d50+0x8f>
0x15dd2:    40 80 fd 2a                           	cmp bpl, 0x2a
0x15dd6:    75 c8                                 	jne 0x15da0 <function_15d50+0x50>
0x15dd8:    41 80 7f 01 00                        	cmp byte ptr [r15 + 1], 0
0x15ddd:    75 c1                                 	jne 0x15da0 <function_15d50+0x50>
0x15ddf:    4c 89 ff                              	mov rdi, r15
0x15de2:    e8 69 db fe ff                        	call 0x3950 <strlen>
0x15de7:    49 8d 5c 07 01                        	lea rbx, [r15 + rax + 1]
0x15dec:    80 3b 00                              	cmp byte ptr [rbx], 0
0x15def:    48 8d 05 6d 53 00 00                  	lea rax, [rip + 0x536d]
0x15df6:    48 0f 44 d8                           	cmove rbx, rax
0x15dfa:    48 8b 8c 24 98 00 00 00               	mov rcx, qword ptr [rsp + 0x98]
0x15e02:    64 48 33 0c 25 28 00 00 00            	xor rcx, qword ptr fs:[0x28]
0x15e0b:    48 89 d8                              	mov rax, rbx
0x15e0e:    0f 85 78 03 00 00                     	jne 0x1618c <function_15d50+0x43c>
0x15e14:    48 81 c4 a8 00 00 00                  	add rsp, 0xa8
0x15e1b:    5b                                    	pop rbx
0x15e1c:    5d                                    	pop rbp
0x15e1d:    41 5c                                 	pop r12
0x15e1f:    41 5d                                 	pop r13
0x15e21:    41 5e                                 	pop r14
0x15e23:    41 5f                                 	pop r15
0x15e25:    c3                                    	ret 
; data inside code section at 0x15e26 -- 0x15e30
0x15e26:    66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x15e30:    48 8d 3d 4c 53 00 00                  	lea rdi, [rip + 0x534c]
0x15e37:    e8 64 d9 fe ff                        	call 0x37a0 <getenv>
0x15e3c:    48 85 c0                              	test rax, rax
0x15e3f:    49 89 c5                              	mov r13, rax
0x15e42:    74 4c                                 	je 0x15e90 <function_15d50+0x140>
0x15e44:    80 38 00                              	cmp byte ptr [rax], 0
0x15e47:    74 47                                 	je 0x15e90 <function_15d50+0x140>
0x15e49:    48 89 c7                              	mov rdi, rax
0x15e4c:    e8 ff da fe ff                        	call 0x3950 <strlen>
0x15e51:    48 85 c0                              	test rax, rax
0x15e54:    49 89 c4                              	mov r12, rax
0x15e57:    49 89 c6                              	mov r14, rax
0x15e5a:    0f 85 1b 03 00 00                     	jne 0x1617b <function_15d50+0x42b>
0x15e60:    bf 0e 00 00 00                        	mov edi, 0xe
0x15e65:    e8 0e e0 fe ff                        	call 0x3e78 <malloc>
0x15e6a:    48 85 c0                              	test rax, rax
0x15e6d:    48 89 c5                              	mov rbp, rax
0x15e70:    0f 85 a2 00 00 00                     	jne 0x15f18 <function_15d50+0x1c8>
0x15e76:    4c 8d 3d cd 1d 00 00                  	lea r15, [rip + 0x1dcd]
0x15e7d:    4c 89 3d d4 b6 20 00                  	mov qword ptr [rip + 0x20b6d4], r15
0x15e84:    e9 31 ff ff ff                        	jmp 0x15dba <function_15d50+0x6a>
; data inside code section at 0x15e89 -- 0x15e90
0x15e89:    0f 1f 80 00 00 00 00                               |.......         |
0x15e90:    4c 8d 2d d2 52 00 00                  	lea r13, [rip + 0x52d2]
0x15e97:    bf 28 00 00 00                        	mov edi, 0x28
0x15e9c:    41 bc 1a 00 00 00                     	mov r12d, 0x1a
0x15ea2:    41 be 19 00 00 00                     	mov r14d, 0x19
0x15ea8:    e8 cb df fe ff                        	call 0x3e78 <malloc>
0x15ead:    48 85 c0                              	test rax, rax
0x15eb0:    48 89 c5                              	mov rbp, rax
0x15eb3:    74 c1                                 	je 0x15e76 <function_15d50+0x126>
0x15eb5:    4c 89 f2                              	mov rdx, r14
0x15eb8:    4c 89 ee                              	mov rsi, r13
0x15ebb:    48 89 ef                              	mov rdi, rbp
0x15ebe:    e8 bd dc fe ff                        	call 0x3b80 <memcpy>
0x15ec3:    42 c6 44 35 00 2f                     	mov byte ptr [rbp + r14], 0x2f
0x15ec9:    49 01 ec                              	add r12, rbp
0x15ecc:    48 b8 63 68 61 72 73 65 74 2e         	movabs rax, 0x2e74657372616863
0x15ed6:    be 00 00 02 00                        	mov esi, 0x20000
0x15edb:    49 89 04 24                           	mov qword ptr [r12], rax
0x15edf:    b8 73 00 00 00                        	mov eax, 0x73
0x15ee4:    41 c7 44 24 08 61 6c 69 61            	mov dword ptr [r12 + 8], 0x61696c61
0x15eed:    66 41 89 44 24 0c                     	mov word ptr [r12 + 0xc], ax
0x15ef3:    48 89 ef                              	mov rdi, rbp
0x15ef6:    31 c0                                 	xor eax, eax
0x15ef8:    e8 33 de fe ff                        	call 0x3d30 <open>
0x15efd:    85 c0                                 	test eax, eax
0x15eff:    41 89 c4                              	mov r12d, eax
0x15f02:    79 24                                 	jns 0x15f28 <function_15d50+0x1d8>
0x15f04:    4c 8d 3d 3f 1d 00 00                  	lea r15, [rip + 0x1d3f]
0x15f0b:    48 89 ef                              	mov rdi, rbp
0x15f0e:    e8 5d df fe ff                        	call 0x3e70 <free>
0x15f13:    e9 65 ff ff ff                        	jmp 0x15e7d <function_15d50+0x12d>
0x15f18:    4c 89 f2                              	mov rdx, r14
0x15f1b:    4c 89 ee                              	mov rsi, r13
0x15f1e:    48 89 ef                              	mov rdi, rbp
0x15f21:    e8 5a dc fe ff                        	call 0x3b80 <memcpy>
0x15f26:    eb a1                                 	jmp 0x15ec9 <function_15d50+0x179>
0x15f28:    48 8d 35 3b 20 00 00                  	lea rsi, [rip + 0x203b]
0x15f2f:    89 c7                                 	mov edi, eax
0x15f31:    45 31 ff                              	xor r15d, r15d
0x15f34:    e8 77 dd fe ff                        	call 0x3cb0 <fdopen>
0x15f39:    48 85 c0                              	test rax, rax
0x15f3c:    49 89 c6                              	mov r14, rax
0x15f3f:    48 c7 04 24 00 00 00 00               	mov qword ptr [rsp], 0
0x15f47:    0f 84 d6 01 00 00                     	je 0x16123 <function_15d50+0x3d3>
0x15f4d:    48 8d 44 24 60                        	lea rax, [rsp + 0x60]
0x15f52:    48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x15f57:    48 8d 44 24 20                        	lea rax, [rsp + 0x20]
0x15f5c:    48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x15f61:    49 8b 46 08                           	mov rax, qword ptr [r14 + 8]
0x15f65:    49 3b 46 10                           	cmp rax, qword ptr [r14 + 0x10]
0x15f69:    0f 83 4b 01 00 00                     	jae 0x160ba <function_15d50+0x36a>
0x15f6f:    48 8d 50 01                           	lea rdx, [rax + 1]
0x15f73:    49 89 56 08                           	mov qword ptr [r14 + 8], rdx
0x15f77:    0f b6 38                              	movzx edi, byte ptr [rax]
0x15f7a:    8d 47 f7                              	lea eax, [rdi - 9]
0x15f7d:    83 f8 01                              	cmp eax, 1
0x15f80:    76 df                                 	jbe 0x15f61 <function_15d50+0x211>
0x15f82:    83 ff 20                              	cmp edi, 0x20
0x15f85:    74 da                                 	je 0x15f61 <function_15d50+0x211>
0x15f87:    83 ff 23                              	cmp edi, 0x23
0x15f8a:    0f 84 79 01 00 00                     	je 0x16109 <function_15d50+0x3b9>
0x15f90:    4c 89 f6                              	mov rsi, r14
0x15f93:    e8 98 dc fe ff                        	call 0x3c30 <ungetc>
0x15f98:    4c 8b 6c 24 10                        	mov r13, qword ptr [rsp + 0x10]
0x15f9d:    48 8b 4c 24 08                        	mov rcx, qword ptr [rsp + 8]
0x15fa2:    48 8d 35 ea 51 00 00                  	lea rsi, [rip + 0x51ea]
0x15fa9:    31 c0                                 	xor eax, eax
0x15fab:    4c 89 f7                              	mov rdi, r14
0x15fae:    4c 89 ea                              	mov rdx, r13
0x15fb1:    e8 ba da fe ff                        	call 0x3a70 <fscanf>
0x15fb6:    83 f8 01                              	cmp eax, 1
0x15fb9:    0f 8e 0e 01 00 00                     	jle 0x160cd <function_15d50+0x37d>
0x15fbf:    4c 89 ea                              	mov rdx, r13
0x15fc2:    8b 0a                                 	mov ecx, dword ptr [rdx]
0x15fc4:    48 83 c2 04                           	add rdx, 4
0x15fc8:    8d 81 ff fe fe fe                     	lea eax, [rcx - 0x1010101]
0x15fce:    f7 d1                                 	not ecx
0x15fd0:    21 c8                                 	and eax, ecx
0x15fd2:    25 80 80 80 80                        	and eax, 0x80808080
0x15fd7:    74 e9                                 	je 0x15fc2 <function_15d50+0x272>
0x15fd9:    89 c1                                 	mov ecx, eax
0x15fdb:    4c 8b 6c 24 08                        	mov r13, qword ptr [rsp + 8]
0x15fe0:    c1 e9 10                              	shr ecx, 0x10
0x15fe3:    a9 80 80 00 00                        	test eax, 0x8080
0x15fe8:    0f 44 c1                              	cmove eax, ecx
0x15feb:    48 8d 4a 02                           	lea rcx, [rdx + 2]
0x15fef:    48 0f 44 d1                           	cmove rdx, rcx
0x15ff3:    89 c1                                 	mov ecx, eax
0x15ff5:    00 c1                                 	add cl, al
0x15ff7:    48 83 da 03                           	sbb rdx, 3
0x15ffb:    48 2b 54 24 10                        	sub rdx, qword ptr [rsp + 0x10]
0x16000:    41 8b 75 00                           	mov esi, dword ptr [r13]
0x16004:    49 83 c5 04                           	add r13, 4
0x16008:    8d 86 ff fe fe fe                     	lea eax, [rsi - 0x1010101]
0x1600e:    f7 d6                                 	not esi
0x16010:    21 f0                                 	and eax, esi
0x16012:    25 80 80 80 80                        	and eax, 0x80808080
0x16017:    74 e7                                 	je 0x16000 <function_15d50+0x2b0>
0x16019:    89 c6                                 	mov esi, eax
0x1601b:    48 89 54 24 18                        	mov qword ptr [rsp + 0x18], rdx
0x16020:    c1 ee 10                              	shr esi, 0x10
0x16023:    a9 80 80 00 00                        	test eax, 0x8080
0x16028:    0f 44 c6                              	cmove eax, esi
0x1602b:    49 8d 75 02                           	lea rsi, [r13 + 2]
0x1602f:    89 c1                                 	mov ecx, eax
0x16031:    4c 0f 44 ee                           	cmove r13, rsi
0x16035:    00 c1                                 	add cl, al
0x16037:    49 83 dd 03                           	sbb r13, 3
0x1603b:    4c 2b 6c 24 08                        	sub r13, qword ptr [rsp + 8]
0x16040:    48 83 3c 24 00                        	cmp qword ptr [rsp], 0
0x16045:    4a 8d 04 2a                           	lea rax, [rdx + r13]
0x16049:    0f 85 eb 00 00 00                     	jne 0x1613a <function_15d50+0x3ea>
0x1604f:    48 8d 48 02                           	lea rcx, [rax + 2]
0x16053:    48 8d 78 03                           	lea rdi, [rax + 3]
0x16057:    48 89 0c 24                           	mov qword ptr [rsp], rcx
0x1605b:    e8 18 de fe ff                        	call 0x3e78 <malloc>
0x16060:    48 8b 54 24 18                        	mov rdx, qword ptr [rsp + 0x18]
0x16065:    49 89 c4                              	mov r12, rax
0x16068:    4d 85 e4                              	test r12, r12
0x1606b:    0f 84 ee 00 00 00                     	je 0x1615f <function_15d50+0x40f>
0x16071:    4c 8b 3c 24                           	mov r15, qword ptr [rsp]
0x16075:    48 c7 c7 fe ff ff ff                  	mov rdi, -2
0x1607c:    48 8b 74 24 10                        	mov rsi, qword ptr [rsp + 0x10]
0x16081:    48 29 d7                              	sub rdi, rdx
0x16084:    48 83 c2 01                           	add rdx, 1
0x16088:    4d 29 ef                              	sub r15, r13
0x1608b:    4c 01 ff                              	add rdi, r15
0x1608e:    4c 01 e7                              	add rdi, r12
0x16091:    e8 ea da fe ff                        	call 0x3b80 <memcpy>
0x16096:    48 8b 74 24 08                        	mov rsi, qword ptr [rsp + 8]
0x1609b:    4b 8d 7c 3c ff                        	lea rdi, [r12 + r15 - 1]
0x160a0:    49 8d 55 01                           	lea rdx, [r13 + 1]
0x160a4:    4d 89 e7                              	mov r15, r12
0x160a7:    e8 d4 da fe ff                        	call 0x3b80 <memcpy>
0x160ac:    49 8b 46 08                           	mov rax, qword ptr [r14 + 8]
0x160b0:    49 3b 46 10                           	cmp rax, qword ptr [r14 + 0x10]
0x160b4:    0f 82 b5 fe ff ff                     	jb 0x15f6f <function_15d50+0x21f>
0x160ba:    4c 89 f7                              	mov rdi, r14
0x160bd:    e8 ce d6 fe ff                        	call 0x3790 <__uflow>
0x160c2:    83 f8 ff                              	cmp eax, -1
0x160c5:    89 c7                                 	mov edi, eax
0x160c7:    0f 85 ad fe ff ff                     	jne 0x15f7a <function_15d50+0x22a>
0x160cd:    4c 89 f7                              	mov rdi, r14
0x160d0:    e8 cb 00 00 00                        	call 0x161a0 <function_161a0>
0x160d5:    48 8b 04 24                           	mov rax, qword ptr [rsp]
0x160d9:    48 85 c0                              	test rax, rax
0x160dc:    0f 84 22 fe ff ff                     	je 0x15f04 <function_15d50+0x1b4>
0x160e2:    41 c6 04 07 00                        	mov byte ptr [r15 + rax], 0
0x160e7:    e9 1f fe ff ff                        	jmp 0x15f0b <function_15d50+0x1bb>
; data inside code section at 0x160ec -- 0x160f0
0x160ec:    0f 1f 40 00                                        |..@.            |
0x160f0:    48 8d 50 01                           	lea rdx, [rax + 1]
0x160f4:    49 89 56 08                           	mov qword ptr [r14 + 8], rdx
0x160f8:    0f b6 00                              	movzx eax, byte ptr [rax]
0x160fb:    ba 01 00 00 00                        	mov edx, 1
0x16100:    83 f8 0a                              	cmp eax, 0xa
0x16103:    74 2b                                 	je 0x16130 <function_15d50+0x3e0>
0x16105:    84 d2                                 	test dl, dl
0x16107:    74 27                                 	je 0x16130 <function_15d50+0x3e0>
0x16109:    49 8b 46 08                           	mov rax, qword ptr [r14 + 8]
0x1610d:    49 3b 46 10                           	cmp rax, qword ptr [r14 + 0x10]
0x16111:    72 dd                                 	jb 0x160f0 <function_15d50+0x3a0>
0x16113:    4c 89 f7                              	mov rdi, r14
0x16116:    e8 75 d6 fe ff                        	call 0x3790 <__uflow>
0x1611b:    83 f8 ff                              	cmp eax, -1
0x1611e:    0f 95 c2                              	setne dl
0x16121:    eb dd                                 	jmp 0x16100 <function_15d50+0x3b0>
0x16123:    44 89 e7                              	mov edi, r12d
0x16126:    e8 75 d9 fe ff                        	call 0x3aa0 <close>
0x1612b:    e9 d4 fd ff ff                        	jmp 0x15f04 <function_15d50+0x1b4>
0x16130:    83 f8 ff                              	cmp eax, -1
0x16133:    74 98                                 	je 0x160cd <function_15d50+0x37d>
0x16135:    e9 27 fe ff ff                        	jmp 0x15f61 <function_15d50+0x211>
0x1613a:    48 03 04 24                           	add rax, qword ptr [rsp]
0x1613e:    4c 89 ff                              	mov rdi, r15
0x16141:    48 8d 48 02                           	lea rcx, [rax + 2]
0x16145:    48 8d 70 03                           	lea rsi, [rax + 3]
0x16149:    48 89 0c 24                           	mov qword ptr [rsp], rcx
0x1614d:    e8 3e db fe ff                        	call 0x3c90 <realloc>
0x16152:    48 8b 54 24 18                        	mov rdx, qword ptr [rsp + 0x18]
0x16157:    49 89 c4                              	mov r12, rax
0x1615a:    e9 09 ff ff ff                        	jmp 0x16068 <function_15d50+0x318>
0x1615f:    4c 89 ff                              	mov rdi, r15
0x16162:    4c 8d 3d e1 1a 00 00                  	lea r15, [rip + 0x1ae1]
0x16169:    e8 02 dd fe ff                        	call 0x3e70 <free>
0x1616e:    4c 89 f7                              	mov rdi, r14
0x16171:    e8 2a 00 00 00                        	call 0x161a0 <function_161a0>
0x16176:    e9 90 fd ff ff                        	jmp 0x15f0b <function_15d50+0x1bb>
0x1617b:    41 80 7c 05 ff 2f                     	cmp byte ptr [r13 + rax - 1], 0x2f
0x16181:    75 0e                                 	jne 0x16191 <function_15d50+0x441>
0x16183:    48 8d 78 0e                           	lea rdi, [rax + 0xe]
0x16187:    e9 d9 fc ff ff                        	jmp 0x15e65 <function_15d50+0x115>
0x1618c:    e8 df d7 fe ff                        	call 0x3970 <__stack_chk_fail>
0x16191:    48 8d 78 0f                           	lea rdi, [rax + 0xf]
0x16195:    49 83 c4 01                           	add r12, 1
0x16199:    e9 0a fd ff ff                        	jmp 0x15ea8 <function_15d50+0x158>
; data inside code section at 0x1619e -- 0x161a0
0x1619e:    66 90                                              |f.              |
; function: function_161a0 at 0x161a0 -- 0x1621b
0x161a0:    41 54                                 	push r12
0x161a2:    55                                    	push rbp
0x161a3:    53                                    	push rbx
0x161a4:    48 89 fb                              	mov rbx, rdi
0x161a7:    e8 14 da fe ff                        	call 0x3bc0 <fileno>
0x161ac:    85 c0                                 	test eax, eax
0x161ae:    48 89 df                              	mov rdi, rbx
0x161b1:    78 54                                 	js 0x16207 <function_161a0+0x67>
0x161b3:    e8 b8 da fe ff                        	call 0x3c70 <__freading>
0x161b8:    85 c0                                 	test eax, eax
0x161ba:    75 2c                                 	jne 0x161e8 <function_161a0+0x48>
0x161bc:    48 89 df                              	mov rdi, rbx
0x161bf:    e8 5c 00 00 00                        	call 0x16220 <function_16220>
0x161c4:    85 c0                                 	test eax, eax
0x161c6:    74 3c                                 	je 0x16204 <function_161a0+0x64>
0x161c8:    e8 23 d6 fe ff                        	call 0x37f0 <__errno_location>
0x161cd:    44 8b 20                              	mov r12d, dword ptr [rax]
0x161d0:    48 89 df                              	mov rdi, rbx
0x161d3:    48 89 c5                              	mov rbp, rax
0x161d6:    e8 15 d7 fe ff                        	call 0x38f0 <fclose>
0x161db:    45 85 e4                              	test r12d, r12d
0x161de:    75 30                                 	jne 0x16210 <function_161a0+0x70>
0x161e0:    5b                                    	pop rbx
0x161e1:    5d                                    	pop rbp
0x161e2:    41 5c                                 	pop r12
0x161e4:    c3                                    	ret 
; data inside code section at 0x161e5 -- 0x161e8
0x161e5:    0f 1f 00                                           |...             |
0x161e8:    48 89 df                              	mov rdi, rbx
0x161eb:    e8 d0 d9 fe ff                        	call 0x3bc0 <fileno>
0x161f0:    31 f6                                 	xor esi, esi
0x161f2:    ba 01 00 00 00                        	mov edx, 1
0x161f7:    89 c7                                 	mov edi, eax
0x161f9:    e8 12 d8 fe ff                        	call 0x3a10 <lseek>
0x161fe:    48 83 f8 ff                           	cmp rax, -1
0x16202:    75 b8                                 	jne 0x161bc <function_161a0+0x1c>
0x16204:    48 89 df                              	mov rdi, rbx
0x16207:    5b                                    	pop rbx
0x16208:    5d                                    	pop rbp
0x16209:    41 5c                                 	pop r12
0x1620b:    e9 e0 d6 fe ff                        	jmp 0x38f0 <fclose>
0x16210:    44 89 65 00                           	mov dword ptr [rbp], r12d
0x16214:    b8 ff ff ff ff                        	mov eax, 0xffffffff
0x16219:    eb c5                                 	jmp 0x161e0 <function_161a0+0x40>
; data inside code section at 0x1621b -- 0x16220
0x1621b:    0f 1f 44 00 00                                     |..D..           |
; function: function_16220 at 0x16220 -- 0x16260
0x16220:    48 85 ff                              	test rdi, rdi
0x16223:    53                                    	push rbx
0x16224:    48 89 fb                              	mov rbx, rdi
0x16227:    74 11                                 	je 0x1623a <function_16220+0x1a>
0x16229:    e8 42 da fe ff                        	call 0x3c70 <__freading>
0x1622e:    85 c0                                 	test eax, eax
0x16230:    74 08                                 	je 0x1623a <function_16220+0x1a>
0x16232:    f7 03 00 01 00 00                     	test dword ptr [rbx], 0x100
0x16238:    75 0e                                 	jne 0x16248 <function_16220+0x28>
0x1623a:    48 89 df                              	mov rdi, rbx
0x1623d:    5b                                    	pop rbx
0x1623e:    e9 cd d9 fe ff                        	jmp 0x3c10 <fflush>
; data inside code section at 0x16243 -- 0x16248
0x16243:    0f 1f 44 00 00                                     |..D..           |
0x16248:    48 89 df                              	mov rdi, rbx
0x1624b:    ba 01 00 00 00                        	mov edx, 1
0x16250:    31 f6                                 	xor esi, esi
0x16252:    e8 09 00 00 00                        	call 0x16260 <function_16260>
0x16257:    48 89 df                              	mov rdi, rbx
0x1625a:    5b                                    	pop rbx
0x1625b:    e9 b0 d9 fe ff                        	jmp 0x3c10 <fflush>
; function: function_16260 at 0x16260 -- 0x162b7
0x16260:    48 8b 47 08                           	mov rax, qword ptr [rdi + 8]
0x16264:    48 39 47 10                           	cmp qword ptr [rdi + 0x10], rax
0x16268:    74 06                                 	je 0x16270 <function_16260+0x10>
0x1626a:    e9 d1 da fe ff                        	jmp 0x3d40 <fseeko>
; data inside code section at 0x1626f -- 0x16270
0x1626f:    90                                                 |.               |
0x16270:    48 8b 47 20                           	mov rax, qword ptr [rdi + 0x20]
0x16274:    48 39 47 28                           	cmp qword ptr [rdi + 0x28], rax
0x16278:    75 f0                                 	jne 0x1626a <function_16260+0xa>
0x1627a:    48 83 7f 48 00                        	cmp qword ptr [rdi + 0x48], 0
0x1627f:    75 e9                                 	jne 0x1626a <function_16260+0xa>
0x16281:    41 54                                 	push r12
0x16283:    55                                    	push rbp
0x16284:    41 89 d4                              	mov r12d, edx
0x16287:    53                                    	push rbx
0x16288:    48 89 f5                              	mov rbp, rsi
0x1628b:    48 89 fb                              	mov rbx, rdi
0x1628e:    e8 2d d9 fe ff                        	call 0x3bc0 <fileno>
0x16293:    44 89 e2                              	mov edx, r12d
0x16296:    48 89 ee                              	mov rsi, rbp
0x16299:    89 c7                                 	mov edi, eax
0x1629b:    e8 70 d7 fe ff                        	call 0x3a10 <lseek>
0x162a0:    48 83 f8 ff                           	cmp rax, -1
0x162a4:    74 0c                                 	je 0x162b2 <function_16260+0x52>
0x162a6:    83 23 ef                              	and dword ptr [rbx], 0xffffffef
0x162a9:    48 89 83 90 00 00 00                  	mov qword ptr [rbx + 0x90], rax
0x162b0:    31 c0                                 	xor eax, eax
0x162b2:    5b                                    	pop rbx
0x162b3:    5d                                    	pop rbp
0x162b4:    41 5c                                 	pop r12
0x162b6:    c3                                    	ret 
; data inside code section at 0x162b7 -- 0x162c0
0x162b7:    66 0f 1f 84 00 00 00 00  00                        |f........       |
; function: function_162c0 at 0x162c0 -- 0x16325
0x162c0:    41 57                                 	push r15
0x162c2:    41 56                                 	push r14
0x162c4:    41 89 ff                              	mov r15d, edi
0x162c7:    41 55                                 	push r13
0x162c9:    41 54                                 	push r12
0x162cb:    4c 8d 25 1e 8d 20 00                  	lea r12, [rip + 0x208d1e]
0x162d2:    55                                    	push rbp
0x162d3:    48 8d 2d 1e 8d 20 00                  	lea rbp, [rip + 0x208d1e]
0x162da:    53                                    	push rbx
0x162db:    49 89 f6                              	mov r14, rsi
0x162de:    49 89 d5                              	mov r13, rdx
0x162e1:    4c 29 e5                              	sub rbp, r12
0x162e4:    48 83 ec 08                           	sub rsp, 8
0x162e8:    48 c1 fd 03                           	sar rbp, 3
0x162ec:    e8 67 d4 fe ff                        	call 0x3758 <_init>
0x162f1:    48 85 ed                              	test rbp, rbp
0x162f4:    74 20                                 	je 0x16316 <function_162c0+0x56>
0x162f6:    31 db                                 	xor ebx, ebx
0x162f8:    0f 1f 84 00 00 00 00 00               	nop dword ptr [rax + rax]
0x16300:    4c 89 ea                              	mov rdx, r13
0x16303:    4c 89 f6                              	mov rsi, r14
0x16306:    44 89 ff                              	mov edi, r15d
0x16309:    41 ff 14 dc                           	call qword ptr [r12 + rbx*8]
0x1630d:    48 83 c3 01                           	add rbx, 1
0x16311:    48 39 dd                              	cmp rbp, rbx
0x16314:    75 ea                                 	jne 0x16300 <function_162c0+0x40>
0x16316:    48 83 c4 08                           	add rsp, 8
0x1631a:    5b                                    	pop rbx
0x1631b:    5d                                    	pop rbp
0x1631c:    41 5c                                 	pop r12
0x1631e:    41 5d                                 	pop r13
0x16320:    41 5e                                 	pop r14
0x16322:    41 5f                                 	pop r15
0x16324:    c3                                    	ret 
; data inside code section at 0x16325 -- 0x16330
0x16325:    90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: function_16330 at 0x16330 -- 0x16332
0x16330:    f3 c3                                 	ret 
; data inside code section at 0x16332 -- 0x16340
0x16332:    66 2e 0f 1f 84 00 00 00  00 00 0f 1f 40 00         |f...........@.  |
; function: function_16340 at 0x16340 -- 0x16369
0x16340:    48 8d 05 c1 9c 20 00                  	lea rax, [rip + 0x209cc1]
0x16347:    48 85 c0                              	test rax, rax
0x1634a:    74 14                                 	je 0x16360 <function_16340+0x20>
0x1634c:    48 8b 10                              	mov rdx, qword ptr [rax]
0x1634f:    31 f6                                 	xor esi, esi
0x16351:    e9 1a da fe ff                        	jmp 0x3d70 <__cxa_atexit>
; data inside code section at 0x16356 -- 0x16360
0x16356:    66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x16360:    31 d2                                 	xor edx, edx
0x16362:    31 f6                                 	xor esi, esi
0x16364:    e9 07 da fe ff                        	jmp 0x3d70 <__cxa_atexit>
; section: .fini
; function: _fini at 0x1636c -- 0x16375
0x1636c:    48 83 ec 08                           	sub rsp, 8
0x16370:    48 83 c4 08                           	add rsp, 8
0x16374:    c3                                    	ret 

;;
;; Data Segment
;;

; section: .interp
0x238:      2f 6c 69 62 36 34 2f 6c  64 2d 6c 69 6e 75 78 2d   |/lib64/ld-linux-|
0x248:      78 38 36 2d 36 34 2e 73  6f 2e 32 00 04            |x86-64.so.2..   |
; section: .gnu.hash
0x298:      11 00 00 00 77 00 00 00  04 00 00 00 08 00 00 00   |....w...........|
0x2a8:      14 0c 12 20 00 29 0c 42  68 d0 00 00 00 24 00 c0   |... .).Bh....$..|
0x2b8:      80 2a 49 21 0d 20 84 1d  02 61 08 01 24 14 02 00   |.*I!. ...a..$...|
0x2c8:      77 00 00 00 79 00 00 00  7a 00 00 00 7c 00 00 00   |w...y...z...|...|
0x2d8:      7f 00 00 00 85 00 00 00  88 00 00 00 8a 00 00 00   |................|
0x2e8:      8c 00 00 00 00 00 00 00  8e 00 00 00 90 00 00 00   |................|
0x2f8:      91 00 00 00 00 00 00 00  92 00 00 00 00 00 00 00   |................|
0x308:      93 00 00 00 bc 50 76 9e  c9 41 87 90 eb d3 ef 0e   |.....Pv..A......|
0x318:      32 c4 f7 12 b9 8d f1 0e  96 a0 89 97 d8 71 58 1c   |2............qX.|
0x328:      3f 04 4b 86 2a d4 b8 d3  ac 4b e3 c0 c8 4d 42 23   |?.K.*....K...MB#|
0x338:      ba e3 92 7c 46 2d e4 de  cf 2c 63 72 04 8b 26 a4   |...|F-...,cr..&.|
0x348:      9c 09 32 d6 93 98 3c ad  b6 fa 01 eb 4f 8e fd 7f   |..2...<.....O...|
0x358:      42 45 d5 ec 39 f2 8b 1c  4c 3e a5 0b e5 62 41 f5   |BE..9...L>...bA.|
0x368:      02 3e 7f 5b b3 a2 f7 12  7f 6a 9a 75 11 8a 4d 23   |.>.[.....j.u..M#|
0x378:      8d c7 e0 60 28 1d 8c 1c  1d ed 63 2a ??            |...`(.....c*?   |
; section: .dynsym
0x388:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x398:      00 00 00 00 00 00 00 00  43 04 00 00 12 00 00 00   |........C.......|
0x3a8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3b8:      bb 02 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3c8:      00 00 00 00 00 00 00 00  e5 02 00 00 12 00 00 00   |................|
0x3d8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3e8:      3c 01 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |<...............|
0x3f8:      00 00 00 00 00 00 00 00  4b 03 00 00 12 00 00 00   |........K.......|
0x408:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x418:      a7 02 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x428:      00 00 00 00 00 00 00 00  54 05 00 00 12 00 00 00   |........T.......|
0x438:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x448:      73 01 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |s...............|
0x458:      00 00 00 00 00 00 00 00  1b 02 00 00 12 00 00 00   |................|
0x468:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x478:      d2 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x488:      00 00 00 00 00 00 00 00  11 00 00 00 20 00 00 00   |............ ...|
0x498:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4a8:      b5 01 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4b8:      00 00 00 00 00 00 00 00  79 01 00 00 12 00 00 00   |........y.......|
0x4c8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4d8:      93 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4e8:      00 00 00 00 00 00 00 00  f3 03 00 00 12 00 00 00   |................|
0x4f8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x508:      d8 01 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x518:      00 00 00 00 00 00 00 00  c2 03 00 00 12 00 00 00   |................|
0x528:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x538:      05 04 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x548:      00 00 00 00 00 00 00 00  6d 02 00 00 12 00 00 00   |........m.......|
0x558:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x568:      10 02 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x578:      00 00 00 00 00 00 00 00  33 01 00 00 12 00 00 00   |........3.......|
0x588:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x598:      5a 03 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |Z...............|
0x5a8:      00 00 00 00 00 00 00 00  e5 03 00 00 12 00 00 00   |................|
0x5b8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5c8:      3d 02 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |=...............|
0x5d8:      00 00 00 00 00 00 00 00  d1 04 00 00 12 00 00 00   |................|
0x5e8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5f8:      8a 02 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x608:      00 00 00 00 00 00 00 00  cf 02 00 00 12 00 00 00   |................|
0x618:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x628:      0b 01 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x638:      00 00 00 00 00 00 00 00  cd 04 00 00 12 00 00 00   |................|
0x648:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x658:      f9 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x668:      00 00 00 00 00 00 00 00  c1 01 00 00 12 00 00 00   |................|
0x678:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x688:      ef 01 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x698:      00 00 00 00 00 00 00 00  59 01 00 00 12 00 00 00   |........Y.......|
0x6a8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6b8:      48 01 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |H...............|
0x6c8:      00 00 00 00 00 00 00 00  6a 03 00 00 12 00 00 00   |........j.......|
0x6d8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6e8:      ca 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x6f8:      00 00 00 00 00 00 00 00  fe 03 00 00 12 00 00 00   |................|
0x708:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x718:      1d 01 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x728:      00 00 00 00 00 00 00 00  24 05 00 00 12 00 00 00   |........$.......|
0x738:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x748:      2d 05 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |-...............|
0x758:      00 00 00 00 00 00 00 00  e1 00 00 00 12 00 00 00   |................|
0x768:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x778:      5c 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |\...............|
0x788:      00 00 00 00 00 00 00 00  9a 00 00 00 12 00 00 00   |................|
0x798:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x7a8:      7d 02 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |}...............|
0x7b8:      00 00 00 00 00 00 00 00  b5 03 00 00 12 00 00 00   |................|
0x7c8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x7d8:      a7 01 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x7e8:      00 00 00 00 00 00 00 00  38 05 00 00 12 00 00 00   |........8.......|
0x7f8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x808:      b0 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x818:      00 00 00 00 00 00 00 00  09 02 00 00 12 00 00 00   |................|
0x828:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x838:      63 03 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |c...............|
0x848:      00 00 00 00 00 00 00 00  22 03 00 00 12 00 00 00   |........".......|
0x858:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x868:      a7 03 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x878:      00 00 00 00 00 00 00 00  8b 02 00 00 12 00 00 00   |................|
0x888:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x898:      7f 01 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8a8:      00 00 00 00 00 00 00 00  14 01 00 00 12 00 00 00   |................|
0x8b8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8c8:      fd 04 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8d8:      00 00 00 00 00 00 00 00  2c 02 00 00 12 00 00 00   |........,.......|
0x8e8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8f8:      44 02 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |D...............|
0x908:      00 00 00 00 00 00 00 00  59 05 00 00 12 00 00 00   |........Y.......|
0x918:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x928:      e8 01 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x938:      00 00 00 00 00 00 00 00  70 00 00 00 12 00 00 00   |........p.......|
0x948:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x958:      ec 04 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x968:      00 00 00 00 00 00 00 00  2c 01 00 00 12 00 00 00   |........,.......|
0x978:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x988:      0f 05 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x998:      00 00 00 00 00 00 00 00  df 01 00 00 12 00 00 00   |................|
0x9a8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x9b8:      cc 03 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x9c8:      00 00 00 00 00 00 00 00  fd 01 00 00 12 00 00 00   |................|
0x9d8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x9e8:      2d 00 00 00 20 00 00 00  00 00 00 00 00 00 00 00   |-... ...........|
0x9f8:      00 00 00 00 00 00 00 00  83 02 00 00 12 00 00 00   |................|
0xa08:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xa18:      64 02 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |d...............|
0xa28:      00 00 00 00 00 00 00 00  5d 00 00 00 12 00 00 00   |........].......|
0xa38:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xa48:      b5 02 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0xa58:      00 00 00 00 00 00 00 00  7f 03 00 00 12 00 00 00   |................|
0xa68:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xa78:      f3 04 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0xa88:      00 00 00 00 00 00 00 00  a5 04 00 00 12 00 00 00   |................|
0xa98:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xaa8:      b8 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0xab8:      00 00 00 00 00 00 00 00  1a 03 00 00 12 00 00 00   |................|
0xac8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xad8:      99 02 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0xae8:      00 00 00 00 00 00 00 00  8c 00 00 00 12 00 00 00   |................|
0xaf8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xb08:      c3 02 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0xb18:      00 00 00 00 00 00 00 00  f6 01 00 00 12 00 00 00   |................|
0xb28:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xb38:      76 03 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |v...............|
0xb48:      00 00 00 00 00 00 00 00  1c 05 00 00 12 00 00 00   |................|
0xb58:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xb68:      0e 04 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0xb78:      00 00 00 00 00 00 00 00  08 03 00 00 12 00 00 00   |................|
0xb88:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xb98:      dc 04 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0xba8:      00 00 00 00 00 00 00 00  6b 01 00 00 12 00 00 00   |........k.......|
0xbb8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xbc8:      03 01 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0xbd8:      00 00 00 00 00 00 00 00  33 04 00 00 12 00 00 00   |........3.......|
0xbe8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xbf8:      c0 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0xc08:      00 00 00 00 00 00 00 00  a3 00 00 00 12 00 00 00   |................|
0xc18:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xc28:      a0 02 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0xc38:      00 00 00 00 00 00 00 00  9e 01 00 00 12 00 00 00   |................|
0xc48:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xc58:      33 02 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |3...............|
0xc68:      00 00 00 00 00 00 00 00  b6 04 00 00 12 00 00 00   |................|
0xc78:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xc88:      26 01 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |&...............|
0xc98:      00 00 00 00 00 00 00 00  35 04 00 00 12 00 00 00   |........5.......|
0xca8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xcb8:      15 05 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0xcc8:      00 00 00 00 00 00 00 00  3b 02 00 00 12 00 00 00   |........;.......|
0xcd8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xce8:      91 02 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0xcf8:      00 00 00 00 00 00 00 00  83 05 00 00 12 00 00 00   |................|
0xd08:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xd18:      3a 04 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |:...............|
0xd28:      00 00 00 00 00 00 00 00  ad 04 00 00 12 00 00 00   |................|
0xd38:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xd48:      68 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |h...............|
0xd58:      00 00 00 00 00 00 00 00  86 03 00 00 12 00 00 00   |................|
0xd68:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xd78:      d9 03 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0xd88:      00 00 00 00 00 00 00 00  7a 01 00 00 12 00 00 00   |........z.......|
0xd98:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xda8:      ae 03 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0xdb8:      00 00 00 00 00 00 00 00  4c 02 00 00 12 00 00 00   |........L.......|
0xdc8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xdd8:      3c 00 00 00 20 00 00 00  00 00 00 00 00 00 00 00   |<... ...........|
0xde8:      00 00 00 00 00 00 00 00  e9 00 00 00 12 00 00 00   |................|
0xdf8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xe08:      ad 02 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0xe18:      00 00 00 00 00 00 00 00  62 01 00 00 12 00 00 00   |........b.......|
0xe28:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xe38:      88 04 00 00 22 00 00 00  00 00 00 00 00 00 00 00   |...."...........|
0xe48:      00 00 00 00 00 00 00 00  5a 02 00 00 12 00 00 00   |........Z.......|
0xe58:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xe68:      57 04 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |W...............|
0xe78:      00 00 00 00 00 00 00 00  d7 02 00 00 12 00 00 00   |................|
0xe88:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xe98:      97 04 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0xea8:      00 00 00 00 00 00 00 00  68 05 00 00 11 00 19 00   |........h.......|
0xeb8:      80 02 22 00 00 00 00 00  08 00 00 00 00 00 00 00   |..".............|
0xec8:      d3 05 00 00 11 00 18 00  e0 01 22 00 00 00 00 00   |..........".....|
0xed8:      04 00 00 00 00 00 00 00  7c 00 00 00 12 00 0f 00   |........|.......|
0xee8:      6c 63 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |lc..............|
0xef8:      da 00 00 00 11 00 19 00  90 02 22 00 00 00 00 00   |..........".....|
0xf08:      04 00 00 00 00 00 00 00  56 00 00 00 12 00 0b 00   |........V.......|
0xf18:      58 37 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |X7..............|
0xf28:      86 01 00 00 21 00 19 00  a8 02 22 00 00 00 00 00   |....!.....".....|
0xf38:      08 00 00 00 00 00 00 00  97 05 00 00 10 00 19 00   |................|
0xf48:      68 02 22 00 00 00 00 00  00 00 00 00 00 00 00 00   |h.".............|
0xf58:      2a 06 00 00 11 00 10 00  c0 ae 01 00 00 00 00 00   |*...............|
0xf68:      2f 00 00 00 00 00 00 00  be 05 00 00 11 00 18 00   |/...............|
0xf78:      e8 01 22 00 00 00 00 00  08 00 00 00 00 00 00 00   |..".............|
0xf88:      db 05 00 00 11 00 10 00  80 63 01 00 00 00 00 00   |.........c......|
0xf98:      04 00 00 00 00 00 00 00  fd 05 00 00 11 00 15 00   |................|
0xfa8:      e0 f9 21 00 00 00 00 00  58 00 00 00 00 00 00 00   |..!.....X.......|
0xfb8:      a3 05 00 00 10 00 19 00  60 15 22 00 00 00 00 00   |........`.".....|
0xfc8:      00 00 00 00 00 00 00 00  10 06 00 00 11 00 18 00   |................|
0xfd8:      f8 01 22 00 00 00 00 00  04 00 00 00 00 00 00 00   |..".............|
0xfe8:      73 05 00 00 11 00 19 00  a8 02 22 00 00 00 00 00   |s.........".....|
0xff8:      08 00 00 00 00 00 00 00  a8 05 00 00 11 00 18 00   |................|
0x1008:     00 02 22 00 00 00 00 00  38 00 00 00 00 00 00 00   |..".....8.......|
0x1018:     c6 05 00 00 11 00 18 00  f0 01 22 00 00 00 00 00   |..........".....|
0x1028:     08 00 00 00 00 00 00 00  92 03 00 00 12 00 0e 00   |................|
0x1038:     90 56 01 00 00 00 00 00  2a 00 00 00 00 00 00 00   |.V......*.......|
0x1048:     6b 04 00 00 11 00 18 00  60 02 22 00 00 00 00 00   |k.......`.".....|
0x1058:     08 00 00 00 00 00 00 00  be 04 00 00 12 00 0e 00   |................|
0x1068:     b0 54 01 00 00 00 00 00  11 00 00 00 00 00 00 00   |.T..............|
0x1078:     90 05 00 00 10 00 18 00  68 02 22 00 00 00 00 00   |........h.".....|
0x1088:     00 00 00 00 00 00 00 00  13 03 00 00 11 00 19 00   |................|
0x1098:     c0 02 22 00 00 00 00 00  08 00 00 00 00 00 00 00   |..".............|
0x10a8:     4b 05 00 00 12 00 0e 00  20 56 01 00 00 00 00 00   |K....... V......|
0x10b8:     6a 00 00 00 00 00 00 00  15 04 00 00 21 00 19 00   |j...........!...|
0x10c8:     80 02 22 00 00 00 00 00  08 00 00 00 00 00 00 00   |..".............|
0x10d8:     ec 02 00 00 12 00 0e 00  e0 55 01 00 00 00 00 00   |.........U......|
0x10e8:     38 00 00 00 00 00 00 00  01 03 00 00 11 00 19 00   |8...............|
0x10f8:     a0 02 22 00 00 00 00 00  08 00 00 00 00 00 00 00   |..".............|
0x1108:     28 03 00 00 12 00 0e 00  d0 54 01 00 00 00 00 00   |(........T......|
0x1118:     15 00 00 00 00 00 00 00  ea 05 00 00 11 00 10 00   |................|
0x1128:     60 ab 01 00 00 00 00 00  28 00 00 00 00 00 00 00   |`.......(.......|
0x1138:     39 03 00 00 12 00 0e 00  f0 54 01 00 00 00 00 00   |9........T......|
0x1148:     eb 00 00 00 00 00 00 00  76 02 00 00 11 00 19 00   |........v.......|
0x1158:     88 02 22 00 00 00 00 00  08 00 00 00 00 00 00 00   |..".............|
0x1168:     1d 06 00 00 11 00 19 00  00 14 22 00 00 00 00 00   |..........".....|
0x1178:     08 00 00 00 00 00 00 00  00                        |.........       |
; section: .dynstr
0x1180:     00 6c 69 62 73 65 6c 69  6e 75 78 2e 73 6f 2e 31   |.libselinux.so.1|
0x1190:     00 5f 49 54 4d 5f 64 65  72 65 67 69 73 74 65 72   |._ITM_deregister|
0x11a0:     54 4d 43 6c 6f 6e 65 54  61 62 6c 65 00 5f 5f 67   |TMCloneTable.__g|
0x11b0:     6d 6f 6e 5f 73 74 61 72  74 5f 5f 00 5f 49 54 4d   |mon_start__._ITM|
0x11c0:     5f 72 65 67 69 73 74 65  72 54 4d 43 6c 6f 6e 65   |_registerTMClone|
0x11d0:     54 61 62 6c 65 00 5f 69  6e 69 74 00 66 67 65 74   |Table._init.fget|
0x11e0:     66 69 6c 65 63 6f 6e 00  66 72 65 65 63 6f 6e 00   |filecon.freecon.|
0x11f0:     6c 67 65 74 66 69 6c 65  63 6f 6e 00 5f 66 69 6e   |lgetfilecon._fin|
0x1200:     69 00 6c 69 62 63 2e 73  6f 2e 36 00 66 66 6c 75   |i.libc.so.6.fflu|
0x1210:     73 68 00 73 74 72 63 70  79 00 67 6d 74 69 6d 65   |sh.strcpy.gmtime|
0x1220:     5f 72 00 5f 5f 70 72 69  6e 74 66 5f 63 68 6b 00   |_r.__printf_chk.|
0x1230:     66 6e 6d 61 74 63 68 00  72 65 61 64 64 69 72 00   |fnmatch.readdir.|
0x1240:     73 65 74 6c 6f 63 61 6c  65 00 6d 62 72 74 6f 77   |setlocale.mbrtow|
0x1250:     63 00 73 74 72 6e 63 6d  70 00 6f 70 74 69 6e 64   |c.strncmp.optind|
0x1260:     00 73 74 72 72 63 68 72  00 66 66 6c 75 73 68 5f   |.strrchr.fflush_|
0x1270:     75 6e 6c 6f 63 6b 65 64  00 64 63 67 65 74 74 65   |unlocked.dcgette|
0x1280:     78 74 00 73 74 70 6e 63  70 79 00 67 65 74 70 77   |xt.stpncpy.getpw|
0x1290:     75 69 64 00 63 6c 6f 73  65 64 69 72 00 67 65 74   |uid.closedir.get|
0x12a0:     67 72 67 69 64 00 65 72  72 6f 72 00 73 69 67 6e   |grgid.error.sign|
0x12b0:     61 6c 00 6d 62 73 74 6f  77 63 73 00 73 69 67 70   |al.mbstowcs.sigp|
0x12c0:     72 6f 63 6d 61 73 6b 00  5f 5f 73 74 61 63 6b 5f   |rocmask.__stack_|
0x12d0:     63 68 6b 5f 66 61 69 6c  00 5f 5f 6c 78 73 74 61   |chk_fail.__lxsta|
0x12e0:     74 00 69 73 77 70 72 69  6e 74 00 72 65 61 6c 6c   |t.iswprint.reall|
0x12f0:     6f 63 00 61 62 6f 72 74  00 5f 65 78 69 74 00 73   |oc.abort._exit.s|
0x1300:     74 72 73 70 6e 00 70 72  6f 67 72 61 6d 5f 69 6e   |trspn.program_in|
0x1310:     76 6f 63 61 74 69 6f 6e                            |vocation        |
0x1318:     5f 6e 61 6d 65 00                                  |_name.          |   "_name"
0x131e:     73 74 72 66 74 69 6d 65  00 5f                     |strftime._      |
0x1328:     5f 61 73 73 65 72 74 5f  66 61 69 6c 00            |_assert_fail.   |   "_assert_fail"
0x1335:     6c 6f 63 61 6c 74 69 6d  65 5f 72 00 5f 5f 63 74   |localtime_r.__ct|
0x1345:     79 70 65 5f 67 65 74 5f  6d 62 5f 63 75 72 5f 6d   |ype_get_mb_cur_m|
0x1355:     61 78 00 69 73 61 74 74  79 00 67 65 74 70 77 6e   |ax.isatty.getpwn|
0x1365:     61 6d 00 63 61 6c 6c 6f  63 00 73 74 72 6c 65 6e   |am.calloc.strlen|
0x1375:     00 75 6e 67 65 74 63 00  73 69 67 65 6d 70 74 79   |.ungetc.sigempty|
0x1385:     73 65 74 00 6d 65 6d 73  65 74 00 6c 6f 63 61 6c   |set.memset.local|
0x1395:     65 63 6f 6e 76 00 5f 5f  65 72 72 6e 6f 5f 6c 6f   |econv.__errno_lo|
0x13a5:     63 61 74 69 6f 6e 00 6d  65 6d 63 6d 70 00 6d 65   |cation.memcmp.me|
0x13b5:     6d 70 63 70 79 00 75 6e  73 65 74 65 6e 76 00 5f   |mpcpy.unsetenv._|
0x13c5:     73 65 74 6a 6d 70 00 5f  5f 66 70 72 69 6e 74 66   |setjmp.__fprintf|
0x13d5:     5f 63 68 6b 00 73 69 67  61 64 64 73 65 74 00 67   |_chk.sigaddset.g|
0x13e5:     65 74 67 72 6e 61 6d 00  77 63 73 77 69 64 74 68   |etgrnam.wcswidth|
0x13f5:     00 73 74 64 6f 75 74 00  6c 73 65 65 6b 00 6d 65   |.stdout.lseek.me|
0x1405:     6d 63 70 79 00 66 63 6c  6f 73 65 00 73 74 72 74   |mcpy.fclose.strt|
0x1415:     6f 75 6c 00 6d 61 6c 6c  6f 63 00 74 69 6d 65 67   |oul.malloc.timeg|
0x1425:     6d 00 72 61 69 73 65 00  6d 62 73 69 6e 69 74 00   |m.raise.mbsinit.|
0x1435:     74 7a 73 65 74 00 5f 5f  75 66 6c 6f 77 00 6e 6c   |tzset.__uflow.nl|
0x1445:     5f 6c 61 6e 67 69 6e 66  6f 00 6f 70 65 6e 64 69   |_langinfo.opendi|
0x1455:     72 00 5f 5f 63 74 79 70  65 5f 62 5f 6c 6f 63 00   |r.__ctype_b_loc.|
0x1465:     67 65 74 65 6e 76 00 5f  6f 62 73 74 61 63 6b 5f   |getenv._obstack_|
0x1475:     61 6c 6c 6f 63 61 74 65  64 5f 70 00 6f 70 74 61   |allocated_p.opta|
0x1485:     72 67 00 5f 5f 66 72 65  61 64 69 6e 67 00 73 74   |rg.__freading.st|
0x1495:     64 65 72 72 00 77 63 77  69 64 74 68 00 69 6f 63   |derr.wcwidth.ioc|
0x14a5:     74 6c 00 5f 6f 62 73 74  61 63 6b 5f 62 65 67 69   |tl._obstack_begi|
0x14b5:     6e 5f 31 00 5f 6f 62 73  74 61 63 6b 5f 6e 65 77   |n_1._obstack_new|
0x14c5:     63 68 75 6e 6b 00 5f 5f  73 6e 70 72 69 6e 74 66   |chunk.__snprintf|
0x14d5:     5f 63 68 6b 00 72 65 61  64 6c 69 6e 6b 00 66 73   |_chk.readlink.fs|
0x14e5:     63 61 6e 66 00 67 65 74  6f 70 74 5f 6c 6f 6e 67   |canf.getopt_long|
0x14f5:     00 5f 5f 66 78 73 74 61  74 00 66 69 6c 65 6e 6f   |.__fxstat.fileno|
0x1505:     00 67 65 74 68 6f 73 74  6e 61 6d 65 00 5f 6f 62   |.gethostname._ob|
0x1515:     73 74 61 63 6b 5f 6d 65  6d 6f 72 79 5f 75 73 65   |stack_memory_use|
0x1525:     64 00 67 65 74 63 77 64  00 66 77 72 69 74 65 00   |d.getcwd.fwrite.|
0x1535:     67 65 74 74 69 6d 65 6f  66 64 61 79 00 73 69 67   |gettimeofday.sig|
0x1545:     61 63 74 69 6f 6e 00 5f  5f 6d 65 6d 63 70 79 5f   |action.__memcpy_|
0x1555:     63 68 6b 00 73 69 67 69  73 6d 65 6d 62 65 72 00   |chk.sigismember.|
0x1565:     63 6c 6f 63 6b 5f 67 65  74 74 69 6d 65 00 5f 5f   |clock_gettime.__|
0x1575:     66 70 65 6e 64 69 6e 67  00 73 74 72 63 68 72 00   |fpending.strchr.|
0x1585:     69 73 77 63 6e 74 72 6c  00 6d 6b 74 69 6d 65 00   |iswcntrl.mktime.|
0x1595:     70 72 6f 67 72 61 6d 5f  69 6e 76 6f 63 61 74 69   |program_invocati|
0x15a5:     6f 6e 5f 73 68 6f 72 74  5f 6e 61 6d 65 00 66 64   |on_short_name.fd|
0x15b5:     6f 70 65 6e 00 77 63 73  74 6f 6d 62 73 00 5f 5f   |open.wcstombs.__|
0x15c5:     63 74 79 70 65 5f 74 6f  75 70 70 65 72 5f 6c 6f   |ctype_toupper_lo|
0x15d5:     63 00 5f 5f 63 74 79 70  65 5f 74 6f 6c 6f 77 65   |c.__ctype_tolowe|
0x15e5:     72 5f 6c 6f 63 00 6f 62  73 74 61 63 6b 5f 61 6c   |r_loc.obstack_al|
0x15f5:     6c 6f 63 5f 66 61 69 6c  65 64 5f 68 61 6e 64 6c   |loc_failed_handl|
0x1605:     65 72 00 5f 5f 63 78 61  5f 66 69 6e 61 6c 69 7a   |er.__cxa_finaliz|
0x1615:     65 00 5f 5f 73 70 72 69  6e 74 66 5f 63 68 6b 00   |e.__sprintf_chk.|
0x1625:     5f 5f 78 73 74 61 74 00  67 65 74 78 61 74 74 72   |__xstat.getxattr|
0x1635:     00 6d 65 6d 6d 6f 76 65  00 5f 6f 62 73 74 61 63   |.memmove._obstac|
0x1645:     6b 5f 62 65 67 69 6e 00  62 69 6e 64 74 65 78 74   |k_begin.bindtext|
0x1655:     64 6f 6d 61 69 6e 00 66  77 72 69 74 65 5f 75 6e   |domain.fwrite_un|
0x1665:     6c 6f 63 6b 65 64 00 73  74 72 63 6d 70 00 74 63   |locked.strcmp.tc|
0x1675:     67 65 74 70 67 72 70 00  5f 5f 6c 69 62 63 5f 73   |getpgrp.__libc_s|
0x1685:     74 61 72 74 5f 6d 61 69  6e 00 64 69 72 66 64 00   |tart_main.dirfd.|
0x1695:     66 73 65 65 6b 6f 00 73  74 72 63 6f 6c 6c 00 73   |fseeko.strcoll.s|
0x16a5:     6e 70 72 69 6e 74 66 00  5f 5f 6f 76 65 72 66 6c   |nprintf.__overfl|
0x16b5:     6f 77 00 5f 5f 73 74 72  74 6f 75 6c 5f 69 6e 74   |ow.__strtoul_int|
0x16c5:     65 72 6e 61 6c 00 5f 6f  62 73 74 61 63 6b 5f 66   |ernal._obstack_f|
0x16d5:     72 65 65 00 66 70 75 74  73 5f 75 6e 6c 6f 63 6b   |ree.fputs_unlock|
0x16e5:     65 64 00 5f 5f 70 72 6f  67 6e 61 6d 65 00 5f 5f   |ed.__progname.__|
0x16f5:     70 72 6f 67 6e 61 6d 65  5f 66 75 6c 6c 00 5f 5f   |progname_full.__|
0x1705:     63 78 61 5f 61 74 65 78  69 74 00 5f 65 64 61 74   |cxa_atexit._edat|
0x1715:     61 00 5f 5f 62 73 73 5f  73 74 61 72 74 00 5f 65   |a.__bss_start._e|
0x1725:     6e 64 00 71 75 6f 74 65  5f 71 75 6f 74 69 6e 67   |nd.quote_quoting|
0x1735:     5f 6f 70 74 69 6f 6e 73  00 56 65 72 73 69 6f 6e   |_options.Version|
0x1745:     00 61 72 67 6d 61 74 63  68 5f 64 69 65 00 6c 73   |.argmatch_die.ls|
0x1755:     5f 6d 6f 64 65 00 5f 49  4f 5f 73 74 64 69 6e 5f   |_mode._IO_stdin_|
0x1765:     75 73 65 64 00 71 75 6f  74 69 6e 67 5f 73 74 79   |used.quoting_sty|
0x1775:     6c 65 5f 76 61 6c 73 00  71 75 6f 74 69 6e 67 5f   |le_vals.quoting_|
0x1785:     73 74 79 6c 65 5f 61 72  67 73 00 65 78 69 74 5f   |style_args.exit_|
0x1795:     66 61 69 6c 75 72 65 00  70 72 6f 67 72 61 6d 5f   |failure.program_|
0x17a5:     6e 61 6d 65 00 76 65 72  73 69 6f 6e 5f 65 74 63   |name.version_etc|
0x17b5:     5f 63 6f 70 79 72 69 67  68 74 00 47 4c 49 42 43   |_copyright.GLIBC|
0x17c5:     5f 32 2e 31 34 00 47 4c  49 42 43 5f 32 2e 34 00   |_2.14.GLIBC_2.4.|
0x17d5:     47 4c 49 42 43 5f 32 2e  31 37 00 47 4c 49 42 43   |GLIBC_2.17.GLIBC|
0x17e5:     5f 32 2e 33 2e 34 00 47  4c 49 42 43 5f 32 2e 32   |_2.3.4.GLIBC_2.2|
0x17f5:     2e 35 00 47 4c 49 42 43  5f 32 2e 33 00 00         |.5.GLIBC_2.3..  |
; section: .gnu.version
0x1802:     00 00 02 00 03 00 03 00  03 00 04 00 03 00 03 00   |................|
0x1812:     03 00 03 00 03 00 00 00  03 00 03 00 03 00 03 00   |................|
0x1822:     03 00 03 00 03 00 03 00  03 00 03 00 03 00 05 00   |................|
0x1832:     03 00 03 00 03 00 03 00  03 00 03 00 03 00 03 00   |................|
0x1842:     03 00 03 00 06 00 03 00  03 00 03 00 03 00 03 00   |................|
0x1852:     03 00 03 00 00 00 03 00  03 00 03 00 03 00 03 00   |................|
0x1862:     03 00 03 00 03 00 03 00  03 00 03 00 03 00 03 00   |................|
0x1872:     03 00 03 00 03 00 03 00  03 00 00 00 03 00 03 00   |................|
0x1882:     03 00 03 00 04 00 03 00  00 00 07 00 03 00 00 00   |................|
0x1892:     03 00 03 00 03 00 03 00  03 00 03 00 03 00 03 00   |................|
0x18a2:     03 00 03 00 03 00 03 00  03 00 03 00 03 00 03 00   |................|
0x18b2:     03 00 03 00 03 00 04 00  03 00 03 00 03 00 03 00   |................|
0x18c2:     03 00 03 00 03 00 03 00  03 00 03 00 03 00 02 00   |................|
0x18d2:     00 00 03 00 03 00 03 00  03 00 04 00 00 00 03 00   |................|
0x18e2:     03 00 03 00 03 00 03 00  02 00 02 00 04 00 03 00   |................|
0x18f2:     01 00 01 00 03 00 01 00  03 00 01 00 01 00 01 00   |................|
0x1902:     01 00 01 00 01 00 01 00  03 00 01 00 01 00 01 00   |................|
0x1912:     01 00 01 00 01 00 03 00  01 00 03 00 01 00 03 00   |................|
0x1922:     01 00 01 00 01 00 03 00  01 00 ??                  |..........?     |
; section: .gnu.version_r
0x1930:     01 00 06 00 82 00 00 00  10 00 00 00 00 00 00 00   |................|
0x1940:     94 91 96 06 00 00 07 00  40 06 00 00 10 00 00 00   |........@.......|
0x1950:     14 69 69 0d 00 00 06 00  4b 06 00 00 10 00 00 00   |.ii.....K.......|
0x1960:     97 91 96 06 00 00 05 00  55 06 00 00 10 00 00 00   |........U.......|
0x1970:     74 19 69 09 00 00 04 00  60 06 00 00 10 00 00 00   |t.i.....`.......|
0x1980:     75 1a 69 09 00 00 03 00  6c 06 00 00 10 00 00 00   |u.i.....l.......|
0x1990:     13 69 69 0d 00 00 02 00  78 06 00 00 00 00 00 00   |.ii.....x.......|
0x19a0:     f0                                                 |.               |
; section: .rela.dyn
0x19a0:     f0 ef 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x19b0:     50 59 00 00 00 00 00 00  f8 ef 21 00 00 00 00 00   |PY........!.....|
0x19c0:     08 00 00 00 00 00 00 00  10 59 00 00 00 00 00 00   |.........Y......|
0x19d0:     00 f0 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x19e0:     30 65 00 00 00 00 00 00  08 f0 21 00 00 00 00 00   |0e........!.....|
0x19f0:     08 00 00 00 00 00 00 00  70 6c 00 00 00 00 00 00   |........pl......|
0x1a00:     10 f0 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x1a10:     40 65 00 00 00 00 00 00  18 f0 21 00 00 00 00 00   |@e........!.....|
0x1a20:     08 00 00 00 00 00 00 00  30 6d 00 00 00 00 00 00   |........0m......|
0x1a30:     20 f0 21 00 00 00 00 00  08 00 00 00 00 00 00 00   | .!.............|
0x1a40:     70 60 00 00 00 00 00 00  28 f0 21 00 00 00 00 00   |p`......(.!.....|
0x1a50:     08 00 00 00 00 00 00 00  d0 6c 00 00 00 00 00 00   |.........l......|
0x1a60:     30 f0 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |0.!.............|
0x1a70:     80 60 00 00 00 00 00 00  38 f0 21 00 00 00 00 00   |.`......8.!.....|
0x1a80:     08 00 00 00 00 00 00 00  90 6d 00 00 00 00 00 00   |.........m......|
0x1a90:     40 f0 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |@.!.............|
0x1aa0:     f0 b5 00 00 00 00 00 00  48 f0 21 00 00 00 00 00   |........H.!.....|
0x1ab0:     08 00 00 00 00 00 00 00  a0 b9 00 00 00 00 00 00   |................|
0x1ac0:     50 f0 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |P.!.............|
0x1ad0:     80 b5 00 00 00 00 00 00  58 f0 21 00 00 00 00 00   |........X.!.....|
0x1ae0:     08 00 00 00 00 00 00 00  f0 b8 00 00 00 00 00 00   |................|
0x1af0:     60 f0 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |`.!.............|
0x1b00:     70 b8 00 00 00 00 00 00  68 f0 21 00 00 00 00 00   |p.......h.!.....|
0x1b10:     08 00 00 00 00 00 00 00  50 ba 00 00 00 00 00 00   |........P.......|
0x1b20:     70 f0 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |p.!.............|
0x1b30:     f0 b7 00 00 00 00 00 00  78 f0 21 00 00 00 00 00   |........x.!.....|
0x1b40:     08 00 00 00 00 00 00 00  00 70 00 00 00 00 00 00   |.........p......|
0x1b50:     80 f0 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x1b60:     c0 64 00 00 00 00 00 00  88 f0 21 00 00 00 00 00   |.d........!.....|
0x1b70:     08 00 00 00 00 00 00 00  90 6a 00 00 00 00 00 00   |.........j......|
0x1b80:     90 f0 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x1b90:     f0 64 00 00 00 00 00 00  98 f0 21 00 00 00 00 00   |.d........!.....|
0x1ba0:     08 00 00 00 00 00 00 00  80 6b 00 00 00 00 00 00   |.........k......|
0x1bb0:     a0 f0 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x1bc0:     f0 5f 00 00 00 00 00 00  a8 f0 21 00 00 00 00 00   |._........!.....|
0x1bd0:     08 00 00 00 00 00 00 00  00 6b 00 00 00 00 00 00   |.........k......|
0x1be0:     b0 f0 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x1bf0:     30 60 00 00 00 00 00 00  b8 f0 21 00 00 00 00 00   |0`........!.....|
0x1c00:     08 00 00 00 00 00 00 00  f0 6b 00 00 00 00 00 00   |.........k......|
0x1c10:     c0 f0 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x1c20:     60 65 00 00 00 00 00 00  c8 f0 21 00 00 00 00 00   |`e........!.....|
0x1c30:     08 00 00 00 00 00 00 00  a0 6f 00 00 00 00 00 00   |.........o......|
0x1c40:     d0 f0 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x1c50:     50 65 00 00 00 00 00 00  d8 f0 21 00 00 00 00 00   |Pe........!.....|
0x1c60:     08 00 00 00 00 00 00 00  40 6f 00 00 00 00 00 00   |........@o......|
0x1c70:     00 f1 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x1c80:     80 b0 00 00 00 00 00 00  08 f1 21 00 00 00 00 00   |..........!.....|
0x1c90:     08 00 00 00 00 00 00 00  70 b3 00 00 00 00 00 00   |........p.......|
0x1ca0:     10 f1 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x1cb0:     b0 af 00 00 00 00 00 00  18 f1 21 00 00 00 00 00   |..........!.....|
0x1cc0:     08 00 00 00 00 00 00 00  80 b4 00 00 00 00 00 00   |................|
0x1cd0:     20 f1 21 00 00 00 00 00  08 00 00 00 00 00 00 00   | .!.............|
0x1ce0:     00 b1 00 00 00 00 00 00  28 f1 21 00 00 00 00 00   |........(.!.....|
0x1cf0:     08 00 00 00 00 00 00 00  10 6a 00 00 00 00 00 00   |.........j......|
0x1d00:     30 f1 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |0.!.............|
0x1d10:     80 b1 00 00 00 00 00 00  38 f1 21 00 00 00 00 00   |........8.!.....|
0x1d20:     08 00 00 00 00 00 00 00  70 b7 00 00 00 00 00 00   |........p.......|
0x1d30:     40 f1 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |@.!.............|
0x1d40:     20 af 00 00 00 00 00 00  48 f1 21 00 00 00 00 00   | .......H.!.....|
0x1d50:     08 00 00 00 00 00 00 00  f0 b3 00 00 00 00 00 00   |................|
0x1d60:     50 f1 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |P.!.............|
0x1d70:     30 b0 00 00 00 00 00 00  58 f1 21 00 00 00 00 00   |0.......X.!.....|
0x1d80:     08 00 00 00 00 00 00 00  60 b2 00 00 00 00 00 00   |........`.......|
0x1d90:     60 f1 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |`.!.............|
0x1da0:     10 b2 00 00 00 00 00 00  68 f1 21 00 00 00 00 00   |........h.!.....|
0x1db0:     08 00 00 00 00 00 00 00  60 b6 00 00 00 00 00 00   |........`.......|
0x1dc0:     70 f1 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |p.!.............|
0x1dd0:     c0 b1 00 00 00 00 00 00  78 f1 21 00 00 00 00 00   |........x.!.....|
0x1de0:     08 00 00 00 00 00 00 00  80 98 00 00 00 00 00 00   |................|
0x1df0:     80 f1 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x1e00:     f0 af 00 00 00 00 00 00  88 f1 21 00 00 00 00 00   |..........!.....|
0x1e10:     08 00 00 00 00 00 00 00  00 b5 00 00 00 00 00 00   |................|
0x1e20:     90 f1 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x1e30:     70 af 00 00 00 00 00 00  98 f1 21 00 00 00 00 00   |p.........!.....|
0x1e40:     08 00 00 00 00 00 00 00  f0 b2 00 00 00 00 00 00   |................|
0x1e50:     a0 f1 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x1e60:     40 b1 00 00 00 00 00 00  a8 f1 21 00 00 00 00 00   |@.........!.....|
0x1e70:     08 00 00 00 00 00 00 00  f0 b6 00 00 00 00 00 00   |................|
0x1e80:     b0 f1 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x1e90:     c0 b0 00 00 00 00 00 00  b8 f1 21 00 00 00 00 00   |..........!.....|
0x1ea0:     08 00 00 00 00 00 00 00  00 98 00 00 00 00 00 00   |................|
0x1eb0:     c0 f1 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x1ec0:     ec a6 01 00 00 00 00 00  c8 f1 21 00 00 00 00 00   |..........!.....|
0x1ed0:     08 00 00 00 00 00 00 00  5c 7f 01 00 00 00 00 00   |........\.......|
0x1ee0:     d0 f1 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x1ef0:     60 7f 01 00 00 00 00 00  d8 f1 21 00 00 00 00 00   |`.........!.....|
0x1f00:     08 00 00 00 00 00 00 00  66 7f 01 00 00 00 00 00   |........f.......|
0x1f10:     e0 f1 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x1f20:     6c 7f 01 00 00 00 00 00  e8 f1 21 00 00 00 00 00   |l.........!.....|
0x1f30:     08 00 00 00 00 00 00 00  6f 7f 01 00 00 00 00 00   |........o.......|
0x1f40:     f0 f1 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x1f50:     74 7f 01 00 00 00 00 00  f8 f1 21 00 00 00 00 00   |t.........!.....|
0x1f60:     08 00 00 00 00 00 00 00  7c 7f 01 00 00 00 00 00   |........|.......|
0x1f70:     00 f2 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x1f80:     79 7f 01 00 00 00 00 00  20 f2 21 00 00 00 00 00   |y....... .!.....|
0x1f90:     08 00 00 00 00 00 00 00  80 7f 01 00 00 00 00 00   |................|
0x1fa0:     28 f2 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |(.!.............|
0x1fb0:     1c a3 01 00 00 00 00 00  30 f2 21 00 00 00 00 00   |........0.!.....|
0x1fc0:     08 00 00 00 00 00 00 00  86 7f 01 00 00 00 00 00   |................|
0x1fd0:     38 f2 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |8.!.............|
0x1fe0:     8a 7f 01 00 00 00 00 00  40 f2 21 00 00 00 00 00   |........@.!.....|
0x1ff0:     08 00 00 00 00 00 00 00  90 7f 01 00 00 00 00 00   |................|
0x2000:     60 f2 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |`.!.............|
0x2010:     6f 7f 01 00 00 00 00 00  68 f2 21 00 00 00 00 00   |o.......h.!.....|
0x2020:     08 00 00 00 00 00 00 00  fd 7d 01 00 00 00 00 00   |.........}......|
0x2030:     70 f2 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |p.!.............|
0x2040:     ef 7d 01 00 00 00 00 00  78 f2 21 00 00 00 00 00   |.}......x.!.....|
0x2050:     08 00 00 00 00 00 00 00  97 7f 01 00 00 00 00 00   |................|
0x2060:     80 f2 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x2070:     1b 7c 01 00 00 00 00 00  a0 f2 21 00 00 00 00 00   |.|........!.....|
0x2080:     08 00 00 00 00 00 00 00  a1 7f 01 00 00 00 00 00   |................|
0x2090:     a8 f2 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x20a0:     a9 7f 01 00 00 00 00 00  b0 f2 21 00 00 00 00 00   |..........!.....|
0x20b0:     08 00 00 00 00 00 00 00  ae 7f 01 00 00 00 00 00   |................|
0x20c0:     b8 f2 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x20d0:     b5 7f 01 00 00 00 00 00  c0 f2 21 00 00 00 00 00   |..........!.....|
0x20e0:     08 00 00 00 00 00 00 00  c0 7f 01 00 00 00 00 00   |................|
0x20f0:     c8 f2 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x2100:     c7 7f 01 00 00 00 00 00  d0 f2 21 00 00 00 00 00   |..........!.....|
0x2110:     08 00 00 00 00 00 00 00  d0 7f 01 00 00 00 00 00   |................|
0x2120:     e0 f2 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x2130:     6a 80 01 00 00 00 00 00  00 f3 21 00 00 00 00 00   |j.........!.....|
0x2140:     08 00 00 00 00 00 00 00  d8 a6 01 00 00 00 00 00   |................|
0x2150:     20 f3 21 00 00 00 00 00  08 00 00 00 00 00 00 00   | .!.............|
0x2160:     de 7f 01 00 00 00 00 00  40 f3 21 00 00 00 00 00   |........@.!.....|
0x2170:     08 00 00 00 00 00 00 00  e8 7f 01 00 00 00 00 00   |................|
0x2180:     60 f3 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |`.!.............|
0x2190:     ee 7f 01 00 00 00 00 00  80 f3 21 00 00 00 00 00   |..........!.....|
0x21a0:     08 00 00 00 00 00 00 00  f8 7f 01 00 00 00 00 00   |................|
0x21b0:     a0 f3 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x21c0:     10 80 01 00 00 00 00 00  c0 f3 21 00 00 00 00 00   |..........!.....|
0x21d0:     08 00 00 00 00 00 00 00  1f 80 01 00 00 00 00 00   |................|
0x21e0:     e0 f3 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x21f0:     25 80 01 00 00 00 00 00  00 f4 21 00 00 00 00 00   |%.........!.....|
0x2200:     08 00 00 00 00 00 00 00  2f 80 01 00 00 00 00 00   |......../.......|
0x2210:     20 f4 21 00 00 00 00 00  08 00 00 00 00 00 00 00   | .!.............|
0x2220:     3f 80 01 00 00 00 00 00  40 f4 21 00 00 00 00 00   |?.......@.!.....|
0x2230:     08 00 00 00 00 00 00 00  48 80 01 00 00 00 00 00   |........H.......|
0x2240:     60 f4 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |`.!.............|
0x2250:     5b 80 01 00 00 00 00 00  80 f4 21 00 00 00 00 00   |[.........!.....|
0x2260:     08 00 00 00 00 00 00 00  ef 7d 01 00 00 00 00 00   |.........}......|
0x2270:     a0 f4 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x2280:     d2 7d 01 00 00 00 00 00  c0 f4 21 00 00 00 00 00   |.}........!.....|
0x2290:     08 00 00 00 00 00 00 00  63 80 01 00 00 00 00 00   |........c.......|
0x22a0:     e0 f4 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x22b0:     6e 80 01 00 00 00 00 00  00 f5 21 00 00 00 00 00   |n.........!.....|
0x22c0:     08 00 00 00 00 00 00 00  7d 80 01 00 00 00 00 00   |........}.......|
0x22d0:     20 f5 21 00 00 00 00 00  08 00 00 00 00 00 00 00   | .!.............|
0x22e0:     86 80 01 00 00 00 00 00  40 f5 21 00 00 00 00 00   |........@.!.....|
0x22f0:     08 00 00 00 00 00 00 00  90 80 01 00 00 00 00 00   |................|
0x2300:     60 f5 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |`.!.............|
0x2310:     93 80 01 00 00 00 00 00  80 f5 21 00 00 00 00 00   |..........!.....|
0x2320:     08 00 00 00 00 00 00 00  78 a2 01 00 00 00 00 00   |........x.......|
0x2330:     a0 f5 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x2340:     ac 80 01 00 00 00 00 00  c0 f5 21 00 00 00 00 00   |..........!.....|
0x2350:     08 00 00 00 00 00 00 00  b1 80 01 00 00 00 00 00   |................|
0x2360:     e0 f5 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x2370:     21 7e 01 00 00 00 00 00  00 f6 21 00 00 00 00 00   |!~........!.....|
0x2380:     08 00 00 00 00 00 00 00  b8 80 01 00 00 00 00 00   |................|
0x2390:     20 f6 21 00 00 00 00 00  08 00 00 00 00 00 00 00   | .!.............|
0x23a0:     c4 80 01 00 00 00 00 00  40 f6 21 00 00 00 00 00   |........@.!.....|
0x23b0:     08 00 00 00 00 00 00 00  cc 80 01 00 00 00 00 00   |................|
0x23c0:     60 f6 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |`.!.............|
0x23d0:     33 7e 01 00 00 00 00 00  80 f6 21 00 00 00 00 00   |3~........!.....|
0x23e0:     08 00 00 00 00 00 00 00  d7 80 01 00 00 00 00 00   |................|
0x23f0:     a0 f6 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x2400:     04 7e 01 00 00 00 00 00  c0 f6 21 00 00 00 00 00   |.~........!.....|
0x2410:     08 00 00 00 00 00 00 00  e1 80 01 00 00 00 00 00   |................|
0x2420:     e0 f6 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x2430:     f6 7d 01 00 00 00 00 00  00 f7 21 00 00 00 00 00   |.}........!.....|
0x2440:     08 00 00 00 00 00 00 00  f4 80 01 00 00 00 00 00   |................|
0x2450:     20 f7 21 00 00 00 00 00  08 00 00 00 00 00 00 00   | .!.............|
0x2460:     fd 7d 01 00 00 00 00 00  40 f7 21 00 00 00 00 00   |.}......@.!.....|
0x2470:     08 00 00 00 00 00 00 00  fc 80 01 00 00 00 00 00   |................|
0x2480:     60 f7 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |`.!.............|
0x2490:     0d 7e 01 00 00 00 00 00  80 f7 21 00 00 00 00 00   |.~........!.....|
0x24a0:     08 00 00 00 00 00 00 00  15 7e 01 00 00 00 00 00   |.........~......|
0x24b0:     a0 f7 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x24c0:     07 81 01 00 00 00 00 00  c0 f7 21 00 00 00 00 00   |..........!.....|
0x24d0:     08 00 00 00 00 00 00 00  12 81 01 00 00 00 00 00   |................|
0x24e0:     e0 f7 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x24f0:     1a 81 01 00 00 00 00 00  00 f8 21 00 00 00 00 00   |..........!.....|
0x2500:     08 00 00 00 00 00 00 00  21 81 01 00 00 00 00 00   |........!.......|
0x2510:     20 f8 21 00 00 00 00 00  08 00 00 00 00 00 00 00   | .!.............|
0x2520:     1b 7c 01 00 00 00 00 00  60 f8 21 00 00 00 00 00   |.|......`.!.....|
0x2530:     08 00 00 00 00 00 00 00  92 7d 01 00 00 00 00 00   |.........}......|
0x2540:     68 f8 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |h.!.............|
0x2550:     85 81 01 00 00 00 00 00  70 f8 21 00 00 00 00 00   |........p.!.....|
0x2560:     08 00 00 00 00 00 00 00  88 81 01 00 00 00 00 00   |................|
0x2570:     78 f8 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |x.!.............|
0x2580:     58 80 01 00 00 00 00 00  80 f8 21 00 00 00 00 00   |X.........!.....|
0x2590:     08 00 00 00 00 00 00 00  6c 7f 01 00 00 00 00 00   |........l.......|
0x25a0:     88 f8 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x25b0:     8b 81 01 00 00 00 00 00  90 f8 21 00 00 00 00 00   |..........!.....|
0x25c0:     08 00 00 00 00 00 00 00  8e 81 01 00 00 00 00 00   |................|
0x25d0:     98 f8 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x25e0:     91 81 01 00 00 00 00 00  a0 f8 21 00 00 00 00 00   |..........!.....|
0x25f0:     08 00 00 00 00 00 00 00  94 81 01 00 00 00 00 00   |................|
0x2600:     a8 f8 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x2610:     c7 81 01 00 00 00 00 00  b0 f8 21 00 00 00 00 00   |..........!.....|
0x2620:     08 00 00 00 00 00 00 00  97 81 01 00 00 00 00 00   |................|
0x2630:     b8 f8 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x2640:     9a 81 01 00 00 00 00 00  c0 f8 21 00 00 00 00 00   |..........!.....|
0x2650:     08 00 00 00 00 00 00 00  9d 81 01 00 00 00 00 00   |................|
0x2660:     c8 f8 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x2670:     1e 81 01 00 00 00 00 00  d0 f8 21 00 00 00 00 00   |..........!.....|
0x2680:     08 00 00 00 00 00 00 00  a0 81 01 00 00 00 00 00   |................|
0x2690:     d8 f8 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x26a0:     a3 81 01 00 00 00 00 00  e0 f8 21 00 00 00 00 00   |..........!.....|
0x26b0:     08 00 00 00 00 00 00 00  a6 81 01 00 00 00 00 00   |................|
0x26c0:     e8 f8 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x26d0:     a9 81 01 00 00 00 00 00  f0 f8 21 00 00 00 00 00   |..........!.....|
0x26e0:     08 00 00 00 00 00 00 00  0d 80 01 00 00 00 00 00   |................|
0x26f0:     f8 f8 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x2700:     ac 81 01 00 00 00 00 00  00 f9 21 00 00 00 00 00   |..........!.....|
0x2710:     08 00 00 00 00 00 00 00  af 81 01 00 00 00 00 00   |................|
0x2720:     08 f9 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x2730:     b2 81 01 00 00 00 00 00  10 f9 21 00 00 00 00 00   |..........!.....|
0x2740:     08 00 00 00 00 00 00 00  b5 81 01 00 00 00 00 00   |................|
0x2750:     18 f9 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x2760:     b8 81 01 00 00 00 00 00  40 f9 21 00 00 00 00 00   |........@.!.....|
0x2770:     08 00 00 00 00 00 00 00  6f 7f 01 00 00 00 00 00   |........o.......|
0x2780:     48 f9 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |H.!.............|
0x2790:     bb 81 01 00 00 00 00 00  50 f9 21 00 00 00 00 00   |........P.!.....|
0x27a0:     08 00 00 00 00 00 00 00  86 80 01 00 00 00 00 00   |................|
0x27b0:     58 f9 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |X.!.............|
0x27c0:     7d 80 01 00 00 00 00 00  80 f9 21 00 00 00 00 00   |}.........!.....|
0x27d0:     08 00 00 00 00 00 00 00  89 7d 01 00 00 00 00 00   |.........}......|
0x27e0:     88 f9 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x27f0:     c1 81 01 00 00 00 00 00  90 f9 21 00 00 00 00 00   |..........!.....|
0x2800:     08 00 00 00 00 00 00 00  c6 81 01 00 00 00 00 00   |................|
0x2810:     98 f9 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x2820:     a0 7d 01 00 00 00 00 00  b0 f9 21 00 00 00 00 00   |.}........!.....|
0x2830:     08 00 00 00 00 00 00 00  10 80 01 00 00 00 00 00   |................|
0x2840:     b8 f9 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x2850:     90 80 01 00 00 00 00 00  e0 f9 21 00 00 00 00 00   |..........!.....|
0x2860:     08 00 00 00 00 00 00 00  c4 80 01 00 00 00 00 00   |................|
0x2870:     e8 f9 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x2880:     bf a6 01 00 00 00 00 00  f0 f9 21 00 00 00 00 00   |..........!.....|
0x2890:     08 00 00 00 00 00 00 00  c5 a6 01 00 00 00 00 00   |................|
0x28a0:     f8 f9 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x28b0:     d2 a6 01 00 00 00 00 00  00 fa 21 00 00 00 00 00   |..........!.....|
0x28c0:     08 00 00 00 00 00 00 00  df a6 01 00 00 00 00 00   |................|
0x28d0:     08 fa 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x28e0:     0c af 01 00 00 00 00 00  10 fa 21 00 00 00 00 00   |..........!.....|
0x28f0:     08 00 00 00 00 00 00 00  f3 a6 01 00 00 00 00 00   |................|
0x2900:     18 fa 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |..!.............|
0x2910:     d8 a6 01 00 00 00 00 00  20 fa 21 00 00 00 00 00   |........ .!.....|
0x2920:     08 00 00 00 00 00 00 00  a0 7d 01 00 00 00 00 00   |.........}......|
0x2930:     28 fa 21 00 00 00 00 00  08 00 00 00 00 00 00 00   |(.!.............|
0x2940:     fb a6 01 00 00 00 00 00  08 00 22 00 00 00 00 00   |..........".....|
0x2950:     08 00 00 00 00 00 00 00  08 00 22 00 00 00 00 00   |..........".....|
0x2960:     40 00 22 00 00 00 00 00  08 00 00 00 00 00 00 00   |@.".............|
0x2970:     26 81 01 00 00 00 00 00  48 00 22 00 00 00 00 00   |&.......H.".....|
0x2980:     08 00 00 00 00 00 00 00  30 81 01 00 00 00 00 00   |........0.......|
0x2990:     68 00 22 00 00 00 00 00  08 00 00 00 00 00 00 00   |h.".............|
0x29a0:     3c 81 01 00 00 00 00 00  78 00 22 00 00 00 00 00   |<.......x.".....|
0x29b0:     08 00 00 00 00 00 00 00  5e 7d 01 00 00 00 00 00   |........^}......|
0x29c0:     98 00 22 00 00 00 00 00  08 00 00 00 00 00 00 00   |..".............|
0x29d0:     ee 7b 01 00 00 00 00 00  c8 00 22 00 00 00 00 00   |.{........".....|
0x29e0:     08 00 00 00 00 00 00 00  3f 81 01 00 00 00 00 00   |........?.......|
0x29f0:     d8 00 22 00 00 00 00 00  08 00 00 00 00 00 00 00   |..".............|
0x2a00:     45 81 01 00 00 00 00 00  e8 00 22 00 00 00 00 00   |E.........".....|
0x2a10:     08 00 00 00 00 00 00 00  54 81 01 00 00 00 00 00   |........T.......|
0x2a20:     f8 00 22 00 00 00 00 00  08 00 00 00 00 00 00 00   |..".............|
0x2a30:     4b 81 01 00 00 00 00 00  08 01 22 00 00 00 00 00   |K.........".....|
0x2a40:     08 00 00 00 00 00 00 00  51 81 01 00 00 00 00 00   |........Q.......|
0x2a50:     18 01 22 00 00 00 00 00  08 00 00 00 00 00 00 00   |..".............|
0x2a60:     51 81 01 00 00 00 00 00  48 01 22 00 00 00 00 00   |Q.......H.".....|
0x2a70:     08 00 00 00 00 00 00 00  57 81 01 00 00 00 00 00   |........W.......|
0x2a80:     58 01 22 00 00 00 00 00  08 00 00 00 00 00 00 00   |X.".............|
0x2a90:     4b 81 01 00 00 00 00 00  68 01 22 00 00 00 00 00   |K.......h.".....|
0x2aa0:     08 00 00 00 00 00 00 00  5d 81 01 00 00 00 00 00   |........].......|
0x2ab0:     78 01 22 00 00 00 00 00  08 00 00 00 00 00 00 00   |x.".............|
0x2ac0:     63 81 01 00 00 00 00 00  88 01 22 00 00 00 00 00   |c.........".....|
0x2ad0:     08 00 00 00 00 00 00 00  69 81 01 00 00 00 00 00   |........i.......|
0x2ae0:     98 01 22 00 00 00 00 00  08 00 00 00 00 00 00 00   |..".............|
0x2af0:     6f 81 01 00 00 00 00 00  a8 01 22 00 00 00 00 00   |o.........".....|
0x2b00:     08 00 00 00 00 00 00 00  75 81 01 00 00 00 00 00   |........u.......|
0x2b10:     b8 01 22 00 00 00 00 00  08 00 00 00 00 00 00 00   |..".............|
0x2b20:     7b 81 01 00 00 00 00 00  d8 01 22 00 00 00 00 00   |{.........".....|
0x2b30:     08 00 00 00 00 00 00 00  81 81 01 00 00 00 00 00   |................|
0x2b40:     e8 01 22 00 00 00 00 00  08 00 00 00 00 00 00 00   |..".............|
0x2b50:     a0 a2 01 00 00 00 00 00  f0 01 22 00 00 00 00 00   |..........".....|
0x2b60:     08 00 00 00 00 00 00 00  b0 c2 00 00 00 00 00 00   |................|
0x2b70:     40 02 22 00 00 00 00 00  08 00 00 00 00 00 00 00   |@.".............|
0x2b80:     50 02 22 00 00 00 00 00  58 02 22 00 00 00 00 00   |P.".....X.".....|
0x2b90:     08 00 00 00 00 00 00 00  20 14 22 00 00 00 00 00   |........ .".....|
0x2ba0:     60 02 22 00 00 00 00 00  08 00 00 00 00 00 00 00   |`.".............|
0x2bb0:     a0 53 01 00 00 00 00 00  c8 ff 21 00 00 00 00 00   |.S........!.....|
0x2bc0:     06 00 00 00 07 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2bd0:     d0 ff 21 00 00 00 00 00  06 00 00 00 0b 00 00 00   |..!.............|
0x2be0:     00 00 00 00 00 00 00 00  d8 ff 21 00 00 00 00 00   |..........!.....|
0x2bf0:     06 00 00 00 38 00 00 00  00 00 00 00 00 00 00 00   |....8...........|
0x2c00:     e0 ff 21 00 00 00 00 00  06 00 00 00 44 00 00 00   |..!.........D...|
0x2c10:     00 00 00 00 00 00 00 00  e8 ff 21 00 00 00 00 00   |..........!.....|
0x2c20:     06 00 00 00 4e 00 00 00  00 00 00 00 00 00 00 00   |....N...........|
0x2c30:     f0 ff 21 00 00 00 00 00  06 00 00 00 6e 00 00 00   |..!.........n...|
0x2c40:     00 00 00 00 00 00 00 00  f8 ff 21 00 00 00 00 00   |..........!.....|
0x2c50:     06 00 00 00 72 00 00 00  00 00 00 00 00 00 00 00   |....r...........|
0x2c60:     80 02 22 00 00 00 00 00  05 00 00 00 77 00 00 00   |..".........w...|
0x2c70:     00 00 00 00 00 00 00 00  88 02 22 00 00 00 00 00   |..........".....|
0x2c80:     05 00 00 00 93 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2c90:     90 02 22 00 00 00 00 00  05 00 00 00 7a 00 00 00   |..".........z...|
0x2ca0:     00 00 00 00 00 00 00 00  a0 02 22 00 00 00 00 00   |..........".....|
0x2cb0:     05 00 00 00 8f 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2cc0:     a8 02 22 00 00 00 00 00  05 00 00 00 84 00 00 00   |..".............|
0x2cd0:     00 00 00 00 00 00 00 00  c0 02 22 00 00 00 00 00   |..........".....|
0x2ce0:     05 00 00 00 8b 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2cf0:     50                                                 |P               |
; section: .rela.plt
0x2cf0:     50 fc 21 00 00 00 00 00  07 00 00 00 01 00 00 00   |P.!.............|
0x2d00:     00 00 00 00 00 00 00 00  58 fc 21 00 00 00 00 00   |........X.!.....|
0x2d10:     07 00 00 00 02 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d20:     60 fc 21 00 00 00 00 00  07 00 00 00 03 00 00 00   |`.!.............|
0x2d30:     00 00 00 00 00 00 00 00  68 fc 21 00 00 00 00 00   |........h.!.....|
0x2d40:     07 00 00 00 04 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d50:     70 fc 21 00 00 00 00 00  07 00 00 00 05 00 00 00   |p.!.............|
0x2d60:     00 00 00 00 00 00 00 00  78 fc 21 00 00 00 00 00   |........x.!.....|
0x2d70:     07 00 00 00 06 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d80:     80 fc 21 00 00 00 00 00  07 00 00 00 08 00 00 00   |..!.............|
0x2d90:     00 00 00 00 00 00 00 00  88 fc 21 00 00 00 00 00   |..........!.....|
0x2da0:     07 00 00 00 09 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2db0:     90 fc 21 00 00 00 00 00  07 00 00 00 0a 00 00 00   |..!.............|
0x2dc0:     00 00 00 00 00 00 00 00  98 fc 21 00 00 00 00 00   |..........!.....|
0x2dd0:     07 00 00 00 0c 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2de0:     a0 fc 21 00 00 00 00 00  07 00 00 00 0d 00 00 00   |..!.............|
0x2df0:     00 00 00 00 00 00 00 00  a8 fc 21 00 00 00 00 00   |..........!.....|
0x2e00:     07 00 00 00 0e 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2e10:     b0 fc 21 00 00 00 00 00  07 00 00 00 0f 00 00 00   |..!.............|
0x2e20:     00 00 00 00 00 00 00 00  b8 fc 21 00 00 00 00 00   |..........!.....|
0x2e30:     07 00 00 00 10 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2e40:     c0 fc 21 00 00 00 00 00  07 00 00 00 11 00 00 00   |..!.............|
0x2e50:     00 00 00 00 00 00 00 00  c8 fc 21 00 00 00 00 00   |..........!.....|
0x2e60:     07 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2e70:     d0 fc 21 00 00 00 00 00  07 00 00 00 13 00 00 00   |..!.............|
0x2e80:     00 00 00 00 00 00 00 00  d8 fc 21 00 00 00 00 00   |..........!.....|
0x2e90:     07 00 00 00 14 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ea0:     e0 fc 21 00 00 00 00 00  07 00 00 00 15 00 00 00   |..!.............|
0x2eb0:     00 00 00 00 00 00 00 00  e8 fc 21 00 00 00 00 00   |..........!.....|
0x2ec0:     07 00 00 00 16 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ed0:     f0 fc 21 00 00 00 00 00  07 00 00 00 17 00 00 00   |..!.............|
0x2ee0:     00 00 00 00 00 00 00 00  f8 fc 21 00 00 00 00 00   |..........!.....|
0x2ef0:     07 00 00 00 18 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f00:     00 fd 21 00 00 00 00 00  07 00 00 00 19 00 00 00   |..!.............|
0x2f10:     00 00 00 00 00 00 00 00  08 fd 21 00 00 00 00 00   |..........!.....|
0x2f20:     07 00 00 00 1a 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f30:     10 fd 21 00 00 00 00 00  07 00 00 00 1b 00 00 00   |..!.............|
0x2f40:     00 00 00 00 00 00 00 00  18 fd 21 00 00 00 00 00   |..........!.....|
0x2f50:     07 00 00 00 1c 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f60:     20 fd 21 00 00 00 00 00  07 00 00 00 1d 00 00 00   | .!.............|
0x2f70:     00 00 00 00 00 00 00 00  28 fd 21 00 00 00 00 00   |........(.!.....|
0x2f80:     07 00 00 00 1e 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f90:     30 fd 21 00 00 00 00 00  07 00 00 00 1f 00 00 00   |0.!.............|
0x2fa0:     00 00 00 00 00 00 00 00  38 fd 21 00 00 00 00 00   |........8.!.....|
0x2fb0:     07 00 00 00 20 00 00 00  00 00 00 00 00 00 00 00   |.... ...........|
0x2fc0:     40 fd 21 00 00 00 00 00  07 00 00 00 21 00 00 00   |@.!.........!...|
0x2fd0:     00 00 00 00 00 00 00 00  48 fd 21 00 00 00 00 00   |........H.!.....|
0x2fe0:     07 00 00 00 22 00 00 00  00 00 00 00 00 00 00 00   |...."...........|
0x2ff0:     50 fd 21 00 00 00 00 00  07 00 00 00 23 00 00 00   |P.!.........#...|
0x3000:     00 00 00 00 00 00 00 00  58 fd 21 00 00 00 00 00   |........X.!.....|
0x3010:     07 00 00 00 24 00 00 00  00 00 00 00 00 00 00 00   |....$...........|
0x3020:     60 fd 21 00 00 00 00 00  07 00 00 00 25 00 00 00   |`.!.........%...|
0x3030:     00 00 00 00 00 00 00 00  68 fd 21 00 00 00 00 00   |........h.!.....|
0x3040:     07 00 00 00 26 00 00 00  00 00 00 00 00 00 00 00   |....&...........|
0x3050:     70 fd 21 00 00 00 00 00  07 00 00 00 27 00 00 00   |p.!.........'...|
0x3060:     00 00 00 00 00 00 00 00  78 fd 21 00 00 00 00 00   |........x.!.....|
0x3070:     07 00 00 00 28 00 00 00  00 00 00 00 00 00 00 00   |....(...........|
0x3080:     80 fd 21 00 00 00 00 00  07 00 00 00 29 00 00 00   |..!.........)...|
0x3090:     00 00 00 00 00 00 00 00  88 fd 21 00 00 00 00 00   |..........!.....|
0x30a0:     07 00 00 00 2a 00 00 00  00 00 00 00 00 00 00 00   |....*...........|
0x30b0:     90 fd 21 00 00 00 00 00  07 00 00 00 2b 00 00 00   |..!.........+...|
0x30c0:     00 00 00 00 00 00 00 00  98 fd 21 00 00 00 00 00   |..........!.....|
0x30d0:     07 00 00 00 2c 00 00 00  00 00 00 00 00 00 00 00   |....,...........|
0x30e0:     a0 fd 21 00 00 00 00 00  07 00 00 00 2d 00 00 00   |..!.........-...|
0x30f0:     00 00 00 00 00 00 00 00  a8 fd 21 00 00 00 00 00   |..........!.....|
0x3100:     07 00 00 00 2e 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3110:     b0 fd 21 00 00 00 00 00  07 00 00 00 2f 00 00 00   |..!........./...|
0x3120:     00 00 00 00 00 00 00 00  b8 fd 21 00 00 00 00 00   |..........!.....|
0x3130:     07 00 00 00 30 00 00 00  00 00 00 00 00 00 00 00   |....0...........|
0x3140:     c0 fd 21 00 00 00 00 00  07 00 00 00 31 00 00 00   |..!.........1...|
0x3150:     00 00 00 00 00 00 00 00  c8 fd 21 00 00 00 00 00   |..........!.....|
0x3160:     07 00 00 00 32 00 00 00  00 00 00 00 00 00 00 00   |....2...........|
0x3170:     d0 fd 21 00 00 00 00 00  07 00 00 00 33 00 00 00   |..!.........3...|
0x3180:     00 00 00 00 00 00 00 00  d8 fd 21 00 00 00 00 00   |..........!.....|
0x3190:     07 00 00 00 34 00 00 00  00 00 00 00 00 00 00 00   |....4...........|
0x31a0:     e0 fd 21 00 00 00 00 00  07 00 00 00 35 00 00 00   |..!.........5...|
0x31b0:     00 00 00 00 00 00 00 00  e8 fd 21 00 00 00 00 00   |..........!.....|
0x31c0:     07 00 00 00 36 00 00 00  00 00 00 00 00 00 00 00   |....6...........|
0x31d0:     f0 fd 21 00 00 00 00 00  07 00 00 00 37 00 00 00   |..!.........7...|
0x31e0:     00 00 00 00 00 00 00 00  f8 fd 21 00 00 00 00 00   |..........!.....|
0x31f0:     07 00 00 00 39 00 00 00  00 00 00 00 00 00 00 00   |....9...........|
0x3200:     00 fe 21 00 00 00 00 00  07 00 00 00 3a 00 00 00   |..!.........:...|
0x3210:     00 00 00 00 00 00 00 00  08 fe 21 00 00 00 00 00   |..........!.....|
0x3220:     07 00 00 00 3b 00 00 00  00 00 00 00 00 00 00 00   |....;...........|
0x3230:     10 fe 21 00 00 00 00 00  07 00 00 00 3c 00 00 00   |..!.........<...|
0x3240:     00 00 00 00 00 00 00 00  18 fe 21 00 00 00 00 00   |..........!.....|
0x3250:     07 00 00 00 3d 00 00 00  00 00 00 00 00 00 00 00   |....=...........|
0x3260:     20 fe 21 00 00 00 00 00  07 00 00 00 3e 00 00 00   | .!.........>...|
0x3270:     00 00 00 00 00 00 00 00  28 fe 21 00 00 00 00 00   |........(.!.....|
0x3280:     07 00 00 00 3f 00 00 00  00 00 00 00 00 00 00 00   |....?...........|
0x3290:     30 fe 21 00 00 00 00 00  07 00 00 00 40 00 00 00   |0.!.........@...|
0x32a0:     00 00 00 00 00 00 00 00  38 fe 21 00 00 00 00 00   |........8.!.....|
0x32b0:     07 00 00 00 41 00 00 00  00 00 00 00 00 00 00 00   |....A...........|
0x32c0:     40 fe 21 00 00 00 00 00  07 00 00 00 42 00 00 00   |@.!.........B...|
0x32d0:     00 00 00 00 00 00 00 00  48 fe 21 00 00 00 00 00   |........H.!.....|
0x32e0:     07 00 00 00 43 00 00 00  00 00 00 00 00 00 00 00   |....C...........|
0x32f0:     50 fe 21 00 00 00 00 00  07 00 00 00 45 00 00 00   |P.!.........E...|
0x3300:     00 00 00 00 00 00 00 00  58 fe 21 00 00 00 00 00   |........X.!.....|
0x3310:     07 00 00 00 46 00 00 00  00 00 00 00 00 00 00 00   |....F...........|
0x3320:     60 fe 21 00 00 00 00 00  07 00 00 00 47 00 00 00   |`.!.........G...|
0x3330:     00 00 00 00 00 00 00 00  68 fe 21 00 00 00 00 00   |........h.!.....|
0x3340:     07 00 00 00 48 00 00 00  00 00 00 00 00 00 00 00   |....H...........|
0x3350:     70 fe 21 00 00 00 00 00  07 00 00 00 49 00 00 00   |p.!.........I...|
0x3360:     00 00 00 00 00 00 00 00  78 fe 21 00 00 00 00 00   |........x.!.....|
0x3370:     07 00 00 00 4a 00 00 00  00 00 00 00 00 00 00 00   |....J...........|
0x3380:     80 fe 21 00 00 00 00 00  07 00 00 00 4b 00 00 00   |..!.........K...|
0x3390:     00 00 00 00 00 00 00 00  88 fe 21 00 00 00 00 00   |..........!.....|
0x33a0:     07 00 00 00 4c 00 00 00  00 00 00 00 00 00 00 00   |....L...........|
0x33b0:     90 fe 21 00 00 00 00 00  07 00 00 00 4d 00 00 00   |..!.........M...|
0x33c0:     00 00 00 00 00 00 00 00  98 fe 21 00 00 00 00 00   |..........!.....|
0x33d0:     07 00 00 00 4f 00 00 00  00 00 00 00 00 00 00 00   |....O...........|
0x33e0:     a0 fe 21 00 00 00 00 00  07 00 00 00 50 00 00 00   |..!.........P...|
0x33f0:     00 00 00 00 00 00 00 00  a8 fe 21 00 00 00 00 00   |..........!.....|
0x3400:     07 00 00 00 51 00 00 00  00 00 00 00 00 00 00 00   |....Q...........|
0x3410:     b0 fe 21 00 00 00 00 00  07 00 00 00 52 00 00 00   |..!.........R...|
0x3420:     00 00 00 00 00 00 00 00  b8 fe 21 00 00 00 00 00   |..........!.....|
0x3430:     07 00 00 00 53 00 00 00  00 00 00 00 00 00 00 00   |....S...........|
0x3440:     c0 fe 21 00 00 00 00 00  07 00 00 00 54 00 00 00   |..!.........T...|
0x3450:     00 00 00 00 00 00 00 00  c8 fe 21 00 00 00 00 00   |..........!.....|
0x3460:     07 00 00 00 55 00 00 00  00 00 00 00 00 00 00 00   |....U...........|
0x3470:     d0 fe 21 00 00 00 00 00  07 00 00 00 56 00 00 00   |..!.........V...|
0x3480:     00 00 00 00 00 00 00 00  d8 fe 21 00 00 00 00 00   |..........!.....|
0x3490:     07 00 00 00 57 00 00 00  00 00 00 00 00 00 00 00   |....W...........|
0x34a0:     e0 fe 21 00 00 00 00 00  07 00 00 00 58 00 00 00   |..!.........X...|
0x34b0:     00 00 00 00 00 00 00 00  e8 fe 21 00 00 00 00 00   |..........!.....|
0x34c0:     07 00 00 00 59 00 00 00  00 00 00 00 00 00 00 00   |....Y...........|
0x34d0:     f0 fe 21 00 00 00 00 00  07 00 00 00 5a 00 00 00   |..!.........Z...|
0x34e0:     00 00 00 00 00 00 00 00  f8 fe 21 00 00 00 00 00   |..........!.....|
0x34f0:     07 00 00 00 5b 00 00 00  00 00 00 00 00 00 00 00   |....[...........|
0x3500:     00 ff 21 00 00 00 00 00  07 00 00 00 5c 00 00 00   |..!.........\...|
0x3510:     00 00 00 00 00 00 00 00  08 ff 21 00 00 00 00 00   |..........!.....|
0x3520:     07 00 00 00 5d 00 00 00  00 00 00 00 00 00 00 00   |....]...........|
0x3530:     10 ff 21 00 00 00 00 00  07 00 00 00 5e 00 00 00   |..!.........^...|
0x3540:     00 00 00 00 00 00 00 00  18 ff 21 00 00 00 00 00   |..........!.....|
0x3550:     07 00 00 00 5f 00 00 00  00 00 00 00 00 00 00 00   |...._...........|
0x3560:     20 ff 21 00 00 00 00 00  07 00 00 00 60 00 00 00   | .!.........`...|
0x3570:     00 00 00 00 00 00 00 00  28 ff 21 00 00 00 00 00   |........(.!.....|
0x3580:     07 00 00 00 61 00 00 00  00 00 00 00 00 00 00 00   |....a...........|
0x3590:     30 ff 21 00 00 00 00 00  07 00 00 00 62 00 00 00   |0.!.........b...|
0x35a0:     00 00 00 00 00 00 00 00  38 ff 21 00 00 00 00 00   |........8.!.....|
0x35b0:     07 00 00 00 63 00 00 00  00 00 00 00 00 00 00 00   |....c...........|
0x35c0:     40 ff 21 00 00 00 00 00  07 00 00 00 64 00 00 00   |@.!.........d...|
0x35d0:     00 00 00 00 00 00 00 00  48 ff 21 00 00 00 00 00   |........H.!.....|
0x35e0:     07 00 00 00 65 00 00 00  00 00 00 00 00 00 00 00   |....e...........|
0x35f0:     50 ff 21 00 00 00 00 00  07 00 00 00 66 00 00 00   |P.!.........f...|
0x3600:     00 00 00 00 00 00 00 00  58 ff 21 00 00 00 00 00   |........X.!.....|
0x3610:     07 00 00 00 67 00 00 00  00 00 00 00 00 00 00 00   |....g...........|
0x3620:     60 ff 21 00 00 00 00 00  07 00 00 00 68 00 00 00   |`.!.........h...|
0x3630:     00 00 00 00 00 00 00 00  68 ff 21 00 00 00 00 00   |........h.!.....|
0x3640:     07 00 00 00 69 00 00 00  00 00 00 00 00 00 00 00   |....i...........|
0x3650:     70 ff 21 00 00 00 00 00  07 00 00 00 6a 00 00 00   |p.!.........j...|
0x3660:     00 00 00 00 00 00 00 00  78 ff 21 00 00 00 00 00   |........x.!.....|
0x3670:     07 00 00 00 6b 00 00 00  00 00 00 00 00 00 00 00   |....k...........|
0x3680:     80 ff 21 00 00 00 00 00  07 00 00 00 6c 00 00 00   |..!.........l...|
0x3690:     00 00 00 00 00 00 00 00  88 ff 21 00 00 00 00 00   |..........!.....|
0x36a0:     07 00 00 00 6d 00 00 00  00 00 00 00 00 00 00 00   |....m...........|
0x36b0:     90 ff 21 00 00 00 00 00  07 00 00 00 6f 00 00 00   |..!.........o...|
0x36c0:     00 00 00 00 00 00 00 00  98 ff 21 00 00 00 00 00   |..........!.....|
0x36d0:     07 00 00 00 70 00 00 00  00 00 00 00 00 00 00 00   |....p...........|
0x36e0:     a0 ff 21 00 00 00 00 00  07 00 00 00 71 00 00 00   |..!.........q...|
0x36f0:     00 00 00 00 00 00 00 00  a8 ff 21 00 00 00 00 00   |..........!.....|
0x3700:     07 00 00 00 73 00 00 00  00 00 00 00 00 00 00 00   |....s...........|
0x3710:     b0 ff 21 00 00 00 00 00  07 00 00 00 74 00 00 00   |..!.........t...|
0x3720:     00 00 00 00 00 00 00 00  b8 ff 21 00 00 00 00 00   |..........!.....|
0x3730:     07 00 00 00 75 00 00 00  00 00 00 00 00 00 00 00   |....u...........|
0x3740:     c0 ff 21 00 00 00 00 00  07 00 00 00 76 00 00 00   |..!.........v...|
0x3750:     00 00 00 00 00 00 00 00  48                        |........H       |
; section: .rodata
0x16380:    01 00 02 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x16390:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x163a0:    78 f7 fe ff 8e f6 fe ff  8e f6 fe ff 8e f6 fe ff   |x...............|
0x163b0:    8e f6 fe ff 8e f6 fe ff  8e f6 fe ff 8e f6 fe ff   |................|
0x163c0:    8e f6 fe ff 8e f6 fe ff  8e f6 fe ff 8e f6 fe ff   |................|
0x163d0:    8e f6 fe ff 8e f6 fe ff  8e f6 fe ff 8e f6 fe ff   |................|
0x163e0:    8e f6 fe ff 8e f6 fe ff  8e f6 fe ff 8e f6 fe ff   |................|
0x163f0:    8e f6 fe ff 8e f6 fe ff  8e f6 fe ff 8e f6 fe ff   |................|
0x16400:    8e f6 fe ff 8e f6 fe ff  8e f6 fe ff 8e f6 fe ff   |................|
0x16410:    8e f6 fe ff 8e f6 fe ff  8e f6 fe ff 8e f6 fe ff   |................|
0x16420:    8e f6 fe ff 8e f6 fe ff  8e f6 fe ff 8e f6 fe ff   |................|
0x16430:    8e f6 fe ff 8e f6 fe ff  8e f6 fe ff 8e f6 fe ff   |................|
0x16440:    8e f6 fe ff 8e f6 fe ff  8e f6 fe ff 8e f6 fe ff   |................|
0x16450:    8e f6 fe ff 8e f6 fe ff  8e f6 fe ff 8e f6 fe ff   |................|
0x16460:    e8 f6 fe ff e8 f6 fe ff  e8 f6 fe ff e8 f6 fe ff   |................|
0x16470:    e8 f6 fe ff e8 f6 fe ff  e8 f6 fe ff e8 f6 fe ff   |................|
0x16480:    8e f6 fe ff 8e f6 fe ff  8e f6 fe ff 8e f6 fe ff   |................|
0x16490:    8e f6 fe ff 8e f6 fe ff  8e f6 fe ff 20 f8 fe ff   |............ ...|
0x164a0:    8e f6 fe ff 8e f6 fe ff  8e f6 fe ff 8e f6 fe ff   |................|
0x164b0:    8e f6 fe ff 8e f6 fe ff  8e f6 fe ff 8e f6 fe ff   |................|
0x164c0:    8e f6 fe ff 8e f6 fe ff  8e f6 fe ff 8e f6 fe ff   |................|
0x164d0:    8e f6 fe ff 8e f6 fe ff  8e f6 fe ff 8e f6 fe ff   |................|
0x164e0:    8e f6 fe ff 8e f6 fe ff  8e f6 fe ff 8e f6 fe ff   |................|
0x164f0:    8e f6 fe ff 8e f6 fe ff  8e f6 fe ff 8e f6 fe ff   |................|
0x16500:    80 f7 fe ff 8e f6 fe ff  8e f6 fe ff 8e f6 fe ff   |................|
0x16510:    8e f6 fe ff 8e f6 fe ff  8e f6 fe ff f0 f7 fe ff   |................|
0x16520:    8e f6 fe ff 00 f8 fe ff  30 f8 fe ff 8e f6 fe ff   |........0.......|
0x16530:    8e f6 fe ff 68 f7 fe ff  40 f8 fe ff 8e f6 fe ff   |....h...@.......|
0x16540:    8e f6 fe ff 8e f6 fe ff  8e f6 fe ff 8e f6 fe ff   |................|
0x16550:    8e f6 fe ff 8e f6 fe ff  50 f8 fe ff 8e f6 fe ff   |........P.......|
0x16560:    8e f6 fe ff 8e f6 fe ff  60 f8 fe ff 8e f6 fe ff   |........`.......|
0x16570:    70 f8 fe ff 8e f6 fe ff  10 f8 fe ff 8e f6 fe ff   |p...............|
0x16580:    80 f7 fe ff 7c 31 ff ff  ec 2f ff ff 4c 30 ff ff   |....|1.../..L0..|
0x16590:    d4 2e ff ff cc 2f ff ff  53 de fe ff 67 f0 fe ff   |...../..S...g...|
0x165a0:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x165b0:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x165c0:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x165d0:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x165e0:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x165f0:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16600:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16610:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16620:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16630:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16640:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16650:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16660:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16670:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16680:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16690:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x166a0:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x166b0:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x166c0:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x166d0:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x166e0:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x166f0:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16700:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16710:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16720:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16730:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16740:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16750:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16760:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16770:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16780:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16790:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x167a0:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x167b0:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x167c0:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x167d0:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x167e0:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x167f0:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16800:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16810:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16820:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16830:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16840:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16850:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16860:    01 f1 fe ff 01 f1 fe ff  37 de fe ff 01 f1 fe ff   |........7.......|
0x16870:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16880:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16890:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x168a0:    01 f1 fe ff 01 f1 fe ff  1b de fe ff ca dd fe ff   |................|
0x168b0:    bb dd fe ff af dd fe ff  01 f1 fe ff a0 dd fe ff   |................|
0x168c0:    94 dd fe ff 85 dd fe ff  50 dd fe ff 01 f1 fe ff   |........P.......|
0x168d0:    01 f1 fe ff 41 dd fe ff  01 f1 fe ff 33 dd fe ff   |....A.......3...|
0x168e0:    01 f1 fe ff 01 f1 fe ff  22 dd fe ff 16 dd fe ff   |........".......|
0x168f0:    02 dd fe ff bd dc fe ff  a9 dc fe ff 01 f1 fe ff   |................|
0x16900:    01 f1 fe ff 95 dc fe ff  01 f1 fe ff 89 dc fe ff   |................|
0x16910:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x16920:    01 f1 fe ff 01 f1 fe ff  7a dc fe ff 69 dc fe ff   |........z...i...|
0x16930:    5a dc fe ff 4e dc fe ff  01 f1 fe ff 0e dc fe ff   |Z...N...........|
0x16940:    f8 db fe ff c9 db fe ff  c0 db fe ff 01 f1 fe ff   |................|
0x16950:    b9 db fe ff ad db fe ff  21 e2 fe ff a6 db fe ff   |........!.......|
0x16960:    0b e2 fe ff fc e1 fe ff  f0 e1 fe ff e4 e1 fe ff   |................|
0x16970:    d8 e1 fe ff c4 e1 fe ff  a4 e2 fe ff 90 e2 fe ff   |................|
0x16980:    3f e2 fe ff 30 e2 fe ff  01 f1 fe ff 01 f1 fe ff   |?...0...........|
0x16990:    01 f1 fe ff 01 f1 fe ff  01 f1 fe ff 01 f1 fe ff   |................|
0x169a0:    01 f1 fe ff b3 e2 fe ff  83 e1 fe ff 24 e1 fe ff   |............$...|
0x169b0:    15 e1 fe ff 06 e1 fe ff  c3 e0 fe ff ad e0 fe ff   |................|
0x169c0:    a1 e0 fe ff 76 e0 fe ff  0a e0 fe ff c7 df fe ff   |....v...........|
0x169d0:    83 df fe ff 77 df fe ff  48 df fe ff 00 df fe ff   |....w...H.......|
0x169e0:    bd de fe ff b1 de fe ff  00 00 00 00 00 00 00 00   |................|
0x169f0:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x16a00:    01 00 00 00 02 00 00 00  00 00 00 00 03 00 00 00   |................|
0x16a10:    00 00 00 00 04 00 00 00  00 00 00 00 05 00 00 00   |................|
0x16a20:    00 00 00 00 06 00 00 00  00 00 00 00 07 00 00 00   |................|
0x16a30:    00 00 00 00 08 00 00 00                            |........        |
0x16a38:    64 65 76 5f 69 6e 6f 5f  70 6f 70 00               |dev_ino_pop.    |   "dev_ino_pop"
0x16a44:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x16a54:    00 00 00 00 00 00 00 00  00 00 00 00 14 00 00 00   |................|
0x16a64:    0e 00 00 00 01 00 00 00  02 00 00 00 0d 00 00 00   |................|
0x16a74:    03 00 00 00 0f 00 00 00  1d 00 00 00 1b 00 00 00   |................|
0x16a84:    1a 00 00 00 18 00 00 00  19 00 00 00 00 00 00 00   |................|
0x16a94:    00 00 00 00 00 00 00 00  00 00 00 00 0d 00 00 00   |................|
0x16aa4:    08 00 00 00 0b 00 00 00  06 00 00 00 0a 00 00 00   |................|
0x16ab4:    05 00 00 00 07 00 00 00  09 00 00 00 05 00 00 00   |................|
0x16ac4:    06 00 00 00                                        |....            |
0x16ac8:    73 6f 72 74 5f 66 69 6c  65 73 00                  |sort_files.     |   "sort_files"
0x16ad3:    70 6f 73 69 78 2d 00                               |posix-.         |   "posix-"
0x16ada:    6d 61 69 6e 00                                     |main.           |   "main"
0x16adf:    00 01 00 00 00 01 00 00  00 01 00 00 00 00 00 00   |................|
0x16aef:    00 00 00 00 00 00 00 00  00 02 00 00 00 02 00 00   |................|
0x16aff:    00 02 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x16b0f:    00 02 00 00 00 02 00 00  00 02 00 00 00 01 00 00   |................|
0x16b1f:    00 01 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x16b2f:    00 ff ff ff ff 04 00 00  00 02 00 00 00 01 00 00   |................|
0x16b3f:    00 03 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x16b4f:    00 00 00 00 00 00 00 00  00 04 00 00 00 03 00 00   |................|
0x16b5f:    00 03 00 00 00 02 00 00  00 01 00 00 00 00 00 00   |................|
0x16b6f:    00 00 00 00 00 01 00 00  00 02 00 00 00 03 00 00   |................|
0x16b7f:    00 00 00 00 00 01 00 00  00 02 00 00 00 03 00 00   |................|
0x16b8f:    00                                                 |.               |
0x16b90:    3f 70 63 64 62 2d 6c 73  77 64 00                  |?pcdb-lswd.     |   "?pcdb-lswd"
0x16b9b:    00 00 00 00 00                                     |.....           |
0x16ba0:    23 20 43 6f 6e 66 69 67  75 72 61 74 69 6f 6e 20   |# Configuration |   "# Configuration file for dircolors, a utility to help you set the"
0x16bb0:    66 69 6c 65 20 66 6f 72  20 64 69 72 63 6f 6c 6f   |file for dircolo|
0x16bc0:    72 73 2c 20 61 20 75 74  69 6c 69 74 79 20 74 6f   |rs, a utility to|
0x16bd0:    20 68 65 6c 70 20 79 6f  75 20 73 65 74 20 74 68   | help you set th|
0x16be0:    65 00                                              |e.              |
0x16be2:    23 20 4c 53 5f 43 4f 4c  4f 52 53 20 65 6e 76 69   |# LS_COLORS envi|
0x16bf2:    72 6f 6e 6d 65 6e 74 20  76 61 72 69 61 62 6c 65   |ronment variable|
0x16c02:    20 75 73 65 64 20 62 79  20 47 4e 55 20 6c 73 20   | used by GNU ls |
0x16c12:    77 69 74 68 20 74 68 65  20 2d 2d 63 6f 6c 6f 72   |with the --color|
0x16c22:    20 6f 70 74 69 6f 6e 2e  00 23 20 43 6f 70 79 72   | option..# Copyr|
0x16c32:    69 67 68 74 20 28 43 29  20 31 39 39 36 2d 32 30   |ight (C) 1996-20|
0x16c42:    31 37 20 46 72 65 65 20  53 6f 66 74 77 61 72 65   |17 Free Software|
0x16c52:    20 46 6f 75 6e 64 61 74  69 6f 6e 2c 20 49 6e 63   | Foundation, Inc|
0x16c62:    2e 00 23 20 43 6f 70 79  69 6e 67 20 61 6e 64 20   |..# Copying and |
0x16c72:    64 69 73 74 72 69 62 75  74 69 6f 6e 20 6f 66 20   |distribution of |
0x16c82:    74 68 69 73 20 66 69 6c  65 2c 20 77 69 74 68 20   |this file, with |
0x16c92:    6f 72 20 77 69 74 68 6f  75 74 20 6d 6f 64 69 66   |or without modif|
0x16ca2:    69 63 61 74 69 6f 6e 2c  00 23 20 61 72 65 20 70   |ication,.# are p|
0x16cb2:    65 72 6d 69 74 74 65 64  20 70 72 6f 76 69 64 65   |ermitted provide|
0x16cc2:    64 20 74 68 65 20 63 6f  70 79 72 69 67 68 74 20   |d the copyright |
0x16cd2:    6e 6f 74 69 63 65 20 61  6e 64 20 74 68 69 73 20   |notice and this |
0x16ce2:    6e 6f 74 69 63 65 20 61  72 65 20 70 72 65 73 65   |notice are prese|
0x16cf2:    72 76 65 64 2e 00 23 20  54 68 65 20 6b 65 79 77   |rved..# The keyw|
0x16d02:    6f 72 64 73 20 43 4f 4c  4f 52 2c 20 4f 50 54 49   |ords COLOR, OPTI|
0x16d12:    4f 4e 53 2c 20 61 6e 64  20 45 49 47 48 54 42 49   |ONS, and EIGHTBI|
0x16d22:    54 20 28 68 6f 6e 6f 72  65 64 20 62 79 20 74 68   |T (honored by th|
0x16d32:    65 00 23 20 73 6c 61 63  6b 77 61 72 65 20 76 65   |e.# slackware ve|
0x16d42:    72 73 69 6f 6e 20 6f 66  20 64 69 72 63 6f 6c 6f   |rsion of dircolo|
0x16d52:    72 73 29 20 61 72 65 20  72 65 63 6f 67 6e 69 7a   |rs) are recogniz|
0x16d62:    65 64 20 62 75 74 20 69  67 6e 6f 72 65 64 2e 00   |ed but ignored..|
0x16d72:    23 20 42 65 6c 6f 77 20  61 72 65 20 54 45 52 4d   |# Below are TERM|
0x16d82:    20 65 6e 74 72 69 65 73  2c 20 77 68 69 63 68 20   | entries, which |
0x16d92:    63 61 6e 20 62 65 20 61  20 67 6c 6f 62 20 70 61   |can be a glob pa|
0x16da2:    74 74 65 72 6e 73 2c 20  74 6f 20 6d 61 74 63 68   |tterns, to match|
0x16db2:    00 23 20 61 67 61 69 6e  73 74 20 74 68 65 20 54   |.# against the T|
0x16dc2:    45 52 4d 20 65 6e 76 69  72 6f 6e 6d 65 6e 74 20   |ERM environment |
0x16dd2:    76 61 72 69 61 62 6c 65  20 74 6f 20 64 65 74 65   |variable to dete|
0x16de2:    72 6d 69 6e 65 20 69 66  20 69 74 20 69 73 20 63   |rmine if it is c|
0x16df2:    6f 6c 6f 72 69 7a 61 62  6c 65 2e 00 54 45 52 4d   |olorizable..TERM|
0x16e02:    20 45 74 65 72 6d 00 54  45 52 4d 20 61 6e 73 69   | Eterm.TERM ansi|
0x16e12:    00 54 45 52 4d 20 2a 63  6f 6c 6f 72 2a 00 54 45   |.TERM *color*.TE|
0x16e22:    52 4d 20 63 6f 6e 5b 30  2d 39 5d 2a 78 5b 30 2d   |RM con[0-9]*x[0-|
0x16e32:    39 5d 2a 00 54 45 52 4d  20 63 6f 6e 73 32 35 00   |9]*.TERM cons25.|
0x16e42:    54 45 52 4d 20 63 6f 6e  73 6f 6c 65 00 54 45 52   |TERM console.TER|
0x16e52:    4d 20 63 79 67 77 69 6e  00 54 45 52 4d 20 64 74   |M cygwin.TERM dt|
0x16e62:    74 65 72 6d 00 54 45 52  4d 20 67 6e 6f 6d 65 00   |term.TERM gnome.|
0x16e72:    54 45 52 4d 20 68 75 72  64 00 54 45 52 4d 20 6a   |TERM hurd.TERM j|
0x16e82:    66 62 74 65 72 6d 00 54  45 52 4d 20 6b 6f 6e 73   |fbterm.TERM kons|
0x16e92:    6f 6c 65 00 54 45 52 4d  20 6b 74 65 72 6d 00 54   |ole.TERM kterm.T|
0x16ea2:    45 52 4d 20 6c 69 6e 75  78 00 54 45 52 4d 20 6c   |ERM linux.TERM l|
0x16eb2:    69 6e 75 78 2d 63 00 54  45 52 4d 20 6d 6c 74 65   |inux-c.TERM mlte|
0x16ec2:    72 6d 00 54 45 52 4d 20  70 75 74 74 79 00 54 45   |rm.TERM putty.TE|
0x16ed2:    52 4d 20 72 78 76 74 2a  00 54 45 52 4d 20 73 63   |RM rxvt*.TERM sc|
0x16ee2:    72 65 65 6e 2a 00 54 45  52 4d 20 73 74 00 54 45   |reen*.TERM st.TE|
0x16ef2:    52 4d 20 74 65 72 6d 69  6e 61 74 6f 72 00 54 45   |RM terminator.TE|
0x16f02:    52 4d 20 74 6d 75 78 2a  00 54 45 52 4d 20 76 74   |RM tmux*.TERM vt|
0x16f12:    31 30 30 00 54 45 52 4d  20 78 74 65 72 6d 2a 00   |100.TERM xterm*.|
0x16f22:    23 20 42 65 6c 6f 77 20  61 72 65 20 74 68 65 20   |# Below are the |
0x16f32:    63 6f 6c 6f 72 20 69 6e  69 74 20 73 74 72 69 6e   |color init strin|
0x16f42:    67 73 20 66 6f 72 20 74  68 65 20 62 61 73 69 63   |gs for the basic|
0x16f52:    20 66 69 6c 65 20 74 79  70 65 73 2e 20 41 20 63   | file types. A c|
0x16f62:    6f 6c 6f 72 20 69 6e 69  74 00 23 20 73 74 72 69   |olor init.# stri|
0x16f72:    6e 67 20 63 6f 6e 73 69  73 74 73 20 6f 66 20 6f   |ng consists of o|
0x16f82:    6e 65 20 6f 72 20 6d 6f  72 65 20 6f 66 20 74 68   |ne or more of th|
0x16f92:    65 20 66 6f 6c 6c 6f 77  69 6e 67 20 6e 75 6d 65   |e following nume|
0x16fa2:    72 69 63 20 63 6f 64 65  73 3a 00 23 20 41 74 74   |ric codes:.# Att|
0x16fb2:    72 69 62 75 74 65 20 63  6f 64 65 73 3a 00 23 20   |ribute codes:.# |
0x16fc2:    30 30 3d 6e 6f 6e 65 20  30 31 3d 62 6f 6c 64 20   |00=none 01=bold |
0x16fd2:    30 34 3d 75 6e 64 65 72  73 63 6f 72 65 20 30 35   |04=underscore 05|
0x16fe2:    3d 62 6c 69 6e 6b 20 30  37 3d 72 65 76 65 72 73   |=blink 07=revers|
0x16ff2:    65 20 30 38 3d 63 6f 6e  63 65 61 6c 65 64 00 23   |e 08=concealed.#|
0x17002:    20 54 65 78 74 20 63 6f  6c 6f 72 20 63 6f 64 65   | Text color code|
0x17012:    73 3a 00 23 20 33 30 3d  62 6c 61 63 6b 20 33 31   |s:.# 30=black 31|
0x17022:    3d 72 65 64 20 33 32 3d  67 72 65 65 6e 20 33 33   |=red 32=green 33|
0x17032:    3d 79 65 6c 6c 6f 77 20  33 34 3d 62 6c 75 65 20   |=yellow 34=blue |
0x17042:    33 35 3d 6d 61 67 65 6e  74 61 20 33 36 3d 63 79   |35=magenta 36=cy|
0x17052:    61 6e 20 33 37 3d 77 68  69 74 65 00 23 20 42 61   |an 37=white.# Ba|
0x17062:    63 6b 67 72 6f 75 6e 64  20 63 6f 6c 6f 72 20 63   |ckground color c|
0x17072:    6f 64 65 73 3a 00 23 20  34 30 3d 62 6c 61 63 6b   |odes:.# 40=black|
0x17082:    20 34 31 3d 72 65 64 20  34 32 3d 67 72 65 65 6e   | 41=red 42=green|
0x17092:    20 34 33 3d 79 65 6c 6c  6f 77 20 34 34 3d 62 6c   | 43=yellow 44=bl|
0x170a2:    75 65 20 34 35 3d 6d 61  67 65 6e 74 61 20 34 36   |ue 45=magenta 46|
0x170b2:    3d 63 79 61 6e 20 34 37  3d 77 68 69 74 65 00 23   |=cyan 47=white.#|
0x170c2:    4e 4f 52 4d 41 4c 20 30  30 20 23 20 6e 6f 20 63   |NORMAL 00 # no c|
0x170d2:    6f 6c 6f 72 20 63 6f 64  65 20 61 74 20 61 6c 6c   |olor code at all|
0x170e2:    00 23 46 49 4c 45 20 30  30 20 23 20 72 65 67 75   |.#FILE 00 # regu|
0x170f2:    6c 61 72 20 66 69 6c 65  3a 20 75 73 65 20 6e 6f   |lar file: use no|
0x17102:    20 63 6f 6c 6f 72 20 61  74 20 61 6c 6c 00 52 45   | color at all.RE|
0x17112:    53 45 54 20 30 20 23 20  72 65 73 65 74 20 74 6f   |SET 0 # reset to|
0x17122:    20 22 6e 6f 72 6d 61 6c  22 20 63 6f 6c 6f 72 00   | "normal" color.|
0x17132:    44 49 52 20 30 31 3b 33  34 20 23 20 64 69 72 65   |DIR 01;34 # dire|
0x17142:    63 74 6f 72 79 00 4c 49  4e 4b 20 30 31 3b 33 36   |ctory.LINK 01;36|
0x17152:    20 23 20 73 79 6d 62 6f  6c 69 63 20 6c 69 6e 6b   | # symbolic link|
0x17162:    2e 20 28 49 66 20 79 6f  75 20 73 65 74 20 74 68   |. (If you set th|
0x17172:    69 73 20 74 6f 20 27 74  61 72 67 65 74 27 20 69   |is to 'target' i|
0x17182:    6e 73 74 65 61 64 20 6f  66 20 61 00 20 23 20 6e   |nstead of a. # n|
0x17192:    75 6d 65 72 69 63 61 6c  20 76 61 6c 75 65 2c 20   |umerical value, |
0x171a2:    74 68 65 20 63 6f 6c 6f  72 20 69 73 20 61 73 20   |the color is as |
0x171b2:    66 6f 72 20 74 68 65 20  66 69 6c 65 20 70 6f 69   |for the file poi|
0x171c2:    6e 74 65 64 20 74 6f 2e  29 00 4d 55 4c 54 49 48   |nted to.).MULTIH|
0x171d2:    41 52 44 4c 49 4e 4b 20  30 30 20 23 20 72 65 67   |ARDLINK 00 # reg|
0x171e2:    75 6c 61 72 20 66 69 6c  65 20 77 69 74 68 20 6d   |ular file with m|
0x171f2:    6f 72 65 20 74 68 61 6e  20 6f 6e 65 20 6c 69 6e   |ore than one lin|
0x17202:    6b 00 46 49 46 4f 20 34  30 3b 33 33 20 23 20 70   |k.FIFO 40;33 # p|
0x17212:    69 70 65 00 53 4f 43 4b  20 30 31 3b 33 35 20 23   |ipe.SOCK 01;35 #|
0x17222:    20 73 6f 63 6b 65 74 00  44 4f 4f 52 20 30 31 3b   | socket.DOOR 01;|
0x17232:    33 35 20 23 20 64 6f 6f  72 00 42 4c 4b 20 34 30   |35 # door.BLK 40|
0x17242:    3b 33 33 3b 30 31 20 23  20 62 6c 6f 63 6b 20 64   |;33;01 # block d|
0x17252:    65 76 69 63 65 20 64 72  69 76 65 72 00 43 48 52   |evice driver.CHR|
0x17262:    20 34 30 3b 33 33 3b 30  31 20 23 20 63 68 61 72   | 40;33;01 # char|
0x17272:    61 63 74 65 72 20 64 65  76 69 63 65 20 64 72 69   |acter device dri|
0x17282:    76 65 72 00 4f 52 50 48  41 4e 20 34 30 3b 33 31   |ver.ORPHAN 40;31|
0x17292:    3b 30 31 20 23 20 73 79  6d 6c 69 6e 6b 20 74 6f   |;01 # symlink to|
0x172a2:    20 6e 6f 6e 65 78 69 73  74 65 6e 74 20 66 69 6c   | nonexistent fil|
0x172b2:    65 2c 20 6f 72 20 6e 6f  6e 2d 73 74 61 74 27 61   |e, or non-stat'a|
0x172c2:    62 6c 65 20 66 69 6c 65  20 2e 2e 2e 00 4d 49 53   |ble file ....MIS|
0x172d2:    53 49 4e 47 20 30 30 20  23 20 2e 2e 2e 20 61 6e   |SING 00 # ... an|
0x172e2:    64 20 74 68 65 20 66 69  6c 65 73 20 74 68 65 79   |d the files they|
0x172f2:    20 70 6f 69 6e 74 20 74  6f 00 53 45 54 55 49 44   | point to.SETUID|
0x17302:    20 33 37 3b 34 31 20 23  20 66 69 6c 65 20 74 68   | 37;41 # file th|
0x17312:    61 74 20 69 73 20 73 65  74 75 69 64 20 28 75 2b   |at is setuid (u+|
0x17322:    73 29 00 53 45 54 47 49  44 20 33 30 3b 34 33 20   |s).SETGID 30;43 |
0x17332:    23 20 66 69 6c 65 20 74  68 61 74 20 69 73 20 73   |# file that is s|
0x17342:    65 74 67 69 64 20 28 67  2b 73 29 00 43 41 50 41   |etgid (g+s).CAPA|
0x17352:    42 49 4c 49 54 59 20 33  30 3b 34 31 20 23 20 66   |BILITY 30;41 # f|
0x17362:    69 6c 65 20 77 69 74 68  20 63 61 70 61 62 69 6c   |ile with capabil|
0x17372:    69 74 79 00 53 54 49 43  4b 59 5f 4f 54 48 45 52   |ity.STICKY_OTHER|
0x17382:    5f 57 52 49 54 41 42 4c  45 20 33 30 3b 34 32 20   |_WRITABLE 30;42 |
0x17392:    23 20 64 69 72 20 74 68  61 74 20 69 73 20 73 74   |# dir that is st|
0x173a2:    69 63 6b 79 20 61 6e 64  20 6f 74 68 65 72 2d 77   |icky and other-w|
0x173b2:    72 69 74 61 62 6c 65 20  28 2b 74 2c 6f 2b 77 29   |ritable (+t,o+w)|
0x173c2:    00 4f 54 48 45 52 5f 57  52 49 54 41 42 4c 45 20   |.OTHER_WRITABLE |
0x173d2:    33 34 3b 34 32 20 23 20  64 69 72 20 74 68 61 74   |34;42 # dir that|
0x173e2:    20 69 73 20 6f 74 68 65  72 2d 77 72 69 74 61 62   | is other-writab|
0x173f2:    6c 65 20 28 6f 2b 77 29  20 61 6e 64 20 6e 6f 74   |le (o+w) and not|
0x17402:    20 73 74 69 63 6b 79 00  53 54 49 43 4b 59 20 33   | sticky.STICKY 3|
0x17412:    37 3b 34 34 20 23 20 64  69 72 20 77 69 74 68 20   |7;44 # dir with |
0x17422:    74 68 65 20 73 74 69 63  6b 79 20 62 69 74 20 73   |the sticky bit s|
0x17432:    65 74 20 28 2b 74 29 20  61 6e 64 20 6e 6f 74 20   |et (+t) and not |
0x17442:    6f 74 68 65 72 2d 77 72  69 74 61 62 6c 65 00 23   |other-writable.#|
0x17452:    20 54 68 69 73 20 69 73  20 66 6f 72 20 66 69 6c   | This is for fil|
0x17462:    65 73 20 77 69 74 68 20  65 78 65 63 75 74 65 20   |es with execute |
0x17472:    70 65 72 6d 69 73 73 69  6f 6e 3a 00 45 58 45 43   |permission:.EXEC|
0x17482:    20 30 31 3b 33 32 00 23  20 4c 69 73 74 20 61 6e   | 01;32.# List an|
0x17492:    79 20 66 69 6c 65 20 65  78 74 65 6e 73 69 6f 6e   |y file extension|
0x174a2:    73 20 6c 69 6b 65 20 27  2e 67 7a 27 20 6f 72 20   |s like '.gz' or |
0x174b2:    27 2e 74 61 72 27 20 74  68 61 74 20 79 6f 75 20   |'.tar' that you |
0x174c2:    77 6f 75 6c 64 20 6c 69  6b 65 20 6c 73 00 23 20   |would like ls.# |
0x174d2:    74 6f 20 63 6f 6c 6f 72  69 7a 65 20 62 65 6c 6f   |to colorize belo|
0x174e2:    77 2e 20 50 75 74 20 74  68 65 20 65 78 74 65 6e   |w. Put the exten|
0x174f2:    73 69 6f 6e 2c 20 61 20  73 70 61 63 65 2c 20 61   |sion, a space, a|
0x17502:    6e 64 20 74 68 65 20 63  6f 6c 6f 72 20 69 6e 69   |nd the color ini|
0x17512:    74 20 73 74 72 69 6e 67  2e 00 23 20 28 61 6e 64   |t string..# (and|
0x17522:    20 61 6e 79 20 63 6f 6d  6d 65 6e 74 73 20 79 6f   | any comments yo|
0x17532:    75 20 77 61 6e 74 20 74  6f 20 61 64 64 20 61 66   |u want to add af|
0x17542:    74 65 72 20 61 20 27 23  27 29 00 23 20 49 66 20   |ter a '#').# If |
0x17552:    79 6f 75 20 75 73 65 20  44 4f 53 2d 73 74 79 6c   |you use DOS-styl|
0x17562:    65 20 73 75 66 66 69 78  65 73 2c 20 79 6f 75 20   |e suffixes, you |
0x17572:    6d 61 79 20 77 61 6e 74  20 74 6f 20 75 6e 63 6f   |may want to unco|
0x17582:    6d 6d 65 6e 74 20 74 68  65 20 66 6f 6c 6c 6f 77   |mment the follow|
0x17592:    69 6e 67 3a 00 23 2e 63  6d 64 20 30 31 3b 33 32   |ing:.#.cmd 01;32|
0x175a2:    20 23 20 65 78 65 63 75  74 61 62 6c 65 73 20 28   | # executables (|
0x175b2:    62 72 69 67 68 74 20 67  72 65 65 6e 29 00 23 2e   |bright green).#.|
0x175c2:    65 78 65 20 30 31 3b 33  32 00 23 2e 63 6f 6d 20   |exe 01;32.#.com |
0x175d2:    30 31 3b 33 32 00 23 2e  62 74 6d 20 30 31 3b 33   |01;32.#.btm 01;3|
0x175e2:    32 00 23 2e 62 61 74 20  30 31 3b 33 32 00 23 20   |2.#.bat 01;32.# |
0x175f2:    4f 72 20 69 66 20 79 6f  75 20 77 61 6e 74 20 74   |Or if you want t|
0x17602:    6f 20 63 6f 6c 6f 72 69  7a 65 20 73 63 72 69 70   |o colorize scrip|
0x17612:    74 73 20 65 76 65 6e 20  69 66 20 74 68 65 79 20   |ts even if they |
0x17622:    64 6f 20 6e 6f 74 20 68  61 76 65 20 74 68 65 00   |do not have the.|
0x17632:    23 20 65 78 65 63 75 74  61 62 6c 65 20 62 69 74   |# executable bit|
0x17642:    20 61 63 74 75 61 6c 6c  79 20 73 65 74 2e 00 23   | actually set..#|
0x17652:    2e 73 68 20 30 31 3b 33  32 00 23 2e 63 73 68 20   |.sh 01;32.#.csh |
0x17662:    30 31 3b 33 32 00 20 23  20 61 72 63 68 69 76 65   |01;32. # archive|
0x17672:    73 20 6f 72 20 63 6f 6d  70 72 65 73 73 65 64 20   |s or compressed |
0x17682:    28 62 72 69 67 68 74 20  72 65 64 29 00 2e 74 61   |(bright red)..ta|
0x17692:    72 20 30 31 3b 33 31 00  2e 74 67 7a 20 30 31 3b   |r 01;31..tgz 01;|
0x176a2:    33 31 00 2e 61 72 63 20  30 31 3b 33 31 00 2e 61   |31..arc 01;31..a|
0x176b2:    72 6a 20 30 31 3b 33 31  00 2e 74 61 7a 20 30 31   |rj 01;31..taz 01|
0x176c2:    3b 33 31 00 2e 6c 68 61  20 30 31 3b 33 31 00 2e   |;31..lha 01;31..|
0x176d2:    6c 7a 34 20 30 31 3b 33  31 00 2e 6c 7a 68 20 30   |lz4 01;31..lzh 0|
0x176e2:    31 3b 33 31 00 2e 6c 7a  6d 61 20 30 31 3b 33 31   |1;31..lzma 01;31|
0x176f2:    00 2e 74 6c 7a 20 30 31  3b 33 31 00 2e 74 78 7a   |..tlz 01;31..txz|
0x17702:    20 30 31 3b 33 31 00 2e  74 7a 6f 20 30 31 3b 33   | 01;31..tzo 01;3|
0x17712:    31 00 2e 74 37 7a 20 30  31 3b 33 31 00 2e 7a 69   |1..t7z 01;31..zi|
0x17722:    70 20 30 31 3b 33 31 00  2e 7a 20 30 31 3b 33 31   |p 01;31..z 01;31|
0x17732:    00 2e 5a 20 30 31 3b 33  31 00 2e 64 7a 20 30 31   |..Z 01;31..dz 01|
0x17742:    3b 33 31 00 2e 67 7a 20  30 31 3b 33 31 00 2e 6c   |;31..gz 01;31..l|
0x17752:    72 7a 20 30 31 3b 33 31  00 2e 6c 7a 20 30 31 3b   |rz 01;31..lz 01;|
0x17762:    33 31 00 2e 6c 7a 6f 20  30 31 3b 33 31 00 2e 78   |31..lzo 01;31..x|
0x17772:    7a 20 30 31 3b 33 31 00  2e 7a 73 74 20 30 31 3b   |z 01;31..zst 01;|
0x17782:    33 31 00 2e 74 7a 73 74  20 30 31 3b 33 31 00 2e   |31..tzst 01;31..|
0x17792:    62 7a 32 20 30 31 3b 33  31 00 2e 62 7a 20 30 31   |bz2 01;31..bz 01|
0x177a2:    3b 33 31 00 2e 74 62 7a  20 30 31 3b 33 31 00 2e   |;31..tbz 01;31..|
0x177b2:    74 62 7a 32 20 30 31 3b  33 31 00 2e 74 7a 20 30   |tbz2 01;31..tz 0|
0x177c2:    31 3b 33 31 00 2e 64 65  62 20 30 31 3b 33 31 00   |1;31..deb 01;31.|
0x177d2:    2e 72 70 6d 20 30 31 3b  33 31 00 2e 6a 61 72 20   |.rpm 01;31..jar |
0x177e2:    30 31 3b 33 31 00 2e 77  61 72 20 30 31 3b 33 31   |01;31..war 01;31|
0x177f2:    00 2e 65 61 72 20 30 31  3b 33 31 00 2e 73 61 72   |..ear 01;31..sar|
0x17802:    20 30 31 3b 33 31 00 2e  72 61 72 20 30 31 3b 33   | 01;31..rar 01;3|
0x17812:    31 00 2e 61 6c 7a 20 30  31 3b 33 31 00 2e 61 63   |1..alz 01;31..ac|
0x17822:    65 20 30 31 3b 33 31 00  2e 7a 6f 6f 20 30 31 3b   |e 01;31..zoo 01;|
0x17832:    33 31 00 2e 63 70 69 6f  20 30 31 3b 33 31 00 2e   |31..cpio 01;31..|
0x17842:    37 7a 20 30 31 3b 33 31  00 2e 72 7a 20 30 31 3b   |7z 01;31..rz 01;|
0x17852:    33 31 00 2e 63 61 62 20  30 31 3b 33 31 00 2e 77   |31..cab 01;31..w|
0x17862:    69 6d 20 30 31 3b 33 31  00 2e 73 77 6d 20 30 31   |im 01;31..swm 01|
0x17872:    3b 33 31 00 2e 64 77 6d  20 30 31 3b 33 31 00 2e   |;31..dwm 01;31..|
0x17882:    65 73 64 20 30 31 3b 33  31 00 23 20 69 6d 61 67   |esd 01;31.# imag|
0x17892:    65 20 66 6f 72 6d 61 74  73 00 2e 6a 70 67 20 30   |e formats..jpg 0|
0x178a2:    31 3b 33 35 00 2e 6a 70  65 67 20 30 31 3b 33 35   |1;35..jpeg 01;35|
0x178b2:    00 2e 6d 6a 70 67 20 30  31 3b 33 35 00 2e 6d 6a   |..mjpg 01;35..mj|
0x178c2:    70 65 67 20 30 31 3b 33  35 00 2e 67 69 66 20 30   |peg 01;35..gif 0|
0x178d2:    31 3b 33 35 00 2e 62 6d  70 20 30 31 3b 33 35 00   |1;35..bmp 01;35.|
0x178e2:    2e 70 62 6d 20 30 31 3b  33 35 00 2e 70 67 6d 20   |.pbm 01;35..pgm |
0x178f2:    30 31 3b 33 35 00 2e 70  70 6d 20 30 31 3b 33 35   |01;35..ppm 01;35|
0x17902:    00 2e 74 67 61 20 30 31  3b 33 35 00 2e 78 62 6d   |..tga 01;35..xbm|
0x17912:    20 30 31 3b 33 35 00 2e  78 70 6d 20 30 31 3b 33   | 01;35..xpm 01;3|
0x17922:    35 00 2e 74 69 66 20 30  31 3b 33 35 00 2e 74 69   |5..tif 01;35..ti|
0x17932:    66 66 20 30 31 3b 33 35  00 2e 70 6e 67 20 30 31   |ff 01;35..png 01|
0x17942:    3b 33 35 00 2e 73 76 67  20 30 31 3b 33 35 00 2e   |;35..svg 01;35..|
0x17952:    73 76 67 7a 20 30 31 3b  33 35 00 2e 6d 6e 67 20   |svgz 01;35..mng |
0x17962:    30 31 3b 33 35 00 2e 70  63 78 20 30 31 3b 33 35   |01;35..pcx 01;35|
0x17972:    00 2e 6d 6f 76 20 30 31  3b 33 35 00 2e 6d 70 67   |..mov 01;35..mpg|
0x17982:    20 30 31 3b 33 35 00 2e  6d 70 65 67 20 30 31 3b   | 01;35..mpeg 01;|
0x17992:    33 35 00 2e 6d 32 76 20  30 31 3b 33 35 00 2e 6d   |35..m2v 01;35..m|
0x179a2:    6b 76 20 30 31 3b 33 35  00 2e 77 65 62 6d 20 30   |kv 01;35..webm 0|
0x179b2:    31 3b 33 35 00 2e 6f 67  6d 20 30 31 3b 33 35 00   |1;35..ogm 01;35.|
0x179c2:    2e 6d 70 34 20 30 31 3b  33 35 00 2e 6d 34 76 20   |.mp4 01;35..m4v |
0x179d2:    30 31 3b 33 35 00 2e 6d  70 34 76 20 30 31 3b 33   |01;35..mp4v 01;3|
0x179e2:    35 00 2e 76 6f 62 20 30  31 3b 33 35 00 2e 71 74   |5..vob 01;35..qt|
0x179f2:    20 30 31 3b 33 35 00 2e  6e 75 76 20 30 31 3b 33   | 01;35..nuv 01;3|
0x17a02:    35 00 2e 77 6d 76 20 30  31 3b 33 35 00 2e 61 73   |5..wmv 01;35..as|
0x17a12:    66 20 30 31 3b 33 35 00  2e 72 6d 20 30 31 3b 33   |f 01;35..rm 01;3|
0x17a22:    35 00 2e 72 6d 76 62 20  30 31 3b 33 35 00 2e 66   |5..rmvb 01;35..f|
0x17a32:    6c 63 20 30 31 3b 33 35  00 2e 61 76 69 20 30 31   |lc 01;35..avi 01|
0x17a42:    3b 33 35 00 2e 66 6c 69  20 30 31 3b 33 35 00 2e   |;35..fli 01;35..|
0x17a52:    66 6c 76 20 30 31 3b 33  35 00 2e 67 6c 20 30 31   |flv 01;35..gl 01|
0x17a62:    3b 33 35 00 2e 64 6c 20  30 31 3b 33 35 00 2e 78   |;35..dl 01;35..x|
0x17a72:    63 66 20 30 31 3b 33 35  00 2e 78 77 64 20 30 31   |cf 01;35..xwd 01|
0x17a82:    3b 33 35 00 2e 79 75 76  20 30 31 3b 33 35 00 2e   |;35..yuv 01;35..|
0x17a92:    63 67 6d 20 30 31 3b 33  35 00 2e 65 6d 66 20 30   |cgm 01;35..emf 0|
0x17aa2:    31 3b 33 35 00 23 20 68  74 74 70 73 3a 2f 2f 77   |1;35.# https://w|
0x17ab2:    69 6b 69 2e 78 69 70 68  2e 6f 72 67 2f 4d 49 4d   |iki.xiph.org/MIM|
0x17ac2:    45 5f 54 79 70 65 73 5f  61 6e 64 5f 46 69 6c 65   |E_Types_and_File|
0x17ad2:    5f 45 78 74 65 6e 73 69  6f 6e 73 00 2e 6f 67 76   |_Extensions..ogv|
0x17ae2:    20 30 31 3b 33 35 00 2e  6f 67 78 20 30 31 3b 33   | 01;35..ogx 01;3|
0x17af2:    35 00 23 20 61 75 64 69  6f 20 66 6f 72 6d 61 74   |5.# audio format|
0x17b02:    73 00 2e 61 61 63 20 30  30 3b 33 36 00 2e 61 75   |s..aac 00;36..au|
0x17b12:    20 30 30 3b 33 36 00 2e  66 6c 61 63 20 30 30 3b   | 00;36..flac 00;|
0x17b22:    33 36 00 2e 6d 34 61 20  30 30 3b 33 36 00 2e 6d   |36..m4a 00;36..m|
0x17b32:    69 64 20 30 30 3b 33 36  00 2e 6d 69 64 69 20 30   |id 00;36..midi 0|
0x17b42:    30 3b 33 36 00 2e 6d 6b  61 20 30 30 3b 33 36 00   |0;36..mka 00;36.|
0x17b52:    2e 6d 70 33 20 30 30 3b  33 36 00 2e 6d 70 63 20   |.mp3 00;36..mpc |
0x17b62:    30 30 3b 33 36 00 2e 6f  67 67 20 30 30 3b 33 36   |00;36..ogg 00;36|
0x17b72:    00 2e 72 61 20 30 30 3b  33 36 00 2e 77 61 76 20   |..ra 00;36..wav |
0x17b82:    30 30 3b 33 36 00 23 20  68 74 74 70 73 3a 2f 2f   |00;36.# https://|
0x17b92:    77 69 6b 69 2e 78 69 70  68 2e 6f 72 67 2f 4d 49   |wiki.xiph.org/MI|
0x17ba2:    4d 45 5f 54 79 70 65 73  5f 61 6e 64 5f 46 69 6c   |ME_Types_and_Fil|
0x17bb2:    65 5f 45 78 74 65 6e 73  69 6f 6e 73 00 2e 6f 67   |e_Extensions..og|
0x17bc2:    61 20 30 30 3b 33 36 00  2e 6f 70 75 73 20 30 30   |a 00;36..opus 00|
0x17bd2:    3b 33 36 00 2e 73 70 78  20 30 30 3b 33 36 00 2e   |;36..spx 00;36..|
0x17be2:    78 73 70 66 20 30 30 3b  33 36 00                  |xspf 00;36.     |
0x17bed:    30 30 00                                           |00.             |   "00"
0x17bf0:    25 2e 2a 73 25 73 25 73  00                        |%.*s%s%s.       |   "%.*s%s%s"
0x17bf9:    25 25 25 30 32 78 00                               |%%%02x.         |   "%%%02x"
0x17c00:    73 72 63 2f 6c 73 2e 63  00                        |src/ls.c.       |   "src/ls.c"
0x17c09:    73 6f 72 74 5f 74 79 70  65 20 21 3d 20 73 6f 72   |sort_type != sor|   "sort_type != sort_version"
0x17c19:    74 5f 76 65 72 73 69 6f  6e 00                     |t_version.      |
0x17c23:    20 25 6c 75 00                                     | %lu.           |   " %lu"
0x17c28:    25 2a 6c 75 20 00                                  |%*lu .          |   "%*lu "
0x17c2e:    3f 00 1b 5d 38 3b 3b 66  69 6c 65 3a 2f 2f 25 73   |?..]8;;file://%s|
0x17c3e:    25 73 25 73 07 00 1b 5d  38 3b 3b 07 00            |%s%s...]8;;..   |
0x17c4b:    25 73 20 25 2a 73 20 00                            |%s %*s .        |   "%s %*s "
0x17c53:    20 20 00                                           |  .             |   "  "
0x17c56:    25 2a 73 2c 20 25 2a 73  20 00                     |%*s, %*s .      |   "%*s, %*s "
0x17c60:    20 2d 3e 20 00                                     | -> .           |   " -> "
0x17c65:    65 72 72 6f 72 20 63 61  6e 6f 6e 69 63 61 6c 69   |error canonicali|   "error canonicalizing %s"
0x17c75:    7a 69 6e 67 20 25 73 00                            |zing %s.        |
0x17c7d:    63 61 6e 6e 6f 74 20 61  63 63 65 73 73 20 25 73   |cannot access %s|   "cannot access %s"
0x17c8d:    00                                                 |.               |
0x17c8e:    63 61 6e 6e 6f 74 20 72  65 61 64 20 73 79 6d 62   |cannot read symb|   "cannot read symbolic link %s"
0x17c9e:    6f 6c 69 63 20 6c 69 6e  6b 20 25 73 00            |olic link %s.   |
0x17cab:    75 6e 6c 61 62 65 6c 65  64 00                     |unlabeled.      |   "unlabeled"
0x17cb5:    63 61 6e 6e 6f 74 20 6f  70 65 6e 20 64 69 72 65   |cannot open dire|   "cannot open directory %s"
0x17cc5:    63 74 6f 72 79 20 25 73  00                        |ctory %s.       |
0x17cce:    72 65 61 64 69 6e 67 20  64 69 72 65 63 74 6f 72   |reading director|   "reading directory %s"
0x17cde:    79 20 25 73 00                                     |y %s.           |
0x17ce3:    63 6c 6f 73 69 6e 67 20  64 69 72 65 63 74 6f 72   |closing director|   "closing directory %s"
0x17cf3:    79 20 25 73 00                                     |y %s.           |
0x17cf8:    74 6f 74 61 6c 00                                  |total.          |   "total"
0x17cfe:    76 64 69 72 00                                     |vdir.           |   "vdir"
0x17d03:    74 65 73 74 20 69 6e 76  6f 63 61 74 69 6f 6e 00   |test invocation.|   "test invocation"
0x17d13:    4d 75 6c 74 69 2d 63 61  6c 6c 20 69 6e 76 6f 63   |Multi-call invoc|   "Multi-call invocation"
0x17d23:    61 74 69 6f 6e 00                                  |ation.          |
0x17d29:    73 68 61 32 32 34 73 75  6d 00                     |sha224sum.      |   "sha224sum"
0x17d33:    73 68 61 32 20 75 74 69  6c 69 74 69 65 73 00      |sha2 utilities. |   "sha2 utilities"
0x17d42:    73 68 61 32 35 36 73 75  6d 00                     |sha256sum.      |   "sha256sum"
0x17d4c:    73 68 61 33 38 34 73 75  6d 00                     |sha384sum.      |   "sha384sum"
0x17d56:    73 68 61 35 31 32 73 75  6d 00                     |sha512sum.      |   "sha512sum"
0x17d60:    0a 25 73 20 6f 6e 6c 69  6e 65 20 68 65 6c 70 3a   |.%s online help:|   "\n%s online help: <%s>\n"
0x17d70:    20 3c 25 73 3e 0a 00                               | <%s>..         |
0x17d77:    47 4e 55 20 63 6f 72 65  75 74 69 6c 73 00         |GNU coreutils.  |   "GNU coreutils"
0x17d85:    65 6e 5f 00                                        |en_.            |   "en_"
0x17d89:    66 75 6c 6c 2d 69 73 6f  00                        |full-iso.       |   "full-iso"
0x17d92:    6c 63 00                                           |lc.             |   "lc"
0x17d95:    2f 75 73 72 2f 73 68 61  72 65 2f 6c 6f 63 61 6c   |/usr/share/local|   "/usr/share/locale"
0x17da5:    65 00                                              |e.              |
0x17da7:    51 55 4f 54 49 4e 47 5f  53 54 59 4c 45 00         |QUOTING_STYLE.  |   "QUOTING_STYLE"
0x17db5:    43 4f 4c 55 4d 4e 53 00                            |COLUMNS.        |   "COLUMNS"
0x17dbd:    54 41 42 53 49 5a 45 00                            |TABSIZE.        |   "TABSIZE"
0x17dc5:    69 6e 76 61 6c 69 64 20  6c 69 6e 65 20 77 69 64   |invalid line wid|   "invalid line width"
0x17dd5:    74 68 00                                           |th.             |
0x17dd8:    25 73 3a 20 25 73 00                               |%s: %s.         |   "%s: %s"
0x17ddf:    2e 2a 7e 00                                        |.*~.            |   ".*~"
0x17de3:    69 6e 76 61 6c 69 64 20  74 61 62 20 73 69 7a 65   |invalid tab size|   "invalid tab size"
0x17df3:    00                                                 |.               |
0x17df4:    2d 2d 73 6f 72 74 00                               |--sort.         |   "--sort"
0x17dfb:    2d 2d 74 69 6d 65 00                               |--time.         |   "--time"
0x17e02:    2d 2d 66 6f 72 6d 61 74  00                        |--format.       |   "--format"
0x17e0b:    2d 2d 63 6f 6c 6f 72 00                            |--color.        |   "--color"
0x17e13:    2d 2d 68 79 70 65 72 6c  69 6e 6b 00               |--hyperlink.    |   "--hyperlink"
0x17e1f:    2d 2d 69 6e 64 69 63 61  74 6f 72 2d 73 74 79 6c   |--indicator-styl|   "--indicator-style"
0x17e2f:    65 00                                              |e.              |
0x17e31:    2d 2d 71 75 6f 74 69 6e  67 2d 73 74 79 6c 65 00   |--quoting-style.|   "--quoting-style"
0x17e41:    44 61 76 69 64 20 4d 61  63 4b 65 6e 7a 69 65 00   |David MacKenzie.|   "David MacKenzie"
0x17e51:    52 69 63 68 61 72 64 20  4d 2e 20 53 74 61 6c 6c   |Richard M. Stall|   "Richard M. Stallman"
0x17e61:    6d 61 6e 00                                        |man.            |
0x17e65:    4c 53 5f 42 4c 4f 43 4b  5f 53 49 5a 45 00         |LS_BLOCK_SIZE.  |   "LS_BLOCK_SIZE"
0x17e73:    2a 3d 3e 40 7c 00                                  |*=>@|.          |   "*=>@|"
0x17e79:    54 49 4d 45 5f 53 54 59  4c 45 00                  |TIME_STYLE.     |   "TIME_STYLE"
0x17e84:    69 6e 76 61 6c 69 64 20  74 69 6d 65 20 73 74 79   |invalid time sty|   "invalid time style format %s"
0x17e94:    6c 65 20 66 6f 72 6d 61  74 20 25 73 00            |le format %s.   |
0x17ea1:    74 69 6d 65 20 73 74 79  6c 65 00                  |time style.     |   "time style"
0x17eac:    56 61 6c 69 64 20 61 72  67 75 6d 65 6e 74 73 20   |Valid arguments |   "Valid arguments are:\n"
0x17ebc:    61 72 65 3a 0a 00                                  |are:..          |
0x17ec2:    20 20 2d 20 5b 70 6f 73  69 78 2d 5d 25 73 0a 00   |  - [posix-]%s..|   "  - [posix-]%s\n"
0x17ed2:    25 59 2d 25 6d 2d 25 64  20 25 48 3a 25 4d 3a 25   |%Y-%m-%d %H:%M:%|   "%Y-%m-%d %H:%M:%S.%N %z"
0x17ee2:    53 2e 25 4e 20 25 7a 00                            |S.%N %z.        |
0x17eea:    25 59 2d 25 6d 2d 25 64  20 25 48 3a 25 4d 00      |%Y-%m-%d %H:%M. |   "%Y-%m-%d %H:%M"
0x17ef9:    25 59 2d 25 6d 2d 25 64  20 00                     |%Y-%m-%d .      |   "%Y-%m-%d "
0x17f03:    4c 53 5f 43 4f 4c 4f 52  53 00                     |LS_COLORS.      |   "LS_COLORS"
0x17f0d:    43 4f 4c 4f 52 54 45 52  4d 00                     |COLORTERM.      |   "COLORTERM"
0x17f17:    54 45 52 4d 20 00                                  |TERM .          |   "TERM "
0x17f1d:    75 6e 72 65 63 6f 67 6e  69 7a 65 64 20 70 72 65   |unrecognized pre|   "unrecognized prefix: %s"
0x17f2d:    66 69 78 3a 20 25 73 00                            |fix: %s.        |
0x17f35:    74 61 72 67 65 74 00                               |target.         |   "target"
0x17f3c:    54 5a 00                                           |TZ.             |   "TZ"
0x17f3f:    66 6f 75 6e 64 00                                  |found.          |   "found"
0x17f45:    2f 2f 44 49 52 45 44 2f  2f 00                     |//DIRED//.      |   "//DIRED//"
0x17f4f:    2f 2f 53 55 42 44 49 52  45 44 2f 2f 00            |//SUBDIRED//.   |   "//SUBDIRED//"
0x17f5c:    79 65 73 00                                        |yes.            |   "yes"
0x17f60:    66 6f 72 63 65 00                                  |force.          |   "force"
0x17f66:    6e 65 76 65 72 00                                  |never.          |   "never"
0x17f6c:    6e 6f 00                                           |no.             |   "no"
0x17f6f:    6e 6f 6e 65 00                                     |none.           |   "none"
0x17f74:    61 75 74 6f 00                                     |auto.           |   "auto"
0x17f79:    69 66 2d 74 74 79 00                               |if-tty.         |   "if-tty"
0x17f80:    61 74 69 6d 65 00                                  |atime.          |   "atime"
0x17f86:    75 73 65 00                                        |use.            |   "use"
0x17f8a:    63 74 69 6d 65 00                                  |ctime.          |   "ctime"
0x17f90:    73 74 61 74 75 73 00                               |status.         |   "status"
0x17f97:    65 78 74 65 6e 73 69 6f  6e 00                     |extension.      |   "extension"
0x17fa1:    76 65 72 62 6f 73 65 00                            |verbose.        |   "verbose"
0x17fa9:    6c 6f 6e 67 00                                     |long.           |   "long"
0x17fae:    63 6f 6d 6d 61 73 00                               |commas.         |   "commas"
0x17fb5:    68 6f 72 69 7a 6f 6e 74  61 6c 00                  |horizontal.     |   "horizontal"
0x17fc0:    61 63 72 6f 73 73 00                               |across.         |   "across"
0x17fc7:    76 65 72 74 69 63 61 6c  00                        |vertical.       |   "vertical"
0x17fd0:    73 69 6e 67 6c 65 2d 63  6f 6c 75 6d 6e 00         |single-column.  |   "single-column"
0x17fde:    64 69 72 65 63 74 6f 72  79 00 64 69 72 65 64 00   |directory.dired.|
0x17fee:    66 75 6c 6c 2d 74 69 6d  65 00 67 72 6f 75 70 2d   |full-time.group-|
0x17ffe:    64 69 72 65 63 74 6f 72  69 65 73 2d 66 69 72      |directories-fir |
0x1800d:    73 74 00                                           |st.             |   "st"
0x18010:    68 75 6d 61 6e 2d 72 65  61 64 61 62 6c 65 00      |human-readable. |   "human-readable"
0x1801f:    69 6e 6f 64 65 00 6b 69  62 69 62 79 74 65 73 00   |inode.kibibytes.|
0x1802f:    6e 75 6d 65 72 69 63 2d  75 69 64 2d 67 69 64 00   |numeric-uid-gid.|
0x1803f:    6e 6f 2d 67 72 6f 75 70  00 68 69 64 65 2d 63 6f   |no-group.hide-co|
0x1804f:    6e 74 72 6f 6c 2d 63 68  61                        |ntrol-cha       |
0x18058:    72 73 00                                           |rs.             |   "rs"
0x1805b:    72 65 76 65 72 73 65 00  61 6c 6d 6f 73 74 2d      |reverse.almost- |
0x1806a:    61 6c 6c 00                                        |all.            |   "all"
0x1806e:    69 67 6e 6f 72 65 2d 62  61 63 6b 75 70 73 00      |ignore-backups. |
0x1807d:    63 6c 61 73 73 69 66 79  00                        |classify.       |   "classify"
0x18086:    66 69 6c 65 2d 74 79 70  65 00                     |file-type.      |   "file-type"
0x18090:    73 69 00                                           |si.             |   "si"
0x18093:    64 65 72 65 66 65 72 65  6e 63 65 2d 63 6f 6d 6d   |dereference-comm|
0x180a3:    61 6e 64 2d 6c 69 6e 65  00 68 69 64 65 00 69 67   |and-line.hide.ig|
0x180b3:    6e 6f 72 65 00 64 65 72  65 66 65 72 65 6e 63 65   |nore.dereference|
0x180c3:    00                                                 |.               |
0x180c4:    6c 69 74 65 72 61 6c 00                            |literal.        |   "literal"
0x180cc:    71 75 6f 74 65 2d 6e 61  6d 65 00 72 65 63 75 72   |quote-name.recur|
0x180dc:    73 69 76 65 00 73 68 6f  77 2d 63 6f 6e 74 72 6f   |sive.show-contro|
0x180ec:    6c 2d 63 68 61 72 73 00  74 61 62 73 69 7a 65 00   |l-chars.tabsize.|
0x180fc:    74 69 6d 65 2d 73 74 79  6c 65 00 62 6c 6f 63 6b   |time-style.block|
0x1810c:    2d 73 69 7a 65 00 63 6f  6e 74 65 78 74 00 61 75   |-size.context.au|
0x1811c:    74 68                                              |th              |
0x1811e:    6f 72 00                                           |or.             |   "or"
0x18121:    68 65 6c 70 00                                     |help.           |
0x18126:    25 62 20 25 65 20 20 25  59 00                     |%b %e  %Y.      |   "%b %e  %Y"
0x18130:    25 62 20 25 65 20 25 48  3a 25 4d 00               |%b %e %H:%M.    |   "%b %e %H:%M"
0x1813c:    1b 5b 00 30 31 3b 33 34  00                        |.[.01;34.       |
0x18145:    30 31 3b 33 36 00                                  |01;36.          |   "01;36"
0x1814b:    30 31 3b 33 35 00 30 31  3b 33 33 00 30 31 3b 33   |01;35.01;33.01;3|
0x1815b:    32 00 33 37 3b 34 31 00  33 30 3b 34 33 00 33 37   |2.37;41.30;43.37|
0x1816b:    3b 34 34 00 33 34 3b 34  32 00 33 30 3b 34 32 00   |;44.34;42.30;42.|
0x1817b:    33 30 3b 34 31 00 1b 5b  4b 00                     |30;41..[K.      |
0x18185:    72 63 00                                           |rc.             |   "rc"
0x18188:    65 63 00                                           |ec.             |   "ec"
0x1818b:    66 69 00                                           |fi.             |   "fi"
0x1818e:    64 69 00                                           |di.             |   "di"
0x18191:    6c 6e 00                                           |ln.             |   "ln"
0x18194:    70 69 00                                           |pi.             |   "pi"
0x18197:    62 64 00                                           |bd.             |   "bd"
0x1819a:    63 64 00                                           |cd.             |   "cd"
0x1819d:    6d 69 00                                           |mi.             |   "mi"
0x181a0:    65 78 00                                           |ex.             |   "ex"
0x181a3:    64 6f 00                                           |do.             |   "do"
0x181a6:    73 75 00                                           |su.             |   "su"
0x181a9:    73 67 00                                           |sg.             |   "sg"
0x181ac:    6f 77 00                                           |ow.             |   "ow"
0x181af:    74 77 00                                           |tw.             |   "tw"
0x181b2:    63 61 00                                           |ca.             |   "ca"
0x181b5:    6d 68 00                                           |mh.             |   "mh"
0x181b8:    63 6c 00                                           |cl.             |   "cl"
0x181bb:    73 6c 61 73 68 00                                  |slash.          |   "slash"
0x181c1:    6c 6f 6e 67 2d 69 73 6f  00                        |long-iso.       |   "long-iso"
0x181ca:    00 00 00 00 00 00                                  |......          |
0x181d0:    63 61 6e 6e 6f 74 20 64  65 74 65 72 6d 69 6e 65   |cannot determine|   "cannot determine device and inode of %s"
0x181e0:    20 64 65 76 69 63 65 20  61 6e 64 20 69 6e 6f 64   | device and inod|
0x181f0:    65 20 6f 66 20 25 73 00                            |e of %s.        |
0x181f8:    25 73 3a 20 6e 6f 74 20  6c 69 73 74 69 6e 67 20   |%s: not listing |   "%s: not listing already-listed directory"
0x18208:    61 6c 72 65 61 64 79 2d  6c 69 73 74 65 64 20 64   |already-listed d|
0x18218:    69 72 65 63 74 6f 72 79  00                        |irectory.       |
0x18221:    00 00 00 00 00 00 00                               |.......         |
0x18228:    54 72 79 20 27 25 73 20  2d 2d 68 65 6c 70 27 20   |Try '%s --help' |   "Try '%s --help' for more information.\n"
0x18238:    66 6f 72 20 6d 6f 72 65  20 69 6e 66 6f 72 6d 61   |for more informa|
0x18248:    74 69 6f 6e 2e 0a 00                               |tion...         |
0x1824f:    00                                                 |.               |
0x18250:    55 73 61 67 65 3a 20 25  73 20 5b 4f 50 54 49 4f   |Usage: %s [OPTIO|   "Usage: %s [OPTION]... [FILE]...\n"
0x18260:    4e 5d 2e 2e 2e 20 5b 46  49 4c 45 5d 2e 2e 2e 0a   |N]... [FILE]....|
0x18270:    00                                                 |.               |
0x18271:    00 00 00 00 00 00 00                               |.......         |
0x18278:    4c 69 73 74 20 69 6e 66  6f 72 6d 61 74 69 6f 6e   |List information|   "List information about the FILEs (the current directory by default).\nSort entries alphabetically if none of -cftuvSUX nor --sort is specified.\n"
0x18288:    20 61 62 6f 75 74 20 74  68 65 20 46 49 4c 45 73   | about the FILEs|
0x18298:    20 28 74 68 65 20 63 75  72 72 65 6e 74 20 64 69   | (the current di|
0x182a8:    72 65 63 74 6f 72 79 20  62 79 20 64 65 66 61 75   |rectory by defau|
0x182b8:    6c 74 29 2e 0a 53 6f 72  74 20 65 6e 74 72 69 65   |lt)..Sort entrie|
0x182c8:    73 20 61 6c 70 68 61 62  65 74 69 63 61 6c 6c 79   |s alphabetically|
0x182d8:    20 69 66 20 6e 6f 6e 65  20 6f 66 20 2d 63 66 74   | if none of -cft|
0x182e8:    75 76 53 55 58 20 6e 6f  72 20 2d 2d 73 6f 72 74   |uvSUX nor --sort|
0x182f8:    20 69 73 20 73 70 65 63  69 66 69 65 64 2e 0a 00   | is specified...|
0x18308:    0a 4d 61 6e 64 61 74 6f  72 79 20 61 72 67 75 6d   |.Mandatory argum|   "\nMandatory arguments to long options are mandatory for short options too.\n"
0x18318:    65 6e 74 73 20 74 6f 20  6c 6f 6e 67 20 6f 70 74   |ents to long opt|
0x18328:    69 6f 6e 73 20 61 72 65  20 6d 61 6e 64 61 74 6f   |ions are mandato|
0x18338:    72 79 20 66 6f 72 20 73  68 6f 72 74 20 6f 70 74   |ry for short opt|
0x18348:    69 6f 6e 73 20 74 6f 6f  2e 0a 00                  |ions too...     |
0x18353:    00 00 00 00 00                                     |.....           |
0x18358:    20 20 2d 61 2c 20 2d 2d  61 6c 6c 20 20 20 20 20   |  -a, --all     |   "  -a, --all                  do not ignore entries starting with .\n  -A, --almost-all           do not list implied . and ..\n      --author               with -l, print the author of each file\n  -b, --escape               print C-style escapes for nongraphic characters\n"
0x18368:    20 20 20 20 20 20 20 20  20 20 20 20 20 64 6f 20   |             do |
0x18378:    6e 6f 74 20 69 67 6e 6f  72 65 20 65 6e 74 72 69   |not ignore entri|
0x18388:    65 73 20 73 74 61 72 74  69 6e 67 20 77 69 74 68   |es starting with|
0x18398:    20 2e 0a 20 20 2d 41 2c  20 2d 2d 61 6c 6d 6f 73   | ..  -A, --almos|
0x183a8:    74 2d 61 6c 6c 20 20 20  20 20 20 20 20 20 20 20   |t-all           |
0x183b8:    64 6f 20 6e 6f 74 20 6c  69 73 74 20 69 6d 70 6c   |do not list impl|
0x183c8:    69 65 64 20 2e 20 61 6e  64 20 2e 2e 0a 20 20 20   |ied . and ...   |
0x183d8:    20 20 20 2d 2d 61 75 74  68 6f 72 20 20 20 20 20   |   --author     |
0x183e8:    20 20 20 20 20 20 20 20  20 20 77 69 74 68 20 2d   |          with -|
0x183f8:    6c 2c 20 70 72 69 6e 74  20 74 68 65 20 61 75 74   |l, print the aut|
0x18408:    68 6f 72 20 6f 66 20 65  61 63 68 20 66 69 6c 65   |hor of each file|
0x18418:    0a 20 20 2d 62 2c 20 2d  2d 65 73 63 61 70 65 20   |.  -b, --escape |
0x18428:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 70 72   |              pr|
0x18438:    69 6e 74 20 43 2d 73 74  79 6c 65 20 65 73 63 61   |int C-style esca|
0x18448:    70 65 73 20 66 6f 72 20  6e 6f 6e 67 72 61 70 68   |pes for nongraph|
0x18458:    69 63 20 63 68 61 72 61  63 74 65 72 73 0a 00      |ic characters.. |
0x18467:    00                                                 |.               |
0x18468:    20 20 20 20 20 20 2d 2d  62 6c 6f 63 6b 2d 73 69   |      --block-si|   "      --block-size=SIZE      scale sizes by SIZE before printing them; e.g.,\n                               '--block-size=M' prints sizes in units of\n                               1,048,576 bytes; see SIZE format below\n  -B, --ignore-backups       do not list implied entries ending with ~\n  -c                         with -lt: sort by, and show, ctime (time of last\n                               modification of file status information);\n                               with -l: show ctime and sort by name;\n                               otherwise: sort by ctime, newest first\n"
0x18478:    7a 65 3d 53 49 5a 45 20  20 20 20 20 20 73 63 61   |ze=SIZE      sca|
0x18488:    6c 65 20 73 69 7a 65 73  20 62 79 20 53 49 5a 45   |le sizes by SIZE|
0x18498:    20 62 65 66 6f 72 65 20  70 72 69 6e 74 69 6e 67   | before printing|
0x184a8:    20 74 68 65 6d 3b 20 65  2e 67 2e 2c 0a 20 20 20   | them; e.g.,.   |
0x184b8:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x184c8:    20 20 20 20 20 20 20 20  20 20 20 20 27 2d 2d 62   |            '--b|
0x184d8:    6c 6f 63 6b 2d 73 69 7a  65 3d 4d 27 20 70 72 69   |lock-size=M' pri|
0x184e8:    6e 74 73 20 73 69 7a 65  73 20 69 6e 20 75 6e 69   |nts sizes in uni|
0x184f8:    74 73 20 6f 66 0a 20 20  20 20 20 20 20 20 20 20   |ts of.          |
0x18508:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x18518:    20 20 20 20 20 31 2c 30  34 38 2c 35 37 36 20 62   |     1,048,576 b|
0x18528:    79 74 65 73 3b 20 73 65  65 20 53 49 5a 45 20 66   |ytes; see SIZE f|
0x18538:    6f 72 6d 61 74 20 62 65  6c 6f 77 0a 20 20 2d 42   |ormat below.  -B|
0x18548:    2c 20 2d 2d 69 67 6e 6f  72 65 2d 62 61 63 6b 75   |, --ignore-backu|
0x18558:    70 73 20 20 20 20 20 20  20 64 6f 20 6e 6f 74 20   |ps       do not |
0x18568:    6c 69 73 74 20 69 6d 70  6c 69 65 64 20 65 6e 74   |list implied ent|
0x18578:    72 69 65 73 20 65 6e 64  69 6e 67 20 77 69 74 68   |ries ending with|
0x18588:    20 7e 0a 20 20 2d 63 20  20 20 20 20 20 20 20 20   | ~.  -c         |
0x18598:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x185a8:    77 69 74 68 20 2d 6c 74  3a 20 73 6f 72 74 20 62   |with -lt: sort b|
0x185b8:    79 2c 20 61 6e 64 20 73  68 6f 77 2c 20 63 74 69   |y, and show, cti|
0x185c8:    6d 65 20 28 74 69 6d 65  20 6f 66 20 6c 61 73 74   |me (time of last|
0x185d8:    0a 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |.               |
0x185e8:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x185f8:    6d 6f 64 69 66 69 63 61  74 69 6f 6e 20 6f 66 20   |modification of |
0x18608:    66 69 6c 65 20 73 74 61  74 75 73 20 69 6e 66 6f   |file status info|
0x18618:    72 6d 61 74 69 6f 6e 29  3b 0a 20 20 20 20 20 20   |rmation);.      |
0x18628:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x18638:    20 20 20 20 20 20 20 20  20 77 69 74 68 20 2d 6c   |         with -l|
0x18648:    3a 20 73 68 6f 77 20 63  74 69 6d 65 20 61 6e 64   |: show ctime and|
0x18658:    20 73 6f 72 74 20 62 79  20 6e 61 6d 65 3b 0a 20   | sort by name;. |
0x18668:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x18678:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 6f 74   |              ot|
0x18688:    68 65 72 77 69 73 65 3a  20 73 6f 72 74 20 62 79   |herwise: sort by|
0x18698:    20 63 74 69 6d 65 2c 20  6e 65 77 65 73 74 20 66   | ctime, newest f|
0x186a8:    69 72 73 74 0a 00                                  |irst..          |
0x186ae:    00 00                                              |..              |
0x186b0:    20 20 2d 43 20 20 20 20  20 20 20 20 20 20 20 20   |  -C            |   "  -C                         list entries by columns\n      --color[=WHEN]         colorize the output; WHEN can be 'always' (default\n                               if omitted), 'auto', or 'never'; more info below\n  -d, --directory            list directories themselves, not their contents\n  -D, --dired                generate output designed for Emacs' dired mode\n"
0x186c0:    20 20 20 20 20 20 20 20  20 20 20 20 20 6c 69 73   |             lis|
0x186d0:    74 20 65 6e 74 72 69 65  73 20 62 79 20 63 6f 6c   |t entries by col|
0x186e0:    75 6d 6e 73 0a 20 20 20  20 20 20 2d 2d 63 6f 6c   |umns.      --col|
0x186f0:    6f 72 5b 3d 57 48 45 4e  5d 20 20 20 20 20 20 20   |or[=WHEN]       |
0x18700:    20 20 63 6f 6c 6f 72 69  7a 65 20 74 68 65 20 6f   |  colorize the o|
0x18710:    75 74 70 75 74 3b 20 57  48 45 4e 20 63 61 6e 20   |utput; WHEN can |
0x18720:    62 65 20 27 61 6c 77 61  79 73 27 20 28 64 65 66   |be 'always' (def|
0x18730:    61 75 6c 74 0a 20 20 20  20 20 20 20 20 20 20 20   |ault.           |
0x18740:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x18750:    20 20 20 20 69 66 20 6f  6d 69 74 74 65 64 29 2c   |    if omitted),|
0x18760:    20 27 61 75 74 6f 27 2c  20 6f 72 20 27 6e 65 76   | 'auto', or 'nev|
0x18770:    65 72 27 3b 20 6d 6f 72  65 20 69 6e 66 6f 20 62   |er'; more info b|
0x18780:    65 6c 6f 77 0a 20 20 2d  64 2c 20 2d 2d 64 69 72   |elow.  -d, --dir|
0x18790:    65 63 74 6f 72 79 20 20  20 20 20 20 20 20 20 20   |ectory          |
0x187a0:    20 20 6c 69 73 74 20 64  69 72 65 63 74 6f 72 69   |  list directori|
0x187b0:    65 73 20 74 68 65 6d 73  65 6c 76 65 73 2c 20 6e   |es themselves, n|
0x187c0:    6f 74 20 74 68 65 69 72  20 63 6f 6e 74 65 6e 74   |ot their content|
0x187d0:    73 0a 20 20 2d 44 2c 20  2d 2d 64 69 72 65 64 20   |s.  -D, --dired |
0x187e0:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 67   |               g|
0x187f0:    65 6e 65 72 61 74 65 20  6f 75 74 70 75 74 20 64   |enerate output d|
0x18800:    65 73 69 67 6e 65 64 20  66 6f 72 20 45 6d 61 63   |esigned for Emac|
0x18810:    73 27 20 64 69 72 65 64  20 6d 6f 64 65 0a 00      |s' dired mode.. |
0x1881f:    00                                                 |.               |
0x18820:    20 20 2d 66 20 20 20 20  20 20 20 20 20 20 20 20   |  -f            |   "  -f                         do not sort, enable -aU, disable -ls --color\n  -F, --classify             append indicator (one of */=>@|) to entries\n      --file-type            likewise, except do not append '*'\n      --format=WORD          across -x, commas -m, horizontal -x, long -l,\n                               single-column -1, verbose -l, vertical -C\n      --full-time            like -l --time-style=full-iso\n"
0x18830:    20 20 20 20 20 20 20 20  20 20 20 20 20 64 6f 20   |             do |
0x18840:    6e 6f 74 20 73 6f 72 74  2c 20 65 6e 61 62 6c 65   |not sort, enable|
0x18850:    20 2d 61 55 2c 20 64 69  73 61 62 6c 65 20 2d 6c   | -aU, disable -l|
0x18860:    73 20 2d 2d 63 6f 6c 6f  72 0a 20 20 2d 46 2c 20   |s --color.  -F, |
0x18870:    2d 2d 63 6c 61 73 73 69  66 79 20 20 20 20 20 20   |--classify      |
0x18880:    20 20 20 20 20 20 20 61  70 70 65 6e 64 20 69 6e   |       append in|
0x18890:    64 69 63 61 74 6f 72 20  28 6f 6e 65 20 6f 66 20   |dicator (one of |
0x188a0:    2a 2f 3d 3e 40 7c 29 20  74 6f 20 65 6e 74 72 69   |*/=>@|) to entri|
0x188b0:    65 73 0a 20 20 20 20 20  20 2d 2d 66 69 6c 65 2d   |es.      --file-|
0x188c0:    74 79 70 65 20 20 20 20  20 20 20 20 20 20 20 20   |type            |
0x188d0:    6c 69 6b 65 77 69 73 65  2c 20 65 78 63 65 70 74   |likewise, except|
0x188e0:    20 64 6f 20 6e 6f 74 20  61 70 70 65 6e 64 20 27   | do not append '|
0x188f0:    2a 27 0a 20 20 20 20 20  20 2d 2d 66 6f 72 6d 61   |*'.      --forma|
0x18900:    74 3d 57 4f 52 44 20 20  20 20 20 20 20 20 20 20   |t=WORD          |
0x18910:    61 63 72 6f 73 73 20 2d  78 2c 20 63 6f 6d 6d 61   |across -x, comma|
0x18920:    73 20 2d 6d 2c 20 68 6f  72 69 7a 6f 6e 74 61 6c   |s -m, horizontal|
0x18930:    20 2d 78 2c 20 6c 6f 6e  67 20 2d 6c 2c 0a 20 20   | -x, long -l,.  |
0x18940:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x18950:    20 20 20 20 20 20 20 20  20 20 20 20 20 73 69 6e   |             sin|
0x18960:    67 6c 65 2d 63 6f 6c 75  6d 6e 20 2d 31 2c 20 76   |gle-column -1, v|
0x18970:    65 72 62 6f 73 65 20 2d  6c 2c 20 76 65 72 74 69   |erbose -l, verti|
0x18980:    63 61 6c 20 2d 43 0a 20  20 20 20 20 20 2d 2d 66   |cal -C.      --f|
0x18990:    75 6c 6c 2d 74 69 6d 65  20 20 20 20 20 20 20 20   |ull-time        |
0x189a0:    20 20 20 20 6c 69 6b 65  20 2d 6c 20 2d 2d 74 69   |    like -l --ti|
0x189b0:    6d 65 2d 73 74 79 6c 65  3d 66 75 6c 6c 2d 69 73   |me-style=full-is|
0x189c0:    6f 0a 00                                           |o..             |
0x189c3:    00 00 00 00 00                                     |.....           |
0x189c8:    20 20 2d 67 20 20 20 20  20 20 20 20 20 20 20 20   |  -g            |   "  -g                         like -l, but do not list owner\n"
0x189d8:    20 20 20 20 20 20 20 20  20 20 20 20 20 6c 69 6b   |             lik|
0x189e8:    65 20 2d 6c 2c 20 62 75  74 20 64 6f 20 6e 6f 74   |e -l, but do not|
0x189f8:    20 6c 69 73 74 20 6f 77  6e 65 72 0a 00            | list owner..   |
0x18a05:    00 00 00                                           |...             |
0x18a08:    20 20 20 20 20 20 2d 2d  67 72 6f 75 70 2d 64 69   |      --group-di|   "      --group-directories-first\n                             group directories before files;\n                               can be augmented with a --sort option, but any\n                               use of --sort=none (-U) disables grouping\n"
0x18a18:    72 65 63 74 6f 72 69 65  73 2d 66 69 72 73 74 0a   |rectories-first.|
0x18a28:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x18a38:    20 20 20 20 20 20 20 20  20 20 20 20 20 67 72 6f   |             gro|
0x18a48:    75 70 20 64 69 72 65 63  74 6f 72 69 65 73 20 62   |up directories b|
0x18a58:    65 66 6f 72 65 20 66 69  6c 65 73 3b 0a 20 20 20   |efore files;.   |
0x18a68:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x18a78:    20 20 20 20 20 20 20 20  20 20 20 20 63 61 6e 20   |            can |
0x18a88:    62 65 20 61 75 67 6d 65  6e 74 65 64 20 77 69 74   |be augmented wit|
0x18a98:    68 20 61 20 2d 2d 73 6f  72 74 20 6f 70 74 69 6f   |h a --sort optio|
0x18aa8:    6e 2c 20 62 75 74 20 61  6e 79 0a 20 20 20 20 20   |n, but any.     |
0x18ab8:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x18ac8:    20 20 20 20 20 20 20 20  20 20 75 73 65 20 6f 66   |          use of|
0x18ad8:    20 2d 2d 73 6f 72 74 3d  6e 6f 6e 65 20 28 2d 55   | --sort=none (-U|
0x18ae8:    29 20 64 69 73 61 62 6c  65 73 20 67 72 6f 75 70   |) disables group|
0x18af8:    69 6e 67 0a 00                                     |ing..           |
0x18afd:    00 00 00                                           |...             |
0x18b00:    20 20 2d 47 2c 20 2d 2d  6e 6f 2d 67 72 6f 75 70   |  -G, --no-group|   "  -G, --no-group             in a long listing, don't print group names\n  -h, --human-readable       with -l and/or -s, print human readable sizes\n                               (e.g., 1K 234M 2G)\n      --si                   likewise, but use powers of 1000 not 1024\n"
0x18b10:    20 20 20 20 20 20 20 20  20 20 20 20 20 69 6e 20   |             in |
0x18b20:    61 20 6c 6f 6e 67 20 6c  69 73 74 69 6e 67 2c 20   |a long listing, |
0x18b30:    64 6f 6e 27 74 20 70 72  69 6e 74 20 67 72 6f 75   |don't print grou|
0x18b40:    70 20 6e 61 6d 65 73 0a  20 20 2d 68 2c 20 2d 2d   |p names.  -h, --|
0x18b50:    68 75 6d 61 6e 2d 72 65  61 64 61 62 6c 65 20 20   |human-readable  |
0x18b60:    20 20 20 20 20 77 69 74  68 20 2d 6c 20 61 6e 64   |     with -l and|
0x18b70:    2f 6f 72 20 2d 73 2c 20  70 72 69 6e 74 20 68 75   |/or -s, print hu|
0x18b80:    6d 61 6e 20 72 65 61 64  61 62 6c 65 20 73 69 7a   |man readable siz|
0x18b90:    65 73 0a 20 20 20 20 20  20 20 20 20 20 20 20 20   |es.             |
0x18ba0:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x18bb0:    20 20 28 65 2e 67 2e 2c  20 31 4b 20 32 33 34 4d   |  (e.g., 1K 234M|
0x18bc0:    20 32 47 29 0a 20 20 20  20 20 20 2d 2d 73 69 20   | 2G).      --si |
0x18bd0:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x18be0:    20 20 6c 69 6b 65 77 69  73 65 2c 20 62 75 74 20   |  likewise, but |
0x18bf0:    75 73 65 20 70 6f 77 65  72 73 20 6f 66 20 31 30   |use powers of 10|
0x18c00:    30 30 20 6e 6f 74 20 31  30 32 34 0a 00            |00 not 1024..   |
0x18c0d:    00 00 00                                           |...             |
0x18c10:    20 20 2d 48 2c 20 2d 2d  64 65 72 65 66 65 72 65   |  -H, --derefere|   "  -H, --dereference-command-line\n                             follow symbolic links listed on the command line\n      --dereference-command-line-symlink-to-dir\n                             follow each command line symbolic link\n                               that points to a directory\n      --hide=PATTERN         do not list implied entries matching shell PATTERN\n                               (overridden by -a or -A)\n"
0x18c20:    6e 63 65 2d 63 6f 6d 6d  61 6e 64 2d 6c 69 6e 65   |nce-command-line|
0x18c30:    0a 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |.               |
0x18c40:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 66 6f   |              fo|
0x18c50:    6c 6c 6f 77 20 73 79 6d  62 6f 6c 69 63 20 6c 69   |llow symbolic li|
0x18c60:    6e 6b 73 20 6c 69 73 74  65 64 20 6f 6e 20 74 68   |nks listed on th|
0x18c70:    65 20 63 6f 6d 6d 61 6e  64 20 6c 69 6e 65 0a 20   |e command line. |
0x18c80:    20 20 20 20 20 2d 2d 64  65 72 65 66 65 72 65 6e   |     --dereferen|
0x18c90:    63 65 2d 63 6f 6d 6d 61  6e 64 2d 6c 69 6e 65 2d   |ce-command-line-|
0x18ca0:    73 79 6d 6c 69 6e 6b 2d  74 6f 2d 64 69 72 0a 20   |symlink-to-dir. |
0x18cb0:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x18cc0:    20 20 20 20 20 20 20 20  20 20 20 20 66 6f 6c 6c   |            foll|
0x18cd0:    6f 77 20 65 61 63 68 20  63 6f 6d 6d 61 6e 64 20   |ow each command |
0x18ce0:    6c 69 6e 65 20 73 79 6d  62 6f 6c 69 63 20 6c 69   |line symbolic li|
0x18cf0:    6e 6b 0a 20 20 20 20 20  20 20 20 20 20 20 20 20   |nk.             |
0x18d00:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x18d10:    20 20 74 68 61 74 20 70  6f 69 6e 74 73 20 74 6f   |  that points to|
0x18d20:    20 61 20 64 69 72 65 63  74 6f 72 79 0a 20 20 20   | a directory.   |
0x18d30:    20 20 20 2d 2d 68 69 64  65 3d 50 41 54 54 45 52   |   --hide=PATTER|
0x18d40:    4e 20 20 20 20 20 20 20  20 20 64 6f 20 6e 6f 74   |N         do not|
0x18d50:    20 6c 69 73 74 20 69 6d  70 6c 69 65 64 20 65 6e   | list implied en|
0x18d60:    74 72 69 65 73 20 6d 61  74 63 68 69 6e 67 20 73   |tries matching s|
0x18d70:    68 65 6c 6c 20 50 41 54  54 45 52 4e 0a 20 20 20   |hell PATTERN.   |
0x18d80:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x18d90:    20 20 20 20 20 20 20 20  20 20 20 20 28 6f 76 65   |            (ove|
0x18da0:    72 72 69 64 64 65 6e 20  62 79 20 2d 61 20 6f 72   |rridden by -a or|
0x18db0:    20 2d 41 29 0a 00                                  | -A)..          |
0x18db6:    00 00                                              |..              |
0x18db8:    20 20 20 20 20 20 2d 2d  68 79 70 65 72 6c 69 6e   |      --hyperlin|   "      --hyperlink[=WHEN]     hyperlink file names; WHEN can be 'always'\n                               (default if omitted), 'auto', or 'never'\n"
0x18dc8:    6b 5b 3d 57 48 45 4e 5d  20 20 20 20 20 68 79 70   |k[=WHEN]     hyp|
0x18dd8:    65 72 6c 69 6e 6b 20 66  69 6c 65 20 6e 61 6d 65   |erlink file name|
0x18de8:    73 3b 20 57 48 45 4e 20  63 61 6e 20 62 65 20 27   |s; WHEN can be '|
0x18df8:    61 6c 77 61 79 73 27 0a  20 20 20 20 20 20 20 20   |always'.        |
0x18e08:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x18e18:    20 20 20 20 20 20 20 28  64 65 66 61 75 6c 74 20   |       (default |
0x18e28:    69 66 20 6f 6d 69 74 74  65 64 29 2c 20 27 61 75   |if omitted), 'au|
0x18e38:    74 6f 27 2c 20 6f 72 20  27 6e 65 76 65 72 27 0a   |to', or 'never'.|
0x18e48:    00                                                 |.               |
0x18e49:    00 00 00 00 00 00 00                               |.......         |
0x18e50:    20 20 20 20 20 20 2d 2d  69 6e 64 69 63 61 74 6f   |      --indicato|   "      --indicator-style=WORD  append indicator with style WORD to entry names:\n                               none (default), slash (-p),\n                               file-type (--file-type), classify (-F)\n  -i, --inode                print the index number of each file\n  -I, --ignore=PATTERN       do not list implied entries matching shell PATTERN\n  -k, --kibibytes            default to 1024-byte blocks for disk usage\n"
0x18e60:    72 2d 73 74 79 6c 65 3d  57 4f 52 44 20 20 61 70   |r-style=WORD  ap|
0x18e70:    70 65 6e 64 20 69 6e 64  69 63 61 74 6f 72 20 77   |pend indicator w|
0x18e80:    69 74 68 20 73 74 79 6c  65 20 57 4f 52 44 20 74   |ith style WORD t|
0x18e90:    6f 20 65 6e 74 72 79 20  6e 61 6d 65 73 3a 0a 20   |o entry names:. |
0x18ea0:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x18eb0:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 6e 6f   |              no|
0x18ec0:    6e 65 20 28 64 65 66 61  75 6c 74 29 2c 20 73 6c   |ne (default), sl|
0x18ed0:    61 73 68 20 28 2d 70 29  2c 0a 20 20 20 20 20 20   |ash (-p),.      |
0x18ee0:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x18ef0:    20 20 20 20 20 20 20 20  20 66 69 6c 65 2d 74 79   |         file-ty|
0x18f00:    70 65 20 28 2d 2d 66 69  6c 65 2d 74 79 70 65 29   |pe (--file-type)|
0x18f10:    2c 20 63 6c 61 73 73 69  66 79 20 28 2d 46 29 0a   |, classify (-F).|
0x18f20:    20 20 2d 69 2c 20 2d 2d  69 6e 6f 64 65 20 20 20   |  -i, --inode   |
0x18f30:    20 20 20 20 20 20 20 20  20 20 20 20 20 70 72 69   |             pri|
0x18f40:    6e 74 20 74 68 65 20 69  6e 64 65 78 20 6e 75 6d   |nt the index num|
0x18f50:    62 65 72 20 6f 66 20 65  61 63 68 20 66 69 6c 65   |ber of each file|
0x18f60:    0a 20 20 2d 49 2c 20 2d  2d 69 67 6e 6f 72 65 3d   |.  -I, --ignore=|
0x18f70:    50 41 54 54 45 52 4e 20  20 20 20 20 20 20 64 6f   |PATTERN       do|
0x18f80:    20 6e 6f 74 20 6c 69 73  74 20 69 6d 70 6c 69 65   | not list implie|
0x18f90:    64 20 65 6e 74 72 69 65  73 20 6d 61 74 63 68 69   |d entries matchi|
0x18fa0:    6e 67 20 73 68 65 6c 6c  20 50 41 54 54 45 52 4e   |ng shell PATTERN|
0x18fb0:    0a 20 20 2d 6b 2c 20 2d  2d 6b 69 62 69 62 79 74   |.  -k, --kibibyt|
0x18fc0:    65 73 20 20 20 20 20 20  20 20 20 20 20 20 64 65   |es            de|
0x18fd0:    66 61 75 6c 74 20 74 6f  20 31 30 32 34 2d 62 79   |fault to 1024-by|
0x18fe0:    74 65 20 62 6c 6f 63 6b  73 20 66 6f 72 20 64 69   |te blocks for di|
0x18ff0:    73 6b 20 75 73 61 67 65  0a 00                     |sk usage..      |
0x18ffa:    00 00 00 00 00 00                                  |......          |
0x19000:    20 20 2d 6c 20 20 20 20  20 20 20 20 20 20 20 20   |  -l            |   "  -l                         use a long listing format\n  -L, --dereference          when showing file information for a symbolic\n                               link, show information for the file the link\n                               references rather than for the link itself\n  -m                         fill width with a comma separated list of entries\n"
0x19010:    20 20 20 20 20 20 20 20  20 20 20 20 20 75 73 65   |             use|
0x19020:    20 61 20 6c 6f 6e 67 20  6c 69 73 74 69 6e 67 20   | a long listing |
0x19030:    66 6f 72 6d 61 74 0a 20  20 2d 4c 2c 20 2d 2d 64   |format.  -L, --d|
0x19040:    65 72 65 66 65 72 65 6e  63 65 20 20 20 20 20 20   |ereference      |
0x19050:    20 20 20 20 77 68 65 6e  20 73 68 6f 77 69 6e 67   |    when showing|
0x19060:    20 66 69 6c 65 20 69 6e  66 6f 72 6d 61 74 69 6f   | file informatio|
0x19070:    6e 20 66 6f 72 20 61 20  73 79 6d 62 6f 6c 69 63   |n for a symbolic|
0x19080:    0a 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |.               |
0x19090:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x190a0:    6c 69 6e 6b 2c 20 73 68  6f 77 20 69 6e 66 6f 72   |link, show infor|
0x190b0:    6d 61 74 69 6f 6e 20 66  6f 72 20 74 68 65 20 66   |mation for the f|
0x190c0:    69 6c 65 20 74 68 65 20  6c 69 6e 6b 0a 20 20 20   |ile the link.   |
0x190d0:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x190e0:    20 20 20 20 20 20 20 20  20 20 20 20 72 65 66 65   |            refe|
0x190f0:    72 65 6e 63 65 73 20 72  61 74 68 65 72 20 74 68   |rences rather th|
0x19100:    61 6e 20 66 6f 72 20 74  68 65 20 6c 69 6e 6b 20   |an for the link |
0x19110:    69 74 73 65 6c 66 0a 20  20 2d 6d 20 20 20 20 20   |itself.  -m     |
0x19120:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x19130:    20 20 20 20 66 69 6c 6c  20 77 69 64 74 68 20 77   |    fill width w|
0x19140:    69 74 68 20 61 20 63 6f  6d 6d 61 20 73 65 70 61   |ith a comma sepa|
0x19150:    72 61 74 65 64 20 6c 69  73 74 20 6f 66 20 65 6e   |rated list of en|
0x19160:    74 72 69 65 73 0a 00                               |tries..         |
0x19167:    00                                                 |.               |
0x19168:    20 20 2d 6e 2c 20 2d 2d  6e 75 6d 65 72 69 63 2d   |  -n, --numeric-|   "  -n, --numeric-uid-gid      like -l, but list numeric user and group IDs\n  -N, --literal              print entry names without quoting\n  -o                         like -l, but do not list group information\n  -p, --indicator-style=slash\n                             append / indicator to directories\n"
0x19178:    75 69 64 2d 67 69 64 20  20 20 20 20 20 6c 69 6b   |uid-gid      lik|
0x19188:    65 20 2d 6c 2c 20 62 75  74 20 6c 69 73 74 20 6e   |e -l, but list n|
0x19198:    75 6d 65 72 69 63 20 75  73 65 72 20 61 6e 64 20   |umeric user and |
0x191a8:    67 72 6f 75 70 20 49 44  73 0a 20 20 2d 4e 2c 20   |group IDs.  -N, |
0x191b8:    2d 2d 6c 69 74 65 72 61  6c 20 20 20 20 20 20 20   |--literal       |
0x191c8:    20 20 20 20 20 20 20 70  72 69 6e 74 20 65 6e 74   |       print ent|
0x191d8:    72 79 20 6e 61 6d 65 73  20 77 69 74 68 6f 75 74   |ry names without|
0x191e8:    20 71 75 6f 74 69 6e 67  0a 20 20 2d 6f 20 20 20   | quoting.  -o   |
0x191f8:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x19208:    20 20 20 20 20 20 6c 69  6b 65 20 2d 6c 2c 20 62   |      like -l, b|
0x19218:    75 74 20 64 6f 20 6e 6f  74 20 6c 69 73 74 20 67   |ut do not list g|
0x19228:    72 6f 75 70 20 69 6e 66  6f 72 6d 61 74 69 6f 6e   |roup information|
0x19238:    0a 20 20 2d 70 2c 20 2d  2d 69 6e 64 69 63 61 74   |.  -p, --indicat|
0x19248:    6f 72 2d 73 74 79 6c 65  3d 73 6c 61 73 68 0a 20   |or-style=slash. |
0x19258:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x19268:    20 20 20 20 20 20 20 20  20 20 20 20 61 70 70 65   |            appe|
0x19278:    6e 64 20 2f 20 69 6e 64  69 63 61 74 6f 72 20 74   |nd / indicator t|
0x19288:    6f 20 64 69 72 65 63 74  6f 72 69 65 73 0a 00      |o directories.. |
0x19297:    00                                                 |.               |
0x19298:    20 20 2d 71 2c 20 2d 2d  68 69 64 65 2d 63 6f 6e   |  -q, --hide-con|   "  -q, --hide-control-chars   print ? instead of nongraphic characters\n      --show-control-chars   show nongraphic characters as-is (the default,\n                               unless program is 'ls' and output is a terminal)\n  -Q, --quote-name           enclose entry names in double quotes\n      --quoting-style=WORD   use quoting style WORD for entry names:\n                               literal, locale, shell, shell-always,\n                               shell-escape, shell-escape-always, c, escape\n"
0x192a8:    74 72 6f 6c 2d 63 68 61  72 73 20 20 20 70 72 69   |trol-chars   pri|
0x192b8:    6e 74 20 3f 20 69 6e 73  74 65 61 64 20 6f 66 20   |nt ? instead of |
0x192c8:    6e 6f 6e 67 72 61 70 68  69 63 20 63 68 61 72 61   |nongraphic chara|
0x192d8:    63 74 65 72 73 0a 20 20  20 20 20 20 2d 2d 73 68   |cters.      --sh|
0x192e8:    6f 77 2d 63 6f 6e 74 72  6f 6c 2d 63 68 61 72 73   |ow-control-chars|
0x192f8:    20 20 20 73 68 6f 77 20  6e 6f 6e 67 72 61 70 68   |   show nongraph|
0x19308:    69 63 20 63 68 61 72 61  63 74 65 72 73 20 61 73   |ic characters as|
0x19318:    2d 69 73 20 28 74 68 65  20 64 65 66 61 75 6c 74   |-is (the default|
0x19328:    2c 0a 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |,.              |
0x19338:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x19348:    20 75 6e 6c 65 73 73 20  70 72 6f 67 72 61 6d 20   | unless program |
0x19358:    69 73 20 27 6c 73 27 20  61 6e 64 20 6f 75 74 70   |is 'ls' and outp|
0x19368:    75 74 20 69 73 20 61 20  74 65 72 6d 69 6e 61 6c   |ut is a terminal|
0x19378:    29 0a 20 20 2d 51 2c 20  2d 2d 71 75 6f 74 65 2d   |).  -Q, --quote-|
0x19388:    6e 61 6d 65 20 20 20 20  20 20 20 20 20 20 20 65   |name           e|
0x19398:    6e 63 6c 6f 73 65 20 65  6e 74 72 79 20 6e 61 6d   |nclose entry nam|
0x193a8:    65 73 20 69 6e 20 64 6f  75 62 6c 65 20 71 75 6f   |es in double quo|
0x193b8:    74 65 73 0a 20 20 20 20  20 20 2d 2d 71 75 6f 74   |tes.      --quot|
0x193c8:    69 6e 67 2d 73 74 79 6c  65 3d 57 4f 52 44 20 20   |ing-style=WORD  |
0x193d8:    20 75 73 65 20 71 75 6f  74 69 6e 67 20 73 74 79   | use quoting sty|
0x193e8:    6c 65 20 57 4f 52 44 20  66 6f 72 20 65 6e 74 72   |le WORD for entr|
0x193f8:    79 20 6e 61 6d 65 73 3a  0a 20 20 20 20 20 20 20   |y names:.       |
0x19408:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x19418:    20 20 20 20 20 20 20 20  6c 69 74 65 72 61 6c 2c   |        literal,|
0x19428:    20 6c 6f 63 61 6c 65 2c  20 73 68 65 6c 6c 2c 20   | locale, shell, |
0x19438:    73 68 65 6c 6c 2d 61 6c  77 61 79 73 2c 0a 20 20   |shell-always,.  |
0x19448:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x19458:    20 20 20 20 20 20 20 20  20 20 20 20 20 73 68 65   |             she|
0x19468:    6c 6c 2d 65 73 63 61 70  65 2c 20 73 68 65 6c 6c   |ll-escape, shell|
0x19478:    2d 65 73 63 61 70 65 2d  61 6c 77 61 79 73 2c 20   |-escape-always, |
0x19488:    63 2c 20 65 73 63 61 70  65 0a 00                  |c, escape..     |
0x19493:    00 00 00 00 00                                     |.....           |
0x19498:    20 20 2d 72 2c 20 2d 2d  72 65 76 65 72 73 65 20   |  -r, --reverse |   "  -r, --reverse              reverse order while sorting\n  -R, --recursive            list subdirectories recursively\n  -s, --size                 print the allocated size of each file, in blocks\n"
0x194a8:    20 20 20 20 20 20 20 20  20 20 20 20 20 72 65 76   |             rev|
0x194b8:    65 72 73 65 20 6f 72 64  65 72 20 77 68 69 6c 65   |erse order while|
0x194c8:    20 73 6f 72 74 69 6e 67  0a 20 20 2d 52 2c 20 2d   | sorting.  -R, -|
0x194d8:    2d 72 65 63 75 72 73 69  76 65 20 20 20 20 20 20   |-recursive      |
0x194e8:    20 20 20 20 20 20 6c 69  73 74 20 73 75 62 64 69   |      list subdi|
0x194f8:    72 65 63 74 6f 72 69 65  73 20 72 65 63 75 72 73   |rectories recurs|
0x19508:    69 76 65 6c 79 0a 20 20  2d 73 2c 20 2d 2d 73 69   |ively.  -s, --si|
0x19518:    7a 65 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |ze              |
0x19528:    20 20 20 70 72 69 6e 74  20 74 68 65 20 61 6c 6c   |   print the all|
0x19538:    6f 63 61 74 65 64 20 73  69 7a 65 20 6f 66 20 65   |ocated size of e|
0x19548:    61 63 68 20 66 69 6c 65  2c 20 69 6e 20 62 6c 6f   |ach file, in blo|
0x19558:    63 6b 73 0a 00                                     |cks..           |
0x1955d:    00 00 00                                           |...             |
0x19560:    20 20 2d 53 20 20 20 20  20 20 20 20 20 20 20 20   |  -S            |   "  -S                         sort by file size, largest first\n      --sort=WORD            sort by WORD instead of name: none (-U), size (-S),\n                               time (-t), version (-v), extension (-X)\n      --time=WORD            with -l, show time as WORD instead of default\n                               modification time: atime or access or use (-u);\n                               ctime or status (-c); also use specified time\n                               as sort key if --sort=time (newest first)\n"
0x19570:    20 20 20 20 20 20 20 20  20 20 20 20 20 73 6f 72   |             sor|
0x19580:    74 20 62 79 20 66 69 6c  65 20 73 69 7a 65 2c 20   |t by file size, |
0x19590:    6c 61 72 67 65 73 74 20  66 69 72 73 74 0a 20 20   |largest first.  |
0x195a0:    20 20 20 20 2d 2d 73 6f  72 74 3d 57 4f 52 44 20   |    --sort=WORD |
0x195b0:    20 20 20 20 20 20 20 20  20 20 20 73 6f 72 74 20   |           sort |
0x195c0:    62 79 20 57 4f 52 44 20  69 6e 73 74 65 61 64 20   |by WORD instead |
0x195d0:    6f 66 20 6e 61 6d 65 3a  20 6e 6f 6e 65 20 28 2d   |of name: none (-|
0x195e0:    55 29 2c 20 73 69 7a 65  20 28 2d 53 29 2c 0a 20   |U), size (-S),. |
0x195f0:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x19600:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 74 69   |              ti|
0x19610:    6d 65 20 28 2d 74 29 2c  20 76 65 72 73 69 6f 6e   |me (-t), version|
0x19620:    20 28 2d 76 29 2c 20 65  78 74 65 6e 73 69 6f 6e   | (-v), extension|
0x19630:    20 28 2d 58 29 0a 20 20  20 20 20 20 2d 2d 74 69   | (-X).      --ti|
0x19640:    6d 65 3d 57 4f 52 44 20  20 20 20 20 20 20 20 20   |me=WORD         |
0x19650:    20 20 20 77 69 74 68 20  2d 6c 2c 20 73 68 6f 77   |   with -l, show|
0x19660:    20 74 69 6d 65 20 61 73  20 57 4f 52 44 20 69 6e   | time as WORD in|
0x19670:    73 74 65 61 64 20 6f 66  20 64 65 66 61 75 6c 74   |stead of default|
0x19680:    0a 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |.               |
0x19690:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x196a0:    6d 6f 64 69 66 69 63 61  74 69 6f 6e 20 74 69 6d   |modification tim|
0x196b0:    65 3a 20 61 74 69 6d 65  20 6f 72 20 61 63 63 65   |e: atime or acce|
0x196c0:    73 73 20 6f 72 20 75 73  65 20 28 2d 75 29 3b 0a   |ss or use (-u);.|
0x196d0:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x196e0:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 63   |               c|
0x196f0:    74 69 6d 65 20 6f 72 20  73 74 61 74 75 73 20 28   |time or status (|
0x19700:    2d 63 29 3b 20 61 6c 73  6f 20 75 73 65 20 73 70   |-c); also use sp|
0x19710:    65 63 69 66 69 65 64 20  74 69 6d 65 0a 20 20 20   |ecified time.   |
0x19720:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x19730:    20 20 20 20 20 20 20 20  20 20 20 20 61 73 20 73   |            as s|
0x19740:    6f 72 74 20 6b 65 79 20  69 66 20 2d 2d 73 6f 72   |ort key if --sor|
0x19750:    74 3d 74 69 6d 65 20 28  6e 65 77 65 73 74 20 66   |t=time (newest f|
0x19760:    69 72 73 74 29 0a 00                               |irst)..         |
0x19767:    00                                                 |.               |
0x19768:    20 20 20 20 20 20 2d 2d  74 69 6d 65 2d 73 74 79   |      --time-sty|   "      --time-style=STYLE     with -l, show times using style STYLE:\n                               full-iso, long-iso, iso, locale, or +FORMAT;\n                               FORMAT is interpreted like in 'date'; if FORMAT\n                               is FORMAT1<newline>FORMAT2, then FORMAT1 applies\n                               to non-recent files and FORMAT2 to recent files;\n                               if STYLE is prefixed with 'posix-', STYLE\n                               takes effect only outside the POSIX locale\n"
0x19778:    6c 65 3d 53 54 59 4c 45  20 20 20 20 20 77 69 74   |le=STYLE     wit|
0x19788:    68 20 2d 6c 2c 20 73 68  6f 77 20 74 69 6d 65 73   |h -l, show times|
0x19798:    20 75 73 69 6e 67 20 73  74 79 6c 65 20 53 54 59   | using style STY|
0x197a8:    4c 45 3a 0a 20 20 20 20  20 20 20 20 20 20 20 20   |LE:.            |
0x197b8:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x197c8:    20 20 20 66 75 6c 6c 2d  69 73 6f 2c 20 6c 6f 6e   |   full-iso, lon|
0x197d8:    67 2d 69 73 6f 2c 20 69  73 6f 2c 20 6c 6f 63 61   |g-iso, iso, loca|
0x197e8:    6c 65 2c 20 6f 72 20 2b  46 4f 52 4d 41 54 3b 0a   |le, or +FORMAT;.|
0x197f8:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x19808:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 46   |               F|
0x19818:    4f 52 4d 41 54 20 69 73  20 69 6e 74 65 72 70 72   |ORMAT is interpr|
0x19828:    65 74 65 64 20 6c 69 6b  65 20 69 6e 20 27 64 61   |eted like in 'da|
0x19838:    74 65 27 3b 20 69 66 20  46 4f 52 4d 41 54 0a 20   |te'; if FORMAT. |
0x19848:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x19858:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 69 73   |              is|
0x19868:    20 46 4f 52 4d 41 54 31  3c 6e 65 77 6c 69 6e 65   | FORMAT1<newline|
0x19878:    3e 46 4f 52 4d 41 54 32  2c 20 74 68 65 6e 20 46   |>FORMAT2, then F|
0x19888:    4f 52 4d 41 54 31 20 61  70 70 6c 69 65 73 0a 20   |ORMAT1 applies. |
0x19898:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x198a8:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 74 6f   |              to|
0x198b8:    20 6e 6f 6e 2d 72 65 63  65 6e 74 20 66 69 6c 65   | non-recent file|
0x198c8:    73 20 61 6e 64 20 46 4f  52 4d 41 54 32 20 74 6f   |s and FORMAT2 to|
0x198d8:    20 72 65 63 65 6e 74 20  66 69 6c 65 73 3b 0a 20   | recent files;. |
0x198e8:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x198f8:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 69 66   |              if|
0x19908:    20 53 54 59 4c 45 20 69  73 20 70 72 65 66 69 78   | STYLE is prefix|
0x19918:    65 64 20 77 69 74 68 20  27 70 6f 73 69 78 2d 27   |ed with 'posix-'|
0x19928:    2c 20 53 54 59 4c 45 0a  20 20 20 20 20 20 20 20   |, STYLE.        |
0x19938:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x19948:    20 20 20 20 20 20 20 74  61 6b 65 73 20 65 66 66   |       takes eff|
0x19958:    65 63 74 20 6f 6e 6c 79  20 6f 75 74 73 69 64 65   |ect only outside|
0x19968:    20 74 68 65 20 50 4f 53  49 58 20 6c 6f 63 61 6c   | the POSIX local|
0x19978:    65 0a 00                                           |e..             |
0x1997b:    00 00 00 00 00                                     |.....           |
0x19980:    20 20 2d 74 20 20 20 20  20 20 20 20 20 20 20 20   |  -t            |   "  -t                         sort by modification time, newest first\n  -T, --tabsize=COLS         assume tab stops at each COLS instead of 8\n"
0x19990:    20 20 20 20 20 20 20 20  20 20 20 20 20 73 6f 72   |             sor|
0x199a0:    74 20 62 79 20 6d 6f 64  69 66 69 63 61 74 69 6f   |t by modificatio|
0x199b0:    6e 20 74 69 6d 65 2c 20  6e 65 77 65 73 74 20 66   |n time, newest f|
0x199c0:    69 72 73 74 0a 20 20 2d  54 2c 20 2d 2d 74 61 62   |irst.  -T, --tab|
0x199d0:    73 69 7a 65 3d 43 4f 4c  53 20 20 20 20 20 20 20   |size=COLS       |
0x199e0:    20 20 61 73 73 75 6d 65  20 74 61 62 20 73 74 6f   |  assume tab sto|
0x199f0:    70 73 20 61 74 20 65 61  63 68 20 43 4f 4c 53 20   |ps at each COLS |
0x19a00:    69 6e 73 74 65 61 64 20  6f 66 20 38 0a 00         |instead of 8..  |
0x19a0e:    00 00                                              |..              |
0x19a10:    20 20 2d 75 20 20 20 20  20 20 20 20 20 20 20 20   |  -u            |   "  -u                         with -lt: sort by, and show, access time;\n                               with -l: show access time and sort by name;\n                               otherwise: sort by access time, newest first\n  -U                         do not sort; list entries in directory order\n  -v                         natural sort of (version) numbers within text\n"
0x19a20:    20 20 20 20 20 20 20 20  20 20 20 20 20 77 69 74   |             wit|
0x19a30:    68 20 2d 6c 74 3a 20 73  6f 72 74 20 62 79 2c 20   |h -lt: sort by, |
0x19a40:    61 6e 64 20 73 68 6f 77  2c 20 61 63 63 65 73 73   |and show, access|
0x19a50:    20 74 69 6d 65 3b 0a 20  20 20 20 20 20 20 20 20   | time;.         |
0x19a60:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x19a70:    20 20 20 20 20 20 77 69  74 68 20 2d 6c 3a 20 73   |      with -l: s|
0x19a80:    68 6f 77 20 61 63 63 65  73 73 20 74 69 6d 65 20   |how access time |
0x19a90:    61 6e 64 20 73 6f 72 74  20 62 79 20 6e 61 6d 65   |and sort by name|
0x19aa0:    3b 0a 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |;.              |
0x19ab0:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x19ac0:    20 6f 74 68 65 72 77 69  73 65 3a 20 73 6f 72 74   | otherwise: sort|
0x19ad0:    20 62 79 20 61 63 63 65  73 73 20 74 69 6d 65 2c   | by access time,|
0x19ae0:    20 6e 65 77 65 73 74 20  66 69 72 73 74 0a 20 20   | newest first.  |
0x19af0:    2d 55 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |-U              |
0x19b00:    20 20 20 20 20 20 20 20  20 20 20 64 6f 20 6e 6f   |           do no|
0x19b10:    74 20 73 6f 72 74 3b 20  6c 69 73 74 20 65 6e 74   |t sort; list ent|
0x19b20:    72 69 65 73 20 69 6e 20  64 69 72 65 63 74 6f 72   |ries in director|
0x19b30:    79 20 6f 72 64 65 72 0a  20 20 2d 76 20 20 20 20   |y order.  -v    |
0x19b40:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x19b50:    20 20 20 20 20 6e 61 74  75 72 61 6c 20 73 6f 72   |     natural sor|
0x19b60:    74 20 6f 66 20 28 76 65  72 73 69 6f 6e 29 20 6e   |t of (version) n|
0x19b70:    75 6d 62 65 72 73 20 77  69 74 68 69 6e 20 74 65   |umbers within te|
0x19b80:    78 74 0a 00                                        |xt..            |
0x19b84:    00 00 00 00                                        |....            |
0x19b88:    20 20 2d 77 2c 20 2d 2d  77 69 64 74 68 3d 43 4f   |  -w, --width=CO|   "  -w, --width=COLS           set output width to COLS.  0 means no limit\n  -x                         list entries by lines instead of by columns\n  -X                         sort alphabetically by entry extension\n  -Z, --context              print any security context of each file\n  -1                         list one file per line.  Avoid '\\n' with -q or -b\n"
0x19b98:    4c 53 20 20 20 20 20 20  20 20 20 20 20 73 65 74   |LS           set|
0x19ba8:    20 6f 75 74 70 75 74 20  77 69 64 74 68 20 74 6f   | output width to|
0x19bb8:    20 43 4f 4c 53 2e 20 20  30 20 6d 65 61 6e 73 20   | COLS.  0 means |
0x19bc8:    6e 6f 20 6c 69 6d 69 74  0a 20 20 2d 78 20 20 20   |no limit.  -x   |
0x19bd8:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x19be8:    20 20 20 20 20 20 6c 69  73 74 20 65 6e 74 72 69   |      list entri|
0x19bf8:    65 73 20 62 79 20 6c 69  6e 65 73 20 69 6e 73 74   |es by lines inst|
0x19c08:    65 61 64 20 6f 66 20 62  79 20 63 6f 6c 75 6d 6e   |ead of by column|
0x19c18:    73 0a 20 20 2d 58 20 20  20 20 20 20 20 20 20 20   |s.  -X          |
0x19c28:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 73   |               s|
0x19c38:    6f 72 74 20 61 6c 70 68  61 62 65 74 69 63 61 6c   |ort alphabetical|
0x19c48:    6c 79 20 62 79 20 65 6e  74 72 79 20 65 78 74 65   |ly by entry exte|
0x19c58:    6e 73 69 6f 6e 0a 20 20  2d 5a 2c 20 2d 2d 63 6f   |nsion.  -Z, --co|
0x19c68:    6e 74 65 78 74 20 20 20  20 20 20 20 20 20 20 20   |ntext           |
0x19c78:    20 20 20 70 72 69 6e 74  20 61 6e 79 20 73 65 63   |   print any sec|
0x19c88:    75 72 69 74 79 20 63 6f  6e 74 65 78 74 20 6f 66   |urity context of|
0x19c98:    20 65 61 63 68 20 66 69  6c 65 0a 20 20 2d 31 20   | each file.  -1 |
0x19ca8:    20 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20   |                |
0x19cb8:    20 20 20 20 20 20 20 20  6c 69 73 74 20 6f 6e 65   |        list one|
0x19cc8:    20 66 69 6c 65 20 70 65  72 20 6c 69 6e 65 2e 20   | file per line. |
0x19cd8:    20 41 76 6f 69 64 20 27  5c 6e 27 20 77 69 74 68   | Avoid '\n' with|
0x19ce8:    20 2d 71 20 6f 72 20 2d  62 0a 00                  | -q or -b..     |
0x19cf3:    00 00 00 00 00                                     |.....           |
0x19cf8:    20 20 20 20 20 20 2d 2d  68 65 6c 70 20 20 20 20   |      --help    |   "      --help     display this help and exit\n"
0x19d08:    20 64 69 73 70 6c 61 79  20 74 68 69 73 20 68 65   | display this he|
0x19d18:    6c 70 20 61 6e 64 20 65  78 69 74 0a 00            |lp and exit..   |
0x19d25:    00 00 00                                           |...             |
0x19d28:    20 20 20 20 20 20 2d 2d  76 65 72 73 69 6f 6e 20   |      --version |   "      --version  output version information and exit\n"
0x19d38:    20 6f 75 74 70 75 74 20  76 65 72 73 69 6f 6e 20   | output version |
0x19d48:    69 6e 66 6f 72 6d 61 74  69 6f 6e 20 61 6e 64 20   |information and |
0x19d58:    65 78 69 74 0a 00                                  |exit..          |
0x19d5e:    00 00                                              |..              |
0x19d60:    0a 54 68 65 20 53 49 5a  45 20 61 72 67 75 6d 65   |.The SIZE argume|   "\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\n"
0x19d70:    6e 74 20 69 73 20 61 6e  20 69 6e 74 65 67 65 72   |nt is an integer|
0x19d80:    20 61 6e 64 20 6f 70 74  69 6f 6e 61 6c 20 75 6e   | and optional un|
0x19d90:    69 74 20 28 65 78 61 6d  70 6c 65 3a 20 31 30 4b   |it (example: 10K|
0x19da0:    20 69 73 20 31 30 2a 31  30 32 34 29 2e 0a 55 6e   | is 10*1024)..Un|
0x19db0:    69 74 73 20 61 72 65 20  4b 2c 4d 2c 47 2c 54 2c   |its are K,M,G,T,|
0x19dc0:    50 2c 45 2c 5a 2c 59 20  28 70 6f 77 65 72 73 20   |P,E,Z,Y (powers |
0x19dd0:    6f 66 20 31 30 32 34 29  20 6f 72 20 4b 42 2c 4d   |of 1024) or KB,M|
0x19de0:    42 2c 2e 2e 2e 20 28 70  6f 77 65 72 73 20 6f 66   |B,... (powers of|
0x19df0:    20 31 30 30 30 29 2e 0a  00                        | 1000)...       |
0x19df9:    00 00 00 00 00 00 00                               |.......         |
0x19e00:    0a 55 73 69 6e 67 20 63  6f 6c 6f 72 20 74 6f 20   |.Using color to |   "\nUsing color to distinguish file types is disabled both by default and\nwith --color=never.  With --color=auto, ls emits color codes only when\nstandard output is connected to a terminal.  The LS_COLORS environment\nvariable can change the settings.  Use the dircolors command to set it.\n"
0x19e10:    64 69 73 74 69 6e 67 75  69 73 68 20 66 69 6c 65   |distinguish file|
0x19e20:    20 74 79 70 65 73 20 69  73 20 64 69 73 61 62 6c   | types is disabl|
0x19e30:    65 64 20 62 6f 74 68 20  62 79 20 64 65 66 61 75   |ed both by defau|
0x19e40:    6c 74 20 61 6e 64 0a 77  69 74 68 20 2d 2d 63 6f   |lt and.with --co|
0x19e50:    6c 6f 72 3d 6e 65 76 65  72 2e 20 20 57 69 74 68   |lor=never.  With|
0x19e60:    20 2d 2d 63 6f 6c 6f 72  3d 61 75 74 6f 2c 20 6c   | --color=auto, l|
0x19e70:    73 20 65 6d 69 74 73 20  63 6f 6c 6f 72 20 63 6f   |s emits color co|
0x19e80:    64 65 73 20 6f 6e 6c 79  20 77 68 65 6e 0a 73 74   |des only when.st|
0x19e90:    61 6e 64 61 72 64 20 6f  75 74 70 75 74 20 69 73   |andard output is|
0x19ea0:    20 63 6f 6e 6e 65 63 74  65 64 20 74 6f 20 61 20   | connected to a |
0x19eb0:    74 65 72 6d 69 6e 61 6c  2e 20 20 54 68 65 20 4c   |terminal.  The L|
0x19ec0:    53 5f 43 4f 4c 4f 52 53  20 65 6e 76 69 72 6f 6e   |S_COLORS environ|
0x19ed0:    6d 65 6e 74 0a 76 61 72  69 61 62 6c 65 20 63 61   |ment.variable ca|
0x19ee0:    6e 20 63 68 61 6e 67 65  20 74 68 65 20 73 65 74   |n change the set|
0x19ef0:    74 69 6e 67 73 2e 20 20  55 73 65 20 74 68 65 20   |tings.  Use the |
0x19f00:    64 69 72 63 6f 6c 6f 72  73 20 63 6f 6d 6d 61 6e   |dircolors comman|
0x19f10:    64 20 74 6f 20 73 65 74  20 69 74 2e 0a 00         |d to set it...  |
0x19f1e:    00 00                                              |..              |
0x19f20:    0a 45 78 69 74 20 73 74  61 74 75 73 3a 0a 20 30   |.Exit status:. 0|   "\nExit status:\n 0  if OK,\n 1  if minor problems (e.g., cannot access subdirectory),\n 2  if serious trouble (e.g., cannot access command-line argument).\n"
0x19f30:    20 20 69 66 20 4f 4b 2c  0a 20 31 20 20 69 66 20   |  if OK,. 1  if |
0x19f40:    6d 69 6e 6f 72 20 70 72  6f 62 6c 65 6d 73 20 28   |minor problems (|
0x19f50:    65 2e 67 2e 2c 20 63 61  6e 6e 6f 74 20 61 63 63   |e.g., cannot acc|
0x19f60:    65 73 73 20 73 75 62 64  69 72 65 63 74 6f 72 79   |ess subdirectory|
0x19f70:    29 2c 0a 20 32 20 20 69  66 20 73 65 72 69 6f 75   |),. 2  if seriou|
0x19f80:    73 20 74 72 6f 75 62 6c  65 20 28 65 2e 67 2e 2c   |s trouble (e.g.,|
0x19f90:    20 63 61 6e 6e 6f 74 20  61 63 63 65 73 73 20 63   | cannot access c|
0x19fa0:    6f 6d 6d 61 6e 64 2d 6c  69 6e 65 20 61 72 67 75   |ommand-line argu|
0x19fb0:    6d 65 6e 74 29 2e 0a 00                            |ment)...        |
0x19fb8:    68 74 74 70 3a 2f 2f 77  77 77 2e 67 6e 75 2e 6f   |http://www.gnu.o|   "http://www.gnu.org/software/coreutils/"
0x19fc8:    72 67 2f 73 6f 66 74 77  61 72 65 2f 63 6f 72 65   |rg/software/core|
0x19fd8:    75 74 69 6c 73 2f 00                               |utils/.         |
0x19fdf:    00                                                 |.               |
0x19fe0:    52 65 70 6f 72 74 20 25  73 20 74 72 61 6e 73 6c   |Report %s transl|   "Report %s translation bugs to <http://translationproject.org/team/>\n"
0x19ff0:    61 74 69 6f 6e 20 62 75  67 73 20 74 6f 20 3c 68   |ation bugs to <h|
0x1a000:    74 74 70 3a 2f 2f 74 72  61 6e 73 6c 61 74 69 6f   |ttp://translatio|
0x1a010:    6e 70 72 6f 6a 65 63 74  2e 6f 72 67 2f 74 65 61   |nproject.org/tea|
0x1a020:    6d 2f 3e 0a 00                                     |m/>..           |
0x1a025:    00 00 00                                           |...             |
0x1a028:    46 75 6c 6c 20 64 6f 63  75 6d 65 6e 74 61 74 69   |Full documentati|   "Full documentation at: <%s%s>\n"
0x1a038:    6f 6e 20 61 74 3a 20 3c  25 73 25 73 3e 0a 00      |on at: <%s%s>.. |
0x1a047:    00                                                 |.               |
0x1a048:    6f 72 20 61 76 61 69 6c  61 62 6c 65 20 6c 6f 63   |or available loc|   "or available locally via: info '(coreutils) %s%s'\n"
0x1a058:    61 6c 6c 79 20 76 69 61  3a 20 69 6e 66 6f 20 27   |ally via: info '|
0x1a068:    28 63 6f 72 65 75 74 69  6c 73 29 20 25 73 25 73   |(coreutils) %s%s|
0x1a078:    27 0a 00                                           |'..             |
0x1a07b:    00 00 00 00 00                                     |.....           |
0x1a080:    69 67 6e 6f 72 69 6e 67  20 69 6e 76 61 6c 69 64   |ignoring invalid|   "ignoring invalid value of environment variable QUOTING_STYLE: %s"
0x1a090:    20 76 61 6c 75 65 20 6f  66 20 65 6e 76 69 72 6f   | value of enviro|
0x1a0a0:    6e 6d 65 6e 74 20 76 61  72 69 61 62 6c 65 20 51   |nment variable Q|
0x1a0b0:    55 4f 54 49 4e 47 5f 53  54 59 4c 45 3a 20 25 73   |UOTING_STYLE: %s|
0x1a0c0:    00                                                 |.               |
0x1a0c1:    00 00 00 00 00 00 00                               |.......         |
0x1a0c8:    69 67 6e 6f 72 69 6e 67  20 69 6e 76 61 6c 69 64   |ignoring invalid|   "ignoring invalid width in environment variable COLUMNS: %s"
0x1a0d8:    20 77 69 64 74 68 20 69  6e 20 65 6e 76 69 72 6f   | width in enviro|
0x1a0e8:    6e 6d 65 6e 74 20 76 61  72 69 61 62 6c 65 20 43   |nment variable C|
0x1a0f8:    4f 4c 55 4d 4e 53 3a 20  25 73 00                  |OLUMNS: %s.     |
0x1a103:    00 00 00 00 00                                     |.....           |
0x1a108:    69 67 6e 6f 72 69 6e 67  20 69 6e 76 61 6c 69 64   |ignoring invalid|   "ignoring invalid tab size in environment variable TABSIZE: %s"
0x1a118:    20 74 61 62 20 73 69 7a  65 20 69 6e 20 65 6e 76   | tab size in env|
0x1a128:    69 72 6f 6e 6d 65 6e 74  20 76 61 72 69 61 62 6c   |ironment variabl|
0x1a138:    65 20 54 41 42 53 49 5a  45 3a 20 25 73 00         |e TABSIZE: %s.  |
0x1a146:    00 00                                              |..              |
0x1a148:    61 62 63 64 66 67 68 69  6b 6c 6d 6e 6f 70 71 72   |abcdfghiklmnopqr|   "abcdfghiklmnopqrstuvw:xABCDFGHI:LNQRST:UXZ1"
0x1a158:    73 74 75 76 77 3a 78 41  42 43 44 46 47 48 49 3a   |stuvw:xABCDFGHI:|
0x1a168:    4c 4e 51 52 53 54 3a 55  58 5a 31 00               |LNQRST:UXZ1.    |
0x1a174:    00 00 00 00                                        |....            |
0x1a178:    20 20 2d 20 2b 46 4f 52  4d 41 54 20 28 65 2e 67   |  - +FORMAT (e.g|   "  - +FORMAT (e.g., +%H:%M) for a 'date'-style format\n"
0x1a188:    2e 2c 20 2b 25 48 3a 25  4d 29 20 66 6f 72 20 61   |., +%H:%M) for a|
0x1a198:    20 27 64 61 74 65 27 2d  73 74 79 6c 65 20 66 6f   | 'date'-style fo|
0x1a1a8:    72 6d 61 74 0a 00                                  |rmat..          |
0x1a1ae:    00 00                                              |..              |
0x1a1b0:    64 65 76 5f 69 6e 6f 5f  73 69 7a 65 20 3c 3d 20   |dev_ino_size <= |   "dev_ino_size <= obstack_object_size (&dev_ino_obstack)"
0x1a1c0:    6f 62 73 74 61 63 6b 5f  6f 62 6a 65 63 74 5f 73   |obstack_object_s|
0x1a1d0:    69 7a 65 20 28 26 64 65  76 5f 69 6e 6f 5f 6f 62   |ize (&dev_ino_ob|
0x1a1e0:    73 74 61 63 6b 29 00                               |stack).         |
0x1a1e7:    00                                                 |.               |
0x1a1e8:    2f 2f 44 49 52 45 44 2d  4f 50 54 49 4f 4e 53 2f   |//DIRED-OPTIONS/|   "//DIRED-OPTIONS// --quoting-style=%s\n"
0x1a1f8:    2f 20 2d 2d 71 75 6f 74  69 6e 67 2d 73 74 79 6c   |/ --quoting-styl|
0x1a208:    65 3d 25 73 0a 00                                  |e=%s..          |
0x1a20e:    00 00                                              |..              |
0x1a210:    68 61 73 68 5f 67 65 74  5f 6e 5f 65 6e 74 72 69   |hash_get_n_entri|   "hash_get_n_entries (active_dir_set) == 0"
0x1a220:    65 73 20 28 61 63 74 69  76 65 5f 64 69 72 5f 73   |es (active_dir_s|
0x1a230:    65 74 29 20 3d 3d 20 30  00                        |et) == 0.       |
0x1a239:    00 00 00 00 00 00 00                               |.......         |
0x1a240:    75 6e 70 61 72 73 61 62  6c 65 20 76 61 6c 75 65   |unparsable value|   "unparsable value for LS_COLORS environment variable"
0x1a250:    20 66 6f 72 20 4c 53 5f  43 4f 4c 4f 52 53 20 65   | for LS_COLORS e|
0x1a260:    6e 76 69 72 6f 6e 6d 65  6e 74 20 76 61 72 69 61   |nvironment varia|
0x1a270:    62 6c 65 00                                        |ble.            |
0x1a274:    00 00 00 00 64 65 72 65  66 65 72 65 6e 63 65 2d   |....dereference-|
0x1a284:    63 6f 6d 6d 61 6e 64 2d  6c 69 6e 65 2d 73 79 6d   |command-line-sym|
0x1a294:    6c 69 6e 6b 2d 74 6f 2d  64 69 72 00               |link-to-dir.    |
0x1a2a0:    38 2e 32 38 00                                     |8.28.           |   "8.28"
0x1a2a5:    69 6e 76 61 6c 69 64 20  61 72 67 75 6d 65 6e 74   |invalid argument|   "invalid argument %s for %s"
0x1a2b5:    20 25 73 20 66 6f 72 20  25 73 00                  | %s for %s.     |
0x1a2c0:    61 6d 62 69 67 75 6f 75  73 20 61 72 67 75 6d 65   |ambiguous argume|   "ambiguous argument %s for %s"
0x1a2d0:    6e 74 20 25 73 20 66 6f  72 20 25 73 00            |nt %s for %s.   |
0x1a2dd:    56 61 6c 69 64 20 61 72  67 75 6d 65 6e 74 73 20   |Valid arguments |   "Valid arguments are:"
0x1a2ed:    61 72 65 3a 00                                     |are:.           |
0x1a2f2:    0a 20 20 2d 20 25 73 00                            |.  - %s.        |   "\n  - %s"
0x1a2fa:    2c 20 25 73 00                                     |, %s.           |   ", %s"
0x1a2ff:    77 72 69 74 65 20 65 72  72 6f 72 00               |write error.    |   "write error"
0x1a30b:    73 79 73 74 65 6d 2e 70  6f 73 69 78 5f 61 63 6c   |system.posix_acl|   "system.posix_acl_access"
0x1a31b:    5f 61 63 63 65 73 73 00                            |_access.        |
0x1a323:    73 79 73 74 65 6d 2e 70  6f 73 69 78 5f 61 63 6c   |system.posix_acl|   "system.posix_acl_default"
0x1a333:    5f 64 65 66 61 75 6c 74  00                        |_default.       |
0x1a33c:    2e 2e 00                                           |...             |   ".."
0x1a33f:    43 00                                              |C.              |
0x1a341:    50 4f 53 49 58 00                                  |POSIX.          |   "POSIX"
0x1a347:    23 20 65 6e 74 72 69 65  73 3a 20 20 20 20 20 20   |# entries:      |   "# entries:         %lu\n"
0x1a357:    20 20 20 25 6c 75 0a 00                            |   %lu..        |
0x1a35f:    23 20 62 75 63 6b 65 74  73 3a 20 20 20 20 20 20   |# buckets:      |   "# buckets:         %lu\n"
0x1a36f:    20 20 20 25 6c 75 0a 00                            |   %lu..        |
0x1a377:    6d 61 78 20 62 75 63 6b  65 74 20 6c 65 6e 67 74   |max bucket lengt|   "max bucket length: %lu\n"
0x1a387:    68 3a 20 25 6c 75 0a 00                            |h: %lu..        |
0x1a38f:    00                                                 |.               |
0x1a390:    23 20 62 75 63 6b 65 74  73 20 75 73 65 64 3a 20   |# buckets used: |   "# buckets used:    %lu (%.2f%%)\n"
0x1a3a0:    20 20 20 25 6c 75 20 28  25 2e 32 66 25 25 29 0a   |   %lu (%.2f%%).|
0x1a3b0:    00                                                 |.               |
0x1a3b1:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x1a3c1:    00 00 00 00 00 80 3f cd  cc 4c 3f f4 fd b4 3f 00   |......?..L?...?.|
0x1a3d1:    00 00 00 cd cc cc 3d 66  66 66 3f cd cc 8c 3f 00   |......=fff?...?.|
0x1a3e1:    00 00 00 00 00 80 3f cd  cc 4c 3f 00 00 80 5f 00   |......?..L?..._.|
0x1a3f1:    00 00 5f 00 00 00 00 00  00 00 00 00 00 59 40      |.._..........Y@ |
0x1a400:    25 2e 30 4c 66 00                                  |%.0Lf.          |   "%.0Lf"
0x1a406:    25 2e 31 4c 66 00                                  |%.1Lf.          |   "%.1Lf"
0x1a40c:    42 4c 4f 43 4b 53 49 5a  45 00                     |BLOCKSIZE.      |   "BLOCKSIZE"
0x1a416:    50 4f 53 49 58 4c 59 5f  43 4f 52 52 45 43 54 00   |POSIXLY_CORRECT.|   "POSIXLY_CORRECT"
0x1a426:    65 45 67 47 6b 4b 6d 4d  70 50 74 54 79 59 7a 5a   |eEgGkKmMpPtTyYzZ|   "eEgGkKmMpPtTyYzZ0"
0x1a436:    30 00                                              |0.              |
0x1a438:    b0 00 00 00 90 00 00 00  00 4b 4d 47 54 50 45 5a   |.........KMGTPEZ|
0x1a448:    59 00 00 00 00 00 20 41  ff ff ff ff ff ff ff ff   |Y..... A........|
0x1a458:    3e 40 00 00 00 00 00 00                            |>@......        |
0x1a460:    25 6d 2f 25 64 2f 25 79  00                        |%m/%d/%y.       |   "%m/%d/%y"
0x1a469:    25 59 2d 25 6d 2d 25 64  00                        |%Y-%m-%d.       |   "%Y-%m-%d"
0x1a472:    25 48 3a 25 4d 3a 25 53  00                        |%H:%M:%S.       |   "%H:%M:%S"
0x1a47b:    00 f4 70 ff ff 04 64 ff  ff 04 64 ff ff 04 64 ff   |..p...d...d...d.|
0x1a48b:    ff 04 64 ff ff 04 64 ff  ff 04 64 ff ff 04 64 ff   |..d...d...d...d.|
0x1a49b:    ff 04 64 ff ff 04 64 ff  ff 04 64 ff ff 04 64 ff   |..d...d...d...d.|
0x1a4ab:    ff 04 64 ff ff 04 64 ff  ff 04 64 ff ff 04 64 ff   |..d...d...d...d.|
0x1a4bb:    ff 04 64 ff ff 04 64 ff  ff 04 64 ff ff 04 64 ff   |..d...d...d...d.|
0x1a4cb:    ff 04 64 ff ff 04 64 ff  ff 04 64 ff ff 04 64 ff   |..d...d...d...d.|
0x1a4db:    ff 04 64 ff ff 04 64 ff  ff 04 64 ff ff 04 64 ff   |..d...d...d...d.|
0x1a4eb:    ff 04 64 ff ff 04 64 ff  ff 04 64 ff ff 04 64 ff   |..d...d...d...d.|
0x1a4fb:    ff 04 64 ff ff 04 64 ff  ff 04 64 ff ff 04 64 ff   |..d...d...d...d.|
0x1a50b:    ff 04 64 ff ff 66 69 ff  ff 04 64 ff ff 04 64 ff   |..d..fi...d...d.|
0x1a51b:    ff 04 64 ff ff 04 64 ff  ff 04 64 ff ff 04 64 ff   |..d...d...d...d.|
0x1a52b:    ff 04 64 ff ff 04 64 ff  ff 04 64 ff ff 04 64 ff   |..d...d...d...d.|
0x1a53b:    ff 04 64 ff ff 04 64 ff  ff 04 64 ff ff 04 64 ff   |..d...d...d...d.|
0x1a54b:    ff 04 64 ff ff 04 64 ff  ff 04 64 ff ff 04 64 ff   |..d...d...d...d.|
0x1a55b:    ff 04 64 ff ff 04 64 ff  ff f3 69 ff ff 04 64 ff   |..d...d...i...d.|
0x1a56b:    ff 04 64 ff ff 04 64 ff  ff 04 64 ff ff 04 64 ff   |..d...d...d...d.|
0x1a57b:    ff 04 64 ff ff 34 65 ff  ff 34 65 ff ff a2 66 ff   |..d..4e..4e...f.|
0x1a58b:    ff 3c 67 ff ff 04 64 ff  ff 9d 70 ff ff d3 67 ff   |.<g...d...p...g.|
0x1a59b:    ff df 71 ff ff fb 71 ff  ff 04 64 ff ff 04 64 ff   |..q...q...d...d.|
0x1a5ab:    ff 04 64 ff ff 13 72 ff  ff 2f 72 ff ff 04 64 ff   |..d...r../r...d.|
0x1a5bb:    ff 7b 72 ff ff 04 64 ff  ff 47 6e ff ff 6c 70 ff   |.{r...d..Gn..lp.|
0x1a5cb:    ff 5b 70 ff ff ec 6a ff  ff d3 67 ff ff 22 6b ff   |.[p...j...g.."k.|
0x1a5db:    ff 74 66 ff ff 7b 73 ff  ff 85 72 ff ff 04 64 ff   |.tf..{s...r...d.|
0x1a5eb:    ff 04 64 ff ff 04 64 ff  ff 04 64 ff ff 04 64 ff   |..d...d...d...d.|
0x1a5fb:    ff 04 64 ff ff 34 65 ff  ff c4 73 ff ff 74 66 ff   |..d..4e...s..tf.|
0x1a60b:    ff 82 71 ff ff 9e 71 ff  ff 04 64 ff ff d3 67 ff   |..q...q...d...g.|
0x1a61b:    ff c4 73 ff ff 04 64 ff  ff b4 71 ff ff 87 70 ff   |..s...d...q...p.|
0x1a62b:    ff 6f 6f ff ff a5 6f ff  ff d0 6f ff ff 04 64 ff   |.oo...o...o...d.|
0x1a63b:    ff 43 70 ff ff e1 6b ff  ff 7d 66 ff ff 58 6e ff   |.Cp...k..}f..Xn.|
0x1a64b:    ff 6c 6b ff ff b6 70 ff  ff 04 64 ff ff 5f 73 ff   |.lk...p...d.._s.|
0x1a65b:    ff 74 66 ff ff 34 71 ff  ff e3 73 ff ff            |.tf..4q...s..   |
0x1a668:    41 20 4e 55 4c 4c 20 61  72 67 76 5b 30 5d 20 77   |A NULL argv[0] w|   "A NULL argv[0] was passed through an exec system call.\n"
0x1a678:    61 73 20 70 61 73 73 65  64 20 74 68 72 6f 75 67   |as passed throug|
0x1a688:    68 20 61 6e 20 65 78 65  63 20 73 79 73 74 65 6d   |h an exec system|
0x1a698:    20 63 61 6c 6c 2e 0a 00                            | call...        |
0x1a6a0:    2f 2e 6c 69 62 73 2f 00                            |/.libs/.        |   "/.libs/"
0x1a6a8:    6c 74 2d 00                                        |lt-.            |   "lt-"
0x1a6ac:    e2 80 98 00 e2 80 99 00  a1 07 65 00 a1 af 00 22   |..........e...."|
0x1a6bc:    00 60 00                                           |.`.             |
0x1a6bf:    73 68 65 6c 6c 00                                  |shell.          |   "shell"
0x1a6c5:    73 68 65 6c 6c 2d 61 6c  77 61 79 73 00            |shell-always.   |   "shell-always"
0x1a6d2:    73 68 65 6c 6c 2d 65 73  63 61 70 65 00            |shell-escape.   |   "shell-escape"
0x1a6df:    73 68 65 6c 6c 2d 65 73  63 61 70 65 2d 61 6c 77   |shell-escape-alw|   "shell-escape-always"
0x1a6ef:    61 79 73 00                                        |ays.            |
0x1a6f3:    63 2d 6d 61 79 62 65 00                            |c-maybe.        |   "c-maybe"
0x1a6fb:    63 6c 6f 63 61 6c 65 00                            |clocale.        |   "clocale"
0x1a703:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x1a713:    00 00 00 00 00 00 00 00  00 00 00 00 00 7a 88 ff   |.............z..|
0x1a723:    ff d3 7a ff ff a8 8a ff  ff b4 88 ff ff a4 86 ff   |..z.............|
0x1a733:    ff 00 87 ff ff 55 87 ff  ff 9a 87 ff ff d4 87 ff   |.....U..........|
0x1a743:    ff d4 87 ff ff d4 87 ff  ff 24 7e ff ff 0c 7f ff   |.........$~.....|
0x1a753:    ff 0c 7f ff ff 0c 7f ff  ff 0c 7f ff ff 0c 7f ff   |................|
0x1a763:    ff 0c 7f ff ff 64 7e ff  ff 6c 7d ff ff 2c 7d ff   |.....d~..l}..,}.|
0x1a773:    ff f4 7e ff ff e4 7e ff  ff d4 7e ff ff c4 7e ff   |..~...~...~...~.|
0x1a783:    ff 0c 7f ff ff 0c 7f ff  ff 0c 7f ff ff 0c 7f ff   |................|
0x1a793:    ff 0c 7f ff ff 0c 7f ff  ff 0c 7f ff ff 0c 7f ff   |................|
0x1a7a3:    ff 0c 7f ff ff 0c 7f ff  ff 0c 7f ff ff 0c 7f ff   |................|
0x1a7b3:    ff 0c 7f ff ff 0c 7f ff  ff 0c 7f ff ff 0c 7f ff   |................|
0x1a7c3:    ff 0c 7f ff ff 0c 7f ff  ff b4 7e ff ff a4 7e ff   |..........~...~.|
0x1a7d3:    ff a4 7e ff ff 74 7e ff  ff a4 7e ff ff 4c 7e ff   |..~..t~...~..L~.|
0x1a7e3:    ff a4 7e ff ff 07 7d ff  ff a4 7e ff ff a4 7e ff   |..~...}...~...~.|
0x1a7f3:    ff a4 7e ff ff 4c 7e ff  ff 4c 7e ff ff 4c 7e ff   |..~..L~..L~..L~.|
0x1a803:    ff 4c 7e ff ff 4c 7e ff  ff 4c 7e ff ff 4c 7e ff   |.L~..L~..L~..L~.|
0x1a813:    ff 4c 7e ff ff 4c 7e ff  ff 4c 7e ff ff 4c 7e ff   |.L~..L~..L~..L~.|
0x1a823:    ff 4c 7e ff ff 4c 7e ff  ff 4c 7e ff ff 4c 7e ff   |.L~..L~..L~..L~.|
0x1a833:    ff 4c 7e ff ff a4 7e ff  ff a4 7e ff ff a4 7e ff   |.L~...~...~...~.|
0x1a843:    ff a4 7e ff ff d7 7c ff  ff 0c 7f ff ff 4c 7e ff   |..~...|......L~.|
0x1a853:    ff 4c 7e ff ff 4c 7e ff  ff 4c 7e ff ff 4c 7e ff   |.L~..L~..L~..L~.|
0x1a863:    ff 4c 7e ff ff 4c 7e ff  ff 4c 7e ff ff 4c 7e ff   |.L~..L~..L~..L~.|
0x1a873:    ff 4c 7e ff ff 4c 7e ff  ff 4c 7e ff ff 4c 7e ff   |.L~..L~..L~..L~.|
0x1a883:    ff 4c 7e ff ff 4c 7e ff  ff 4c 7e ff ff 4c 7e ff   |.L~..L~..L~..L~.|
0x1a893:    ff 4c 7e ff ff 4c 7e ff  ff 4c 7e ff ff 4c 7e ff   |.L~..L~..L~..L~.|
0x1a8a3:    ff 4c 7e ff ff 4c 7e ff  ff 4c 7e ff ff 4c 7e ff   |.L~..L~..L~..L~.|
0x1a8b3:    ff 4c 7e ff ff a4 7e ff  ff 7c 7d ff ff 4c 7e ff   |.L~...~..|}..L~.|
0x1a8c3:    ff a4 7e ff ff 4c 7e ff  ff a4 7e ff ff 4c 7e ff   |..~..L~...~..L~.|
0x1a8d3:    ff 4c 7e ff ff 4c 7e ff  ff 4c 7e ff ff 4c 7e ff   |.L~..L~..L~..L~.|
0x1a8e3:    ff 4c 7e ff ff 4c 7e ff  ff 4c 7e ff ff 4c 7e ff   |.L~..L~..L~..L~.|
0x1a8f3:    ff 4c 7e ff ff 4c 7e ff  ff 4c 7e ff ff 4c 7e ff   |.L~..L~..L~..L~.|
0x1a903:    ff 4c 7e ff ff 4c 7e ff  ff 4c 7e ff ff 4c 7e ff   |.L~..L~..L~..L~.|
0x1a913:    ff 4c 7e ff ff 4c 7e ff  ff 4c 7e ff ff 4c 7e ff   |.L~..L~..L~..L~.|
0x1a923:    ff 4c 7e ff ff 4c 7e ff  ff 4c 7e ff ff 4c 7e ff   |.L~..L~..L~..L~.|
0x1a933:    ff 4c 7e ff ff 07 7c ff  ff a4 7e ff ff 07 7c ff   |.L~...|...~...|.|
0x1a943:    ff 74 7e ff ff f8 7d ff  ff 08 7d ff ff 08 7d ff   |.t~...}...}...}.|
0x1a953:    ff 08 7d ff ff 08 7d ff  ff 08 7d ff ff 08 7d ff   |..}...}...}...}.|
0x1a963:    ff e8 7d ff ff 38 7f ff  ff 20 7f ff ff d0 7d ff   |..}..8... ....}.|
0x1a973:    ff 10 7f ff ff b8 7d ff  ff f8 7e ff ff 08 7d ff   |......}...~...}.|
0x1a983:    ff 08 7d ff ff 08 7d ff  ff 08 7d ff ff 08 7d ff   |..}...}...}...}.|
0x1a993:    ff 08 7d ff ff 08 7d ff  ff 08 7d ff ff 08 7d ff   |..}...}...}...}.|
0x1a9a3:    ff 08 7d ff ff 08 7d ff  ff 08 7d ff ff 08 7d ff   |..}...}...}...}.|
0x1a9b3:    ff 08 7d ff ff 08 7d ff  ff 08 7d ff ff 08 7d ff   |..}...}...}...}.|
0x1a9c3:    ff 08 7d ff ff e0 7e ff  ff c8 7e ff ff c8 7e ff   |..}...~...~...~.|
0x1a9d3:    ff b0 7e ff ff c8 7e ff  ff 98 7e ff ff c8 7e ff   |..~...~...~...~.|
0x1a9e3:    ff 08 7b ff ff c8 7e ff  ff c8 7e ff ff c8 7e ff   |..{...~...~...~.|
0x1a9f3:    ff 98 7e ff ff 98 7e ff  ff 98 7e ff ff 98 7e ff   |..~...~...~...~.|
0x1aa03:    ff 98 7e ff ff 98 7e ff  ff 98 7e ff ff 98 7e ff   |..~...~...~...~.|
0x1aa13:    ff 98 7e ff ff 98 7e ff  ff 98 7e ff ff 98 7e ff   |..~...~...~...~.|
0x1aa23:    ff 98 7e ff ff 98 7e ff  ff 98 7e ff ff 98 7e ff   |..~...~...~...~.|
0x1aa33:    ff c8 7e ff ff c8 7e ff  ff c8 7e ff ff c8 7e ff   |..~...~...~...~.|
0x1aa43:    ff d8 7a ff ff 08 7d ff  ff 98 7e ff ff 98 7e ff   |..z...}...~...~.|
0x1aa53:    ff 98 7e ff ff 98 7e ff  ff 98 7e ff ff 98 7e ff   |..~...~...~...~.|
0x1aa63:    ff 98 7e ff ff 98 7e ff  ff 98 7e ff ff 98 7e ff   |..~...~...~...~.|
0x1aa73:    ff 98 7e ff ff 98 7e ff  ff 98 7e ff ff 98 7e ff   |..~...~...~...~.|
0x1aa83:    ff 98 7e ff ff 98 7e ff  ff 98 7e ff ff 98 7e ff   |..~...~...~...~.|
0x1aa93:    ff 98 7e ff ff 98 7e ff  ff 98 7e ff ff 98 7e ff   |..~...~...~...~.|
0x1aaa3:    ff 98 7e ff ff 98 7e ff  ff 98 7e ff ff 98 7e ff   |..~...~...~...~.|
0x1aab3:    ff c8 7e ff ff 98 7d ff  ff 98 7e ff ff c8 7e ff   |..~...}...~...~.|
0x1aac3:    ff 98 7e ff ff c8 7e ff  ff 98 7e ff ff 98 7e ff   |..~...~...~...~.|
0x1aad3:    ff 98 7e ff ff 98 7e ff  ff 98 7e ff ff 98 7e ff   |..~...~...~...~.|
0x1aae3:    ff 98 7e ff ff 98 7e ff  ff 98 7e ff ff 98 7e ff   |..~...~...~...~.|
0x1aaf3:    ff 98 7e ff ff 98 7e ff  ff 98 7e ff ff 98 7e ff   |..~...~...~...~.|
0x1ab03:    ff 98 7e ff ff 98 7e ff  ff 98 7e ff ff 98 7e ff   |..~...~...~...~.|
0x1ab13:    ff 98 7e ff ff 98 7e ff  ff 98 7e ff ff 98 7e ff   |..~...~...~...~.|
0x1ab23:    ff 98 7e ff ff 98 7e ff  ff 98 7e ff ff 98 7e ff   |..~...~...~...~.|
0x1ab33:    ff 08 7a ff ff c8 7e ff  ff 08 7a ff ff b0 7e ff   |..z...~...z...~.|
0x1ab43:    ff 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x1ab53:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x1ab63:    00 01 00 00 00 02 00 00  00 03 00 00 00 04 00 00   |................|
0x1ab73:    00 05 00 00 00 06 00 00  00 07 00 00 00 08 00 00   |................|
0x1ab83:    00 09 00 00 00                                     |.....           |
0x1ab88:    25 73 20 28 25 73 29 20  25 73 0a 00               |%s (%s) %s..    |   "%s (%s) %s\n"
0x1ab94:    25 73 20 25 73 0a 00                               |%s %s..         |   "%s %s\n"
0x1ab9b:    28 43 29 00                                        |(C).            |   "(C)"
0x1ab9f:    57 72 69 74 74 65 6e 20  62 79 20 25 73 2e 0a 00   |Written by %s...|   "Written by %s.\n"
0x1abaf:    57 72 69 74 74 65 6e 20  62 79 20 25 73 20 61 6e   |Written by %s an|   "Written by %s and %s.\n"
0x1abbf:    64 20 25 73 2e 0a 00                               |d %s...         |
0x1abc6:    57 72 69 74 74 65 6e 20  62 79 20 25 73 2c 20 25   |Written by %s, %|   "Written by %s, %s, and %s.\n"
0x1abd6:    73 2c 20 61 6e 64 20 25  73 2e 0a 00               |s, and %s...    |
0x1abe2:    0a 52 65 70 6f 72 74 20  62 75 67 73 20 74 6f 3a   |.Report bugs to:|   "\nReport bugs to: %s\n"
0x1abf2:    20 25 73 0a 00                                     | %s..           |
0x1abf7:    62 75 67 2d 63 6f 72 65  75 74 69 6c 73 40 67 6e   |bug-coreutils@gn|   "bug-coreutils@gnu.org"
0x1ac07:    75 2e 6f 72 67 00                                  |u.org.          |
0x1ac0d:    25 73 20 68 6f 6d 65 20  70 61 67 65 3a 20 3c 25   |%s home page: <%|   "%s home page: <%s>\n"
0x1ac1d:    73 3e 0a 00                                        |s>..            |
0x1ac21:    00 00 00 00 00 00 00                               |.......         |
0x1ac28:    0a 4c 69 63 65 6e 73 65  20 47 50 4c 76 33 2b 3a   |.License GPLv3+:|   "\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n"
0x1ac38:    20 47 4e 55 20 47 50 4c  20 76 65 72 73 69 6f 6e   | GNU GPL version|
0x1ac48:    20 33 20 6f 72 20 6c 61  74 65 72 20 3c 68 74 74   | 3 or later <htt|
0x1ac58:    70 3a 2f 2f 67 6e 75 2e  6f 72 67 2f 6c 69 63 65   |p://gnu.org/lice|
0x1ac68:    6e 73 65 73 2f 67 70 6c  2e 68 74 6d 6c 3e 2e 0a   |nses/gpl.html>..|
0x1ac78:    54 68 69 73 20 69 73 20  66 72 65 65 20 73 6f 66   |This is free sof|
0x1ac88:    74 77 61 72 65 3a 20 79  6f 75 20 61 72 65 20 66   |tware: you are f|
0x1ac98:    72 65 65 20 74 6f 20 63  68 61 6e 67 65 20 61 6e   |ree to change an|
0x1aca8:    64 20 72 65 64 69 73 74  72 69 62 75 74 65 20 69   |d redistribute i|
0x1acb8:    74 2e 0a 54 68 65 72 65  20 69 73 20 4e 4f 20 57   |t..There is NO W|
0x1acc8:    41 52 52 41 4e 54 59 2c  20 74 6f 20 74 68 65 20   |ARRANTY, to the |
0x1acd8:    65 78 74 65 6e 74 20 70  65 72 6d 69 74 74 65 64   |extent permitted|
0x1ace8:    20 62 79 20 6c 61 77 2e  0a 0a 00                  | by law....     |
0x1acf3:    00 00 00 00 00                                     |.....           |
0x1acf8:    57 72 69 74 74 65 6e 20  62 79 20 25 73 2c 20 25   |Written by %s, %|   "Written by %s, %s, %s,\nand %s.\n"
0x1ad08:    73 2c 20 25 73 2c 0a 61  6e 64 20 25 73 2e 0a 00   |s, %s,.and %s...|
0x1ad18:    57 72 69 74 74 65 6e 20  62 79 20 25 73 2c 20 25   |Written by %s, %|   "Written by %s, %s, %s,\n%s, and %s.\n"
0x1ad28:    73 2c 20 25 73 2c 0a 25  73 2c 20 61 6e 64 20 25   |s, %s,.%s, and %|
0x1ad38:    73 2e 0a 00                                        |s...            |
0x1ad3c:    00 00 00 00                                        |....            |
0x1ad40:    57 72 69 74 74 65 6e 20  62 79 20 25 73 2c 20 25   |Written by %s, %|   "Written by %s, %s, %s,\n%s, %s, and %s.\n"
0x1ad50:    73 2c 20 25 73 2c 0a 25  73 2c 20 25 73 2c 20 61   |s, %s,.%s, %s, a|
0x1ad60:    6e 64 20 25 73 2e 0a 00                            |nd %s...        |
0x1ad68:    57 72 69 74 74 65 6e 20  62 79 20 25 73 2c 20 25   |Written by %s, %|   "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n"
0x1ad78:    73 2c 20 25 73 2c 0a 25  73 2c 20 25 73 2c 20 25   |s, %s,.%s, %s, %|
0x1ad88:    73 2c 20 61 6e 64 20 25  73 2e 0a 00               |s, and %s...    |
0x1ad94:    00 00 00 00                                        |....            |
0x1ad98:    57 72 69 74 74 65 6e 20  62 79 20 25 73 2c 20 25   |Written by %s, %|   "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n"
0x1ada8:    73 2c 20 25 73 2c 0a 25  73 2c 20 25 73 2c 20 25   |s, %s,.%s, %s, %|
0x1adb8:    73 2c 20 25 73 2c 0a 61  6e 64 20 25 73 2e 0a 00   |s, %s,.and %s...|
0x1adc8:    57 72 69 74 74 65 6e 20  62 79 20 25 73 2c 20 25   |Written by %s, %|   "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n"
0x1add8:    73 2c 20 25 73 2c 0a 25  73 2c 20 25 73 2c 20 25   |s, %s,.%s, %s, %|
0x1ade8:    73 2c 20 25 73 2c 0a 25  73 2c 20 61 6e 64 20 25   |s, %s,.%s, and %|
0x1adf8:    73 2e 0a 00                                        |s...            |
0x1adfc:    00 00 00 00                                        |....            |
0x1ae00:    57 72 69 74 74 65 6e 20  62 79 20 25 73 2c 20 25   |Written by %s, %|   "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n"
0x1ae10:    73 2c 20 25 73 2c 0a 25  73 2c 20 25 73 2c 20 25   |s, %s,.%s, %s, %|
0x1ae20:    73 2c 20 25 73 2c 0a 25  73 2c 20 25 73 2c 20 61   |s, %s,.%s, %s, a|
0x1ae30:    6e 64 20 6f 74 68 65 72  73 2e 0a 00               |nd others...    |
0x1ae3c:    00 00 00 00                                        |....            |
0x1ae40:    47 65 6e 65 72 61 6c 20  68 65 6c 70 20 75 73 69   |General help usi|   "General help using GNU software: <http://www.gnu.org/gethelp/>\n"
0x1ae50:    6e 67 20 47 4e 55 20 73  6f 66 74 77 61 72 65 3a   |ng GNU software:|
0x1ae60:    20 3c 68 74 74 70 3a 2f  2f 77 77 77 2e 67 6e 75   | <http://www.gnu|
0x1ae70:    2e 6f 72 67 2f 67 65 74  68 65 6c 70 2f 3e 0a 00   |.org/gethelp/>..|
0x1ae80:    f7 93 ff ff a0 91 ff ff  e0 91 ff ff 20 92 ff ff   |............ ...|
0x1ae90:    70 92 ff ff c8 92 ff ff  f8 92 ff ff 60 93 ff ff   |p...........`...|
0x1aea0:    c0 90 ff ff 48 91 ff ff  00 00 00 00 00 00 00 00   |....H...........|
0x1aeb0:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x1aec0:    43 6f 70 79 72 69 67 68  74 20 25 73 20 25 64 20   |Copyright %s %d |   "Copyright %s %d Free Software Foundation, Inc."
0x1aed0:    46 72 65 65 20 53 6f 66  74 77 61 72 65 20 46 6f   |Free Software Fo|
0x1aee0:    75 6e 64 61 74 69 6f 6e  2c 20 49 6e 63 2e 00      |undation, Inc.. |
0x1aeef:    6d 65 6d 6f 72 79 20 65  78 68 61 75 73 74 65 64   |memory exhausted|   "memory exhausted"
0x1aeff:    00                                                 |.               |
0x1af00:    6c 69 62 2f 78 73 74 72  74 6f 6c 2e 63 00         |lib/xstrtol.c.  |   "lib/xstrtol.c"
0x1af0e:    00 00                                              |..              |
0x1af10:    30 20 3c 3d 20 73 74 72  74 6f 6c 5f 62 61 73 65   |0 <= strtol_base|   "0 <= strtol_base && strtol_base <= 36"
0x1af20:    20 26 26 20 73 74 72 74  6f 6c 5f 62 61 73 65 20   | && strtol_base |
0x1af30:    3c 3d 20 33 36 00                                  |<= 36.          |
0x1af36:    00 00 3e 9d ff ff 34 9c  ff ff 34 9c ff ff 1b 9d   |..>...4...4.....|
0x1af46:    ff ff 34 9c ff ff 54 9d  ff ff 34 9c ff ff 34 9c   |..4...T...4...4.|
0x1af56:    ff ff 34 9c ff ff d7 9c  ff ff 34 9c ff ff f0 9b   |..4.......4.....|
0x1af66:    ff ff 34 9c ff ff 34 9c  ff ff f8 9c ff ff 34 9c   |..4...4.......4.|
0x1af76:    ff ff 34 9c ff ff 34 9c  ff ff b7 9c ff ff 34 9c   |..4...4.......4.|
0x1af86:    ff ff 34 9c ff ff 34 9c  ff ff 34 9c ff ff 92 9c   |..4...4...4.....|
0x1af96:    ff ff 6c 9c ff ff 34 9c  ff ff 34 9c ff ff 34 9c   |..l...4...4...4.|
0x1afa6:    ff ff 34 9c ff ff 34 9c  ff ff 34 9c ff ff 34 9c   |..4...4...4...4.|
0x1afb6:    ff ff 55 9c ff ff 18 9c  ff ff 34 9c ff ff 34 9c   |..U.......4...4.|
0x1afc6:    ff ff 34 9c ff ff 54 9d  ff ff 34 9c ff ff 34 9c   |..4...T...4...4.|
0x1afd6:    ff ff 34 9c ff ff d7 9c  ff ff 34 9c ff ff f0 9b   |..4.......4.....|
0x1afe6:    ff ff 34 9c ff ff 34 9c  ff ff 34 9c ff ff 34 9c   |..4...4...4...4.|
0x1aff6:    ff ff 34 9c ff ff 34 9c  ff ff b7 9c ff ff 34 9c   |..4...4.......4.|
0x1b006:    ff ff 34 9c ff ff 3f 9c  ff ff                     |..4...?...      |
0x1b010:    78 73 74 72 74 6f 75 6c  00                        |xstrtoul.       |   "xstrtoul"
0x1b019:    69 6e 76 61 6c 69 64 20  25 73 25 73 20 61 72 67   |invalid %s%s arg|   "invalid %s%s argument '%s'"
0x1b029:    75 6d 65 6e 74 20 27 25  73 27 00                  |ument '%s'.     |
0x1b034:    25 73 25 73 20 61 72 67  75 6d 65 6e 74 20 27 25   |%s%s argument '%|   "%s%s argument '%s' too large"
0x1b044:    73 27 20 74 6f 6f 20 6c  61 72 67 65 00            |s' too large.   |
0x1b051:    2d 2d 00                                           |--.             |   "--"
0x1b054:    00 00 00 00                                        |....            |
0x1b058:    69 6e 76 61 6c 69 64 20  73 75 66 66 69 78 20 69   |invalid suffix i|   "invalid suffix in %s%s argument '%s'"
0x1b068:    6e 20 25 73 25 73 20 61  72 67 75 6d 65 6e 74 20   |n %s%s argument |
0x1b078:    27 25 73 27 00                                     |'%s'.           |
0x1b07d:    00 00 00 c6 a0 ff ff bc  9f ff ff bc 9f ff ff a3   |................|
0x1b08d:    a0 ff ff bc 9f ff ff dc  a0 ff ff bc 9f ff ff bc   |................|
0x1b09d:    9f ff ff bc 9f ff ff 5f  a0 ff ff bc 9f ff ff 78   |......._.......x|
0x1b0ad:    9f ff ff bc 9f ff ff bc  9f ff ff 80 a0 ff ff bc   |................|
0x1b0bd:    9f ff ff bc 9f ff ff bc  9f ff ff 3f a0 ff ff bc   |...........?....|
0x1b0cd:    9f ff ff bc 9f ff ff bc  9f ff ff bc 9f ff ff 1a   |................|
0x1b0dd:    a0 ff ff f4 9f ff ff bc  9f ff ff bc 9f ff ff bc   |................|
0x1b0ed:    9f ff ff bc 9f ff ff bc  9f ff ff bc 9f ff ff bc   |................|
0x1b0fd:    9f ff ff dd 9f ff ff a0  9f ff ff bc 9f ff ff bc   |................|
0x1b10d:    9f ff ff bc 9f ff ff dc  a0 ff ff bc 9f ff ff bc   |................|
0x1b11d:    9f ff ff bc 9f ff ff 5f  a0 ff ff bc 9f ff ff 78   |......._.......x|
0x1b12d:    9f ff ff bc 9f ff ff bc  9f ff ff bc 9f ff ff bc   |................|
0x1b13d:    9f ff ff bc 9f ff ff bc  9f ff ff 3f a0 ff ff bc   |...........?....|
0x1b14d:    9f ff ff bc 9f ff ff c7  9f ff ff                  |...........     |
0x1b158:    78 73 74 72 74 6f 75 6d  61 78 00                  |xstrtoumax.     |   "xstrtoumax"
0x1b163:    41 53 43 49 49 00                                  |ASCII.          |   "ASCII"
0x1b169:    2f 75 73 72 2f 6c 69 62  2f 78 38 36 5f 36 34 2d   |/usr/lib/x86_64-|   "/usr/lib/x86_64-linux-gnu"
0x1b179:    6c 69 6e 75 78 2d 67 6e  75 00                     |linux-gnu.      |
0x1b183:    43 48 41 52 53 45 54 41  4c 49 41 53 44 49 52 00   |CHARSETALIASDIR.|   "CHARSETALIASDIR"
0x1b193:    25 35 30 73 20 25 35 30  73 00                     |%50s %50s.      |   "%50s %50s"
0x1b19d:    ??                                                 |?               |
; section: .eh_frame_hdr
0x1b1a0:    01 1b 03 3b 84 08 00 00  0f 01 00 00 d0 85 fe ff   |...;............|
0x1b1b0:    d0 08 00 00 d0 8c fe ff  f8 08 00 00 f0 8c fe ff   |................|
0x1b1c0:    54 17 00 00 b0 a6 fe ff  a0 08 00 00 c0 a7 fe ff   |T...............|
0x1b1d0:    10 09 00 00 d0 a7 fe ff  24 09 00 00 f0 a7 fe ff   |........$.......|
0x1b1e0:    38 09 00 00 10 a8 fe ff  4c 09 00 00 20 a8 fe ff   |8.......L... ...|
0x1b1f0:    60 09 00 00 b0 aa fe ff  a8 09 00 00 00 ab fe ff   |`...............|
0x1b200:    bc 09 00 00 80 ab fe ff  d8 09 00 00 e0 ad fe ff   |................|
0x1b210:    3c 0a 00 00 50 ae fe ff  74 0a 00 00 90 ae fe ff   |<...P...t.......|
0x1b220:    88 0a 00 00 d0 ae fe ff  9c 0a 00 00 e0 ae fe ff   |................|
0x1b230:    b0 0a 00 00 f0 ae fe ff  c4 0a 00 00 40 af fe ff   |............@...|
0x1b240:    e4 0a 00 00 f0 af fe ff  00 0b 00 00 70 b0 fe ff   |............p...|
0x1b250:    2c 0b 00 00 50 b1 fe ff  6c 0b 00 00 f0 b2 fe ff   |,...P...l.......|
0x1b260:    8c 0b 00 00 20 b3 fe ff  b4 0b 00 00 50 b3 fe ff   |.... .......P...|
0x1b270:    c8 0b 00 00 90 b3 fe ff  dc 0b 00 00 a0 b3 fe ff   |................|
0x1b280:    f0 0b 00 00 b0 b3 fe ff  04 0c 00 00 c0 b3 fe ff   |................|
0x1b290:    18 0c 00 00 d0 b3 fe ff  2c 0c 00 00 40 b5 fe ff   |........,...@...|
0x1b2a0:    78 0c 00 00 10 b6 fe ff  b4 0c 00 00 e0 b6 fe ff   |x...............|
0x1b2b0:    ec 0c 00 00 a0 b7 fe ff  18 0d 00 00 e0 b7 fe ff   |................|
0x1b2c0:    3c 0d 00 00 00 b8 fe ff  50 0d 00 00 70 b8 fe ff   |<.......P...p...|
0x1b2d0:    88 0d 00 00 f0 b8 fe ff  9c 0d 00 00 60 b9 fe ff   |............`...|
0x1b2e0:    b0 0d 00 00 e0 b9 fe ff  c4 0d 00 00 50 ba fe ff   |............P...|
0x1b2f0:    d8 0d 00 00 d0 ba fe ff  ec 0d 00 00 30 bb fe ff   |............0...|
0x1b300:    00 0e 00 00 90 bb fe ff  14 0e 00 00 f0 bb fe ff   |................|
0x1b310:    28 0e 00 00 50 bc fe ff  3c 0e 00 00 50 bd fe ff   |(...P...<...P...|
0x1b320:    50 0e 00 00 a0 bd fe ff  6c 0e 00 00 00 be fe ff   |P.......l.......|
0x1b330:    80 0e 00 00 60 be fe ff  94 0e 00 00 30 bf fe ff   |....`.......0...|
0x1b340:    d8 0e 00 00 00 c1 fe ff  24 0f 00 00 50 c1 fe ff   |........$...P...|
0x1b350:    3c 0f 00 00 c0 c1 fe ff  58 0f 00 00 b0 c2 fe ff   |<.......X.......|
0x1b360:    84 0f 00 00 00 c3 fe ff  a4 0f 00 00 70 c7 fe ff   |............p...|
0x1b370:    f4 0f 00 00 80 cb fe ff  44 10 00 00 e0 cf fe ff   |........D.......|
0x1b380:    a8 10 00 00 70 d1 fe ff  d8 10 00 00 80 db fe ff   |....p...........|
0x1b390:    4c 11 00 00 10 dc fe ff  78 11 00 00 c0 dd fe ff   |L.......x.......|
0x1b3a0:    a4 11 00 00 d0 e0 fe ff  e4 11 00 00 80 e2 fe ff   |................|
0x1b3b0:    48 12 00 00 60 e6 fe ff  04 13 00 00 e0 e6 fe ff   |H...`...........|
0x1b3c0:    18 13 00 00 70 e7 fe ff  2c 13 00 00 40 e8 fe ff   |....p...,...@...|
0x1b3d0:    58 13 00 00 c0 f6 fe ff  88 13 00 00 80 fd fe ff   |X...............|
0x1b3e0:    e8 13 00 00 d0 fd fe ff  fc 13 00 00 10 fe fe ff   |................|
0x1b3f0:    10 14 00 00 50 fe fe ff  24 14 00 00 90 fe fe ff   |....P...$.......|
0x1b400:    38 14 00 00 e0 fe fe ff  4c 14 00 00 20 ff fe ff   |8.......L... ...|
0x1b410:    60 14 00 00 60 ff fe ff  74 14 00 00 a0 ff fe ff   |`...`...t.......|
0x1b420:    88 14 00 00 e0 ff fe ff  9c 14 00 00 20 00 ff ff   |............ ...|
0x1b430:    b0 14 00 00 70 00 ff ff  c4 14 00 00 c0 00 ff ff   |....p...........|
0x1b440:    d8 14 00 00 50 01 ff ff  ec 14 00 00 d0 01 ff ff   |....P...........|
0x1b450:    00 15 00 00 50 02 ff ff  14 15 00 00 e0 02 ff ff   |....P...........|
0x1b460:    28 15 00 00 60 03 ff ff  3c 15 00 00 e0 03 ff ff   |(...`...<.......|
0x1b470:    50 15 00 00 50 04 ff ff  88 15 00 00 c0 04 ff ff   |P...P...........|
0x1b480:    c0 15 00 00 50 05 ff ff  d4 15 00 00 d0 05 ff ff   |....P...........|
0x1b490:    e8 15 00 00 50 06 ff ff  fc 15 00 00 d0 06 ff ff   |....P...........|
0x1b4a0:    34 16 00 00 50 07 ff ff  6c 16 00 00 00 08 ff ff   |4...P...l.......|
0x1b4b0:    ac 16 00 00 b0 08 ff ff  ec 16 00 00 80 09 ff ff   |................|
0x1b4c0:    30 17 00 00 20 10 ff ff  c0 17 00 00 10 11 ff ff   |0... ...........|
0x1b4d0:    10 18 00 00 20 11 ff ff  24 18 00 00 40 12 ff ff   |.... ...$...@...|
0x1b4e0:    70 18 00 00 c0 12 ff ff  9c 18 00 00 e0 13 ff ff   |p...............|
0x1b4f0:    fc 18 00 00 50 14 ff ff  48 19 00 00 a0 14 ff ff   |....P...H.......|
0x1b500:    88 19 00 00 e0 1a ff ff  d8 19 00 00 f0 1a ff ff   |................|
0x1b510:    ec 19 00 00 00 1b ff ff  00 1a 00 00 b0 1b ff ff   |................|
0x1b520:    30 1a 00 00 10 1c ff ff  64 1a 00 00 70 1c ff ff   |0.......d...p...|
0x1b530:    90 1a 00 00 d0 1c ff ff  a4 1a 00 00 20 1d ff ff   |............ ...|
0x1b540:    d0 1a 00 00 d0 1d ff ff  10 1b 00 00 60 1e ff ff   |............`...|
0x1b550:    70 1b 00 00 c0 1e ff ff  90 1b 00 00 50 20 ff ff   |p...........P ..|
0x1b560:    a4 1b 00 00 60 20 ff ff  b8 1b 00 00 80 20 ff ff   |....` ....... ..|
0x1b570:    d8 1b 00 00 50 21 ff ff  28 1c 00 00 20 22 ff ff   |....P!..(... "..|
0x1b580:    3c 1c 00 00 30 26 ff ff  88 1c 00 00 90 26 ff ff   |<...0&.......&..|
0x1b590:    b0 1c 00 00 f0 26 ff ff  d0 1c 00 00 90 27 ff ff   |.....&.......'..|
0x1b5a0:    e4 1c 00 00 a0 27 ff ff  f8 1c 00 00 b0 27 ff ff   |.....'.......'..|
0x1b5b0:    0c 1d 00 00 e0 27 ff ff  28 1d 00 00 00 29 ff ff   |.....'..(....)..|
0x1b5c0:    88 1d 00 00 80 29 ff ff  9c 1d 00 00 c0 2a ff ff   |.....).......*..|
0x1b5d0:    fc 1d 00 00 d0 2a ff ff  10 1e 00 00 e0 2a ff ff   |.....*.......*..|
0x1b5e0:    24 1e 00 00 f0 2a ff ff  38 1e 00 00 40 2b ff ff   |$....*..8...@+..|
0x1b5f0:    4c 1e 00 00 a0 2b ff ff  60 1e 00 00 f0 2c ff ff   |L....+..`....,..|
0x1b600:    9c 1e 00 00 50 2d ff ff  d4 1e 00 00 a0 2d ff ff   |....P-.......-..|
0x1b610:    e8 1e 00 00 20 2e ff ff  1c 1f 00 00 90 2e ff ff   |.... ...........|
0x1b620:    30 1f 00 00 00 2f ff ff  7c 1f 00 00 40 2f ff ff   |0..../..|...@/..|
0x1b630:    90 1f 00 00 60 2f ff ff  a4 1f 00 00 20 31 ff ff   |....`/...... 1..|
0x1b640:    f0 1f 00 00 b0 31 ff ff  1c 20 00 00 90 32 ff ff   |.....1... ...2..|
0x1b650:    48 20 00 00 d0 34 ff ff  80 20 00 00 60 37 ff ff   |H ...4... ..`7..|
0x1b660:    bc 20 00 00 c0 37 ff ff  e0 20 00 00 d0 39 ff ff   |. ...7... ...9..|
0x1b670:    18 21 00 00 00 3a ff ff  40 21 00 00 10 3a ff ff   |.!...:..@!...:..|
0x1b680:    54 21 00 00 40 3a ff ff  6c 21 00 00 80 3a ff ff   |T!..@:..l!...:..|
0x1b690:    84 21 00 00 a0 3a ff ff  a0 21 00 00 70 3b ff ff   |.!...:...!..p;..|
0x1b6a0:    b4 21 00 00 80 45 ff ff  5c 22 00 00 70 47 ff ff   |.!...E..\"..pG..|
0x1b6b0:    98 22 00 00 10 48 ff ff  c8 22 00 00 10 49 ff ff   |."...H..."...I..|
0x1b6c0:    00 23 00 00 b0 49 ff ff  30 23 00 00 b0 4a ff ff   |.#...I..0#...J..|
0x1b6d0:    68 23 00 00 50 4b ff ff  80 23 00 00 a0 4b ff ff   |h#..PK...#...K..|
0x1b6e0:    98 23 00 00 70 4f ff ff  e4 23 00 00 10 50 ff ff   |.#..pO...#...P..|
0x1b6f0:    30 24 00 00 d0 51 ff ff  7c 24 00 00 00 52 ff ff   |0$...Q..|$...R..|
0x1b700:    a8 24 00 00 40 54 ff ff  0c 25 00 00 50 54 ff ff   |.$..@T...%..PT..|
0x1b710:    20 25 00 00 a0 54 ff ff  4c 25 00 00 f0 54 ff ff   | %...T..L%...T..|
0x1b720:    78 25 00 00 e0 6d ff ff  e8 25 00 00 30 6e ff ff   |x%...m...%..0n..|
0x1b730:    10 26 00 00 d0 6e ff ff  30 26 00 00 c0 6f ff ff   |.&...n..0&...o..|
0x1b740:    74 26 00 00 00 82 ff ff  ec 26 00 00 b0 83 ff ff   |t&.......&......|
0x1b750:    58 27 00 00 f0 83 ff ff  84 27 00 00 10 84 ff ff   |X'.......'......|
0x1b760:    98 27 00 00 30 84 ff ff  ac 27 00 00 70 84 ff ff   |.'..0....'..p...|
0x1b770:    c0 27 00 00 90 84 ff ff  d4 27 00 00 c0 84 ff ff   |.'.......'......|
0x1b780:    e8 27 00 00 40 85 ff ff  3c 28 00 00 30 86 ff ff   |.'..@...<(..0...|
0x1b790:    a8 28 00 00 40 86 ff ff  bc 28 00 00 e0 86 ff ff   |.(..@....(......|
0x1b7a0:    e8 28 00 00 00 87 ff ff  fc 28 00 00 10 87 ff ff   |.(.......(......|
0x1b7b0:    10 29 00 00 30 87 ff ff  24 29 00 00 50 87 ff ff   |.)..0...$)..P...|
0x1b7c0:    38 29 00 00 e0 87 ff ff  54 29 00 00 70 88 ff ff   |8)......T)..p...|
0x1b7d0:    70 29 00 00 80 88 ff ff  84 29 00 00 90 88 ff ff   |p).......)......|
0x1b7e0:    98 29 00 00 30 89 ff ff  b4 29 00 00 40 89 ff ff   |.)..0....)..@...|
0x1b7f0:    c8 29 00 00 60 89 ff ff  dc 29 00 00 70 89 ff ff   |.)..`....)..p...|
0x1b800:    f0 29 00 00 00 8a ff ff  0c 2a 00 00 a0 8a ff ff   |.).......*......|
0x1b810:    28 2a 00 00 b0 8a ff ff  3c 2a 00 00 d0 8a ff ff   |(*......<*......|
0x1b820:    50 2a 00 00 f0 8a ff ff  64 2a 00 00 00 8b ff ff   |P*......d*......|
0x1b830:    78 2a 00 00 20 8b ff ff  8c 2a 00 00 40 8b ff ff   |x*.. ....*..@...|
0x1b840:    a0 2a 00 00 60 8b ff ff  b8 2a 00 00 d0 8c ff ff   |.*..`....*......|
0x1b850:    08 2b 00 00 e0 90 ff ff  1c 2c 00 00 00 91 ff ff   |.+.......,......|
0x1b860:    30 2c 00 00 80 91 ff ff  4c 2c 00 00 60 92 ff ff   |0,......L,..`...|
0x1b870:    78 2c 00 00 e0 92 ff ff  98 2c 00 00 00 93 ff ff   |x,.......,......|
0x1b880:    b4 2c 00 00 30 93 ff ff  c8 2c 00 00 40 93 ff ff   |.,..0....,..@...|
0x1b890:    dc 2c 00 00 80 93 ff ff  00 2d 00 00 b0 93 ff ff   |.,.......-......|
0x1b8a0:    14 2d 00 00 40 94 ff ff  2c 2d 00 00 90 94 ff ff   |.-..@...,-......|
0x1b8b0:    44 2d 00 00 b0 94 ff ff  60 2d 00 00 e0 94 ff ff   |D-......`-......|
0x1b8c0:    7c 2d 00 00 10 95 ff ff  a4 2d 00 00 30 95 ff ff   ||-.......-..0...|
0x1b8d0:    c0 2d 00 00 70 95 ff ff  d8 2d 00 00 70 96 ff ff   |.-..p....-..p...|
0x1b8e0:    24 2e 00 00 a0 96 ff ff  40 2e 00 00 d0 96 ff ff   |$.......@.......|
0x1b8f0:    60 2e 00 00 b0 97 ff ff  a8 2e 00 00 d0 9b ff ff   |`...............|
0x1b900:    f8 2e 00 00 80 9c ff ff  20 2f 00 00 a0 a0 ff ff   |........ /......|
0x1b910:    70 2f 00 00 10 a1 ff ff  98 2f 00 00 30 a1 ff ff   |p/......./..0...|
0x1b920:    b4 2f 00 00 50 a1 ff ff  d0 2f 00 00 70 a1 ff ff   |./..P..../..p...|
0x1b930:    f0 2f 00 00 00 a2 ff ff  30 30 00 00 40 a2 ff ff   |./......00..@...|
0x1b940:    44 30 00 00 60 a2 ff ff  58 30 00 00 80 a2 ff ff   |D0..`...X0......|
0x1b950:    6c 30 00 00 10 a3 ff ff  9c 30 00 00 30 a3 ff ff   |l0.......0..0...|
0x1b960:    b0 30 00 00 50 a3 ff ff  c4 30 00 00 40 a4 ff ff   |.0..P....0..@...|
0x1b970:    04 31 00 00 80 a4 ff ff  18 31 00 00 f0 a4 ff ff   |.1.......1......|
0x1b980:    50 31 00 00 20 a5 ff ff  68 31 00 00 50 a5 ff ff   |P1.. ...h1..P...|
0x1b990:    7c 31 00 00 80 a5 ff ff  98 31 00 00 e0 a5 ff ff   ||1.......1......|
0x1b9a0:    d4 31 00 00 70 a6 ff ff  0c 32 00 00 b0 a7 ff ff   |.1..p....2......|
0x1b9b0:    58 32 00 00 90 a8 ff ff  ac 32 00 00 a0 a8 ff ff   |X2.......2......|
0x1b9c0:    c0 32 00 00 50 a9 ff ff  20 33 00 00 a0 aa ff ff   |.2..P... 3......|
0x1b9d0:    58 33 00 00 d0 aa ff ff  70 33 00 00 50 ab ff ff   |X3......p3..P...|
0x1b9e0:    c0 33 00 00 70 ab ff ff  e0 33 00 00 b0 ab ff ff   |.3..p....3......|
0x1b9f0:    f8 33 00 00 00 b0 ff ff  48 34 00 00 80 b0 ff ff   |.3......H4......|
0x1ba00:    80 34 00 00 c0 b0 ff ff  a0 34 00 00 20 b1 ff ff   |.4.......4.. ...|
0x1ba10:    d0 34 00 00 90 b1 ff ff  18 35 00 00 a0 b1 ff ff   |.4.......5......|
0x1ba20:    30 35 00 00 ??                                     |05..?           |
; section: .eh_frame
0x1ba28:    14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0x1ba38:    1b 0c 07 08 90 01 07 10  14 00 00 00 1c 00 00 00   |................|
0x1ba48:    08 9e fe ff 2b 00 00 00  00 00 00 00 00 00 00 00   |....+...........|
0x1ba58:    14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0x1ba68:    1b 0c 07 08 90 01 00 00  24 00 00 00 1c 00 00 00   |........$.......|
0x1ba78:    f8 7c fe ff 00 07 00 00  00 0e 10 46 0e 18 4a 0f   |.|.........F..J.|
0x1ba88:    0b 77 08 80 00 3f 1a 3b  2a 33 24 22 00 00 00 00   |.w...?.;*3$"....|
0x1ba98:    14 00 00 00 44 00 00 00  d0 83 fe ff 18 00 00 00   |....D...........|
0x1baa8:    00 00 00 00 00 00 00 00  10 00 00 00 5c 00 00 00   |............\...|
0x1bab8:    a8 9e fe ff 0c 00 00 00  00 00 00 00 10 00 00 00   |................|
0x1bac8:    70 00 00 00 a4 9e fe ff  1c 00 00 00 00 00 00 00   |p...............|
0x1bad8:    10 00 00 00 84 00 00 00  b0 9e fe ff 12 00 00 00   |................|
0x1bae8:    00 00 00 00 10 00 00 00  98 00 00 00 bc 9e fe ff   |................|
0x1baf8:    05 00 00 00 00 00 00 00  44 00 00 00 ac 00 00 00   |........D.......|
0x1bb08:    b8 9e fe ff 8a 02 00 00  00 4f 0e 10 8f 02 45 0e   |.........O....E.|
0x1bb18:    18 8e 03 47 0e 20 8d 04  42 0e 28 8c 05 44 0e 30   |...G. ..B.(..D.0|
0x1bb28:    86 06 4b 0e 38 83 07 02  dd 0a 0e 30 41 0e 28 42   |..K.8......0A.(B|
0x1bb38:    0e 20 42 0e 18 42 0e 10  42 0e 08 46 0b 00 00 00   |. B..B..B..F....|
0x1bb48:    10 00 00 00 f4 00 00 00  00 a1 fe ff 4f 00 00 00   |............O...|
0x1bb58:    00 00 00 00 18 00 00 00  08 01 00 00 3c a1 fe ff   |............<...|
0x1bb68:    7f 00 00 00 00 44 0e 20  02 42 0a 0e 08 4a 0b 00   |.....D. .B...J..|
0x1bb78:    60 00 00 00 24 01 00 00  a0 a1 fe ff 51 02 00 00   |`...$.......Q...|
0x1bb88:    00 42 0e 10 8f 02 42 0e  18 8e 03 44 0e 20 8d 04   |.B....B....D. ..|
0x1bb98:    42 0e 28 8c 05 41 0e 30  86 06 41 0e 38 83 07 47   |B.(..A.0..A.8..G|
0x1bba8:    0e 90 0d 03 53 01 0a 0e  38 41 0e 30 41 0e 28 42   |....S...8A.0A.(B|
0x1bbb8:    0e 20 42 0e 18 42 0e 10  42 0e 08 41 0b 02 74 0e   |. B..B..B..A..t.|
0x1bbc8:    98 0d 57 0e a0 0d 41 0e  a8 0d 47 0e b0 0d 4e 0e   |..W...A...G...N.|
0x1bbd8:    90 0d 00 00 34 00 00 00  88 01 00 00 9c a3 fe ff   |....4...........|
0x1bbe8:    66 00 00 00 00 42 0e 10  8d 02 42 0e 18 8c 03 44   |f....B....B....D|
0x1bbf8:    0e 20 86 04 41 0e 28 83  05 4f 0e 30 02 47 0e 28   |. ..A.(..O.0.G.(|
0x1bc08:    41 0e 20 41 0e 18 42 0e  10 42 0e 08 10 00 00 00   |A. A..B..B......|
0x1bc18:    c0 01 00 00 d4 a3 fe ff  36 00 00 00 00 00 00 00   |........6.......|
0x1bc28:    10 00 00 00 d4 01 00 00  00 a4 fe ff 36 00 00 00   |............6...|
0x1bc38:    00 00 00 00 10 00 00 00  e8 01 00 00 2c a4 fe ff   |............,...|
0x1bc48:    0b 00 00 00 00 00 00 00  10 00 00 00 fc 01 00 00   |................|
0x1bc58:    28 a4 fe ff 0e 00 00 00  00 00 00 00 1c 00 00 00   |(...............|
0x1bc68:    10 02 00 00 24 a4 fe ff  42 00 00 00 00 41 0e 10   |....$...B....A..|
0x1bc78:    83 02 71 0a 0e 08 4e 0b  41 0e 08 00 18 00 00 00   |..q...N.A.......|
0x1bc88:    30 02 00 00 54 a4 fe ff  ac 00 00 00 00 49 0e 10   |0...T........I..|
0x1bc98:    83 02 02 a2 0e 08 00 00  28 00 00 00 4c 02 00 00   |........(...L...|
0x1bca8:    e8 a4 fe ff 78 00 00 00  00 41 0e 10 86 02 41 0e   |....x....A....A.|
0x1bcb8:    18 83 03 56 0e 30 02 43  0a 0e 18 41 0e 10 41 0e   |...V.0.C...A..A.|
0x1bcc8:    08 43 0b 00 3c 00 00 00  78 02 00 00 3c a5 fe ff   |.C..<...x...<...|
0x1bcd8:    d1 00 00 00 00 42 0e 10  8e 02 42 0e 18 8d 03 42   |.....B....B....B|
0x1bce8:    0e 20 8c 04 41 0e 28 86  05 44 0e 30 83 06 02 7b   |. ..A.(..D.0...{|
0x1bcf8:    0a 0e 28 41 0e 20 42 0e  18 42 0e 10 42 0e 08 43   |..(A. B..B..B..C|
0x1bd08:    0b 00 00 00 1c 00 00 00  b8 02 00 00 dc a5 fe ff   |................|
0x1bd18:    92 01 00 00 00 41 0e 10  83 02 03 0c 01 0a 0e 08   |.....A..........|
0x1bd28:    43 0b 00 00 24 00 00 00  d8 02 00 00 5c a7 fe ff   |C...$.......\...|
0x1bd38:    28 00 00 00 00 41 0e 10  86 02 41 0e 18 83 03 4a   |(....A....A....J|
0x1bd48:    0e 20 4f 0e 18 47 0e 10  41 0e 08 00 10 00 00 00   |. O..G..A.......|
0x1bd58:    00 03 00 00 64 a7 fe ff  26 00 00 00 00 00 00 00   |....d...&.......|
0x1bd68:    10 00 00 00 14 03 00 00  80 a7 fe ff 36 00 00 00   |............6...|
0x1bd78:    00 00 00 00 10 00 00 00  28 03 00 00 ac a7 fe ff   |........(.......|
0x1bd88:    0b 00 00 00 00 00 00 00  10 00 00 00 3c 03 00 00   |............<...|
0x1bd98:    a8 a7 fe ff 0e 00 00 00  00 00 00 00 10 00 00 00   |................|
0x1bda8:    50 03 00 00 a4 a7 fe ff  0e 00 00 00 00 00 00 00   |P...............|
0x1bdb8:    10 00 00 00 64 03 00 00  a0 a7 fe ff 0b 00 00 00   |....d...........|
0x1bdc8:    00 00 00 00 48 00 00 00  78 03 00 00 9c a7 fe ff   |....H...x.......|
0x1bdd8:    6b 01 00 00 00 42 0e 10  8f 02 42 0e 18 8e 03 45   |k....B....B....E|
0x1bde8:    0e 20 8d 04 42 0e 28 8c  05 45 0e 30 86 06 41 0e   |. ..B.(..E.0..A.|
0x1bdf8:    38 83 07 44 0e 40 02 ae  0a 0e 38 41 0e 30 41 0e   |8..D.@....8A.0A.|
0x1be08:    28 42 0e 20 42 0e 18 42  0e 10 42 0e 08 43 0b 00   |(B. B..B..B..C..|
0x1be18:    38 00 00 00 c4 03 00 00  c0 a8 fe ff c6 00 00 00   |8...............|
0x1be28:    00 4b 0e 10 8c 02 44 0e  18 86 03 41 0e 20 83 04   |.K....D....A. ..|
0x1be38:    02 7e 0a 0e 18 41 0e 10  42 0e 08 47 0b 50 0e 08   |.~...A..B..G.P..|
0x1be48:    c3 c6 cc 48 0e 20 83 04  86 03 8c 02 34 00 00 00   |...H. ......4...|
0x1be58:    00 04 00 00 54 a9 fe ff  c9 00 00 00 00 42 0e 10   |....T........B..|
0x1be68:    8c 02 41 0e 18 86 03 41  0e 20 83 04 02 a4 0a 0e   |..A....A. ......|
0x1be78:    18 41 0e 10 42 0e 08 41  0b 50 0e 18 41 0e 10 42   |.A..B..A.P..A..B|
0x1be88:    0e 08 00 00 28 00 00 00  38 04 00 00 ec a9 fe ff   |....(...8.......|
0x1be98:    bb 00 00 00 00 41 0e 10  86 02 41 0e 18 83 03 46   |.....A....A....F|
0x1bea8:    0e 20 02 7b 0a 0e 18 41  0e 10 41 0e 08 4b 0b 00   |. .{...A..A..K..|
0x1beb8:    20 00 00 00 64 04 00 00  80 aa fe ff 3f 00 00 00   | ...d.......?...|
0x1bec8:    00 41 0e 10 83 02 4d 0e  20 53 0a 0e 10 46 0e 08   |.A....M. S...F..|
0x1bed8:    49 0b 00 00 10 00 00 00  88 04 00 00 9c aa fe ff   |I...............|
0x1bee8:    1b 00 00 00 00 00 00 00  34 00 00 00 9c 04 00 00   |........4.......|
0x1bef8:    a8 aa fe ff 61 00 00 00  00 42 0e 10 8c 02 41 0e   |....a....B....A.|
0x1bf08:    18 86 03 44 0e 20 83 04  77 0a 0e 18 41 0e 10 42   |...D. ..w...A..B|
0x1bf18:    0e 08 47 0b 4b 0e 18 4b  0e 10 42 0e 08 00 00 00   |..G.K..K..B.....|
0x1bf28:    10 00 00 00 d4 04 00 00  e0 aa fe ff 76 00 00 00   |............v...|
0x1bf38:    00 00 00 00 10 00 00 00  e8 04 00 00 4c ab fe ff   |............L...|
0x1bf48:    66 00 00 00 00 00 00 00  10 00 00 00 fc 04 00 00   |f...............|
0x1bf58:    a8 ab fe ff 76 00 00 00  00 00 00 00 10 00 00 00   |....v...........|
0x1bf68:    10 05 00 00 14 ac fe ff  66 00 00 00 00 00 00 00   |........f.......|
0x1bf78:    10 00 00 00 24 05 00 00  70 ac fe ff 76 00 00 00   |....$...p...v...|
0x1bf88:    00 00 00 00 10 00 00 00  38 05 00 00 dc ac fe ff   |........8.......|
0x1bf98:    56 00 00 00 00 00 00 00  10 00 00 00 4c 05 00 00   |V...........L...|
0x1bfa8:    28 ad fe ff 56 00 00 00  00 00 00 00 10 00 00 00   |(...V...........|
0x1bfb8:    60 05 00 00 74 ad fe ff  56 00 00 00 00 00 00 00   |`...t...V.......|
0x1bfc8:    10 00 00 00 74 05 00 00  c0 ad fe ff 56 00 00 00   |....t.......V...|
0x1bfd8:    00 00 00 00 10 00 00 00  88 05 00 00 0c ae fe ff   |................|
0x1bfe8:    fa 00 00 00 00 00 00 00  18 00 00 00 9c 05 00 00   |................|
0x1bff8:    f8 ae fe ff 4a 00 00 00  00 41 0e 10 83 02 78 0a   |....J....A....x.|
0x1c008:    0e 08 47 0b 10 00 00 00  b8 05 00 00 2c af fe ff   |..G.........,...|
0x1c018:    56 00 00 00 00 00 00 00  10 00 00 00 cc 05 00 00   |V...............|
0x1c028:    78 af fe ff 56 00 00 00  00 00 00 00 40 00 00 00   |x...V.......@...|
0x1c038:    e0 05 00 00 c4 af fe ff  c6 00 00 00 00 02 4a 0e   |..............J.|
0x1c048:    10 8c 02 41 0e 18 86 03  41 0e 20 83 04 02 4f 0a   |...A....A. ...O.|
0x1c058:    c3 0e 18 41 c6 0e 10 42  cc 0e 08 4a 0b 41 0a 0e   |...A...B...J.A..|
0x1c068:    18 41 0e 10 42 0e 08 44  0b 50 0e 08 c3 c6 cc 00   |.A..B..D.P......|
0x1c078:    48 00 00 00 24 06 00 00  50 b0 fe ff ce 01 00 00   |H...$...P.......|
0x1c088:    00 42 0e 10 8f 02 42 0e  18 8e 03 42 0e 20 8d 04   |.B....B....B. ..|
0x1c098:    42 0e 28 8c 05 41 0e 30  86 06 41 0e 38 83 07 47   |B.(..A.0..A.8..G|
0x1c0a8:    0e e0 01 02 7c 0a 0e 38  41 0e 30 41 0e 28 42 0e   |....|..8A.0A.(B.|
0x1c0b8:    20 42 0e 18 42 0e 10 42  0e 08 49 0b 14 00 00 00   | B..B..B..I.....|
0x1c0c8:    70 06 00 00 d4 b1 fe ff  41 00 00 00 00 63 0e 10   |p.......A....c..|
0x1c0d8:    5c 0e 08 00 18 00 00 00  88 06 00 00 0c b2 fe ff   |\...............|
0x1c0e8:    61 00 00 00 00 48 0e 10  83 02 52 0a 0e 08 56 0b   |a....H....R...V.|
0x1c0f8:    28 00 00 00 a4 06 00 00  60 b2 fe ff ea 00 00 00   |(.......`.......|
0x1c108:    00 41 0e 10 86 02 41 0e  18 83 03 47 0e b0 01 02   |.A....A....G....|
0x1c118:    d9 0a 0e 18 41 0e 10 41  0e 08 41 0b 1c 00 00 00   |....A..A..A.....|
0x1c128:    d0 06 00 00 24 b3 fe ff  50 00 00 00 00 4d 0e 10   |....$...P....M..|
0x1c138:    52 0e 08 49 0e 10 63 0e  08 00 00 00 4c 00 00 00   |R..I..c.....L...|
0x1c148:    f0 06 00 00 54 b3 fe ff  69 04 00 00 00 42 0e 10   |....T...i....B..|
0x1c158:    8f 02 42 0e 18 8e 03 45  0e 20 8d 04 42 0e 28 8c   |..B....E. ..B.(.|
0x1c168:    05 44 0e 30 86 06 41 0e  38 83 07 46 0e a0 01 03   |.D.0..A.8..F....|
0x1c178:    72 01 0a 0e 38 41 0e 30  41 0e 28 42 0e 20 42 0e   |r...8A.0A.(B. B.|
0x1c188:    18 42 0e 10 42 0e 08 46  0b 00 00 00 4c 00 00 00   |.B..B..F....L...|
0x1c198:    40 07 00 00 74 b7 fe ff  01 04 00 00 00 42 0e 10   |@...t........B..|
0x1c1a8:    8f 02 42 0e 18 8e 03 45  0e 20 8d 04 42 0e 28 8c   |..B....E. ..B.(.|
0x1c1b8:    05 44 0e 30 86 06 41 0e  38 83 07 50 0e 80 41 03   |.D.0..A.8..P..A.|
0x1c1c8:    3b 02 0a 0e 38 41 0e 30  41 0e 28 42 0e 20 42 0e   |;...8A.0A.(B. B.|
0x1c1d8:    18 42 0e 10 42 0e 08 4b  0b 00 00 00 60 00 00 00   |.B..B..K....`...|
0x1c1e8:    90 07 00 00 34 bb fe ff  58 04 00 00 00 42 0e 10   |....4...X....B..|
0x1c1f8:    8f 02 42 0e 18 8e 03 45  0e 20 8d 04 42 0e 28 8c   |..B....E. ..B.(.|
0x1c208:    05 44 0e 30 86 06 41 0e  38 83 07 4a 0e 50 6a 0e   |.D.0..A.8..J.Pj.|
0x1c218:    58 48 0e 60 5a 0e 58 41  0e 50 44 0a 0e 38 44 0e   |XH.`Z.XA.PD..8D.|
0x1c228:    30 41 0e 28 42 0e 20 42  0e 18 42 0e 10 42 0e 08   |0A.(B. B..B..B..|
0x1c238:    48 0b 02 be 0e 58 48 0e  60 64 0e 58 41 0e 50 00   |H....XH.`d.XA.P.|
0x1c248:    2c 00 00 00 f4 07 00 00  30 bf fe ff 8d 01 00 00   |,.......0.......|
0x1c258:    00 41 0e 10 86 02 41 0e  18 83 03 4d 0e c0 05 03   |.A....A....M....|
0x1c268:    2b 01 0a 0e 18 41 0e 10  41 0e 08 44 0b 00 00 00   |+....A..A..D....|
0x1c278:    70 00 00 00 24 08 00 00  90 c0 fe ff 09 0a 00 00   |p...$...........|
0x1c288:    00 42 0e 10 8f 02 42 0e  18 8e 03 42 0e 20 8d 04   |.B....B....B. ..|
0x1c298:    42 0e 28 8c 05 41 0e 30  86 06 41 0e 38 83 07 4a   |B.(..A.0..A.8..J|
0x1c2a8:    0e e0 26 03 a6 01 0e e8  26 4f 0e f0 26 6d 0e e8   |..&.....&O..&m..|
0x1c2b8:    26 42 0e e0 26 03 e5 01  0a 0e 38 41 0e 30 41 0e   |&B..&.....8A.0A.|
0x1c2c8:    28 42 0e 20 42 0e 18 42  0e 10 42 0e 08 49 0b 03   |(B. B..B..B..I..|
0x1c2d8:    7e 04 0e e8 26 4d 0e f0  26 68 0e e8 26 41 0e e0   |~...&M..&h..&A..|
0x1c2e8:    26 00 00 00 28 00 00 00  98 08 00 00 2c ca fe ff   |&...(.......,...|
0x1c2f8:    85 00 00 00 00 41 0e 10  86 02 41 0e 18 83 03 52   |.....A....A....R|
0x1c308:    0e d0 40 02 69 0a 0e 18  41 0e 10 41 0e 08 41 0b   |..@.i...A..A..A.|
0x1c318:    28 00 00 00 c4 08 00 00  90 ca fe ff a7 01 00 00   |(...............|
0x1c328:    00 41 0e 10 86 02 41 0e  18 83 03 4a 0e c0 05 02   |.A....A....J....|
0x1c338:    c4 0a 0e 18 41 0e 10 41  0e 08 46 0b 3c 00 00 00   |....A..A..F.<...|
0x1c348:    f0 08 00 00 14 cc fe ff  07 03 00 00 00 50 0e 10   |.............P..|
0x1c358:    8e 02 42 0e 18 8d 03 42  0e 20 8c 04 41 0e 28 86   |..B....B. ..A.(.|
0x1c368:    05 47 0e 30 83 06 03 8c  02 0a 0e 28 41 0e 20 42   |.G.0.......(A. B|
0x1c378:    0e 18 42 0e 10 42 0e 08  41 0b 00 00 60 00 00 00   |..B..B..A...`...|
0x1c388:    30 09 00 00 e4 ce fe ff  a8 01 00 00 00 42 0e 10   |0............B..|
0x1c398:    8f 02 42 0e 18 8e 03 42  0e 20 8d 04 42 0e 28 8c   |..B....B. ..B.(.|
0x1c3a8:    05 41 0e 30 86 06 41 0e  38 83 07 44 0e 50 03 2a   |.A.0..A.8..D.P.*|
0x1c3b8:    01 0a 0e 38 41 0e 30 41  0e 28 42 0e 20 42 0e 18   |...8A.0A.(B. B..|
0x1c3c8:    42 0e 10 42 0e 08 46 0b  02 4c 0e 38 46 0e 30 41   |B..B..F..L.8F.0A|
0x1c3d8:    0e 28 42 0e 20 42 0e 18  42 0e 10 42 0e 08 00 00   |.(B. B..B..B....|
0x1c3e8:    b8 00 00 00 94 09 00 00  30 d0 fe ff da 03 00 00   |........0.......|
0x1c3f8:    00 4f 0e 10 8f 02 42 0e  18 8e 03 49 0e 20 8d 04   |.O....B....I. ..|
0x1c408:    42 0e 28 8c 05 41 0e 30  86 06 41 0e 38 83 07 44   |B.(..A.0..A.8..D|
0x1c418:    0e 70 03 17 01 0a 0e 38  41 c3 0e 30 41 c6 0e 28   |.p.....8A..0A..(|
0x1c428:    42 cc 0e 20 42 cd 0e 18  42 ce 0e 10 42 cf 0e 08   |B.. B...B...B...|
0x1c438:    4d 0b 02 53 0a 0e 38 41  0e 30 41 0e 28 42 0e 20   |M..S..8A.0A.(B. |
0x1c448:    42 0e 18 42 0e 10 42 0e  08 43 0b 03 1c 01 0a 0e   |B..B..B..C......|
0x1c458:    38 41 0e 30 41 0e 28 42  0e 20 42 0e 18 42 0e 10   |8A.0A.(B. B..B..|
0x1c468:    42 0e 08 4a 0b 02 78 0e  08 c3 c6 cc cd ce cf 48   |B..J..x........H|
0x1c478:    0e 70 83 07 86 06 8c 05  8d 04 8e 03 8f 02 02 66   |.p.............f|
0x1c488:    0e 38 46 c3 0e 30 41 c6  0e 28 42 cc 0e 20 42 cd   |.8F..0A..(B.. B.|
0x1c498:    0e 18 42 ce 0e 10 42 cf  0e 08 00 00 10 00 00 00   |..B...B.........|
0x1c4a8:    50 0a 00 00 54 d3 fe ff  76 00 00 00 00 00 00 00   |P...T...v.......|
0x1c4b8:    10 00 00 00 64 0a 00 00  c0 d3 fe ff 86 00 00 00   |....d...........|
0x1c4c8:    00 00 00 00 28 00 00 00  78 0a 00 00 3c d4 fe ff   |....(...x...<...|
0x1c4d8:    c1 00 00 00 00 41 0e 10  86 02 41 0e 18 83 03 46   |.....A....A....F|
0x1c4e8:    0e 40 02 8a 0a 0e 18 41  0e 10 41 0e 08 44 0b 00   |.@.....A..A..D..|
0x1c4f8:    2c 00 00 00 a4 0a 00 00  e0 d4 fe ff 7b 0e 00 00   |,...........{...|
0x1c508:    00 41 0e 10 86 02 43 0d  06 48 8f 03 8e 04 8d 05   |.A....C..H......|
0x1c518:    8c 06 51 83 07 03 cb 02  0a 0c 07 08 48 0b 00 00   |..Q.........H...|
0x1c528:    5c 00 00 00 d4 0a 00 00  30 e3 fe ff b4 06 00 00   |\.......0.......|
0x1c538:    00 42 0e 10 8f 02 42 0e  18 8e 03 45 0e 20 8d 04   |.B....B....E. ..|
0x1c548:    42 0e 28 8c 05 41 0e 30  86 06 41 0e 38 83 07 4a   |B.(..A.0..A.8..J|
0x1c558:    0e 80 07 02 b8 0a 0e 38  41 0e 30 41 0e 28 42 0e   |.......8A.0A.(B.|
0x1c568:    20 42 0e 18 42 0e 10 42  0e 08 47 0b 03 1d 02 0e   | B..B..B..G.....|
0x1c578:    88 07 47 0e 90 07 75 0e  88 07 49 0e 80 07 00 00   |..G...u...I.....|
0x1c588:    10 00 00 00 34 0b 00 00  90 e9 fe ff 46 00 00 00   |....4.......F...|
0x1c598:    00 00 00 00 10 00 00 00  48 0b 00 00 cc e9 fe ff   |........H.......|
0x1c5a8:    36 00 00 00 00 00 00 00  10 00 00 00 5c 0b 00 00   |6...........\...|
0x1c5b8:    f8 e9 fe ff 36 00 00 00  00 00 00 00 10 00 00 00   |....6...........|
0x1c5c8:    70 0b 00 00 24 ea fe ff  36 00 00 00 00 00 00 00   |p...$...6.......|
0x1c5d8:    10 00 00 00 84 0b 00 00  50 ea fe ff 46 00 00 00   |........P...F...|
0x1c5e8:    00 00 00 00 10 00 00 00  98 0b 00 00 8c ea fe ff   |................|
0x1c5f8:    36 00 00 00 00 00 00 00  10 00 00 00 ac 0b 00 00   |6...............|
0x1c608:    b8 ea fe ff 36 00 00 00  00 00 00 00 10 00 00 00   |....6...........|
0x1c618:    c0 0b 00 00 e4 ea fe ff  36 00 00 00 00 00 00 00   |........6.......|
0x1c628:    10 00 00 00 d4 0b 00 00  10 eb fe ff 36 00 00 00   |............6...|
0x1c638:    00 00 00 00 10 00 00 00  e8 0b 00 00 3c eb fe ff   |............<...|
0x1c648:    36 00 00 00 00 00 00 00  10 00 00 00 fc 0b 00 00   |6...............|
0x1c658:    68 eb fe ff 46 00 00 00  00 00 00 00 10 00 00 00   |h...F...........|
0x1c668:    10 0c 00 00 a4 eb fe ff  46 00 00 00 00 00 00 00   |........F.......|
0x1c678:    10 00 00 00 24 0c 00 00  e0 eb fe ff 86 00 00 00   |....$...........|
0x1c688:    00 00 00 00 10 00 00 00  38 0c 00 00 5c ec fe ff   |........8...\...|
0x1c698:    76 00 00 00 00 00 00 00  10 00 00 00 4c 0c 00 00   |v...........L...|
0x1c6a8:    c8 ec fe ff 76 00 00 00  00 00 00 00 10 00 00 00   |....v...........|
0x1c6b8:    60 0c 00 00 34 ed fe ff  86 00 00 00 00 00 00 00   |`...4...........|
0x1c6c8:    10 00 00 00 74 0c 00 00  b0 ed fe ff 76 00 00 00   |....t.......v...|
0x1c6d8:    00 00 00 00 10 00 00 00  88 0c 00 00 1c ee fe ff   |................|
0x1c6e8:    76 00 00 00 00 00 00 00  34 00 00 00 9c 0c 00 00   |v.......4.......|
0x1c6f8:    88 ee fe ff 65 00 00 00  00 42 0e 10 8c 02 41 0e   |....e....B....A.|
0x1c708:    18 86 03 44 0e 20 83 04  02 47 0a 0e 18 49 0e 10   |...D. ...G...I..|
0x1c718:    42 0e 08 47 0b 41 0e 18  41 0e 10 42 0e 08 00 00   |B..G.A..A..B....|
0x1c728:    34 00 00 00 d4 0c 00 00  c0 ee fe ff 65 00 00 00   |4...........e...|
0x1c738:    00 42 0e 10 8c 02 41 0e  18 86 03 44 0e 20 83 04   |.B....A....D. ..|
0x1c748:    02 46 0a 0e 18 49 0e 10  42 0e 08 48 0b 41 0e 18   |.F...I..B..H.A..|
0x1c758:    41 0e 10 42 0e 08 00 00  10 00 00 00 0c 0d 00 00   |A..B............|
0x1c768:    f8 ee fe ff 86 00 00 00  00 00 00 00 10 00 00 00   |................|
0x1c778:    20 0d 00 00 74 ef fe ff  76 00 00 00 00 00 00 00   | ...t...v.......|
0x1c788:    10 00 00 00 34 0d 00 00  e0 ef fe ff 76 00 00 00   |....4.......v...|
0x1c798:    00 00 00 00 34 00 00 00  48 0d 00 00 4c f0 fe ff   |....4...H...L...|
0x1c7a8:    80 00 00 00 00 42 0e 10  8c 02 41 0e 18 86 03 44   |.....B....A....D|
0x1c7b8:    0e 20 83 04 02 47 0a 0e  18 47 0e 10 42 0e 08 49   |. ...G...G..B..I|
0x1c7c8:    0b 5c 0e 18 41 0e 10 42  0e 08 00 00 34 00 00 00   |.\..A..B....4...|
0x1c7d8:    80 0d 00 00 94 f0 fe ff  80 00 00 00 00 42 0e 10   |.............B..|
0x1c7e8:    8c 02 41 0e 18 86 03 44  0e 20 83 04 02 47 0a 0e   |..A....D. ...G..|
0x1c7f8:    18 47 0e 10 42 0e 08 49  0b 5c 0e 18 41 0e 10 42   |.G..B..I.\..A..B|
0x1c808:    0e 08 00 00 3c 00 00 00  b8 0d 00 00 dc f0 fe ff   |....<...........|
0x1c818:    ae 00 00 00 00 02 42 0e  10 8c 02 41 0e 18 86 03   |......B....A....|
0x1c828:    44 0e 20 83 04 02 4d 0a  c3 0e 18 41 c6 0e 10 42   |D. ...M....A...B|
0x1c838:    cc 0e 08 49 0b 41 0e 18  41 0e 10 42 0e 08 44 c3   |...I.A..A..B..D.|
0x1c848:    c6 cc 00 00 3c 00 00 00  f8 0d 00 00 4c f1 fe ff   |....<.......L...|
0x1c858:    ae 00 00 00 00 02 42 0e  10 8c 02 41 0e 18 86 03   |......B....A....|
0x1c868:    44 0e 20 83 04 02 4d 0a  c3 0e 18 41 c6 0e 10 42   |D. ...M....A...B|
0x1c878:    cc 0e 08 49 0b 41 0e 18  41 0e 10 42 0e 08 44 c3   |...I.A..A..B..D.|
0x1c888:    c6 cc 00 00 40 00 00 00  38 0e 00 00 bc f1 fe ff   |....@...8.......|
0x1c898:    c6 00 00 00 00 02 4a 0e  10 8c 02 41 0e 18 86 03   |......J....A....|
0x1c8a8:    41 0e 20 83 04 02 4f 0a  c3 0e 18 41 c6 0e 10 42   |A. ...O....A...B|
0x1c8b8:    cc 0e 08 4a 0b 41 0a 0e  18 41 0e 10 42 0e 08 44   |...J.A...A..B..D|
0x1c8c8:    0b 50 0e 08 c3 c6 cc 00  20 00 00 00 7c 0e 00 00   |.P...... ...|...|
0x1c8d8:    48 f2 fe ff 9b 06 00 00  00 42 0e 10 8c 02 41 0e   |H........B....A.|
0x1c8e8:    18 86 03 44 0e 20 83 04  49 0e a0 01 68 00 00 00   |...D. ..I...h...|
0x1c8f8:    a0 0e 00 00 94 75 fe ff  bb 19 00 00 00 42 0e 10   |.....u.......B..|
0x1c908:    8f 02 42 0e 18 8e 03 42  0e 20 8d 04 42 0e 28 8c   |..B....B. ..B.(.|
0x1c918:    05 41 0e 30 86 06 41 0e  38 83 07 49 0e 90 01 03   |.A.0..A.8..I....|
0x1c928:    c9 03 0e 98 01 50 0e a0  01 58 0e 98 01 41 0e 90   |.....P...X...A..|
0x1c938:    01 03 88 01 0a 0e 98 01  50 0e a0 01 5c 0b 03 93   |........P...\...|
0x1c948:    08 0a 0e 38 41 0e 30 41  0e 28 42 0e 20 42 0e 18   |...8A.0A.(B. B..|
0x1c958:    42 0e 10 42 0e 08 41 0b  4c 00 00 00 0c 0f 00 00   |B..B..A.L.......|
0x1c968:    58 f8 fe ff ef 00 00 00  00 42 0e 10 8f 02 42 0e   |X........B....B.|
0x1c978:    18 8e 03 47 0e 20 8d 04  42 0e 28 8c 05 44 0e 30   |...G. ..B.(..D.0|
0x1c988:    86 06 41 0e 38 83 07 5c  0e 40 02 61 0a 0e 38 44   |..A.8..\.@.a..8D|
0x1c998:    0e 30 41 0e 28 42 0e 20  42 0e 18 42 0e 10 42 0e   |.0A.(B. B..B..B.|
0x1c9a8:    08 44 0b 00 00 00 00 00  10 00 00 00 5c 0f 00 00   |.D..........\...|
0x1c9b8:    f8 f8 fe ff 0a 00 00 00  00 00 00 00 48 00 00 00   |............H...|
0x1c9c8:    70 0f 00 00 f4 f8 fe ff  16 01 00 00 00 42 0e 10   |p............B..|
0x1c9d8:    8f 02 42 0e 18 8e 03 45  0e 20 8d 04 42 0e 28 8c   |..B....E. ..B.(.|
0x1c9e8:    05 44 0e 30 86 06 41 0e  38 83 07 47 0e 60 02 de   |.D.0..A.8..G.`..|
0x1c9f8:    0a 0e 38 41 0e 30 41 0e  28 42 0e 20 42 0e 18 42   |..8A.0A.(B. B..B|
0x1ca08:    0e 10 42 0e 08 41 0b 00  28 00 00 00 bc 0f 00 00   |..B..A..(.......|
0x1ca18:    c8 f9 fe ff 73 00 00 00  00 46 0e 10 8c 02 46 0e   |....s....F....F.|
0x1ca28:    18 86 03 44 0e 20 83 04  7f 0a 0e 18 41 0e 10 42   |...D. ......A..B|
0x1ca38:    0e 08 4e 0b 5c 00 00 00  e8 0f 00 00 1c fa fe ff   |..N.\...........|
0x1ca48:    20 01 00 00 00 42 0e 10  8f 02 42 0e 18 8e 03 45   | ....B....B....E|
0x1ca58:    0e 20 8d 04 42 0e 28 8c  05 43 0e 30 86 06 41 0e   |. ..B.(..C.0..A.|
0x1ca68:    38 83 07 56 0e 40 02 d3  0a 0e 38 41 0e 30 41 0e   |8..V.@....8A.0A.|
0x1ca78:    28 42 0e 20 42 0e 18 42  0e 10 42 0e 08 46 0b 44   |(B. B..B..B..F.D|
0x1ca88:    0e 38 46 0e 30 41 0e 28  42 0e 20 42 0e 18 42 0e   |.8F.0A.(B. B..B.|
0x1ca98:    10 42 0e 08 48 00 00 00  48 10 00 00 dc fa fe ff   |.B..H...H.......|
0x1caa8:    6d 00 00 00 00 42 0e 10  8f 02 42 0e 18 8e 03 45   |m....B....B....E|
0x1cab8:    0e 20 8d 04 42 0e 28 8c  05 44 0e 30 86 06 41 0e   |. ..B.(..D.0..A.|
0x1cac8:    38 83 07 50 0e 40 5a 0a  0e 38 41 0e 30 41 0e 28   |8..P.@Z..8A.0A.(|
0x1cad8:    42 0e 20 42 0e 18 42 0e  10 42 0e 08 41 0b 00 00   |B. B..B..B..A...|
0x1cae8:    3c 00 00 00 94 10 00 00  00 fb fe ff 4d 00 00 00   |<...........M...|
0x1caf8:    00 42 0e 10 8e 02 42 0e  18 8d 03 42 0e 20 8c 04   |.B....B....B. ..|
0x1cb08:    41 0e 28 86 05 41 0e 30  83 06 7a 0e 28 44 0e 20   |A.(..A.0..z.(D. |
0x1cb18:    42 0e 18 42 0e 10 42 0e  08 00 00 00 00 00 00 00   |B..B..B.........|
0x1cb28:    4c 00 00 00 d4 10 00 00  10 fb fe ff 36 06 00 00   |L...........6...|
0x1cb38:    00 42 0e 10 8f 02 42 0e  18 8e 03 42 0e 20 8d 04   |.B....B....B. ..|
0x1cb48:    42 0e 28 8c 05 41 0e 30  86 06 41 0e 38 83 07 47   |B.(..A.0..A.8..G|
0x1cb58:    0e a0 02 03 30 02 0a 0e  38 41 0e 30 41 0e 28 42   |....0...8A.0A.(B|
0x1cb68:    0e 20 42 0e 18 42 0e 10  42 0e 08 45 0b 00 00 00   |. B..B..B..E....|
0x1cb78:    10 00 00 00 24 11 00 00  00 01 ff ff 08 00 00 00   |....$...........|
0x1cb88:    00 00 00 00 10 00 00 00  38 11 00 00 fc 00 ff ff   |........8.......|
0x1cb98:    08 00 00 00 00 00 00 00  2c 00 00 00 4c 11 00 00   |........,...L...|
0x1cba8:    f8 00 ff ff a4 00 00 00  00 41 0e 10 86 02 41 0e   |.........A....A.|
0x1cbb8:    18 83 03 44 0e 20 7a 0a  0e 18 41 0e 10 41 0e 08   |...D. z...A..A..|
0x1cbc8:    41 0b 00 00 00 00 00 00  30 00 00 00 7c 11 00 00   |A.......0...|...|
0x1cbd8:    78 01 ff ff 5d 00 00 00  00 41 0e 10 86 02 41 0e   |x...]....A....A.|
0x1cbe8:    18 83 03 49 0e 20 7c 0a  0e 18 44 0e 10 41 0e 08   |...I. |...D..A..|
0x1cbf8:    44 0b 44 0e 18 47 0e 10  41 0e 08 00 28 00 00 00   |D.D..G..A...(...|
0x1cc08:    b0 11 00 00 a4 01 ff ff  5a 00 00 00 00 41 0e 10   |........Z....A..|
0x1cc18:    86 02 41 0e 18 83 03 47  0e 20 02 41 0a 0e 18 44   |..A....G. .A...D|
0x1cc28:    0e 10 41 0e 08 41 0b 00  10 00 00 00 dc 11 00 00   |..A..A..........|
0x1cc38:    d8 01 ff ff 5c 00 00 00  00 00 00 00 28 00 00 00   |....\.......(...|
0x1cc48:    f0 11 00 00 24 02 ff ff  47 00 00 00 00 41 0e 10   |....$...G....A..|
0x1cc58:    83 02 5a 0a 0e 08 45 0b  5d 0a 0e 08 43 0b 46 0e   |..Z...E.]...C.F.|
0x1cc68:    08 00 00 00 00 00 00 00  3c 00 00 00 1c 12 00 00   |........<.......|
0x1cc78:    48 02 ff ff b0 00 00 00  00 50 0e 10 86 02 41 0e   |H........P....A.|
0x1cc88:    18 83 03 52 0e 20 58 0e  18 41 0e 10 41 0e 08 43   |...R. X..A..A..C|
0x1cc98:    c3 c6 48 0e 20 83 03 86  02 02 4f 0a 0e 18 41 0e   |..H. .....O...A.|
0x1cca8:    10 41 0e 08 47 0b 00 00  5c 00 00 00 5c 12 00 00   |.A..G...\...\...|
0x1ccb8:    b8 02 ff ff 87 00 00 00  00 47 0e 10 8d 02 42 0e   |.........G....B.|
0x1ccc8:    18 8c 03 44 0e 20 86 04  41 0e 28 83 05 4f 0e 30   |...D. ..A.(..O.0|
0x1ccd8:    7c 0a 0e 28 44 c3 0e 20  41 c6 0e 18 42 cc 0e 10   ||..(D.. A...B...|
0x1cce8:    42 cd 0e 08 4e 0b 44 0e  28 41 0e 20 41 0e 18 42   |B...N.D.(A. A..B|
0x1ccf8:    0e 10 42 0e 08 46 c3 c6  cc cd 42 0e 30 83 05 86   |..B..F....B.0...|
0x1cd08:    04 8c 03 8d 02 00 00 00  1c 00 00 00 bc 12 00 00   |................|
0x1cd18:    e8 02 ff ff 56 00 00 00  00 44 0e 30 02 4c 0a 0e   |....V....D.0.L..|
0x1cd28:    08 41 0b 00 00 00 00 00  10 00 00 00 dc 12 00 00   |.A..............|
0x1cd38:    28 03 ff ff 83 01 00 00  00 00 00 00 10 00 00 00   |(...............|
0x1cd48:    f0 12 00 00 a4 04 ff ff  08 00 00 00 00 00 00 00   |................|
0x1cd58:    1c 00 00 00 04 13 00 00  a0 04 ff ff 18 00 00 00   |................|
0x1cd68:    00 44 0e 10 4e 0a 0e 08  41 0b 00 00 00 00 00 00   |.D..N...A.......|
0x1cd78:    4c 00 00 00 24 13 00 00  a0 04 ff ff cd 00 00 00   |L...$...........|
0x1cd88:    00 42 0e 10 8f 02 42 0e  18 8e 03 45 0e 20 8d 04   |.B....B....E. ..|
0x1cd98:    42 0e 28 8c 05 44 0e 30  86 06 41 0e 38 83 07 47   |B.(..D.0..A.8..G|
0x1cda8:    0e 50 02 9b 0a 0e 38 44  0e 30 41 0e 28 42 0e 20   |.P....8D.0A.(B. |
0x1cdb8:    42 0e 18 42 0e 10 42 0e  08 41 0b 00 00 00 00 00   |B..B..B..A......|
0x1cdc8:    10 00 00 00 74 13 00 00  20 05 ff ff c3 00 00 00   |....t... .......|
0x1cdd8:    00 00 00 00 48 00 00 00  88 13 00 00 dc 05 ff ff   |....H...........|
0x1cde8:    10 04 00 00 00 42 0e 10  8f 02 42 0e 18 8e 03 42   |.....B....B....B|
0x1cdf8:    0e 20 8d 04 42 0e 28 8c  05 41 0e 30 86 06 41 0e   |. ..B.(..A.0..A.|
0x1ce08:    38 83 07 4a 0e 70 03 5f  02 0a 0e 38 41 0e 30 41   |8..J.p._...8A.0A|
0x1ce18:    0e 28 42 0e 20 42 0e 18  42 0e 10 42 0e 08 43 0b   |.(B. B..B..B..C.|
0x1ce28:    24 00 00 00 d4 13 00 00  a0 09 ff ff 5f 00 00 00   |$..........._...|
0x1ce38:    00 41 0e 10 83 02 4c 0e  30 02 4b 0a 0e 10 41 0e   |.A....L.0.K...A.|
0x1ce48:    08 41 0b 00 00 00 00 00  1c 00 00 00 fc 13 00 00   |.A..............|
0x1ce58:    d8 09 ff ff 59 00 00 00  00 44 0e 10 77 0a 0e 08   |....Y....D..w...|
0x1ce68:    45 0b 58 0e 08 00 00 00  10 00 00 00 1c 14 00 00   |E.X.............|
0x1ce78:    18 0a ff ff 93 00 00 00  00 00 00 00 10 00 00 00   |................|
0x1ce88:    30 14 00 00 a4 0a ff ff  10 00 00 00 00 00 00 00   |0...............|
0x1ce98:    10 00 00 00 44 14 00 00  a0 0a ff ff 07 00 00 00   |....D...........|
0x1cea8:    00 00 00 00 18 00 00 00  58 14 00 00 9c 0a ff ff   |........X.......|
0x1ceb8:    22 00 00 00 00 41 0e 10  83 02 5b 0a 0e 08 41 0b   |"....A....[...A.|
0x1cec8:    5c 00 00 00 74 14 00 00  b0 0a ff ff 1e 01 00 00   |\...t...........|
0x1ced8:    00 42 0e 10 8e 02 42 0e  18 8d 03 45 0e 20 8c 04   |.B....B....E. ..|
0x1cee8:    41 0e 28 86 05 44 0e 30  83 06 02 a1 0a 0e 28 44   |A.(..D.0......(D|
0x1cef8:    0e 20 42 0e 18 42 0e 10  42 0e 08 47 0b 71 0a 0e   |. B..B..B..G.q..|
0x1cf08:    28 41 0e 20 42 0e 18 42  0e 10 42 0e 08 48 0b 53   |(A. B..B..B..H.S|
0x1cf18:    0e 28 44 0e 20 42 0e 18  42 0e 10 42 0e 08 00 00   |.(D. B..B..B....|
0x1cf28:    10 00 00 00 d4 14 00 00  70 0b ff ff 77 00 00 00   |........p...w...|
0x1cf38:    00 00 00 00 5c 00 00 00  e8 14 00 00 dc 0b ff ff   |....\...........|
0x1cf48:    40 01 00 00 00 42 0e 10  8f 02 42 0e 18 8e 03 42   |@....B....B....B|
0x1cf58:    0e 20 8d 04 42 0e 28 8c  05 41 0e 30 86 06 41 0e   |. ..B.(..A.0..A.|
0x1cf68:    38 83 07 44 0e 40 02 ee  0a 0e 38 46 0e 30 41 0e   |8..D.@....8F.0A.|
0x1cf78:    28 42 0e 20 42 0e 18 42  0e 10 42 0e 08 45 0b 63   |(B. B..B..B..E.c|
0x1cf88:    0e 38 43 0e 30 41 0e 28  42 0e 20 42 0e 18 42 0e   |.8C.0A.(B. B..B.|
0x1cf98:    10 42 0e 08 10 00 00 00  48 15 00 00 bc 0c ff ff   |.B......H.......|
0x1cfa8:    05 00 00 00 00 00 00 00  10 00 00 00 5c 15 00 00   |............\...|
0x1cfb8:    b8 0c ff ff 05 00 00 00  00 00 00 00 10 00 00 00   |................|
0x1cfc8:    70 15 00 00 b4 0c ff ff  05 00 00 00 00 00 00 00   |p...............|
0x1cfd8:    10 00 00 00 84 15 00 00  b0 0c ff ff 49 00 00 00   |............I...|
0x1cfe8:    00 00 00 00 10 00 00 00  98 15 00 00 ec 0c ff ff   |................|
0x1cff8:    58 00 00 00 00 00 00 00  38 00 00 00 ac 15 00 00   |X.......8.......|
0x1d008:    38 0d ff ff 47 01 00 00  00 42 0e 10 8d 02 42 0e   |8...G....B....B.|
0x1d018:    18 8c 03 44 0e 20 86 04  41 0e 28 83 05 46 0e 30   |...D. ..A.(..F.0|
0x1d028:    02 cd 0a 0e 28 47 0e 20  41 0e 18 42 0e 10 42 0e   |....(G. A..B..B.|
0x1d038:    08 58 0b 00 34 00 00 00  e8 15 00 00 4c 0e ff ff   |.X..4.......L...|
0x1d048:    5b 00 00 00 00 42 0e 10  8c 02 41 0e 18 86 03 44   |[....B....A....D|
0x1d058:    0e 20 83 04 79 0a 0e 18  44 0e 10 42 0e 08 4a 0b   |. ..y...D..B..J.|
0x1d068:    44 0e 18 41 0e 10 45 0e  08 00 00 00 10 00 00 00   |D..A..E.........|
0x1d078:    20 16 00 00 74 0e ff ff  41 00 00 00 00 7c 0e 10   | ...t...A....|..|
0x1d088:    30 00 00 00 34 16 00 00  b0 0e ff ff 72 00 00 00   |0...4.......r...|
0x1d098:    00 41 0e 10 86 02 41 0e  18 83 03 4a 0e 20 02 53   |.A....A....J. .S|
0x1d0a8:    0a 0e 18 41 0e 10 41 0e  08 47 0b 47 0e 18 41 0e   |...A..A..G.G..A.|
0x1d0b8:    10 41 0e 08 10 00 00 00  68 16 00 00 fc 0e ff ff   |.A......h.......|
0x1d0c8:    65 00 00 00 00 00 00 00  48 00 00 00 7c 16 00 00   |e.......H...|...|
0x1d0d8:    58 0f ff ff 6a 00 00 00  00 42 0e 10 8f 02 42 0e   |X...j....B....B.|
0x1d0e8:    18 8e 03 42 0e 20 8d 04  42 0e 28 8c 05 41 0e 30   |...B. ..B.(..A.0|
0x1d0f8:    86 06 41 0e 38 83 07 44  0e 40 02 4a 0a 0e 38 44   |..A.8..D.@.J..8D|
0x1d108:    0e 30 41 0e 28 42 0e 20  42 0e 18 42 0e 10 42 0e   |.0A.(B. B..B..B.|
0x1d118:    08 41 0b 00 10 00 00 00  c8 16 00 00 7c 0f ff ff   |.A..........|...|
0x1d128:    31 00 00 00 00 00 00 00  10 00 00 00 dc 16 00 00   |1...............|
0x1d138:    a8 0f ff ff 20 00 00 00  00 00 00 00 48 00 00 00   |.... .......H...|
0x1d148:    f0 16 00 00 b4 0f ff ff  b4 01 00 00 00 42 0e 10   |.............B..|
0x1d158:    8f 02 42 0e 18 8e 03 49  0e 20 8d 04 42 0e 28 8c   |..B....I. ..B.(.|
0x1d168:    05 44 0e 30 86 06 41 0e  38 83 07 52 0e 40 02 d8   |.D.0..A.8..R.@..|
0x1d178:    0a 0e 38 44 0e 30 41 0e  28 42 0e 20 42 0e 18 42   |..8D.0A.(B. B..B|
0x1d188:    0e 10 42 0e 08 45 0b 00  28 00 00 00 3c 17 00 00   |..B..E..(...<...|
0x1d198:    28 11 ff ff 90 00 00 00  00 42 0e 10 8c 02 41 0e   |(........B....A.|
0x1d1a8:    18 86 03 44 0e 20 83 04  02 85 0e 18 41 0e 10 42   |...D. ......A..B|
0x1d1b8:    0e 08 00 00 28 00 00 00  68 17 00 00 8c 11 ff ff   |....(...h.......|
0x1d1c8:    d6 00 00 00 00 42 0e 10  8c 02 41 0e 18 86 03 44   |.....B....A....D|
0x1d1d8:    0e 20 83 04 02 c4 0e 18  44 0e 10 42 0e 08 00 00   |. ......D..B....|
0x1d1e8:    34 00 00 00 94 17 00 00  40 12 ff ff 3e 02 00 00   |4.......@...>...|
0x1d1f8:    00 42 0e 10 8c 02 41 0e  18 86 03 44 0e 20 83 04   |.B....A....D. ..|
0x1d208:    44 0e 80 01 03 91 01 0a  0e 20 41 0e 18 41 0e 10   |D........ A..A..|
0x1d218:    42 0e 08 48 0b 00 00 00  38 00 00 00 cc 17 00 00   |B..H....8.......|
0x1d228:    48 14 ff ff 84 02 00 00  00 42 0e 10 8d 02 42 0e   |H........B....B.|
0x1d238:    18 8c 03 41 0e 20 86 04  41 0e 28 83 05 44 0e 40   |...A. ..A.(..D.@|
0x1d248:    02 5a 0a 0e 28 41 0e 20  41 0e 18 42 0e 10 42 0e   |.Z..(A. A..B..B.|
0x1d258:    08 46 0b 00 20 00 00 00  08 18 00 00 9c 16 ff ff   |.F.. ...........|
0x1d268:    59 00 00 00 00 41 0e 10  83 02 47 0e 20 7c 0a 0e   |Y....A....G. |..|
0x1d278:    10 41 0e 08 4b 0b 00 00  34 00 00 00 2c 18 00 00   |.A..K...4...,...|
0x1d288:    d8 16 ff ff 03 02 00 00  00 42 0e 10 8c 02 41 0e   |.........B....A.|
0x1d298:    18 86 03 46 0e 20 83 04  47 0e 30 02 4a 0a 0e 20   |...F. ..G.0.J.. |
0x1d2a8:    41 0e 18 41 0e 10 42 0e  08 42 0b 00 00 00 00 00   |A..A..B..B......|
0x1d2b8:    24 00 00 00 64 18 00 00  b0 18 ff ff 27 00 00 00   |$...d.......'...|
0x1d2c8:    00 41 0e 10 86 02 41 0e  18 83 03 4a 0e 20 52 0e   |.A....A....J. R.|
0x1d2d8:    18 44 0e 10 41 0e 08 00  10 00 00 00 8c 18 00 00   |.D..A...........|
0x1d2e8:    b8 18 ff ff 0d 00 00 00  00 00 00 00 14 00 00 00   |................|
0x1d2f8:    a0 18 00 00 b4 18 ff ff  2e 00 00 00 00 5e 0e 10   |.............^..|
0x1d308:    4f 0e 08 00 14 00 00 00  b8 18 00 00 cc 18 ff ff   |O...............|
0x1d318:    33 00 00 00 00 5e 0e 10  54 0e 08 00 18 00 00 00   |3....^..T.......|
0x1d328:    d0 18 00 00 f4 18 ff ff  15 00 00 00 00 41 0e 10   |.............A..|
0x1d338:    83 02 4f 0e 08 00 00 00  10 00 00 00 ec 18 00 00   |..O.............|
0x1d348:    f8 18 ff ff c7 00 00 00  00 00 00 00 a4 00 00 00   |................|
0x1d358:    00 19 00 00 b4 19 ff ff  07 0a 00 00 00 42 0e 10   |.............B..|
0x1d368:    8f 02 42 0e 18 8e 03 44  0e 20 8d 04 42 0e 28 8c   |..B....D. ..B.(.|
0x1d378:    05 44 0e 30 86 06 41 0e  38 83 07 54 0e d0 01 03   |.D.0..A.8..T....|
0x1d388:    7e 01 0e e0 01 6e 0e d8  01 41 0e d0 01 03 40 01   |~....n...A....@.|
0x1d398:    0e e0 01 75 0e d8 01 41  0e d0 01 02 ea 0a 0e 38   |...u...A.......8|
0x1d3a8:    41 0e 30 41 0e 28 42 0e  20 42 0e 18 42 0e 10 42   |A.0A.(B. B..B..B|
0x1d3b8:    0e 08 46 0b 03 2c 01 0e  e0 01 52 0e d8 01 41 0e   |..F..,....R...A.|
0x1d3c8:    d0 01 55 0e e0 01 4d 0e  d8 01 42 0e d0 01 03 51   |..U...M...B....Q|
0x1d3d8:    01 0e e0 01 77 0e d8 01  41 0e d0 01 5d 0e e0 01   |....w...A...]...|
0x1d3e8:    71 0e d8 01 45 0e d0 01  63 0e e0 01 4c 0e d8 01   |q...E...c...L...|
0x1d3f8:    42 0e d0 01 38 00 00 00  a8 19 00 00 1c 23 ff ff   |B...8........#..|
0x1d408:    e6 01 00 00 00 42 0e 10  8d 02 42 0e 18 8c 03 44   |.....B....B....D|
0x1d418:    0e 20 86 04 41 0e 28 83  05 4a 0e 40 02 7a 0a 0e   |. ..A.(..J.@.z..|
0x1d428:    28 41 0e 20 41 0e 18 42  0e 10 42 0e 08 45 0b 00   |(A. A..B..B..E..|
0x1d438:    2c 00 00 00 e4 19 00 00  d0 24 ff ff 94 00 00 00   |,........$......|
0x1d448:    00 42 0e 10 8c 02 41 0e  18 86 03 41 0e 20 83 04   |.B....A....A. ..|
0x1d458:    02 87 0a 0e 18 41 0e 10  42 0e 08 42 0b 00 00 00   |.....A..B..B....|
0x1d468:    34 00 00 00 14 1a 00 00  40 25 ff ff f9 00 00 00   |4.......@%......|
0x1d478:    00 42 0e 10 8c 02 41 0e  18 86 03 44 0e 20 83 04   |.B....A....D. ..|
0x1d488:    7c 0a 0e 18 41 0e 10 42  0e 08 4a 0b 78 0a 0e 18   ||...A..B..J.x...|
0x1d498:    43 0e 10 42 0e 08 43 0b  2c 00 00 00 4c 1a 00 00   |C..B..C.,...L...|
0x1d4a8:    08 26 ff ff 94 00 00 00  00 42 0e 10 8c 02 41 0e   |.&.......B....A.|
0x1d4b8:    18 86 03 41 0e 20 83 04  02 87 0a 0e 18 41 0e 10   |...A. .......A..|
0x1d4c8:    42 0e 08 42 0b 00 00 00  34 00 00 00 7c 1a 00 00   |B..B....4...|...|
0x1d4d8:    78 26 ff ff f9 00 00 00  00 42 0e 10 8c 02 41 0e   |x&.......B....A.|
0x1d4e8:    18 86 03 44 0e 20 83 04  7c 0a 0e 18 41 0e 10 42   |...D. ..|...A..B|
0x1d4f8:    0e 08 4a 0b 78 0a 0e 18  43 0e 10 42 0e 08 43 0b   |..J.x...C..B..C.|
0x1d508:    14 00 00 00 b4 1a 00 00  40 27 ff ff 9c 00 00 00   |........@'......|
0x1d518:    00 00 00 00 00 00 00 00  14 00 00 00 cc 1a 00 00   |................|
0x1d528:    c8 27 ff ff 42 00 00 00  00 00 00 00 00 00 00 00   |.'..B...........|
0x1d538:    48 00 00 00 e4 1a 00 00  00 28 ff ff c4 03 00 00   |H........(......|
0x1d548:    00 42 0e 10 8f 02 42 0e  18 8e 03 45 0e 20 8d 04   |.B....B....E. ..|
0x1d558:    42 0e 28 8c 05 44 0e 30  86 06 41 0e 38 83 07 4a   |B.(..D.0..A.8..J|
0x1d568:    0e 70 03 2e 01 0a 0e 38  44 0e 30 41 0e 28 42 0e   |.p.....8D.0A.(B.|
0x1d578:    20 42 0e 18 42 0e 10 42  0e 08 4b 0b 48 00 00 00   | B..B..B..K.H...|
0x1d588:    30 1b 00 00 84 2b ff ff  9d 00 00 00 00 42 0e 10   |0....+.......B..|
0x1d598:    8f 02 42 0e 18 8e 03 45  0e 20 8d 04 42 0e 28 8c   |..B....E. ..B.(.|
0x1d5a8:    05 44 0e 30 86 06 41 0e  38 83 07 47 0e 50 02 59   |.D.0..A.8..G.P.Y|
0x1d5b8:    0a 0e 38 44 0e 30 41 0e  28 42 0e 20 42 0e 18 42   |..8D.0A.(B. B..B|
0x1d5c8:    0e 10 42 0e 08 43 0b 00  48 00 00 00 7c 1b 00 00   |..B..C..H...|...|
0x1d5d8:    d8 2b ff ff bf 01 00 00  00 42 0e 10 8f 02 42 0e   |.+.......B....B.|
0x1d5e8:    18 8e 03 42 0e 20 8d 04  42 0e 28 8c 05 45 0e 30   |...B. ..B.(..E.0|
0x1d5f8:    86 06 41 0e 38 83 07 47  0e 70 03 2e 01 0a 0e 38   |..A.8..G.p.....8|
0x1d608:    41 0e 30 41 0e 28 42 0e  20 42 0e 18 42 0e 10 42   |A.0A.(B. B..B..B|
0x1d618:    0e 08 43 0b 28 00 00 00  c8 1b 00 00 4c 2d ff ff   |..C.(.......L-..|
0x1d628:    23 00 00 00 00 41 0e 10  86 02 41 0e 18 83 03 49   |#....A....A....I|
0x1d638:    0e 20 49 0e 18 46 0e 10  41 0e 08 00 00 00 00 00   |. I..F..A.......|
0x1d648:    60 00 00 00 f4 1b 00 00  50 2d ff ff 3a 02 00 00   |`.......P-..:...|
0x1d658:    00 42 0e 10 8f 02 42 0e  18 8e 03 42 0e 20 8d 04   |.B....B....B. ..|
0x1d668:    42 0e 28 8c 05 44 0e 30  86 06 41 0e 38 83 07 47   |B.(..D.0..A.8..G|
0x1d678:    0e 70 70 0a 0e 38 41 0e  30 41 0e 28 42 0e 20 42   |.pp..8A.0A.(B. B|
0x1d688:    0e 18 42 0e 10 42 0e 08  42 0b 02 d8 0a 0e 38 41   |..B..B..B.....8A|
0x1d698:    0e 30 44 0e 28 4e 0e 20  42 0e 18 42 0e 10 42 0e   |.0D.(N. B..B..B.|
0x1d6a8:    08 4f 0b 00 10 00 00 00  58 1c 00 00 2c 2f ff ff   |.O......X...,/..|
0x1d6b8:    0f 00 00 00 00 00 00 00  28 00 00 00 6c 1c 00 00   |........(...l...|
0x1d6c8:    28 2f ff ff 41 00 00 00  00 45 0e 10 8c 02 41 0e   |(/..A....E....A.|
0x1d6d8:    18 86 03 44 0e 20 83 04  73 0e 18 41 0e 10 42 0e   |...D. ..s..A..B.|
0x1d6e8:    08 00 00 00 28 00 00 00  98 1c 00 00 4c 2f ff ff   |....(.......L/..|
0x1d6f8:    41 00 00 00 00 45 0e 10  8c 02 41 0e 18 86 03 44   |A....E....A....D|
0x1d708:    0e 20 83 04 73 0e 18 41  0e 10 42 0e 08 00 00 00   |. ..s..A..B.....|
0x1d718:    6c 00 00 00 c4 1c 00 00  70 2f ff ff e7 18 00 00   |l.......p/......|
0x1d728:    00 42 0e 10 8f 02 42 0e  18 8e 03 45 0e 20 8d 04   |.B....B....E. ..|
0x1d738:    42 0e 28 8c 05 48 0e 30  86 06 41 0e 38 83 07 4d   |B.(..H.0..A.8..M|
0x1d748:    0e 90 0a 02 eb 0a 0e 38  41 0e 30 41 0e 28 42 0e   |.......8A.0A.(B.|
0x1d758:    20 42 0e 18 42 0e 10 42  0e 08 4a 0b 03 3d 04 0e   | B..B..B..J..=..|
0x1d768:    98 0a 47 0e a0 0a 6d 0e  98 0a 42 0e 90 0a 03 dd   |..G...m...B.....|
0x1d778:    0d 0e 98 0a 44 0e a0 0a  5a 0e 98 0a 42 0e 90 0a   |....D...Z...B...|
0x1d788:    24 00 00 00 34 1d 00 00  f0 47 ff ff 46 00 00 00   |$...4....G..F...|
0x1d798:    00 44 0e 20 57 0e 28 42  0e 30 4e 0e 28 41 0e 20   |.D. W.(B.0N.(A. |
0x1d7a8:    54 0a 0e 08 41 0b 00 00  1c 00 00 00 5c 1d 00 00   |T...A.......\...|
0x1d7b8:    18 48 ff ff 99 00 00 00  00 44 0e 10 83 02 02 72   |.H.......D.....r|
0x1d7c8:    0a 0e 08 41 0b 00 00 00  40 00 00 00 7c 1d 00 00   |...A....@...|...|
0x1d7d8:    98 48 ff ff e7 00 00 00  00 41 0e 10 86 02 41 0e   |.H.......A....A.|
0x1d7e8:    18 83 03 49 0e 20 6e 0a  0e 18 41 0e 10 41 0e 08   |...I. n...A..A..|
0x1d7f8:    45 0b 02 4a 0a 0e 18 41  0e 10 41 0e 08 44 0b 02   |E..J...A..A..D..|
0x1d808:    54 0e 18 41 0e 10 41 0e  08 00 00 00 74 00 00 00   |T..A..A.....t...|
0x1d818:    c0 1d 00 00 44 49 ff ff  34 12 00 00 00 42 0e 10   |....DI..4....B..|
0x1d828:    8f 02 42 0e 18 8e 03 45  0e 20 8d 04 42 0e 28 8c   |..B....E. ..B.(.|
0x1d838:    05 44 0e 30 86 06 41 0e  38 83 07 53 0e f0 01 03   |.D.0..A.8..S....|
0x1d848:    81 0b 0e f8 01 4a 0e 80  02 44 0e 88 02 45 0e 90   |.....J...D...E..|
0x1d858:    02 5f 0e f0 01 64 0a 0e  38 41 0e 30 41 0e 28 42   |._...d..8A.0A.(B|
0x1d868:    0e 20 42 0e 18 42 0e 10  42 0e 08 44 0b 03 99 05   |. B..B..B..D....|
0x1d878:    0e f8 01 4d 0e 80 02 44  0e 88 02 47 0e 90 02 5b   |...M...D...G...[|
0x1d888:    0e f0 01 00 68 00 00 00  38 1e 00 00 0c 5b ff ff   |....h...8....[..|
0x1d898:    ab 01 00 00 00 42 0e 10  8f 02 42 0e 18 8e 03 45   |.....B....B....E|
0x1d8a8:    0e 20 8d 04 42 0e 28 8c  05 44 0e 30 86 06 41 0e   |. ..B.(..D.0..A.|
0x1d8b8:    38 83 07 47 0e 60 02 99  0e 68 5f 0e 70 46 0e 78   |8..G.`...h_.pF.x|
0x1d8c8:    42 0e 80 01 59 0e 60 02  40 0e 68 4b 0e 70 43 0e   |B...Y.`.@.hK.pC.|
0x1d8d8:    78 45 0e 80 01 5e 0e 60  4c 0a 0e 38 44 0e 30 41   |xE...^.`L..8D.0A|
0x1d8e8:    0e 28 42 0e 20 42 0e 18  42 0e 10 42 0e 08 46 0b   |.(B. B..B..B..F.|
0x1d8f8:    28 00 00 00 a4 1e 00 00  50 5c ff ff 36 00 00 00   |(.......P\..6...|
0x1d908:    00 42 0e 10 8c 02 41 0e  18 86 03 41 0e 20 83 04   |.B....A....A. ..|
0x1d918:    6e 0e 18 41 0e 10 42 0e  08 00 00 00 10 00 00 00   |n..A..B.........|
0x1d928:    d0 1e 00 00 64 5c ff ff  11 00 00 00 00 00 00 00   |....d\..........|
0x1d938:    10 00 00 00 e4 1e 00 00  70 5c ff ff 11 00 00 00   |........p\......|
0x1d948:    00 00 00 00 10 00 00 00  f8 1e 00 00 7c 5c ff ff   |............|\..|
0x1d958:    35 00 00 00 00 00 00 00  10 00 00 00 0c 1f 00 00   |5...............|
0x1d968:    a8 5c ff ff 15 00 00 00  00 00 00 00 10 00 00 00   |.\..............|
0x1d978:    20 1f 00 00 b4 5c ff ff  30 00 00 00 00 6b 0e 10   | ....\..0....k..|
0x1d988:    50 00 00 00 34 1f 00 00  d0 5c ff ff 74 00 00 00   |P...4....\..t...|
0x1d998:    00 42 0e 10 8f 02 42 0e  18 8e 03 49 0e 20 8d 04   |.B....B....I. ..|
0x1d9a8:    42 0e 28 8c 05 44 0e 30  86 06 41 0e 38 83 07 4d   |B.(..D.0..A.8..M|
0x1d9b8:    0e 50 5f 0e 58 47 0e 60  46 0e 68 44 0e 70 58 0e   |.P_.XG.`F.hD.pX.|
0x1d9c8:    38 41 0e 30 41 0e 28 42  0e 20 42 0e 18 42 0e 10   |8A.0A.(B. B..B..|
0x1d9d8:    42 0e 08 00 68 00 00 00  88 1f 00 00 fc 5c ff ff   |B...h........\..|
0x1d9e8:    e3 00 00 00 00 42 0e 10  8f 02 42 0e 18 8e 03 49   |.....B....B....I|
0x1d9f8:    0e 20 8d 04 42 0e 28 8c  05 44 0e 30 86 06 41 0e   |. ..B.(..D.0..A.|
0x1da08:    38 83 07 4d 0e 70 65 0e  78 4d 0e 80 01 46 0e 88   |8..M.pe.xM...F..|
0x1da18:    01 42 0e 90 01 5e 0e 70  56 0e 78 43 0e 80 01 43   |.B...^.pV.xC...C|
0x1da28:    0e 88 01 56 0e 90 01 52  0e 70 5b 0e 38 41 0e 30   |...V...R.p[.8A.0|
0x1da38:    41 0e 28 42 0e 20 42 0e  18 42 0e 10 42 0e 08 00   |A.(B. B..B..B...|
0x1da48:    10 00 00 00 f4 1f 00 00  80 5d ff ff 0a 00 00 00   |.........]......|
0x1da58:    00 00 00 00 28 00 00 00  08 20 00 00 7c 5d ff ff   |....(.... ..|]..|
0x1da68:    93 00 00 00 00 48 0e 10  8c 02 48 0e 18 86 03 41   |.....H....H....A|
0x1da78:    0e 20 83 04 02 74 0e 18  4b 0e 10 42 0e 08 00 00   |. ...t..K..B....|
0x1da88:    10 00 00 00 34 20 00 00  f0 5d ff ff 13 00 00 00   |....4 ...]......|
0x1da98:    00 00 00 00 10 00 00 00  48 20 00 00 fc 5d ff ff   |........H ...]..|
0x1daa8:    0c 00 00 00 00 00 00 00  10 00 00 00 5c 20 00 00   |............\ ..|
0x1dab8:    f8 5d ff ff 18 00 00 00  00 00 00 00 10 00 00 00   |.]..............|
0x1dac8:    70 20 00 00 04 5e ff ff  14 00 00 00 00 00 00 00   |p ...^..........|
0x1dad8:    18 00 00 00 84 20 00 00  10 5e ff ff 8e 00 00 00   |..... ...^......|
0x1dae8:    00 44 0e 50 02 7f 0a 0e  08 41 0b 00 18 00 00 00   |.D.P.....A......|
0x1daf8:    a0 20 00 00 84 5e ff ff  8a 00 00 00 00 44 0e 50   |. ...^.......D.P|
0x1db08:    02 7b 0a 0e 08 41 0b 00  10 00 00 00 bc 20 00 00   |.{...A....... ..|
0x1db18:    f8 5e ff ff 0c 00 00 00  00 00 00 00 10 00 00 00   |.^..............|
0x1db28:    d0 20 00 00 f4 5e ff ff  0f 00 00 00 00 00 00 00   |. ...^..........|
0x1db38:    18 00 00 00 e4 20 00 00  f0 5e ff ff 98 00 00 00   |..... ...^......|
0x1db48:    00 44 0e 50 02 8e 0a 0e  08 41 0b 00 10 00 00 00   |.D.P.....A......|
0x1db58:    00 21 00 00 74 5f ff ff  10 00 00 00 00 00 00 00   |.!..t_..........|
0x1db68:    10 00 00 00 14 21 00 00  70 5f ff ff 11 00 00 00   |.....!..p_......|
0x1db78:    00 00 00 00 10 00 00 00  28 21 00 00 7c 5f ff ff   |........(!..|_..|
0x1db88:    0a 00 00 00 00 00 00 00  18 00 00 00 3c 21 00 00   |............<!..|
0x1db98:    78 5f ff ff 8e 00 00 00  00 44 0e 50 02 7f 0a 0e   |x_.......D.P....|
0x1dba8:    08 41 0b 00 18 00 00 00  58 21 00 00 ec 5f ff ff   |.A......X!..._..|
0x1dbb8:    91 00 00 00 00 44 0e 50  02 82 0a 0e 08 41 0b 00   |.....D.P.....A..|
0x1dbc8:    10 00 00 00 74 21 00 00  70 60 ff ff 0c 00 00 00   |....t!..p`......|
0x1dbd8:    00 00 00 00 10 00 00 00  88 21 00 00 6c 60 ff ff   |.........!..l`..|
0x1dbe8:    17 00 00 00 00 00 00 00  10 00 00 00 9c 21 00 00   |.............!..|
0x1dbf8:    78 60 ff ff 13 00 00 00  00 00 00 00 10 00 00 00   |x`..............|
0x1dc08:    b0 21 00 00 84 60 ff ff  0c 00 00 00 00 00 00 00   |.!...`..........|
0x1dc18:    10 00 00 00 c4 21 00 00  80 60 ff ff 14 00 00 00   |.....!...`......|
0x1dc28:    00 00 00 00 10 00 00 00  d8 21 00 00 8c 60 ff ff   |.........!...`..|
0x1dc38:    13 00 00 00 00 00 00 00  14 00 00 00 ec 21 00 00   |.............!..|
0x1dc48:    98 60 ff ff 18 00 00 00  00 00 00 00 00 00 00 00   |.`..............|
0x1dc58:    4c 00 00 00 04 22 00 00  a0 60 ff ff 67 01 00 00   |L...."...`..g...|
0x1dc68:    00 42 0e 10 8f 02 42 0e  18 8e 03 42 0e 20 8d 04   |.B....B....B. ..|
0x1dc78:    42 0e 28 8c 05 44 0e 30  86 06 41 0e 38 83 07 4c   |B.(..D.0..A.8..L|
0x1dc88:    0e f0 02 02 5e 0a 0e 38  41 0e 30 41 0e 28 42 0e   |....^..8A.0A.(B.|
0x1dc98:    20 42 0e 18 42 0e 10 42  0e 08 47 0b 00 00 00 00   | B..B..B..G.....|
0x1dca8:    10 01 00 00 54 22 00 00  c0 61 ff ff 0c 04 00 00   |....T"...a......|
0x1dcb8:    00 42 0e 10 8f 02 42 0e  18 8e 03 42 0e 20 8d 04   |.B....B....B. ..|
0x1dcc8:    42 0e 28 8c 05 44 0e 30  86 06 41 0e 38 83 07 4a   |B.(..D.0..A.8..J|
0x1dcd8:    0e 60 02 fd 0e 68 57 0e  70 42 0e 78 42 0e 80 01   |.`...hW.pB.xB...|
0x1dce8:    42 0e 88 01 42 0e 90 01  53 0e 60 44 0a 0e 38 41   |B...B...S.`D..8A|
0x1dcf8:    0e 30 41 0e 28 42 0e 20  42 0e 18 42 0e 10 42 0e   |.0A.(B. B..B..B.|
0x1dd08:    08 44 0b 02 50 0a 0e 68  48 0b 5a 0a 0e 38 47 0e   |.D..P..hH.Z..8G.|
0x1dd18:    30 41 0e 28 42 0e 20 42  0e 18 42 0e 10 42 0e 08   |0A.(B. B..B..B..|
0x1dd28:    56 0b 5e 0a 0e 38 52 0e  30 41 0e 28 42 0e 20 42   |V.^..8R.0A.(B. B|
0x1dd38:    0e 18 42 0e 10 42 0e 08  47 0b 62 0a 0e 38 50 0e   |..B..B..G.b..8P.|
0x1dd48:    30 41 0e 28 42 0e 20 42  0e 18 42 0e 10 42 0e 08   |0A.(B. B..B..B..|
0x1dd58:    55 0b 66 0e 68 42 0e 70  5c 0e 68 41 0e 60 44 0a   |U.f.hB.p\.hA.`D.|
0x1dd68:    0e 38 41 0e 30 41 0e 28  42 0e 20 42 0e 18 42 0e   |.8A.0A.(B. B..B.|
0x1dd78:    10 42 0e 08 45 0b 68 0a  0e 68 48 0b 72 0e 68 45   |.B..E.h..hH.r.hE|
0x1dd88:    0e 70 42 0e 78 42 0e 80  01 5e 0e 60 44 0a 0e 38   |.pB.xB...^.`D..8|
0x1dd98:    41 0e 30 41 0e 28 42 0e  20 42 0e 18 42 0e 10 42   |A.0A.(B. B..B..B|
0x1dda8:    0e 08 41 0b 79 0a 0e 68  42 0e 70 42 0e 78 42 0e   |..A.y..hB.pB.xB.|
0x1ddb8:    80 01 51 0b 10 00 00 00  68 23 00 00 bc 64 ff ff   |..Q.....h#...d..|
0x1ddc8:    20 00 00 00 00 00 00 00  18 00 00 00 7c 23 00 00   | ...........|#..|
0x1ddd8:    c8 64 ff ff 78 00 00 00  00 44 0e 70 02 60 0a 0e   |.d..x....D.p.`..|
0x1dde8:    08 41 0b 00 28 00 00 00  98 23 00 00 2c 65 ff ff   |.A..(....#..,e..|
0x1ddf8:    d5 00 00 00 00 41 0e 10  86 02 41 0e 18 83 03 50   |.....A....A....P|
0x1de08:    0e d0 01 02 ab 0a 0e 18  41 0e 10 41 0e 08 41 0b   |........A..A..A.|
0x1de18:    1c 00 00 00 c4 23 00 00  e0 65 ff ff 80 00 00 00   |.....#...e......|
0x1de28:    00 41 0e 10 83 02 02 7a  0e 08 00 00 00 00 00 00   |.A.....z........|
0x1de38:    18 00 00 00 e4 23 00 00  40 66 ff ff 1a 00 00 00   |.....#..@f......|
0x1de48:    00 41 0e 10 83 02 53 0a  0e 08 41 0b 10 00 00 00   |.A....S...A.....|
0x1de58:    00 24 00 00 44 66 ff ff  24 00 00 00 00 5f 0e 10   |.$..Df..$...._..|
0x1de68:    10 00 00 00 14 24 00 00  60 66 ff ff 02 00 00 00   |.....$..`f......|
0x1de78:    00 00 00 00 20 00 00 00  28 24 00 00 5c 66 ff ff   |.... ...($..\f..|
0x1de88:    36 00 00 00 00 44 0e 10  83 02 5d 0a 0e 08 47 0b   |6....D....]...G.|
0x1de98:    48 0a 0e 08 41 0b 00 00  10 00 00 00 4c 24 00 00   |H...A.......L$..|
0x1dea8:    78 66 ff ff 24 00 00 00  00 5f 0e 10 14 00 00 00   |xf..$...._......|
0x1deb8:    60 24 00 00 94 66 ff ff  82 00 00 00 00 02 5f 0e   |`$...f........_.|
0x1dec8:    10 49 0e 08 14 00 00 00  78 24 00 00 0c 67 ff ff   |.I......x$...g..|
0x1ded8:    4a 00 00 00 00 02 45 0e  10 00 00 00 18 00 00 00   |J.....E.........|
0x1dee8:    90 24 00 00 44 67 ff ff  17 00 00 00 00 41 0e 10   |.$..Dg.......A..|
0x1def8:    83 02 51 0e 08 00 00 00  18 00 00 00 ac 24 00 00   |..Q..........$..|
0x1df08:    48 67 ff ff 2e 00 00 00  00 47 0e 10 61 0a 0e 08   |Hg.......G..a...|
0x1df18:    41 0b 00 00 24 00 00 00  c8 24 00 00 5c 67 ff ff   |A...$....$..\g..|
0x1df28:    28 00 00 00 00 41 0e 10  86 02 41 0e 18 83 03 4d   |(....A....A....M|
0x1df38:    0e 20 49 0e 18 47 0e 10  41 0e 08 00 18 00 00 00   |. I..G..A.......|
0x1df48:    f0 24 00 00 64 67 ff ff  13 00 00 00 00 41 0e 10   |.$..dg.......A..|
0x1df58:    83 02 50 0e 08 00 00 00  14 00 00 00 0c 25 00 00   |..P..........%..|
0x1df68:    68 67 ff ff 35 00 00 00  00 4b 0e 10 00 00 00 00   |hg..5....K......|
0x1df78:    48 00 00 00 24 25 00 00  90 67 ff ff 00 01 00 00   |H...$%...g......|
0x1df88:    00 42 0e 10 8f 02 42 0e  18 8e 03 45 0e 20 8d 04   |.B....B....E. ..|
0x1df98:    42 0e 28 8c 05 44 0e 30  86 06 41 0e 38 83 07 4e   |B.(..D.0..A.8..N|
0x1dfa8:    0e 50 02 9d 0a 0e 38 41  0e 30 41 0e 28 42 0e 20   |.P....8A.0A.(B. |
0x1dfb8:    42 0e 18 42 0e 10 42 0e  08 4b 0b 00 18 00 00 00   |B..B..B..K......|
0x1dfc8:    70 25 00 00 44 68 ff ff  21 00 00 00 00 44 0e 18   |p%..Dh..!....D..|
0x1dfd8:    42 0e 20 5a 0e 08 00 00  1c 00 00 00 8c 25 00 00   |B. Z.........%..|
0x1dfe8:    58 68 ff ff 2f 00 00 00  00 41 0e 10 83 02 55 0a   |Xh../....A....U.|
0x1dff8:    0e 08 4a 0b 00 00 00 00  44 00 00 00 ac 25 00 00   |..J.....D....%..|
0x1e008:    68 68 ff ff d1 00 00 00  00 42 0e 10 8e 02 42 0e   |hh.......B....B.|
0x1e018:    18 8d 03 4c 0e 20 8c 04  41 0e 28 86 05 41 0e 30   |...L. ..A.(..A.0|
0x1e028:    83 06 46 0e 40 02 77 0a  0e 30 41 0e 28 41 0e 20   |..F.@.w..0A.(A. |
0x1e038:    42 0e 18 42 0e 10 42 0e  08 49 0b 00 00 00 00 00   |B..B..B..I......|
0x1e048:    4c 00 00 00 f4 25 00 00  00 69 ff ff 1c 04 00 00   |L....%...i......|
0x1e058:    00 42 0e 10 8f 02 42 0e  18 8e 03 42 0e 20 8d 04   |.B....B....B. ..|
0x1e068:    42 0e 28 8c 05 41 0e 30  86 06 41 0e 38 83 07 44   |B.(..A.0..A.8..D|
0x1e078:    0e 60 02 e9 0a 0e 38 41  0e 30 41 0e 28 42 0e 20   |.`....8A.0A.(B. |
0x1e088:    42 0e 18 42 0e 10 42 0e  08 47 0b 00 00 00 00 00   |B..B..B..G......|
0x1e098:    24 00 00 00 44 26 00 00  d0 6c ff ff ac 00 00 00   |$...D&...l......|
0x1e0a8:    00 42 0e 10 8d 02 42 0e  18 8c 03 44 0e 20 86 04   |.B....B....D. ..|
0x1e0b8:    41 0e 28 83 05 47 0e 40  4c 00 00 00 6c 26 00 00   |A.(..G.@L...l&..|
0x1e0c8:    58 6d ff ff 1c 04 00 00  00 42 0e 10 8f 02 42 0e   |Xm.......B....B.|
0x1e0d8:    18 8e 03 42 0e 20 8d 04  42 0e 28 8c 05 41 0e 30   |...B. ..B.(..A.0|
0x1e0e8:    86 06 41 0e 38 83 07 44  0e 60 02 e9 0a 0e 38 41   |..A.8..D.`....8A|
0x1e0f8:    0e 30 41 0e 28 42 0e 20  42 0e 18 42 0e 10 42 0e   |.0A.(B. B..B..B.|
0x1e108:    08 47 0b 00 00 00 00 00  24 00 00 00 bc 26 00 00   |.G......$....&..|
0x1e118:    28 71 ff ff 62 00 00 00  00 43 0e 10 83 02 4a 0a   |(q..b....C....J.|
0x1e128:    0e 08 43 0b 79 0a 0e 08  47 0b 51 0e 08 00 00 00   |..C.y...G.Q.....|
0x1e138:    18 00 00 00 e4 26 00 00  70 71 ff ff 14 00 00 00   |.....&..pq......|
0x1e148:    00 41 0e 10 83 02 4e 0e  08 00 00 00 18 00 00 00   |.A....N.........|
0x1e158:    00 27 00 00 74 71 ff ff  14 00 00 00 00 41 0e 10   |.'..tq.......A..|
0x1e168:    83 02 4e 0e 08 00 00 00  1c 00 00 00 1c 27 00 00   |..N..........'..|
0x1e178:    78 71 ff ff 14 00 00 00  00 41 0e 10 83 02 4e 0e   |xq.......A....N.|
0x1e188:    08 00 00 00 00 00 00 00  3c 00 00 00 3c 27 00 00   |........<...<'..|
0x1e198:    78 71 ff ff 83 00 00 00  00 42 0e 10 8d 02 42 0e   |xq.......B....B.|
0x1e1a8:    18 8c 03 44 0e 20 86 04  41 0e 28 83 05 4a 0e 40   |...D. ..A.(..J.@|
0x1e1b8:    02 64 0a 0e 28 41 0e 20  41 0e 18 42 0e 10 42 0e   |.d..(A. A..B..B.|
0x1e1c8:    08 41 0b 00 00 00 00 00  10 00 00 00 7c 27 00 00   |.A..........|'..|
0x1e1d8:    c8 71 ff ff 3f 00 00 00  00 4b 0e 10 10 00 00 00   |.q..?....K......|
0x1e1e8:    90 27 00 00 f4 71 ff ff  16 00 00 00 00 00 00 00   |.'...q..........|
0x1e1f8:    10 00 00 00 a4 27 00 00  00 72 ff ff 16 00 00 00   |.....'...r......|
0x1e208:    00 00 00 00 2c 00 00 00  b8 27 00 00 0c 72 ff ff   |....,....'...r..|
0x1e218:    83 00 00 00 00 45 0e 10  8c 02 41 0e 18 86 03 41   |.....E....A....A|
0x1e228:    0e 20 83 04 02 62 0a 0e  18 41 0e 10 42 0e 08 44   |. ...b...A..B..D|
0x1e238:    0b 00 00 00 10 00 00 00  e8 27 00 00 6c 72 ff ff   |.........'..lr..|
0x1e248:    11 00 00 00 00 00 00 00  10 00 00 00 fc 27 00 00   |.............'..|
0x1e258:    78 72 ff ff 15 00 00 00  00 00 00 00 3c 00 00 00   |xr..........<...|
0x1e268:    10 28 00 00 84 72 ff ff  eb 00 00 00 00 42 0e 10   |.(...r.......B..|
0x1e278:    8e 02 42 0e 18 8d 03 44  0e 20 8c 04 41 0e 28 86   |..B....D. ..A.(.|
0x1e288:    05 41 0e 30 83 06 02 bd  0a 0e 28 41 0e 20 42 0e   |.A.0......(A. B.|
0x1e298:    18 42 0e 10 42 0e 08 42  0b 00 00 00 10 00 00 00   |.B..B..B........|
0x1e2a8:    50 28 00 00 34 73 ff ff  38 00 00 00 00 00 00 00   |P(..4s..8.......|
0x1e2b8:    34 00 00 00 64 28 00 00  60 73 ff ff 6a 00 00 00   |4...d(..`s..j...|
0x1e2c8:    00 42 0e 10 8c 02 41 0e  18 86 03 44 0e 20 83 04   |.B....A....D. ..|
0x1e2d8:    7c 0a 0e 18 41 0e 10 42  0e 08 4a 0b 51 0a 0e 18   ||...A..B..J.Q...|
0x1e2e8:    41 0e 10 42 0e 08 41 0b  14 00 00 00 9c 28 00 00   |A..B..A......(..|
0x1e2f8:    98 73 ff ff 2a 00 00 00  00 00 00 00 00 00 00 00   |.s..*...........|
0x1e308:    10 00 00 00 b4 28 00 00  b0 73 ff ff 2c 00 00 00   |.....(...s..,...|
0x1e318:    00 00 00 00 18 00 00 00  c8 28 00 00 cc 73 ff ff   |.........(...s..|
0x1e328:    2a 00 00 00 00 46 0e 10  83 02 5b 0e 08 47 c3 00   |*....F....[..G..|
0x1e338:    38 00 00 00 e4 28 00 00  e0 73 ff ff 5d 00 00 00   |8....(...s..]...|
0x1e348:    00 42 0e 10 8d 02 42 0e  18 8c 03 41 0e 20 86 04   |.B....B....A. ..|
0x1e358:    41 0e 28 83 05 47 0e 30  75 0a 0e 28 44 0e 20 41   |A.(..G.0u..(D. A|
0x1e368:    0e 18 42 0e 10 42 0e 08  45 0b 00 00 34 00 00 00   |..B..B..E...4...|
0x1e378:    20 29 00 00 04 74 ff ff  8f 00 00 00 00 45 0e 10   | )...t.......E..|
0x1e388:    8c 02 41 0e 18 86 03 41  0e 20 83 04 02 58 0a 0e   |..A....A. ...X..|
0x1e398:    18 41 0e 10 42 0e 08 46  0b 63 0e 18 41 0e 10 42   |.A..B..F.c..A..B|
0x1e3a8:    0e 08 00 00 48 00 00 00  58 29 00 00 5c 74 ff ff   |....H...X)..\t..|
0x1e3b8:    36 01 00 00 00 42 0e 10  8f 02 42 0e 18 8e 03 47   |6....B....B....G|
0x1e3c8:    0e 20 8d 04 42 0e 28 8c  05 41 0e 30 86 06 41 0e   |. ..B.(..A.0..A.|
0x1e3d8:    38 83 07 44 0e 40 02 a1  0a 0e 38 41 0e 30 41 0e   |8..D.@....8A.0A.|
0x1e3e8:    28 42 0e 20 42 0e 18 42  0e 10 42 0e 08 42 0b 00   |(B. B..B..B..B..|
0x1e3f8:    50 00 00 00 a4 29 00 00  50 75 ff ff df 00 00 00   |P....)..Pu......|
0x1e408:    00 42 0e 10 8c 02 41 0e  18 86 03 44 0e 20 83 04   |.B....A....D. ..|
0x1e418:    4b 0e 30 02 6f 0a 0e 20  44 0e 18 41 0e 10 42 0e   |K.0.o.. D..A..B.|
0x1e428:    08 48 0b 5a 0a 0e 20 44  0e 18 41 0e 10 42 0e 08   |.H.Z.. D..A..B..|
0x1e438:    47 0b 54 0a 0e 20 44 0e  18 41 0e 10 42 0e 08 45   |G.T.. D..A..B..E|
0x1e448:    0b 00 00 00 10 00 00 00  f8 29 00 00 dc 75 ff ff   |.........)...u..|
0x1e458:    0c 00 00 00 00 00 00 00  5c 00 00 00 0c 2a 00 00   |........\....*..|
0x1e468:    d8 75 ff ff a3 00 00 00  00 42 0e 10 8d 02 42 0e   |.u.......B....B.|
0x1e478:    18 8c 03 41 0e 20 86 04  41 0e 28 83 05 47 0e 30   |...A. ..A.(..G.0|
0x1e488:    02 41 0a 0e 28 44 0e 20  41 0e 18 42 0e 10 42 0e   |.A..(D. A..B..B.|
0x1e498:    08 49 0b 52 0a 0e 28 43  0e 20 41 0e 18 42 0e 10   |.I.R..(C. A..B..|
0x1e4a8:    42 0e 08 46 0b 44 0a 0e  28 47 0e 20 41 0e 18 42   |B..F.D..(G. A..B|
0x1e4b8:    0e 10 42 0e 08 45 0b 00  34 00 00 00 6c 2a 00 00   |..B..E..4...l*..|
0x1e4c8:    28 76 ff ff 41 01 00 00  00 42 0e 10 8c 02 41 0e   |(v..A....B....A.|
0x1e4d8:    18 86 03 41 0e 20 83 04  47 0e 70 02 8b 0a 0e 20   |...A. ..G.p.... |
0x1e4e8:    41 0e 18 41 0e 10 42 0e  08 46 0b 00 00 00 00 00   |A..A..B..F......|
0x1e4f8:    14 00 00 00 a4 2a 00 00  40 77 ff ff 28 00 00 00   |.....*..@w..(...|
0x1e508:    00 00 00 00 00 00 00 00  4c 00 00 00 bc 2a 00 00   |........L....*..|
0x1e518:    58 77 ff ff 7d 00 00 00  00 42 0e 10 8c 02 41 0e   |Xw..}....B....A.|
0x1e528:    18 86 03 44 0e 20 83 04  69 0a 0e 18 41 0e 10 42   |...D. ..i...A..B|
0x1e538:    0e 08 45 0b 55 0a 0e 18  41 0e 10 42 0e 08 48 0b   |..E.U...A..B..H.|
0x1e548:    41 0a 0e 18 46 0e 10 42  0e 08 47 0b 49 0e 18 41   |A...F..B..G.I..A|
0x1e558:    0e 10 42 0e 08 00 00 00  1c 00 00 00 0c 2b 00 00   |..B..........+..|
0x1e568:    88 77 ff ff 18 00 00 00  00 44 0e 10 4e 0a 0e 08   |.w.......D..N...|
0x1e578:    41 0b 00 00 00 00 00 00  14 00 00 00 2c 2b 00 00   |A...........,+..|
0x1e588:    88 77 ff ff 36 00 00 00  00 00 00 00 00 00 00 00   |.w..6...........|
0x1e598:    4c 00 00 00 44 2b 00 00  b0 77 ff ff 4e 04 00 00   |L...D+...w..N...|
0x1e5a8:    00 42 0e 10 8f 02 42 0e  18 8e 03 47 0e 20 8d 04   |.B....B....G. ..|
0x1e5b8:    42 0e 28 8c 05 41 0e 30  86 06 41 0e 38 83 07 47   |B.(..A.0..A.8..G|
0x1e5c8:    0e e0 01 02 b5 0a 0e 38  41 0e 30 41 0e 28 42 0e   |.......8A.0A.(B.|
0x1e5d8:    20 42 0e 18 42 0e 10 42  0e 08 4b 0b 00 00 00 00   | B..B..B..K.....|
0x1e5e8:    34 00 00 00 94 2b 00 00  b0 7b ff ff 7b 00 00 00   |4....+...{..{...|
0x1e5f8:    00 42 0e 10 8c 02 41 0e  18 86 03 41 0e 20 83 04   |.B....A....A. ..|
0x1e608:    7d 0a 0e 18 41 0e 10 42  0e 08 44 0b 60 0a 0e 18   |}...A..B..D.`...|
0x1e618:    41 0e 10 42 0e 08 45 0b  1c 00 00 00 cc 2b 00 00   |A..B..E......+..|
0x1e628:    f8 7b ff ff 40 00 00 00  00 44 0e 10 83 02 5a 0a   |.{..@....D....Z.|
0x1e638:    0e 08 4a 0b 53 0e 08 00  2c 00 00 00 ec 2b 00 00   |..J.S...,....+..|
0x1e648:    18 7c ff ff 57 00 00 00  00 63 0e 10 8c 02 41 0e   |.|..W....c....A.|
0x1e658:    18 86 03 44 0e 20 83 04  6b 0e 18 41 0e 10 42 0e   |...D. ..k..A..B.|
0x1e668:    08 00 00 00 00 00 00 00  44 00 00 00 1c 2c 00 00   |........D....,..|
0x1e678:    48 7c ff ff 65 00 00 00  00 42 0e 10 8f 02 42 0e   |H|..e....B....B.|
0x1e688:    18 8e 03 45 0e 20 8d 04  42 0e 28 8c 05 48 0e 30   |...E. ..B.(..H.0|
0x1e698:    86 06 48 0e 38 83 07 4d  0e 40 72 0e 38 41 0e 30   |..H.8..M.@r.8A.0|
0x1e6a8:    41 0e 28 42 0e 20 42 0e  18 42 0e 10 42 0e 08 00   |A.(B. B..B..B...|
0x1e6b8:    14 00 00 00 64 2c 00 00  70 7c ff ff 02 00 00 00   |....d,..p|......|
0x1e6c8:    00 00 00 00 00 00 00 00  10 00 00 00 7c 2c 00 00   |............|,..|
0x1e6d8:    68 7c ff ff 29 00 00 00  00 00 00 00 00 00 00 00   |h|..)...........|
0x1e6e8:    ??                                                 |?               |
; section: .init_array
0x21eff0:   50 59 00 00 00 00 00 00  10                        |PY.......       |
; section: .fini_array
0x21eff8:   10 59 00 00 00 00 00 00  30                        |.Y......0       |
; section: .data.rel.ro
0x21f000:   30 65 00 00 00 00 00 00  70 6c 00 00 00 00 00 00   |0e......pl......|
0x21f010:   40 65 00 00 00 00 00 00  30 6d 00 00 00 00 00 00   |@e......0m......|
0x21f020:   70 60 00 00 00 00 00 00  d0 6c 00 00 00 00 00 00   |p`.......l......|
0x21f030:   80 60 00 00 00 00 00 00  90 6d 00 00 00 00 00 00   |.`.......m......|
0x21f040:   f0 b5 00 00 00 00 00 00  a0 b9 00 00 00 00 00 00   |................|
0x21f050:   80 b5 00 00 00 00 00 00  f0 b8 00 00 00 00 00 00   |................|
0x21f060:   70 b8 00 00 00 00 00 00  50 ba 00 00 00 00 00 00   |p.......P.......|
0x21f070:   f0 b7 00 00 00 00 00 00  00 70 00 00 00 00 00 00   |.........p......|
0x21f080:   c0 64 00 00 00 00 00 00  90 6a 00 00 00 00 00 00   |.d.......j......|
0x21f090:   f0 64 00 00 00 00 00 00  80 6b 00 00 00 00 00 00   |.d.......k......|
0x21f0a0:   f0 5f 00 00 00 00 00 00  00 6b 00 00 00 00 00 00   |._.......k......|
0x21f0b0:   30 60 00 00 00 00 00 00  f0 6b 00 00 00 00 00 00   |0`.......k......|
0x21f0c0:   60 65 00 00 00 00 00 00  a0 6f 00 00 00 00 00 00   |`e.......o......|
0x21f0d0:   50 65 00 00 00 00 00 00  40 6f 00 00 00 00 00 00   |Pe......@o......|
0x21f0e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f0f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f100:   80 b0 00 00 00 00 00 00  70 b3 00 00 00 00 00 00   |........p.......|
0x21f110:   b0 af 00 00 00 00 00 00  80 b4 00 00 00 00 00 00   |................|
0x21f120:   00 b1 00 00 00 00 00 00  10 6a 00 00 00 00 00 00   |.........j......|
0x21f130:   80 b1 00 00 00 00 00 00  70 b7 00 00 00 00 00 00   |........p.......|
0x21f140:   20 af 00 00 00 00 00 00  f0 b3 00 00 00 00 00 00   | ...............|
0x21f150:   30 b0 00 00 00 00 00 00  60 b2 00 00 00 00 00 00   |0.......`.......|
0x21f160:   10 b2 00 00 00 00 00 00  60 b6 00 00 00 00 00 00   |........`.......|
0x21f170:   c0 b1 00 00 00 00 00 00  80 98 00 00 00 00 00 00   |................|
0x21f180:   f0 af 00 00 00 00 00 00  00 b5 00 00 00 00 00 00   |................|
0x21f190:   70 af 00 00 00 00 00 00  f0 b2 00 00 00 00 00 00   |p...............|
0x21f1a0:   40 b1 00 00 00 00 00 00  f0 b6 00 00 00 00 00 00   |@...............|
0x21f1b0:   c0 b0 00 00 00 00 00 00  00 98 00 00 00 00 00 00   |................|
0x21f1c0:   ec a6 01 00 00 00 00 00  5c 7f 01 00 00 00 00 00   |........\.......|
0x21f1d0:   60 7f 01 00 00 00 00 00  66 7f 01 00 00 00 00 00   |`.......f.......|
0x21f1e0:   6c 7f 01 00 00 00 00 00  6f 7f 01 00 00 00 00 00   |l.......o.......|
0x21f1f0:   74 7f 01 00 00 00 00 00  7c 7f 01 00 00 00 00 00   |t.......|.......|
0x21f200:   79 7f 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |y...............|
0x21f210:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f220:   80 7f 01 00 00 00 00 00  1c a3 01 00 00 00 00 00   |................|
0x21f230:   86 7f 01 00 00 00 00 00  8a 7f 01 00 00 00 00 00   |................|
0x21f240:   90 7f 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f250:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f260:   6f 7f 01 00 00 00 00 00  fd 7d 01 00 00 00 00 00   |o........}......|
0x21f270:   ef 7d 01 00 00 00 00 00  97 7f 01 00 00 00 00 00   |.}..............|
0x21f280:   1b 7c 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |.|..............|
0x21f290:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f2a0:   a1 7f 01 00 00 00 00 00  a9 7f 01 00 00 00 00 00   |................|
0x21f2b0:   ae 7f 01 00 00 00 00 00  b5 7f 01 00 00 00 00 00   |................|
0x21f2c0:   c0 7f 01 00 00 00 00 00  c7 7f 01 00 00 00 00 00   |................|
0x21f2d0:   d0 7f 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f2e0:   6a 80 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |j...............|
0x21f2f0:   00 00 00 00 00 00 00 00  61 00 00 00 00 00 00 00   |........a.......|
0x21f300:   d8 a6 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f310:   00 00 00 00 00 00 00 00  62 00 00 00 00 00 00 00   |........b.......|
0x21f320:   de 7f 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f330:   00 00 00 00 00 00 00 00  64 00 00 00 00 00 00 00   |........d.......|
0x21f340:   e8 7f 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f350:   00 00 00 00 00 00 00 00  44 00 00 00 00 00 00 00   |........D.......|
0x21f360:   ee 7f 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f370:   00 00 00 00 00 00 00 00  86 00 00 00 00 00 00 00   |................|
0x21f380:   f8 7f 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f390:   00 00 00 00 00 00 00 00  87 00 00 00 00 00 00 00   |................|
0x21f3a0:   10 80 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f3b0:   00 00 00 00 00 00 00 00  68 00 00 00 00 00 00 00   |........h.......|
0x21f3c0:   1f 80 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f3d0:   00 00 00 00 00 00 00 00  69 00 00 00 00 00 00 00   |........i.......|
0x21f3e0:   25 80 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |%...............|
0x21f3f0:   00 00 00 00 00 00 00 00  6b 00 00 00 00 00 00 00   |........k.......|
0x21f400:   2f 80 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |/...............|
0x21f410:   00 00 00 00 00 00 00 00  6e 00 00 00 00 00 00 00   |........n.......|
0x21f420:   3f 80 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |?...............|
0x21f430:   00 00 00 00 00 00 00 00  47 00 00 00 00 00 00 00   |........G.......|
0x21f440:   48 80 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |H...............|
0x21f450:   00 00 00 00 00 00 00 00  71 00 00 00 00 00 00 00   |........q.......|
0x21f460:   5b 80 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |[...............|
0x21f470:   00 00 00 00 00 00 00 00  72 00 00 00 00 00 00 00   |........r.......|
0x21f480:   ef 7d 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |.}..............|
0x21f490:   00 00 00 00 00 00 00 00  73 00 00 00 00 00 00 00   |........s.......|
0x21f4a0:   d2 7d 01 00 00 00 00 00  01 00 00 00 00 00 00 00   |.}..............|
0x21f4b0:   00 00 00 00 00 00 00 00  77 00 00 00 00 00 00 00   |........w.......|
0x21f4c0:   63 80 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |c...............|
0x21f4d0:   00 00 00 00 00 00 00 00  41 00 00 00 00 00 00 00   |........A.......|
0x21f4e0:   6e 80 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |n...............|
0x21f4f0:   00 00 00 00 00 00 00 00  42 00 00 00 00 00 00 00   |........B.......|
0x21f500:   7d 80 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |}...............|
0x21f510:   00 00 00 00 00 00 00 00  46 00 00 00 00 00 00 00   |........F.......|
0x21f520:   86 80 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f530:   00 00 00 00 00 00 00 00  84 00 00 00 00 00 00 00   |................|
0x21f540:   90 80 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f550:   00 00 00 00 00 00 00 00  8d 00 00 00 00 00 00 00   |................|
0x21f560:   93 80 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f570:   00 00 00 00 00 00 00 00  48 00 00 00 00 00 00 00   |........H.......|
0x21f580:   78 a2 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |x...............|
0x21f590:   00 00 00 00 00 00 00 00  83 00 00 00 00 00 00 00   |................|
0x21f5a0:   ac 80 01 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0x21f5b0:   00 00 00 00 00 00 00 00  88 00 00 00 00 00 00 00   |................|
0x21f5c0:   b1 80 01 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0x21f5d0:   00 00 00 00 00 00 00 00  49 00 00 00 00 00 00 00   |........I.......|
0x21f5e0:   21 7e 01 00 00 00 00 00  01 00 00 00 00 00 00 00   |!~..............|
0x21f5f0:   00 00 00 00 00 00 00 00  8a 00 00 00 00 00 00 00   |................|
0x21f600:   b8 80 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f610:   00 00 00 00 00 00 00 00  4c 00 00 00 00 00 00 00   |........L.......|
0x21f620:   c4 80 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f630:   00 00 00 00 00 00 00 00  4e 00 00 00 00 00 00 00   |........N.......|
0x21f640:   cc 80 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f650:   00 00 00 00 00 00 00 00  51 00 00 00 00 00 00 00   |........Q.......|
0x21f660:   33 7e 01 00 00 00 00 00  01 00 00 00 00 00 00 00   |3~..............|
0x21f670:   00 00 00 00 00 00 00 00  8b 00 00 00 00 00 00 00   |................|
0x21f680:   d7 80 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f690:   00 00 00 00 00 00 00 00  52 00 00 00 00 00 00 00   |........R.......|
0x21f6a0:   04 7e 01 00 00 00 00 00  01 00 00 00 00 00 00 00   |.~..............|
0x21f6b0:   00 00 00 00 00 00 00 00  85 00 00 00 00 00 00 00   |................|
0x21f6c0:   e1 80 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f6d0:   00 00 00 00 00 00 00 00  8c 00 00 00 00 00 00 00   |................|
0x21f6e0:   f6 7d 01 00 00 00 00 00  01 00 00 00 00 00 00 00   |.}..............|
0x21f6f0:   00 00 00 00 00 00 00 00  8e 00 00 00 00 00 00 00   |................|
0x21f700:   f4 80 01 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0x21f710:   00 00 00 00 00 00 00 00  54 00 00 00 00 00 00 00   |........T.......|
0x21f720:   fd 7d 01 00 00 00 00 00  01 00 00 00 00 00 00 00   |.}..............|
0x21f730:   00 00 00 00 00 00 00 00  8f 00 00 00 00 00 00 00   |................|
0x21f740:   fc 80 01 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0x21f750:   00 00 00 00 00 00 00 00  90 00 00 00 00 00 00 00   |................|
0x21f760:   0d 7e 01 00 00 00 00 00  02 00 00 00 00 00 00 00   |.~..............|
0x21f770:   00 00 00 00 00 00 00 00  82 00 00 00 00 00 00 00   |................|
0x21f780:   15 7e 01 00 00 00 00 00  02 00 00 00 00 00 00 00   |.~..............|
0x21f790:   00 00 00 00 00 00 00 00  89 00 00 00 00 00 00 00   |................|
0x21f7a0:   07 81 01 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0x21f7b0:   00 00 00 00 00 00 00 00  81 00 00 00 00 00 00 00   |................|
0x21f7c0:   12 81 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f7d0:   00 00 00 00 00 00 00 00  5a 00 00 00 00 00 00 00   |........Z.......|
0x21f7e0:   1a 81 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f7f0:   00 00 00 00 00 00 00 00  80 00 00 00 00 00 00 00   |................|
0x21f800:   21 81 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |!...............|
0x21f810:   00 00 00 00 00 00 00 00  7e ff ff ff 00 00 00 00   |........~.......|
0x21f820:   1b 7c 01 00 00 00 00 00  00 00 00 00 00 00 00 00   |.|..............|
0x21f830:   00 00 00 00 00 00 00 00  7d ff ff ff 00 00 00 00   |........}.......|
0x21f840:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f850:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f860:   92 7d 01 00 00 00 00 00  85 81 01 00 00 00 00 00   |.}..............|
0x21f870:   88 81 01 00 00 00 00 00  58 80 01 00 00 00 00 00   |........X.......|
0x21f880:   6c 7f 01 00 00 00 00 00  8b 81 01 00 00 00 00 00   |l...............|
0x21f890:   8e 81 01 00 00 00 00 00  91 81 01 00 00 00 00 00   |................|
0x21f8a0:   94 81 01 00 00 00 00 00  c7 81 01 00 00 00 00 00   |................|
0x21f8b0:   97 81 01 00 00 00 00 00  9a 81 01 00 00 00 00 00   |................|
0x21f8c0:   9d 81 01 00 00 00 00 00  1e 81 01 00 00 00 00 00   |................|
0x21f8d0:   a0 81 01 00 00 00 00 00  a3 81 01 00 00 00 00 00   |................|
0x21f8e0:   a6 81 01 00 00 00 00 00  a9 81 01 00 00 00 00 00   |................|
0x21f8f0:   0d 80 01 00 00 00 00 00  ac 81 01 00 00 00 00 00   |................|
0x21f900:   af 81 01 00 00 00 00 00  b2 81 01 00 00 00 00 00   |................|
0x21f910:   b5 81 01 00 00 00 00 00  b8 81 01 00 00 00 00 00   |................|
0x21f920:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f930:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f940:   6f 7f 01 00 00 00 00 00  bb 81 01 00 00 00 00 00   |o...............|
0x21f950:   86 80 01 00 00 00 00 00  7d 80 01 00 00 00 00 00   |........}.......|
0x21f960:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f970:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f980:   89 7d 01 00 00 00 00 00  c1 81 01 00 00 00 00 00   |.}..............|
0x21f990:   c6 81 01 00 00 00 00 00  a0 7d 01 00 00 00 00 00   |.........}......|
0x21f9a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f9b0:   10 80 01 00 00 00 00 00  90 80 01 00 00 00 00 00   |................|
0x21f9c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f9d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21f9e0:   c4 80 01 00 00 00 00 00  bf a6 01 00 00 00 00 00   |................|
0x21f9f0:   c5 a6 01 00 00 00 00 00  d2 a6 01 00 00 00 00 00   |................|
0x21fa00:   df a6 01 00 00 00 00 00  0c af 01 00 00 00 00 00   |................|
0x21fa10:   f3 a6 01 00 00 00 00 00  d8 a6 01 00 00 00 00 00   |................|
0x21fa20:   a0 7d 01 00 00 00 00 00  fb a6 01 00 00 00 00 00   |.}..............|
0x21fa30:   00 00 00 00 00 00 00 00  01                        |.........       |
; section: .dynamic
0x21fa38:   01 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0x21fa48:   01 00 00 00 00 00 00 00  82 00 00 00 00 00 00 00   |................|
0x21fa58:   0c 00 00 00 00 00 00 00  58 37 00 00 00 00 00 00   |........X7......|
0x21fa68:   0d 00 00 00 00 00 00 00  6c 63 01 00 00 00 00 00   |........lc......|
0x21fa78:   19 00 00 00 00 00 00 00  f0 ef 21 00 00 00 00 00   |..........!.....|
0x21fa88:   1b 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x21fa98:   1a 00 00 00 00 00 00 00  f8 ef 21 00 00 00 00 00   |..........!.....|
0x21faa8:   1c 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x21fab8:   f5 fe ff 6f 00 00 00 00  98 02 00 00 00 00 00 00   |...o............|
0x21fac8:   05 00 00 00 00 00 00 00  80 11 00 00 00 00 00 00   |................|
0x21fad8:   06 00 00 00 00 00 00 00  88 03 00 00 00 00 00 00   |................|
0x21fae8:   0a 00 00 00 00 00 00 00  82 06 00 00 00 00 00 00   |................|
0x21faf8:   0b 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x21fb08:   15 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21fb18:   03 00 00 00 00 00 00 00  38 fc 21 00 00 00 00 00   |........8.!.....|
0x21fb28:   02 00 00 00 00 00 00 00  68 0a 00 00 00 00 00 00   |........h.......|
0x21fb38:   14 00 00 00 00 00 00 00  07 00 00 00 00 00 00 00   |................|
0x21fb48:   17 00 00 00 00 00 00 00  f0 2c 00 00 00 00 00 00   |.........,......|
0x21fb58:   07 00 00 00 00 00 00 00  a0 19 00 00 00 00 00 00   |................|
0x21fb68:   08 00 00 00 00 00 00 00  50 13 00 00 00 00 00 00   |........P.......|
0x21fb78:   09 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x21fb88:   1e 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x21fb98:   fb ff ff 6f 00 00 00 00  01 00 00 08 00 00 00 00   |...o............|
0x21fba8:   fe ff ff 6f 00 00 00 00  30 19 00 00 00 00 00 00   |...o....0.......|
0x21fbb8:   ff ff ff 6f 00 00 00 00  01 00 00 00 00 00 00 00   |...o............|
0x21fbc8:   f0 ff ff 6f 00 00 00 00  02 18 00 00 00 00 00 00   |...o............|
0x21fbd8:   f9 ff ff 6f 00 00 00 00  c1 00 00 00 00 00 00 00   |...o............|
0x21fbe8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21fbf8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21fc08:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21fc18:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21fc28:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21fc38:   38                                                 |8               |
; section: .got
0x21fc38:   38 fa 21 00 00 00 00 00  00 00 00 00 00 00 00 00   |8.!.............|
0x21fc48:   00 00 00 00 00 00 00 00  86 37 00 00 00 00 00 00   |.........7......|
0x21fc58:   96 37 00 00 00 00 00 00  a6 37 00 00 00 00 00 00   |.7.......7......|
0x21fc68:   b6 37 00 00 00 00 00 00  c6 37 00 00 00 00 00 00   |.7.......7......|
0x21fc78:   d6 37 00 00 00 00 00 00  e6 37 00 00 00 00 00 00   |.7.......7......|
0x21fc88:   f6 37 00 00 00 00 00 00  06 38 00 00 00 00 00 00   |.7.......8......|
0x21fc98:   16 38 00 00 00 00 00 00  26 38 00 00 00 00 00 00   |.8......&8......|
0x21fca8:   36 38 00 00 00 00 00 00  46 38 00 00 00 00 00 00   |68......F8......|
0x21fcb8:   56 38 00 00 00 00 00 00  66 38 00 00 00 00 00 00   |V8......f8......|
0x21fcc8:   76 38 00 00 00 00 00 00  86 38 00 00 00 00 00 00   |v8.......8......|
0x21fcd8:   96 38 00 00 00 00 00 00  a6 38 00 00 00 00 00 00   |.8.......8......|
0x21fce8:   b6 38 00 00 00 00 00 00  c6 38 00 00 00 00 00 00   |.8.......8......|
0x21fcf8:   d6 38 00 00 00 00 00 00  e6 38 00 00 00 00 00 00   |.8.......8......|
0x21fd08:   f6 38 00 00 00 00 00 00  06 39 00 00 00 00 00 00   |.8.......9......|
0x21fd18:   16 39 00 00 00 00 00 00  26 39 00 00 00 00 00 00   |.9......&9......|
0x21fd28:   36 39 00 00 00 00 00 00  46 39 00 00 00 00 00 00   |69......F9......|
0x21fd38:   56 39 00 00 00 00 00 00  66 39 00 00 00 00 00 00   |V9......f9......|
0x21fd48:   76 39 00 00 00 00 00 00  86 39 00 00 00 00 00 00   |v9.......9......|
0x21fd58:   96 39 00 00 00 00 00 00  a6 39 00 00 00 00 00 00   |.9.......9......|
0x21fd68:   b6 39 00 00 00 00 00 00  c6 39 00 00 00 00 00 00   |.9.......9......|
0x21fd78:   d6 39 00 00 00 00 00 00  e6 39 00 00 00 00 00 00   |.9.......9......|
0x21fd88:   f6 39 00 00 00 00 00 00  06 3a 00 00 00 00 00 00   |.9.......:......|
0x21fd98:   16 3a 00 00 00 00 00 00  26 3a 00 00 00 00 00 00   |.:......&:......|
0x21fda8:   36 3a 00 00 00 00 00 00  46 3a 00 00 00 00 00 00   |6:......F:......|
0x21fdb8:   56 3a 00 00 00 00 00 00  66 3a 00 00 00 00 00 00   |V:......f:......|
0x21fdc8:   76 3a 00 00 00 00 00 00  86 3a 00 00 00 00 00 00   |v:.......:......|
0x21fdd8:   96 3a 00 00 00 00 00 00  a6 3a 00 00 00 00 00 00   |.:.......:......|
0x21fde8:   b6 3a 00 00 00 00 00 00  c6 3a 00 00 00 00 00 00   |.:.......:......|
0x21fdf8:   d6 3a 00 00 00 00 00 00  e6 3a 00 00 00 00 00 00   |.:.......:......|
0x21fe08:   f6 3a 00 00 00 00 00 00  06 3b 00 00 00 00 00 00   |.:.......;......|
0x21fe18:   16 3b 00 00 00 00 00 00  26 3b 00 00 00 00 00 00   |.;......&;......|
0x21fe28:   36 3b 00 00 00 00 00 00  46 3b 00 00 00 00 00 00   |6;......F;......|
0x21fe38:   56 3b 00 00 00 00 00 00  66 3b 00 00 00 00 00 00   |V;......f;......|
0x21fe48:   76 3b 00 00 00 00 00 00  86 3b 00 00 00 00 00 00   |v;.......;......|
0x21fe58:   96 3b 00 00 00 00 00 00  a6 3b 00 00 00 00 00 00   |.;.......;......|
0x21fe68:   b6 3b 00 00 00 00 00 00  c6 3b 00 00 00 00 00 00   |.;.......;......|
0x21fe78:   d6 3b 00 00 00 00 00 00  e6 3b 00 00 00 00 00 00   |.;.......;......|
0x21fe88:   f6 3b 00 00 00 00 00 00  06 3c 00 00 00 00 00 00   |.;.......<......|
0x21fe98:   16 3c 00 00 00 00 00 00  26 3c 00 00 00 00 00 00   |.<......&<......|
0x21fea8:   36 3c 00 00 00 00 00 00  46 3c 00 00 00 00 00 00   |6<......F<......|
0x21feb8:   56 3c 00 00 00 00 00 00  66 3c 00 00 00 00 00 00   |V<......f<......|
0x21fec8:   76 3c 00 00 00 00 00 00  86 3c 00 00 00 00 00 00   |v<.......<......|
0x21fed8:   96 3c 00 00 00 00 00 00  a6 3c 00 00 00 00 00 00   |.<.......<......|
0x21fee8:   b6 3c 00 00 00 00 00 00  c6 3c 00 00 00 00 00 00   |.<.......<......|
0x21fef8:   d6 3c 00 00 00 00 00 00  e6 3c 00 00 00 00 00 00   |.<.......<......|
0x21ff08:   f6 3c 00 00 00 00 00 00  06 3d 00 00 00 00 00 00   |.<.......=......|
0x21ff18:   16 3d 00 00 00 00 00 00  26 3d 00 00 00 00 00 00   |.=......&=......|
0x21ff28:   36 3d 00 00 00 00 00 00  46 3d 00 00 00 00 00 00   |6=......F=......|
0x21ff38:   56 3d 00 00 00 00 00 00  66 3d 00 00 00 00 00 00   |V=......f=......|
0x21ff48:   76 3d 00 00 00 00 00 00  86 3d 00 00 00 00 00 00   |v=.......=......|
0x21ff58:   96 3d 00 00 00 00 00 00  a6 3d 00 00 00 00 00 00   |.=.......=......|
0x21ff68:   b6 3d 00 00 00 00 00 00  c6 3d 00 00 00 00 00 00   |.=.......=......|
0x21ff78:   d6 3d 00 00 00 00 00 00  e6 3d 00 00 00 00 00 00   |.=.......=......|
0x21ff88:   f6 3d 00 00 00 00 00 00  06 3e 00 00 00 00 00 00   |.=.......>......|
0x21ff98:   16 3e 00 00 00 00 00 00  26 3e 00 00 00 00 00 00   |.>......&>......|
0x21ffa8:   36 3e 00 00 00 00 00 00  46 3e 00 00 00 00 00 00   |6>......F>......|
0x21ffb8:   56 3e 00 00 00 00 00 00  66 3e 00 00 00 00 00 00   |V>......f>......|
0x21ffc8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21ffd8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21ffe8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x21fff8:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .data
0x220000:   00 00 00 00 00 00 00 00  08 00 22 00 00 00 00 00   |..........".....|
0x220010:   01 00 00 00 ff ff ff ff  01 00 00 00 00 00 00 00   |................|
0x220020:   01 01 3f 00 00 00 00 00  00 00 00 00 00 00 00 00   |..?.............|
0x220030:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x220040:   26 81 01 00 00 00 00 00  30 81 01 00 00 00 00 00   |&.......0.......|
0x220050:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x220060:   02 00 00 00 00 00 00 00  3c 81 01 00 00 00 00 00   |........<.......|
0x220070:   01 00 00 00 00 00 00 00  5e 7d 01 00 00 00 00 00   |........^}......|
0x220080:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x220090:   01 00 00 00 00 00 00 00  ee 7b 01 00 00 00 00 00   |.........{......|
0x2200a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2200b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2200c0:   05 00 00 00 00 00 00 00  3f 81 01 00 00 00 00 00   |........?.......|
0x2200d0:   05 00 00 00 00 00 00 00  45 81 01 00 00 00 00 00   |........E.......|
0x2200e0:   02 00 00 00 00 00 00 00  54 81 01 00 00 00 00 00   |........T.......|
0x2200f0:   05 00 00 00 00 00 00 00  4b 81 01 00 00 00 00 00   |........K.......|
0x220100:   05 00 00 00 00 00 00 00  51 81 01 00 00 00 00 00   |........Q.......|
0x220110:   05 00 00 00 00 00 00 00  51 81 01 00 00 00 00 00   |........Q.......|
0x220120:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x220130:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x220140:   05 00 00 00 00 00 00 00  57 81 01 00 00 00 00 00   |........W.......|
0x220150:   05 00 00 00 00 00 00 00  4b 81 01 00 00 00 00 00   |........K.......|
0x220160:   05 00 00 00 00 00 00 00  5d 81 01 00 00 00 00 00   |........].......|
0x220170:   05 00 00 00 00 00 00 00  63 81 01 00 00 00 00 00   |........c.......|
0x220180:   05 00 00 00 00 00 00 00  69 81 01 00 00 00 00 00   |........i.......|
0x220190:   05 00 00 00 00 00 00 00  6f 81 01 00 00 00 00 00   |........o.......|
0x2201a0:   05 00 00 00 00 00 00 00  75 81 01 00 00 00 00 00   |........u.......|
0x2201b0:   05 00 00 00 00 00 00 00  7b 81 01 00 00 00 00 00   |........{.......|
0x2201c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2201d0:   03 00 00 00 00 00 00 00  81 81 01 00 00 00 00 00   |................|
0x2201e0:   01 00 00 00 00 00 00 00  a0 a2 01 00 00 00 00 00   |................|
0x2201f0:   b0 c2 00 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0x220200:   08 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x220210:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x220220:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x220230:   00 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0x220240:   50 02 22 00 00 00 00 00  00 00 00 00 00 00 00 00   |P.".............|
0x220250:   00 01 00 00 00 00 00 00  20 14 22 00 00 00 00 00   |........ .".....|
0x220260:   a0 53 01 00 00 00 00 00  ??                        |.S......?       |
